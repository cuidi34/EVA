(lp0
(iArchitecture
Architecture
p1
(dp2
S'clusters'
p3
(lp4
(iArchitecture
Cluster
p5
(dp6
S'entities'
p7
(lp8
(iArchitecture
Entity
p9
(dp10
S'issue_ids'
p11
(lp12
V339
p13
asS'name'
p14
S'com.google.common.base.CharMatcher'
p15
sS'descs'
p16
(lp17
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p18
asS'labels'
p19
(lp20
(lp21
I1
aasS'titles'
p22
(lp23
VConcurrency bug in AbstractMultimap
p24
asS'change'
p25
I0
sba(iArchitecture
Entity
p26
(dp27
g11
(lp28
g13
asg14
S'com.google.common.base.Equivalence'
p29
sg16
(lp30
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p31
asg19
(lp32
g21
asg22
(lp33
g24
asg25
I0
sba(iArchitecture
Entity
p34
(dp35
g11
(lp36
sg14
S'com.google.common.base.Functions'
p37
sg16
(lp38
sg19
(lp39
sg22
(lp40
sg25
I0
sba(iArchitecture
Entity
p41
(dp42
g11
(lp43
sg14
S'com.google.common.base.PairwiseEquivalence'
p44
sg16
(lp45
sg19
(lp46
sg22
(lp47
sg25
I0
sba(iArchitecture
Entity
p48
(dp49
g11
(lp50
sg14
S'com.google.common.base.Preconditions'
p51
sg16
(lp52
sg19
(lp53
sg22
(lp54
sg25
I0
sba(iArchitecture
Entity
p55
(dp56
g11
(lp57
sg14
S'com.google.common.base.Predicates'
p58
sg16
(lp59
sg19
(lp60
sg22
(lp61
sg25
I0
sba(iArchitecture
Entity
p62
(dp63
g11
(lp64
sg14
S'com.google.common.base.SmallCharMatcher'
p65
sg16
(lp66
sg19
(lp67
sg22
(lp68
sg25
I0
sba(iArchitecture
Entity
p69
(dp70
g11
(lp71
sg14
S'com.google.common.base.Splitter'
p72
sg16
(lp73
sg19
(lp74
sg22
(lp75
sg25
I0
sba(iArchitecture
Entity
p76
(dp77
g11
(lp78
sg14
S'com.google.common.base.Strings'
p79
sg16
(lp80
sg19
(lp81
sg22
(lp82
sg25
I0
sba(iArchitecture
Entity
p83
(dp84
g11
(lp85
V1567
p86
asg14
S'com.google.common.cache.CacheBuilderSpec'
p87
sg16
(lp88
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p89
asg19
(lp90
(lp91
I1
aasg22
(lp92
VRunning tests in a non-US locale might fail
p93
asg25
I0
sba(iArchitecture
Entity
p94
(dp95
g11
(lp96
V2108
p97
aV2101
p98
asg14
S'com.google.common.cache.LocalCache'
p99
sg16
(lp100
VMy multithreaded thrashing tests failed with Guava due to `size()` returning a negative value. The size is used for verifying that the `toArray()` methods are threadsafe (this was a common bug until JDK6 rewrote AbstractCollection's to be tolerant to races). The lines in question are,\u000a\u000a``` java\u000a(cache, key) -> cache.asMap().keySet().toArray(new Object[cache.asMap().size()]),\u000a(cache, key) -> cache.asMap().values().toArray(new Object[cache.asMap().size()]),\u000a(cache, key) -> cache.asMap().entrySet().toArray(new Entry[cache.asMap().size()]),\u000a```\u000a\u000aThis results in a `NegativeArraySizeException` unless worked around using `Math.max(0, cache.asMap().size())` which is now done in the guava fixture. I'm not sure why this occurs, and only happened after tweaking some JVM args. Regardless this failure was reproducible and is simple to fix.\u000a\u000a```\u000ajava.lang.NegativeArraySizeException\u000aat com.github.benmanes.caffeine.cache.MultiThreadedTest.lambda$new$280(MultiThreadedTest.java:142)\u000aat com.github.benmanes.caffeine.cache.MultiThreadedTest$$Lambda$29/584234975.accept(Unknown Source)\u000aat com.github.benmanes.caffeine.testing.Threads$Thrasher.run(Threads.java:149)\u000aat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\u000aat com.github.benmanes.caffeine.testing.ConcurrentTestHarness.lambda$timeTasks$344(ConcurrentTestHarness.java:100)\u000aat com.github.benmanes.caffeine.testing.ConcurrentTestHarness$$Lambda$61/1027825150.run(Unknown Source)\u000aat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\u000aat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\u000aat java.lang.Thread.run(Thread.java:745)\u000a```\u000a
p101
aVWhen the cache is being cleared, either through `Cache.invalidateAll()` or `asMap().clear()`, the removal cause is always `EXPLICIT`. However the map may contain expired or GC'd entries that would be removed on the next maintenance cycle. The removal cause should indicate the actual state of the entry, not merely the action that triggered the eventual removal.\u000a\u000aDue to weak and soft references the key or value may be null. A listener should only expect to receive a null key or value if the cause is `COLLECTED`, as indicated by `RemovalNotification`:\u000a\u000a> The key and/or value may be null if they were already garbage collected.\u000a\u000aTherefore a listener might decide to inspect the properties without a null guard, leading to an NPE.\u000a\u000a``` java\u000a@Test\u000apublic void clear_expireAfterAccess() {\u000a  FakeTicker ticker = new FakeTicker();\u000a  RemovalListener<Integer, Integer> listener = Mockito.mock(RemovalListener.class);\u000a  ArgumentCaptor<RemovalNotification<Integer, Integer>> captor =\u000a      ArgumentCaptor.forClass(RemovalNotification.class);\u000a  Cache<Integer, Integer> cache = CacheBuilder.newBuilder()\u000a      .expireAfterAccess(1, TimeUnit.MINUTES)\u000a      .removalListener(listener)\u000a      .ticker(ticker)\u000a      .build();\u000a  cache.put(1, 1);\u000a  ticker.advance(10, TimeUnit.MINUTES);\u000a  cache.invalidateAll();\u000a\u000a  verify(listener).onRemoval(captor.capture());\u000a  assertThat(captor.getValue().getCause(), is(RemovalCause.EXPIRED));\u000a}\u000a```\u000a\u000aThe fix is to change `LocalCache$Segment#clear()` to inspect the key, value, and expiration status when determining the cause. \u000a\u000aUnfortunately this race condition is more widespread due to `enqueueNotification` not being tolerant to a garbage collection nulling out the key/value. Prior to constructing the notification, the method must take a strong reference to the key and value, check if either was collected, and if so publish a `COLLECTED` instead of the caller's cause.\u000a
p102
asg19
(lp103
(lp104
I1
aa(lp105
I1
aasg22
(lp106
VCache.asMap().size() may return a negative value
p107
aVWrong RemovalCause published on cache.invaldateAll()
p108
asg25
I0
sba(iArchitecture
Entity
p109
(dp110
g11
(lp111
sg14
S'com.google.common.cache.LongAdder'
p112
sg16
(lp113
sg19
(lp114
sg22
(lp115
sg25
I0
sba(iArchitecture
Entity
p116
(dp117
g11
(lp118
sg14
S'com.google.common.collect.AbstractIndexedListIterator'
p119
sg16
(lp120
sg19
(lp121
sg22
(lp122
sg25
I0
sba(iArchitecture
Entity
p123
(dp124
g11
(lp125
g13
asg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p126
sg16
(lp127
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p128
asg19
(lp129
g21
asg22
(lp130
g24
asg25
I0
sba(iArchitecture
Entity
p131
(dp132
g11
(lp133
g13
asg14
S'com.google.common.collect.AbstractMapBasedMultiset'
p134
sg16
(lp135
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p136
asg19
(lp137
g21
asg22
(lp138
g24
asg25
I0
sba(iArchitecture
Entity
p139
(dp140
g11
(lp141
sg14
S'com.google.common.collect.AbstractMultimap'
p142
sg16
(lp143
sg19
(lp144
sg22
(lp145
sg25
I0
sba(iArchitecture
Entity
p146
(dp147
g11
(lp148
sg14
S'com.google.common.collect.AbstractMultiset'
p149
sg16
(lp150
sg19
(lp151
sg22
(lp152
sg25
I0
sba(iArchitecture
Entity
p153
(dp154
g11
(lp155
sg14
S'com.google.common.collect.AbstractNavigableMap'
p156
sg16
(lp157
sg19
(lp158
sg22
(lp159
sg25
I0
sba(iArchitecture
Entity
p160
(dp161
g11
(lp162
sg14
S'com.google.common.collect.AbstractRangeSet'
p163
sg16
(lp164
sg19
(lp165
sg22
(lp166
sg25
I0
sba(iArchitecture
Entity
p167
(dp168
g11
(lp169
sg14
S'com.google.common.collect.AbstractTable'
p170
sg16
(lp171
sg19
(lp172
sg22
(lp173
sg25
I0
sba(iArchitecture
Entity
p174
(dp175
g11
(lp176
sg14
S'com.google.common.collect.CartesianList'
p177
sg16
(lp178
sg19
(lp179
sg22
(lp180
sg25
I0
sba(iArchitecture
Entity
p181
(dp182
g11
(lp183
sg14
S'com.google.common.collect.Collections2'
p184
sg16
(lp185
sg19
(lp186
sg22
(lp187
sg25
I0
sba(iArchitecture
Entity
p188
(dp189
g11
(lp190
sg14
S'com.google.common.collect.ComparisonChain'
p191
sg16
(lp192
sg19
(lp193
sg22
(lp194
sg25
I0
sba(iArchitecture
Entity
p195
(dp196
g11
(lp197
sg14
S'com.google.common.collect.CompoundOrdering'
p198
sg16
(lp199
sg19
(lp200
sg22
(lp201
sg25
I0
sba(iArchitecture
Entity
p202
(dp203
g11
(lp204
g13
asg14
S'com.google.common.collect.ComputingConcurrentHashMap'
p205
sg16
(lp206
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p207
asg19
(lp208
g21
asg22
(lp209
g24
asg25
I0
sba(iArchitecture
Entity
p210
(dp211
g11
(lp212
sg14
S'com.google.common.collect.ConcurrentHashMultiset'
p213
sg16
(lp214
sg19
(lp215
sg22
(lp216
sg25
I0
sba(iArchitecture
Entity
p217
(dp218
g11
(lp219
V2196
p220
asg14
S'com.google.common.collect.ContiguousSet'
p221
sg16
(lp222
VLet a < x < b:\u000a- [x].intersection([x]) should return [x], returns [],\u000a- [x].intersection([a..b]) should return [x], returns [],\u000a- [a..b].intersection([x]) should return [x], returns [],\u000a- [a..x].intersection([x..b]) should return [x], returns [].\u000a\u000aI'll create a PR in a minute.\u000a
p223
asg19
(lp224
(lp225
I1
aasg22
(lp226
VContiguousSet.intersection doesn't handle singleton results.
p227
asg25
I0
sba(iArchitecture
Entity
p228
(dp229
g11
(lp230
sg14
S'com.google.common.collect.Count'
p231
sg16
(lp232
sg19
(lp233
sg22
(lp234
sg25
I0
sba(iArchitecture
Entity
p235
(dp236
g11
(lp237
sg14
S'com.google.common.collect.DenseImmutableTable'
p238
sg16
(lp239
sg19
(lp240
sg22
(lp241
sg25
I0
sba(iArchitecture
Entity
p242
(dp243
g11
(lp244
sg14
S'com.google.common.collect.DescendingImmutableSortedMultiset'
p245
sg16
(lp246
sg19
(lp247
sg22
(lp248
sg25
I0
sba(iArchitecture
Entity
p249
(dp250
g11
(lp251
sg14
S'com.google.common.collect.DescendingImmutableSortedSet'
p252
sg16
(lp253
sg19
(lp254
sg22
(lp255
sg25
I0
sba(iArchitecture
Entity
p256
(dp257
g11
(lp258
sg14
S'com.google.common.collect.DescendingMultiset'
p259
sg16
(lp260
sg19
(lp261
sg22
(lp262
sg25
I0
sba(iArchitecture
Entity
p263
(dp264
g11
(lp265
sg14
S'com.google.common.collect.EmptyContiguousSet'
p266
sg16
(lp267
sg19
(lp268
sg22
(lp269
sg25
I0
sba(iArchitecture
Entity
p270
(dp271
g11
(lp272
sg14
S'com.google.common.collect.EmptyImmutableBiMap'
p273
sg16
(lp274
sg19
(lp275
sg22
(lp276
sg25
I0
sba(iArchitecture
Entity
p277
(dp278
g11
(lp279
g13
asg14
S'com.google.common.collect.EmptyImmutableSet'
p280
sg16
(lp281
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p282
asg19
(lp283
g21
asg22
(lp284
g24
asg25
I0
sba(iArchitecture
Entity
p285
(dp286
g11
(lp287
sg14
S'com.google.common.collect.EmptyImmutableSortedMap'
p288
sg16
(lp289
sg19
(lp290
sg22
(lp291
sg25
I0
sba(iArchitecture
Entity
p292
(dp293
g11
(lp294
sg14
S'com.google.common.collect.EmptyImmutableSortedMultiset'
p295
sg16
(lp296
sg19
(lp297
sg22
(lp298
sg25
I0
sba(iArchitecture
Entity
p299
(dp300
g11
(lp301
sg14
S'com.google.common.collect.EmptyImmutableSortedSet'
p302
sg16
(lp303
sg19
(lp304
sg22
(lp305
sg25
I0
sba(iArchitecture
Entity
p306
(dp307
g11
(lp308
sg14
S'com.google.common.collect.ExplicitOrdering'
p309
sg16
(lp310
sg19
(lp311
sg22
(lp312
sg25
I0
sba(iArchitecture
Entity
p313
(dp314
g11
(lp315
sg14
S'com.google.common.collect.FilteredEntryMultimap'
p316
sg16
(lp317
sg19
(lp318
sg22
(lp319
sg25
I0
sba(iArchitecture
Entity
p320
(dp321
g11
(lp322
V1963
p323
ag323
asg14
S'com.google.common.collect.FluentIterable'
p324
sg16
(lp325
VWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p326
aVWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p327
asg19
(lp328
(lp329
I0
aag329
asg22
(lp330
VDe-@Beta Maps.asMap and toMap
p331
ag331
asg25
I0
sba(iArchitecture
Entity
p332
(dp333
g11
(lp334
sg14
S'com.google.common.collect.ForwardingBlockingDeque'
p335
sg16
(lp336
sg19
(lp337
sg22
(lp338
sg25
I0
sba(iArchitecture
Entity
p339
(dp340
g11
(lp341
sg14
S'com.google.common.collect.ForwardingDeque'
p342
sg16
(lp343
sg19
(lp344
sg22
(lp345
sg25
I0
sba(iArchitecture
Entity
p346
(dp347
g11
(lp348
sg14
S'com.google.common.collect.ForwardingList'
p349
sg16
(lp350
sg19
(lp351
sg22
(lp352
sg25
I0
sba(iArchitecture
Entity
p353
(dp354
g11
(lp355
sg14
S'com.google.common.collect.ForwardingMultimap'
p356
sg16
(lp357
sg19
(lp358
sg22
(lp359
sg25
I0
sba(iArchitecture
Entity
p360
(dp361
g11
(lp362
sg14
S'com.google.common.collect.ForwardingTable'
p363
sg16
(lp364
sg19
(lp365
sg22
(lp366
sg25
I0
sba(iArchitecture
Entity
p367
(dp368
g11
(lp369
sg14
S'com.google.common.collect.GeneralRange'
p370
sg16
(lp371
sg19
(lp372
sg22
(lp373
sg25
I0
sba(iArchitecture
Entity
p374
(dp375
g11
(lp376
sg14
S'com.google.common.collect.HashBiMap'
p377
sg16
(lp378
sg19
(lp379
sg22
(lp380
sg25
I0
sba(iArchitecture
Entity
p381
(dp382
g11
(lp383
sg14
S'com.google.common.collect.Hashing'
p384
sg16
(lp385
sg19
(lp386
sg22
(lp387
sg25
I0
sba(iArchitecture
Entity
p388
(dp389
g11
(lp390
sg14
S'com.google.common.collect.ImmutableCollection'
p391
sg16
(lp392
sg19
(lp393
sg22
(lp394
sg25
I0
sba(iArchitecture
Entity
p395
(dp396
g11
(lp397
g13
aV1977
p398
asg14
S'com.google.common.collect.ImmutableList'
p399
sg16
(lp400
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p401
aVImmutableList contains following code since version 15.0\u000a\u000a private static final ImmutableList<Object> EMPTY =\u000a      new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);\u000a
p402
asg19
(lp403
g21
a(lp404
I1
aasg22
(lp405
g24
aVPossible deadlock in ImmutableList 
p406
asg25
I0
sba(iArchitecture
Entity
p407
(dp408
g11
(lp409
sg14
S'com.google.common.collect.ImmutableMultimap'
p410
sg16
(lp411
sg19
(lp412
sg22
(lp413
sg25
I0
sba(iArchitecture
Entity
p414
(dp415
g11
(lp416
sg14
S'com.google.common.collect.ImmutableMultiset'
p417
sg16
(lp418
sg19
(lp419
sg22
(lp420
sg25
I0
sba(iArchitecture
Entity
p421
(dp422
g11
(lp423
sg14
S'com.google.common.collect.ImmutableRangeMap'
p424
sg16
(lp425
sg19
(lp426
sg22
(lp427
sg25
I0
sba(iArchitecture
Entity
p428
(dp429
g11
(lp430
sg14
S'com.google.common.collect.ImmutableRangeSet'
p431
sg16
(lp432
sg19
(lp433
sg22
(lp434
sg25
I0
sba(iArchitecture
Entity
p435
(dp436
g11
(lp437
sg14
S'com.google.common.collect.ImmutableSet'
p438
sg16
(lp439
sg19
(lp440
sg22
(lp441
sg25
I0
sba(iArchitecture
Entity
p442
(dp443
g11
(lp444
sg14
S'com.google.common.collect.ImmutableSortedMultiset'
p445
sg16
(lp446
sg19
(lp447
sg22
(lp448
sg25
I0
sba(iArchitecture
Entity
p449
(dp450
g11
(lp451
g13
asg14
S'com.google.common.collect.ImmutableSortedSet'
p452
sg16
(lp453
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p454
asg19
(lp455
g21
asg22
(lp456
g24
asg25
I0
sba(iArchitecture
Entity
p457
(dp458
g11
(lp459
V1596
p460
ag460
ag460
aV1543
p461
ag461
aV1558
p462
ag462
aV2008
p463
ag463
asg14
S'com.google.common.collect.Iterables'
p464
sg16
(lp465
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1596) created by **jens.von...@numberfour.eu** on 2013-11-29 at 03:56 PM_\u000a\u000a---\u000a\u000aThe List interface does not state that it must allow duplicate elements, it is only stated as the typical case:\u000a\u000a"Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements e1 and e2 such that e1.equals(e2), and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare." (java.util.List, JavaDoc).\u000a\u000aWhen a list prohibits duplicates, \u000acom.google.common.collect.Iterables.removeIfFromRandomAccessList(List&lt;T>, Predicate<? super T>) \u000aleads to exceptions, because an element temporarily may be contained muiltple times in the list. \u000aThis is true in particular for EMF's org.eclipse.emf.common.util.AbstractEList&lt;E>, which does not allow duplicates.\u000a\u000aSince allowing of duplicates is not a hard constraint of the List interface, I would consider this a bug. In particular since this specialized method is called from com.google.common.collect.Iterables.removeIf(Iterable&lt;T>, Predicate<? super T>), so the client has little control over what's going to happen.\u000a
p466
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1596) created by **jens.von...@numberfour.eu** on 2013-11-29 at 03:56 PM_\u000a\u000a---\u000a\u000aThe List interface does not state that it must allow duplicate elements, it is only stated as the typical case:\u000a\u000a"Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements e1 and e2 such that e1.equals(e2), and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare." (java.util.List, JavaDoc).\u000a\u000aWhen a list prohibits duplicates, \u000acom.google.common.collect.Iterables.removeIfFromRandomAccessList(List&lt;T>, Predicate<? super T>) \u000aleads to exceptions, because an element temporarily may be contained muiltple times in the list. \u000aThis is true in particular for EMF's org.eclipse.emf.common.util.AbstractEList&lt;E>, which does not allow duplicates.\u000a\u000aSince allowing of duplicates is not a hard constraint of the List interface, I would consider this a bug. In particular since this specialized method is called from com.google.common.collect.Iterables.removeIf(Iterable&lt;T>, Predicate<? super T>), so the client has little control over what's going to happen.\u000a
p467
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1596) created by **jens.von...@numberfour.eu** on 2013-11-29 at 03:56 PM_\u000a\u000a---\u000a\u000aThe List interface does not state that it must allow duplicate elements, it is only stated as the typical case:\u000a\u000a"Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements e1 and e2 such that e1.equals(e2), and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare." (java.util.List, JavaDoc).\u000a\u000aWhen a list prohibits duplicates, \u000acom.google.common.collect.Iterables.removeIfFromRandomAccessList(List&lt;T>, Predicate<? super T>) \u000aleads to exceptions, because an element temporarily may be contained muiltple times in the list. \u000aThis is true in particular for EMF's org.eclipse.emf.common.util.AbstractEList&lt;E>, which does not allow duplicates.\u000a\u000aSince allowing of duplicates is not a hard constraint of the List interface, I would consider this a bug. In particular since this specialized method is called from com.google.common.collect.Iterables.removeIf(Iterable&lt;T>, Predicate<? super T>), so the client has little control over what's going to happen.\u000a
p468
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1543) created by **bedla.czech** on 2013-09-25 at 11:58 AM_\u000a\u000a---\u000a\u000aHi,\u000a\u000aI have found strange behaviour of Iterables.removeIf method. When I remove items from iterable by frequency and having them nearby, every found duplicate item is removed even the last one. At a bottom you can find test snippets. There is difference between use of ArrayList and LinkedList.\u000a\u000aNote: I know that I should use Set for this kind of situations, but imagine that you do not have String list but list full of legacy uneditable s*it classes. Problem is inside Iterables.removeIfFromRandomAccessList method.\u000a\u000a<code language="java">\u000a&nbsp;&nbsp;&nbsp;&nbsp;@\ufeffTest\u000a&nbsp;&nbsp;&nbsp;&nbsp;public void testOk() throws Exception {\u000a\u000a```\u000a    final List<String> list = Lists.newArrayList("a", "b", "a");\u000a\u000a    System.out.println(list); // [a, b, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [b, a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testWrong() throws Exception {\u000a\u000a    final List<String> list = Lists.newArrayList("a", "a", "a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [] should be [a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testOkWithLinkedList() throws Exception {\u000a\u000a    final List<String> list = Lists.newLinkedList();\u000a    list.add("a");\u000a    list.add("a");\u000a    list.add("a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [a]\u000a\u000a}\u000a```\u000a\u000a</code>\u000a
p469
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1543) created by **bedla.czech** on 2013-09-25 at 11:58 AM_\u000a\u000a---\u000a\u000aHi,\u000a\u000aI have found strange behaviour of Iterables.removeIf method. When I remove items from iterable by frequency and having them nearby, every found duplicate item is removed even the last one. At a bottom you can find test snippets. There is difference between use of ArrayList and LinkedList.\u000a\u000aNote: I know that I should use Set for this kind of situations, but imagine that you do not have String list but list full of legacy uneditable s*it classes. Problem is inside Iterables.removeIfFromRandomAccessList method.\u000a\u000a<code language="java">\u000a&nbsp;&nbsp;&nbsp;&nbsp;@\ufeffTest\u000a&nbsp;&nbsp;&nbsp;&nbsp;public void testOk() throws Exception {\u000a\u000a```\u000a    final List<String> list = Lists.newArrayList("a", "b", "a");\u000a\u000a    System.out.println(list); // [a, b, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [b, a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testWrong() throws Exception {\u000a\u000a    final List<String> list = Lists.newArrayList("a", "a", "a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [] should be [a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testOkWithLinkedList() throws Exception {\u000a\u000a    final List<String> list = Lists.newLinkedList();\u000a    list.add("a");\u000a    list.add("a");\u000a    list.add("a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [a]\u000a\u000a}\u000a```\u000a\u000a</code>\u000a
p470
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1558) created by **Maaartinus** on 2013-10-19 at 04:37 PM_\u000a\u000a---\u000a\u000aIn case the iterable shrinks in the meantime, the result of the class-accepting version of `Iterables.toArray`&nbsp;may contain nulls at its end.\u000a\u000aThe documentation says "return a newly-allocated array into which all the elements of the iterable have been copied", which actually doesn't prevent this. However, nobody expects `Iterables.toArray(a_not_null_allowing_set, some_class)`&nbsp;to contain several nulls.\u000a\u000aIn case you don't want to fix it, the documentation should state this very explicitly. Note that the other overload works fine.\u000a\u000aThe fix is trivial, just pass an empty array in place of the presized one. The only cost is the allocation of the empty array. A test is attached.\u000a
p471
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1558) created by **Maaartinus** on 2013-10-19 at 04:37 PM_\u000a\u000a---\u000a\u000aIn case the iterable shrinks in the meantime, the result of the class-accepting version of `Iterables.toArray`&nbsp;may contain nulls at its end.\u000a\u000aThe documentation says "return a newly-allocated array into which all the elements of the iterable have been copied", which actually doesn't prevent this. However, nobody expects `Iterables.toArray(a_not_null_allowing_set, some_class)`&nbsp;to contain several nulls.\u000a\u000aIn case you don't want to fix it, the documentation should state this very explicitly. Note that the other overload works fine.\u000a\u000aThe fix is trivial, just pass an empty array in place of the presized one. The only cost is the allocation of the empty array. A test is attached.\u000a
p472
aVI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p473
aVI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p474
asg19
(lp475
(lp476
I1
aag476
ag476
a(lp477
I2
aag477
a(lp478
I1
aag478
a(lp479
I1
aag479
asg22
(lp480
VIterables.removeIfFromRandomAccessList(..) not working with Lists prohibiting duplicates
p481
ag481
ag481
aVIterables.removeIf wrong items removed when ArrayList is used
p482
ag482
aVIterables.toArray broken in case of concurrent modifications
p483
ag483
aVIterators.concat is not gc friendly
p484
ag484
asg25
I0
sba(iArchitecture
Entity
p485
(dp486
g11
(lp487
g463
ag463
asg14
S'com.google.common.collect.Iterators'
p488
sg16
(lp489
VI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p490
aVI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p491
asg19
(lp492
g479
ag479
asg22
(lp493
g484
ag484
asg25
I0
sba(iArchitecture
Entity
p494
(dp495
g11
(lp496
sg14
S'com.google.common.collect.LexicographicalOrdering'
p497
sg16
(lp498
sg19
(lp499
sg22
(lp500
sg25
I0
sba(iArchitecture
Entity
p501
(dp502
g11
(lp503
sg14
S'com.google.common.collect.LinkedListMultimap'
p504
sg16
(lp505
sg19
(lp506
sg22
(lp507
sg25
I0
sba(iArchitecture
Entity
p508
(dp509
g11
(lp510
sg14
S'com.google.common.collect.Lists'
p511
sg16
(lp512
sg19
(lp513
sg22
(lp514
sg25
I0
sba(iArchitecture
Entity
p515
(dp516
g11
(lp517
sg14
S'com.google.common.collect.MapMakerInternalMap'
p518
sg16
(lp519
sg19
(lp520
sg22
(lp521
sg25
I0
sba(iArchitecture
Entity
p522
(dp523
g11
(lp524
g13
asg14
S'com.google.common.collect.MinMaxPriorityQueue'
p525
sg16
(lp526
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p527
asg19
(lp528
g21
asg22
(lp529
g24
asg25
I0
sba(iArchitecture
Entity
p530
(dp531
g11
(lp532
sg14
S'com.google.common.collect.Multisets'
p533
sg16
(lp534
sg19
(lp535
sg22
(lp536
sg25
I0
sba(iArchitecture
Entity
p537
(dp538
g11
(lp539
sg14
S'com.google.common.collect.NullsFirstOrdering'
p540
sg16
(lp541
sg19
(lp542
sg22
(lp543
sg25
I0
sba(iArchitecture
Entity
p544
(dp545
g11
(lp546
sg14
S'com.google.common.collect.NullsLastOrdering'
p547
sg16
(lp548
sg19
(lp549
sg22
(lp550
sg25
I0
sba(iArchitecture
Entity
p551
(dp552
g11
(lp553
sg14
S'com.google.common.collect.ObjectArrays'
p554
sg16
(lp555
sg19
(lp556
sg22
(lp557
sg25
I0
sba(iArchitecture
Entity
p558
(dp559
g11
(lp560
V1342
p561
ag561
ag561
asg14
S'com.google.common.collect.Ordering'
p562
sg16
(lp563
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1342) created by **kevinb@google.com** on 2013-03-15 at 05:18 PM_\u000a\u000a---\u000a\u000aIt's very hard to figure out what Ordering.natural().nullsFirst().reverse().lexicographical().reverse().nullsLast() means.\u000a\u000aWe can make it a lot easier for the user by walking through how we read and interpret a few salient examples.\u000a
p564
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1342) created by **kevinb@google.com** on 2013-03-15 at 05:18 PM_\u000a\u000a---\u000a\u000aIt's very hard to figure out what Ordering.natural().nullsFirst().reverse().lexicographical().reverse().nullsLast() means.\u000a\u000aWe can make it a lot easier for the user by walking through how we read and interpret a few salient examples.\u000a
p565
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1342) created by **kevinb@google.com** on 2013-03-15 at 05:18 PM_\u000a\u000a---\u000a\u000aIt's very hard to figure out what Ordering.natural().nullsFirst().reverse().lexicographical().reverse().nullsLast() means.\u000a\u000aWe can make it a lot easier for the user by walking through how we read and interpret a few salient examples.\u000a
p566
asg19
(lp567
(lp568
I2
aag568
ag568
asg22
(lp569
VAdd docs to Ordering to give guidance how to parse and understand long chains of calls
p570
ag570
ag570
asg25
I0
sba(iArchitecture
Entity
p571
(dp572
g11
(lp573
sg14
S'com.google.common.collect.Range'
p574
sg16
(lp575
sg19
(lp576
sg22
(lp577
sg25
I0
sba(iArchitecture
Entity
p578
(dp579
g11
(lp580
g220
asg14
S'com.google.common.collect.RegularContiguousSet'
p581
sg16
(lp582
VLet a < x < b:\u000a- [x].intersection([x]) should return [x], returns [],\u000a- [x].intersection([a..b]) should return [x], returns [],\u000a- [a..b].intersection([x]) should return [x], returns [],\u000a- [a..x].intersection([x..b]) should return [x], returns [].\u000a\u000aI'll create a PR in a minute.\u000a
p583
asg19
(lp584
g225
asg22
(lp585
g227
asg25
I0
sba(iArchitecture
Entity
p586
(dp587
g11
(lp588
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p589
sg16
(lp590
sg19
(lp591
sg22
(lp592
sg25
I0
sba(iArchitecture
Entity
p593
(dp594
g11
(lp595
g398
asg14
S'com.google.common.collect.RegularImmutableList'
p596
sg16
(lp597
VImmutableList contains following code since version 15.0\u000a\u000a private static final ImmutableList<Object> EMPTY =\u000a      new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);\u000a
p598
asg19
(lp599
g404
asg22
(lp600
g406
asg25
I0
sba(iArchitecture
Entity
p601
(dp602
g11
(lp603
sg14
S'com.google.common.collect.RegularImmutableMultiset'
p604
sg16
(lp605
sg19
(lp606
sg22
(lp607
sg25
I0
sba(iArchitecture
Entity
p608
(dp609
g11
(lp610
sg14
S'com.google.common.collect.RegularImmutableSet'
p611
sg16
(lp612
sg19
(lp613
sg22
(lp614
sg25
I0
sba(iArchitecture
Entity
p615
(dp616
g11
(lp617
sg14
S'com.google.common.collect.RegularImmutableSortedMap'
p618
sg16
(lp619
sg19
(lp620
sg22
(lp621
sg25
I0
sba(iArchitecture
Entity
p622
(dp623
g11
(lp624
sg14
S'com.google.common.collect.RegularImmutableSortedMultiset'
p625
sg16
(lp626
sg19
(lp627
sg22
(lp628
sg25
I0
sba(iArchitecture
Entity
p629
(dp630
g11
(lp631
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p632
sg16
(lp633
sg19
(lp634
sg22
(lp635
sg25
I0
sba(iArchitecture
Entity
p636
(dp637
g11
(lp638
sg14
S'com.google.common.collect.RegularImmutableTable'
p639
sg16
(lp640
sg19
(lp641
sg22
(lp642
sg25
I0
sba(iArchitecture
Entity
p643
(dp644
g11
(lp645
sg14
S'com.google.common.collect.ReverseOrdering'
p646
sg16
(lp647
sg19
(lp648
sg22
(lp649
sg25
I0
sba(iArchitecture
Entity
p650
(dp651
g11
(lp652
sg14
S'com.google.common.collect.SingletonImmutableList'
p653
sg16
(lp654
sg19
(lp655
sg22
(lp656
sg25
I0
sba(iArchitecture
Entity
p657
(dp658
g11
(lp659
sg14
S'com.google.common.collect.SingletonImmutableSet'
p660
sg16
(lp661
sg19
(lp662
sg22
(lp663
sg25
I0
sba(iArchitecture
Entity
p664
(dp665
g11
(lp666
sg14
S'com.google.common.collect.StandardTable'
p667
sg16
(lp668
sg19
(lp669
sg22
(lp670
sg25
I0
sba(iArchitecture
Entity
p671
(dp672
g11
(lp673
sg14
S'com.google.common.collect.Synchronized'
p674
sg16
(lp675
sg19
(lp676
sg22
(lp677
sg25
I0
sba(iArchitecture
Entity
p678
(dp679
g11
(lp680
sg14
S'com.google.common.collect.TransformedListIterator'
p681
sg16
(lp682
sg19
(lp683
sg22
(lp684
sg25
I0
sba(iArchitecture
Entity
p685
(dp686
g11
(lp687
sg14
S'com.google.common.collect.TreeMultiset'
p688
sg16
(lp689
sg19
(lp690
sg22
(lp691
sg25
I0
sba(iArchitecture
Entity
p692
(dp693
g11
(lp694
g13
asg14
S'com.google.common.collect.TreeRangeMap'
p695
sg16
(lp696
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p697
asg19
(lp698
g21
asg22
(lp699
g24
asg25
I0
sba(iArchitecture
Entity
p700
(dp701
g11
(lp702
sg14
S'com.google.common.collect.TreeRangeSet'
p703
sg16
(lp704
sg19
(lp705
sg22
(lp706
sg25
I0
sba(iArchitecture
Entity
p707
(dp708
g11
(lp709
sg14
S'com.google.common.escape.CharEscaper'
p710
sg16
(lp711
sg19
(lp712
sg22
(lp713
sg25
I0
sba(iArchitecture
Entity
p714
(dp715
g11
(lp716
sg14
S'com.google.common.escape.CharEscaperBuilder'
p717
sg16
(lp718
sg19
(lp719
sg22
(lp720
sg25
I0
sba(iArchitecture
Entity
p721
(dp722
g11
(lp723
g13
asg14
S'com.google.common.escape.UnicodeEscaper'
p724
sg16
(lp725
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p726
asg19
(lp727
g21
asg22
(lp728
g24
asg25
I0
sba(iArchitecture
Entity
p729
(dp730
g11
(lp731
sg14
S'com.google.common.eventbus.EventSubscriber'
p732
sg16
(lp733
sg19
(lp734
sg22
(lp735
sg25
I0
sba(iArchitecture
Entity
p736
(dp737
g11
(lp738
sg14
S'com.google.common.hash.AbstractCompositeHashFunction'
p739
sg16
(lp740
sg19
(lp741
sg22
(lp742
sg25
I0
sba(iArchitecture
Entity
p743
(dp744
g11
(lp745
sg14
S'com.google.common.hash.BloomFilterStrategies'
p746
sg16
(lp747
sg19
(lp748
sg22
(lp749
sg25
I0
sba(iArchitecture
Entity
p750
(dp751
g11
(lp752
sg14
S'com.google.common.hash.ChecksumHashFunction'
p753
sg16
(lp754
sg19
(lp755
sg22
(lp756
sg25
I0
sba(iArchitecture
Entity
p757
(dp758
g11
(lp759
sg14
S'com.google.common.hash.Crc32cHashFunction'
p760
sg16
(lp761
sg19
(lp762
sg22
(lp763
sg25
I0
sba(iArchitecture
Entity
p764
(dp765
g11
(lp766
sg14
S'com.google.common.hash.HashCode'
p767
sg16
(lp768
sg19
(lp769
sg22
(lp770
sg25
I0
sba(iArchitecture
Entity
p771
(dp772
g11
(lp773
g86
asg14
S'com.google.common.hash.Hashing'
p774
sg16
(lp775
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p776
asg19
(lp777
g91
asg22
(lp778
g93
asg25
I0
sba(iArchitecture
Entity
p779
(dp780
g11
(lp781
sg14
S'com.google.common.hash.Murmur3_128HashFunction'
p782
sg16
(lp783
sg19
(lp784
sg22
(lp785
sg25
I0
sba(iArchitecture
Entity
p786
(dp787
g11
(lp788
sg14
S'com.google.common.hash.Murmur3_32HashFunction'
p789
sg16
(lp790
sg19
(lp791
sg22
(lp792
sg25
I0
sba(iArchitecture
Entity
p793
(dp794
g11
(lp795
sg14
S'com.google.common.hash.SipHashFunction'
p796
sg16
(lp797
sg19
(lp798
sg22
(lp799
sg25
I0
sba(iArchitecture
Entity
p800
(dp801
g11
(lp802
sg14
S'com.google.common.io.ByteArrayDataOutput'
p803
sg16
(lp804
sg19
(lp805
sg22
(lp806
sg25
I0
sba(iArchitecture
Entity
p807
(dp808
g11
(lp809
sg14
S'com.google.common.io.CharSequenceReader'
p810
sg16
(lp811
sg19
(lp812
sg22
(lp813
sg25
I0
sba(iArchitecture
Entity
p814
(dp815
g11
(lp816
sg14
S'com.google.common.io.MultiReader'
p817
sg16
(lp818
sg19
(lp819
sg22
(lp820
sg25
I0
sba(iArchitecture
Entity
p821
(dp822
g11
(lp823
sg14
S'com.google.common.math.BigIntegerMath'
p824
sg16
(lp825
sg19
(lp826
sg22
(lp827
sg25
I0
sba(iArchitecture
Entity
p828
(dp829
g11
(lp830
sg14
S'com.google.common.math.DoubleMath'
p831
sg16
(lp832
sg19
(lp833
sg22
(lp834
sg25
I0
sba(iArchitecture
Entity
p835
(dp836
g11
(lp837
sg14
S'com.google.common.math.IntMath'
p838
sg16
(lp839
sg19
(lp840
sg22
(lp841
sg25
I0
sba(iArchitecture
Entity
p842
(dp843
g11
(lp844
sg14
S'com.google.common.net.PercentEscaper'
p845
sg16
(lp846
sg19
(lp847
sg22
(lp848
sg25
I0
sba(iArchitecture
Entity
p849
(dp850
g11
(lp851
sg14
S'com.google.common.primitives.Booleans'
p852
sg16
(lp853
sg19
(lp854
sg22
(lp855
sg25
I0
sba(iArchitecture
Entity
p856
(dp857
g11
(lp858
sg14
S'com.google.common.primitives.Bytes'
p859
sg16
(lp860
sg19
(lp861
sg22
(lp862
sg25
I0
sba(iArchitecture
Entity
p863
(dp864
g11
(lp865
g86
asg14
S'com.google.common.primitives.Chars'
p866
sg16
(lp867
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p868
asg19
(lp869
g91
asg22
(lp870
g93
asg25
I0
sba(iArchitecture
Entity
p871
(dp872
g11
(lp873
g13
ag13
asg14
S'com.google.common.primitives.Doubles'
p874
sg16
(lp875
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p876
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p877
asg19
(lp878
g21
ag21
asg22
(lp879
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p880
(dp881
g11
(lp882
g13
ag13
asg14
S'com.google.common.primitives.Floats'
p883
sg16
(lp884
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p885
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p886
asg19
(lp887
g21
ag21
asg22
(lp888
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p889
(dp890
g11
(lp891
g13
ag13
asg14
S'com.google.common.primitives.Ints'
p892
sg16
(lp893
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p894
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p895
asg19
(lp896
g21
ag21
asg22
(lp897
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p898
(dp899
g11
(lp900
g13
asg14
S'com.google.common.primitives.Longs'
p901
sg16
(lp902
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p903
asg19
(lp904
g21
asg22
(lp905
g24
asg25
I0
sba(iArchitecture
Entity
p906
(dp907
g11
(lp908
g13
ag13
asg14
S'com.google.common.primitives.Shorts'
p909
sg16
(lp910
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p911
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p912
asg19
(lp913
g21
ag21
asg22
(lp914
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p915
(dp916
g11
(lp917
sg14
S'com.google.common.primitives.SignedBytes'
p918
sg16
(lp919
sg19
(lp920
sg22
(lp921
sg25
I0
sba(iArchitecture
Entity
p922
(dp923
g11
(lp924
sg14
S'com.google.common.primitives.UnsignedBytes'
p925
sg16
(lp926
sg19
(lp927
sg22
(lp928
sg25
I0
sba(iArchitecture
Entity
p929
(dp930
g11
(lp931
sg14
S'com.google.common.primitives.UnsignedInteger'
p932
sg16
(lp933
sg19
(lp934
sg22
(lp935
sg25
I0
sba(iArchitecture
Entity
p936
(dp937
g11
(lp938
sg14
S'com.google.common.primitives.UnsignedInts'
p939
sg16
(lp940
sg19
(lp941
sg22
(lp942
sg25
I0
sba(iArchitecture
Entity
p943
(dp944
g11
(lp945
sg14
S'com.google.common.primitives.UnsignedLong'
p946
sg16
(lp947
sg19
(lp948
sg22
(lp949
sg25
I0
sba(iArchitecture
Entity
p950
(dp951
g11
(lp952
sg14
S'com.google.common.primitives.UnsignedLongs'
p953
sg16
(lp954
sg19
(lp955
sg22
(lp956
sg25
I0
sba(iArchitecture
Entity
p957
(dp958
g11
(lp959
g13
asg14
S'com.google.common.reflect.Element'
p960
sg16
(lp961
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p962
asg19
(lp963
g21
asg22
(lp964
g24
asg25
I0
sba(iArchitecture
Entity
p965
(dp966
g11
(lp967
g13
asg14
S'com.google.common.reflect.Invokable'
p968
sg16
(lp969
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p970
asg19
(lp971
g21
asg22
(lp972
g24
asg25
I0
sba(iArchitecture
Entity
p973
(dp974
g11
(lp975
g13
asg14
S'com.google.common.reflect.Parameter'
p976
sg16
(lp977
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p978
asg19
(lp979
g21
asg22
(lp980
g24
asg25
I0
sba(iArchitecture
Entity
p981
(dp982
g11
(lp983
sg14
S'com.google.common.util.concurrent.AbstractIdleService'
p984
sg16
(lp985
sg19
(lp986
sg22
(lp987
sg25
I0
sba(iArchitecture
Entity
p988
(dp989
g11
(lp990
sg14
S'com.google.common.util.concurrent.AtomicDouble'
p991
sg16
(lp992
sg19
(lp993
sg22
(lp994
sg25
I0
sba(iArchitecture
Entity
p995
(dp996
g11
(lp997
sg14
S'com.google.common.util.concurrent.AtomicDoubleArray'
p998
sg16
(lp999
sg19
(lp1000
sg22
(lp1001
sg25
I0
sba(iArchitecture
Entity
p1002
(dp1003
g11
(lp1004
g13
asg14
S'com.google.common.util.concurrent.Monitor'
p1005
sg16
(lp1006
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1007
asg19
(lp1008
g21
asg22
(lp1009
g24
asg25
I0
sba(iArchitecture
Entity
p1010
(dp1011
g11
(lp1012
sg14
S'com.google.common.util.concurrent.Striped'
p1013
sg16
(lp1014
sg19
(lp1015
sg22
(lp1016
sg25
I0
sbasS'classes'
p1017
(lp1018
g15
ag29
ag37
ag44
ag51
ag58
ag65
ag72
ag79
ag87
ag99
ag112
ag119
ag126
ag134
ag142
ag149
ag156
ag163
ag170
ag177
ag184
ag191
ag198
ag205
ag213
ag221
ag231
ag238
ag245
ag252
ag259
ag266
ag273
ag280
ag288
ag295
ag302
ag309
ag316
ag324
ag335
ag342
ag349
ag356
ag363
ag370
ag377
ag384
ag391
ag399
ag410
ag417
ag424
ag431
ag438
ag445
ag452
ag464
ag488
ag497
ag504
ag511
ag518
ag525
ag533
ag540
ag547
ag554
ag562
ag574
ag581
ag589
ag596
ag604
ag611
ag618
ag625
ag632
ag639
ag646
ag653
ag660
ag667
ag674
ag681
ag688
ag695
ag703
ag710
ag717
ag724
ag732
ag739
ag746
ag753
ag760
ag767
ag774
ag782
ag789
ag796
ag803
ag810
ag817
ag824
ag831
ag838
ag845
ag852
ag859
ag866
ag874
ag883
ag892
ag901
ag909
ag918
ag925
ag932
ag939
ag946
ag953
ag960
ag968
ag976
ag984
ag991
ag998
ag1005
ag1013
asg25
I0
sS'label'
p1019
S'graphics'
p1020
sba(iArchitecture
Cluster
p1021
(dp1022
g7
(lp1023
(iArchitecture
Entity
p1024
(dp1025
g11
(lp1026
sg14
S'com.google.common.base.Ascii'
p1027
sg16
(lp1028
sg19
(lp1029
sg22
(lp1030
sg25
I0
sba(iArchitecture
Entity
p1031
(dp1032
g11
(lp1033
sg14
S'com.google.common.base.CaseFormat'
p1034
sg16
(lp1035
sg19
(lp1036
sg22
(lp1037
sg25
I0
sba(iArchitecture
Entity
p1038
(dp1039
g11
(lp1040
sg14
S'com.google.common.base.Charsets'
p1041
sg16
(lp1042
sg19
(lp1043
sg22
(lp1044
sg25
I0
sba(iArchitecture
Entity
p1045
(dp1046
g11
(lp1047
sg14
S'com.google.common.base.FunctionalEquivalence'
p1048
sg16
(lp1049
sg19
(lp1050
sg22
(lp1051
sg25
I0
sba(iArchitecture
Entity
p1052
(dp1053
g11
(lp1054
V1125
p1055
asg14
S'com.google.common.base.MoreObjects'
p1056
sg16
(lp1057
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1125) created by **adrianshum** on 2012-08-29 at 03:06 AM_\u000a\u000a---\u000a\u000aCurrently there is no handling for arrays in helpers in Objects, e.g. toStringHelper and Object.equal.\u000a\u000aThat means, I cannot do\u000aObjects.toStringHelper(getClass())\u000a&nbsp;&nbsp;&nbsp;&nbsp;.add("foo", this.foo)\u000a&nbsp;&nbsp;&nbsp;&nbsp;.add("anArray", this.anArray)\u000a&nbsp;&nbsp;&nbsp;&nbsp;.toString();\u000a\u000a(I know I can change it to add("anArray", Arrays.toString(this.anArray)) but it looks bad)\u000a\u000aSame for Objects.equal, when I am overriding equals(), I cannot do:\u000areturn Objects.equal("foo", other.foo) \u000a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&& Objects.equals("anArray", other.anArray);\u000a\u000aI believe adding corresponding overloads should not be difficult, and it makes the API much easier to use.\u000a
p1058
asg19
(lp1059
(lp1060
I0
aasg22
(lp1061
VArray handling in Objects#toStringHelper
p1062
asg25
I0
sba(iArchitecture
Entity
p1063
(dp1064
g11
(lp1065
sg14
S'com.google.common.base.Objects'
p1066
sg16
(lp1067
sg19
(lp1068
sg22
(lp1069
sg25
I0
sba(iArchitecture
Entity
p1070
(dp1071
g11
(lp1072
sg14
S'com.google.common.base.Utf8'
p1073
sg16
(lp1074
sg19
(lp1075
sg22
(lp1076
sg25
I0
sba(iArchitecture
Entity
p1077
(dp1078
g11
(lp1079
g13
asg14
S'com.google.common.collect.AllEqualOrdering'
p1080
sg16
(lp1081
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1082
asg19
(lp1083
g21
asg22
(lp1084
g24
asg25
I0
sba(iArchitecture
Entity
p1085
(dp1086
g11
(lp1087
sg14
S'com.google.common.collect.ArrayListMultimap'
p1088
sg16
(lp1089
sg19
(lp1090
sg22
(lp1091
sg25
I0
sba(iArchitecture
Entity
p1092
(dp1093
g11
(lp1094
sg14
S'com.google.common.collect.ByFunctionOrdering'
p1095
sg16
(lp1096
sg19
(lp1097
sg22
(lp1098
sg25
I0
sba(iArchitecture
Entity
p1099
(dp1100
g11
(lp1101
sg14
S'com.google.common.collect.ComparatorOrdering'
p1102
sg16
(lp1103
sg19
(lp1104
sg22
(lp1105
sg25
I0
sba(iArchitecture
Entity
p1106
(dp1107
g11
(lp1108
sg14
S'com.google.common.collect.HashMultimap'
p1109
sg16
(lp1110
sg19
(lp1111
sg22
(lp1112
sg25
I0
sba(iArchitecture
Entity
p1113
(dp1114
g11
(lp1115
sg14
S'com.google.common.collect.HashMultiset'
p1116
sg16
(lp1117
sg19
(lp1118
sg22
(lp1119
sg25
I0
sba(iArchitecture
Entity
p1120
(dp1121
g11
(lp1122
g13
asg14
S'com.google.common.collect.ImmutableAsList'
p1123
sg16
(lp1124
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1125
asg19
(lp1126
g21
asg22
(lp1127
g24
asg25
I0
sba(iArchitecture
Entity
p1128
(dp1129
g11
(lp1130
sg14
S'com.google.common.collect.ImmutableEntry'
p1131
sg16
(lp1132
sg19
(lp1133
sg22
(lp1134
sg25
I0
sba(iArchitecture
Entity
p1135
(dp1136
g11
(lp1137
sg14
S'com.google.common.collect.ImmutableListMultimap'
p1138
sg16
(lp1139
sg19
(lp1140
sg22
(lp1141
sg25
I0
sba(iArchitecture
Entity
p1142
(dp1143
g11
(lp1144
sg14
S'com.google.common.collect.LinkedHashMultiset'
p1145
sg16
(lp1146
sg19
(lp1147
sg22
(lp1148
sg25
I0
sba(iArchitecture
Entity
p1149
(dp1150
g11
(lp1151
g13
aV1451
p1152
asg14
S'com.google.common.collect.NaturalOrdering'
p1153
sg16
(lp1154
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1155
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1451) created by **drothmaler** on 2013-06-18 at 01:46 PM_\u000a\u000a---\u000a\u000aI think it would be good to extend the NaturalOrdering and ReverseNaturalOrdering implementations, to hold instances of their nullsFirst() and nullsLast() versions too.\u000aThis is because things like Ordering.natural().nullsFirst() are frequently used and currently there will be created a NullsFirstOrdering/NullsLastOrdering instance each time, you access it. \u000a\u000aIn many cases this will not be a problem, but if you use it inside a compareTo or compare method (e.g. in combination with the ComparisonChain as suggested in Issue 500 & Issue 556), it really makes a difference whether you use a share instance, or not.\u000a
p1156
asg19
(lp1157
g21
a(lp1158
I3
aasg22
(lp1159
g24
aVUse Singleton instances for nullable natural Orderings
p1160
asg25
I0
sba(iArchitecture
Entity
p1161
(dp1162
g11
(lp1163
g13
asg14
S'com.google.common.collect.ReverseNaturalOrdering'
p1164
sg16
(lp1165
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1166
asg19
(lp1167
g21
asg22
(lp1168
g24
asg25
I0
sba(iArchitecture
Entity
p1169
(dp1170
g11
(lp1171
sg14
S'com.google.common.collect.Serialization'
p1172
sg16
(lp1173
sg19
(lp1174
sg22
(lp1175
sg25
I0
sba(iArchitecture
Entity
p1176
(dp1177
g11
(lp1178
sg14
S'com.google.common.collect.TransformedIterator'
p1179
sg16
(lp1180
sg19
(lp1181
sg22
(lp1182
sg25
I0
sba(iArchitecture
Entity
p1183
(dp1184
g11
(lp1185
sg14
S'com.google.common.collect.UnmodifiableIterator'
p1186
sg16
(lp1187
sg19
(lp1188
sg22
(lp1189
sg25
I0
sba(iArchitecture
Entity
p1190
(dp1191
g11
(lp1192
g13
asg14
S'com.google.common.collect.UsingToStringOrdering'
p1193
sg16
(lp1194
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1195
asg19
(lp1196
g21
asg22
(lp1197
g24
asg25
I0
sba(iArchitecture
Entity
p1198
(dp1199
g11
(lp1200
sg14
S'com.google.common.escape.ArrayBasedCharEscaper'
p1201
sg16
(lp1202
sg19
(lp1203
sg22
(lp1204
sg25
I0
sba(iArchitecture
Entity
p1205
(dp1206
g11
(lp1207
sg14
S'com.google.common.escape.ArrayBasedEscaperMap'
p1208
sg16
(lp1209
sg19
(lp1210
sg22
(lp1211
sg25
I0
sba(iArchitecture
Entity
p1212
(dp1213
g11
(lp1214
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaper'
p1215
sg16
(lp1216
sg19
(lp1217
sg22
(lp1218
sg25
I0
sba(iArchitecture
Entity
p1219
(dp1220
g11
(lp1221
sg14
S'com.google.common.escape.Escaper'
p1222
sg16
(lp1223
sg19
(lp1224
sg22
(lp1225
sg25
I0
sba(iArchitecture
Entity
p1226
(dp1227
g11
(lp1228
sg14
S'com.google.common.escape.Escapers'
p1229
sg16
(lp1230
sg19
(lp1231
sg22
(lp1232
sg25
I0
sba(iArchitecture
Entity
p1233
(dp1234
g11
(lp1235
sg14
S'com.google.common.escape.Platform'
p1236
sg16
(lp1237
sg19
(lp1238
sg22
(lp1239
sg25
I0
sba(iArchitecture
Entity
p1240
(dp1241
g11
(lp1242
sg14
S'com.google.common.hash.AbstractByteHasher'
p1243
sg16
(lp1244
sg19
(lp1245
sg22
(lp1246
sg25
I0
sba(iArchitecture
Entity
p1247
(dp1248
g11
(lp1249
sg14
S'com.google.common.hash.AbstractHasher'
p1250
sg16
(lp1251
sg19
(lp1252
sg22
(lp1253
sg25
I0
sba(iArchitecture
Entity
p1254
(dp1255
g11
(lp1256
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunction'
p1257
sg16
(lp1258
sg19
(lp1259
sg22
(lp1260
sg25
I0
sba(iArchitecture
Entity
p1261
(dp1262
g11
(lp1263
sg14
S'com.google.common.hash.AbstractStreamingHashFunction'
p1264
sg16
(lp1265
sg19
(lp1266
sg22
(lp1267
sg25
I0
sba(iArchitecture
Entity
p1268
(dp1269
g11
(lp1270
sg14
S'com.google.common.hash.BloomFilter'
p1271
sg16
(lp1272
sg19
(lp1273
sg22
(lp1274
sg25
I0
sba(iArchitecture
Entity
p1275
(dp1276
g11
(lp1277
sg14
S'com.google.common.hash.Funnels'
p1278
sg16
(lp1279
sg19
(lp1280
sg22
(lp1281
sg25
I0
sba(iArchitecture
Entity
p1282
(dp1283
g11
(lp1284
sg14
S'com.google.common.hash.HashFunction'
p1285
sg16
(lp1286
sg19
(lp1287
sg22
(lp1288
sg25
I0
sba(iArchitecture
Entity
p1289
(dp1290
g11
(lp1291
sg14
S'com.google.common.hash.Hasher'
p1292
sg16
(lp1293
sg19
(lp1294
sg22
(lp1295
sg25
I0
sba(iArchitecture
Entity
p1296
(dp1297
g11
(lp1298
sg14
S'com.google.common.hash.HashingInputStream'
p1299
sg16
(lp1300
sg19
(lp1301
sg22
(lp1302
sg25
I0
sba(iArchitecture
Entity
p1303
(dp1304
g11
(lp1305
sg14
S'com.google.common.hash.HashingOutputStream'
p1306
sg16
(lp1307
sg19
(lp1308
sg22
(lp1309
sg25
I0
sba(iArchitecture
Entity
p1310
(dp1311
g11
(lp1312
sg14
S'com.google.common.hash.MessageDigestHashFunction'
p1313
sg16
(lp1314
sg19
(lp1315
sg22
(lp1316
sg25
I0
sba(iArchitecture
Entity
p1317
(dp1318
g11
(lp1319
sg14
S'com.google.common.hash.PrimitiveSink'
p1320
sg16
(lp1321
sg19
(lp1322
sg22
(lp1323
sg25
I0
sba(iArchitecture
Entity
p1324
(dp1325
g11
(lp1326
sg14
S'com.google.common.io.AppendableWriter'
p1327
sg16
(lp1328
sg19
(lp1329
sg22
(lp1330
sg25
I0
sba(iArchitecture
Entity
p1331
(dp1332
g11
(lp1333
V1947
p1334
ag1334
ag1334
ag1334
ag1334
asg14
S'com.google.common.io.BaseEncoding'
p1335
sg16
(lp1336
VWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1337
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1338
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1339
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1340
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1341
asg19
(lp1342
(lp1343
I0
aag1343
ag1343
ag1343
ag1343
asg22
(lp1344
VImprove invalid character exceptions from BaseEncoding
p1345
ag1345
ag1345
ag1345
ag1345
asg25
I0
sba(iArchitecture
Entity
p1346
(dp1347
g11
(lp1348
sg14
S'com.google.common.io.ByteArrayDataInput'
p1349
sg16
(lp1350
sg19
(lp1351
sg22
(lp1352
sg25
I0
sba(iArchitecture
Entity
p1353
(dp1354
g11
(lp1355
sg14
S'com.google.common.io.ByteProcessor'
p1356
sg16
(lp1357
sg19
(lp1358
sg22
(lp1359
sg25
I0
sba(iArchitecture
Entity
p1360
(dp1361
g11
(lp1362
sg14
S'com.google.common.io.ByteSink'
p1363
sg16
(lp1364
sg19
(lp1365
sg22
(lp1366
sg25
I0
sba(iArchitecture
Entity
p1367
(dp1368
g11
(lp1369
V2127
p1370
ag1370
asg14
S'com.google.common.io.ByteSource'
p1371
sg16
(lp1372
VAn algorithm similar to `java.lang.Math.addExact()` should be used to compute `offset + length`  and fallback to `Integer.MAX_VALUE` or `Long.MAX_VALUE` in case of overflow. \u000aThere is 3 occurrences of this possibly overflowing addition in `ByteSource.java`.\u000a\u000aI found this bug because I regularly slice bytesources with a length equals to Long.MAX_VALUE.\u000a
p1373
aVAn algorithm similar to `java.lang.Math.addExact()` should be used to compute `offset + length`  and fallback to `Integer.MAX_VALUE` or `Long.MAX_VALUE` in case of overflow. \u000aThere is 3 occurrences of this possibly overflowing addition in `ByteSource.java`.\u000a\u000aI found this bug because I regularly slice bytesources with a length equals to Long.MAX_VALUE.\u000a
p1374
asg19
(lp1375
(lp1376
I1
aag1376
asg22
(lp1377
V19rc1 regression in sliced bytesource: offset + length may overflow for large length values
p1378
ag1378
asg25
I0
sba(iArchitecture
Entity
p1379
(dp1380
g11
(lp1381
sg14
S'com.google.common.io.ByteStreams'
p1382
sg16
(lp1383
sg19
(lp1384
sg22
(lp1385
sg25
I0
sba(iArchitecture
Entity
p1386
(dp1387
g11
(lp1388
sg14
S'com.google.common.io.CharSink'
p1389
sg16
(lp1390
sg19
(lp1391
sg22
(lp1392
sg25
I0
sba(iArchitecture
Entity
p1393
(dp1394
g11
(lp1395
sg14
S'com.google.common.io.CharSource'
p1396
sg16
(lp1397
sg19
(lp1398
sg22
(lp1399
sg25
I0
sba(iArchitecture
Entity
p1400
(dp1401
g11
(lp1402
sg14
S'com.google.common.io.CharStreams'
p1403
sg16
(lp1404
sg19
(lp1405
sg22
(lp1406
sg25
I0
sba(iArchitecture
Entity
p1407
(dp1408
g11
(lp1409
sg14
S'com.google.common.io.Closeables'
p1410
sg16
(lp1411
sg19
(lp1412
sg22
(lp1413
sg25
I0
sba(iArchitecture
Entity
p1414
(dp1415
g11
(lp1416
sg14
S'com.google.common.io.CountingInputStream'
p1417
sg16
(lp1418
sg19
(lp1419
sg22
(lp1420
sg25
I0
sba(iArchitecture
Entity
p1421
(dp1422
g11
(lp1423
sg14
S'com.google.common.io.CountingOutputStream'
p1424
sg16
(lp1425
sg19
(lp1426
sg22
(lp1427
sg25
I0
sba(iArchitecture
Entity
p1428
(dp1429
g11
(lp1430
sg14
S'com.google.common.io.FileBackedOutputStream'
p1431
sg16
(lp1432
sg19
(lp1433
sg22
(lp1434
sg25
I0
sba(iArchitecture
Entity
p1435
(dp1436
g11
(lp1437
sg14
S'com.google.common.io.FileWriteMode'
p1438
sg16
(lp1439
sg19
(lp1440
sg22
(lp1441
sg25
I0
sba(iArchitecture
Entity
p1442
(dp1443
g11
(lp1444
sg14
S'com.google.common.io.Files'
p1445
sg16
(lp1446
sg19
(lp1447
sg22
(lp1448
sg25
I0
sba(iArchitecture
Entity
p1449
(dp1450
g11
(lp1451
sg14
S'com.google.common.io.Flushables'
p1452
sg16
(lp1453
sg19
(lp1454
sg22
(lp1455
sg25
I0
sba(iArchitecture
Entity
p1456
(dp1457
g11
(lp1458
sg14
S'com.google.common.io.GwtWorkarounds'
p1459
sg16
(lp1460
sg19
(lp1461
sg22
(lp1462
sg25
I0
sba(iArchitecture
Entity
p1463
(dp1464
g11
(lp1465
sg14
S'com.google.common.io.LineBuffer'
p1466
sg16
(lp1467
sg19
(lp1468
sg22
(lp1469
sg25
I0
sba(iArchitecture
Entity
p1470
(dp1471
g11
(lp1472
sg14
S'com.google.common.io.LineProcessor'
p1473
sg16
(lp1474
sg19
(lp1475
sg22
(lp1476
sg25
I0
sba(iArchitecture
Entity
p1477
(dp1478
g11
(lp1479
sg14
S'com.google.common.io.LineReader'
p1480
sg16
(lp1481
sg19
(lp1482
sg22
(lp1483
sg25
I0
sba(iArchitecture
Entity
p1484
(dp1485
g11
(lp1486
sg14
S'com.google.common.io.LittleEndianDataInputStream'
p1487
sg16
(lp1488
sg19
(lp1489
sg22
(lp1490
sg25
I0
sba(iArchitecture
Entity
p1491
(dp1492
g11
(lp1493
sg14
S'com.google.common.io.LittleEndianDataOutputStream'
p1494
sg16
(lp1495
sg19
(lp1496
sg22
(lp1497
sg25
I0
sba(iArchitecture
Entity
p1498
(dp1499
g11
(lp1500
sg14
S'com.google.common.io.MultiInputStream'
p1501
sg16
(lp1502
sg19
(lp1503
sg22
(lp1504
sg25
I0
sba(iArchitecture
Entity
p1505
(dp1506
g11
(lp1507
sg14
S'com.google.common.io.OutputSupplier'
p1508
sg16
(lp1509
sg19
(lp1510
sg22
(lp1511
sg25
I0
sba(iArchitecture
Entity
p1512
(dp1513
g11
(lp1514
sg14
S'com.google.common.io.PatternFilenameFilter'
p1515
sg16
(lp1516
sg19
(lp1517
sg22
(lp1518
sg25
I0
sba(iArchitecture
Entity
p1519
(dp1520
g11
(lp1521
sg14
S'com.google.common.io.package-info'
p1522
sg16
(lp1523
sg19
(lp1524
sg22
(lp1525
sg25
I0
sba(iArchitecture
Entity
p1526
(dp1527
g11
(lp1528
sg14
S'com.google.common.util.concurrent.AsyncFunction'
p1529
sg16
(lp1530
sg19
(lp1531
sg22
(lp1532
sg25
I0
sba(iArchitecture
Entity
p1533
(dp1534
g11
(lp1535
sg14
S'com.google.common.util.concurrent.Futures'
p1536
sg16
(lp1537
sg19
(lp1538
sg22
(lp1539
sg25
I0
sba(iArchitecture
Entity
p1540
(dp1541
g11
(lp1542
g86
asg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlers'
p1543
sg16
(lp1544
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p1545
asg19
(lp1546
g91
asg22
(lp1547
g93
asg25
I0
sba(iArchitecture
Entity
p1548
(dp1549
g11
(lp1550
sg14
S'com.google.common.xml.XmlEscapers'
p1551
sg16
(lp1552
sg19
(lp1553
sg22
(lp1554
sg25
I0
sba(iArchitecture
Entity
p1555
(dp1556
g11
(lp1557
sg14
S'com.google.thirdparty.publicsuffix.TrieParser'
p1558
sg16
(lp1559
sg19
(lp1560
sg22
(lp1561
sg25
I0
sbasg1017
(lp1562
g1027
ag1034
ag1041
ag1048
ag1056
ag1066
ag1073
ag1080
ag1088
ag1095
ag1102
ag1109
ag1116
ag1123
ag1131
ag1138
ag1145
ag1153
ag1164
ag1172
ag1179
ag1186
ag1193
ag1201
ag1208
ag1215
ag1222
ag1229
ag1236
ag1243
ag1250
ag1257
ag1264
ag1271
ag1278
ag1285
ag1292
ag1299
ag1306
ag1313
ag1320
ag1327
ag1335
ag1349
ag1356
ag1363
ag1371
ag1382
ag1389
ag1396
ag1403
ag1410
ag1417
ag1424
ag1431
ag1438
ag1445
ag1452
ag1459
ag1466
ag1473
ag1480
ag1487
ag1494
ag1501
ag1508
ag1515
ag1522
ag1529
ag1536
ag1543
ag1551
ag1558
asg25
I0
sg1019
S'io'
p1563
sba(iArchitecture
Cluster
p1564
(dp1565
g7
(lp1566
(iArchitecture
Entity
p1567
(dp1568
g11
(lp1569
sg14
S'com.google.common.base.AbstractIterator'
p1570
sg16
(lp1571
sg19
(lp1572
sg22
(lp1573
sg25
I0
sba(iArchitecture
Entity
p1574
(dp1575
g11
(lp1576
g13
asg14
S'com.google.common.base.Converter'
p1577
sg16
(lp1578
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1579
asg19
(lp1580
g21
asg22
(lp1581
g24
asg25
I0
sba(iArchitecture
Entity
p1582
(dp1583
g11
(lp1584
sg14
S'com.google.common.base.FinalizableReferenceQueue'
p1585
sg16
(lp1586
sg19
(lp1587
sg22
(lp1588
sg25
I0
sba(iArchitecture
Entity
p1589
(dp1590
g11
(lp1591
sg14
S'com.google.common.base.Joiner'
p1592
sg16
(lp1593
sg19
(lp1594
sg22
(lp1595
sg25
I0
sba(iArchitecture
Entity
p1596
(dp1597
g11
(lp1598
sg14
S'com.google.common.base.Throwables'
p1599
sg16
(lp1600
sg19
(lp1601
sg22
(lp1602
sg25
I0
sba(iArchitecture
Entity
p1603
(dp1604
g11
(lp1605
sg14
S'com.google.common.base.Ticker'
p1606
sg16
(lp1607
sg19
(lp1608
sg22
(lp1609
sg25
I0
sba(iArchitecture
Entity
p1610
(dp1611
g11
(lp1612
sg14
S'com.google.common.base.Verify'
p1613
sg16
(lp1614
sg19
(lp1615
sg22
(lp1616
sg25
I0
sba(iArchitecture
Entity
p1617
(dp1618
g11
(lp1619
sg14
S'com.google.common.base.VerifyException'
p1620
sg16
(lp1621
sg19
(lp1622
sg22
(lp1623
sg25
I0
sba(iArchitecture
Entity
p1624
(dp1625
g11
(lp1626
sg14
S'com.google.common.base.package-info'
p1627
sg16
(lp1628
sg19
(lp1629
sg22
(lp1630
sg25
I0
sba(iArchitecture
Entity
p1631
(dp1632
g11
(lp1633
sg14
S'com.google.common.cache.AbstractCache'
p1634
sg16
(lp1635
sg19
(lp1636
sg22
(lp1637
sg25
I0
sba(iArchitecture
Entity
p1638
(dp1639
g11
(lp1640
sg14
S'com.google.common.cache.AbstractLoadingCache'
p1641
sg16
(lp1642
sg19
(lp1643
sg22
(lp1644
sg25
I0
sba(iArchitecture
Entity
p1645
(dp1646
g11
(lp1647
g86
asg14
S'com.google.common.cache.CacheBuilder'
p1648
sg16
(lp1649
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p1650
asg19
(lp1651
g91
asg22
(lp1652
g93
asg25
I0
sba(iArchitecture
Entity
p1653
(dp1654
g11
(lp1655
sg14
S'com.google.common.cache.CacheLoader'
p1656
sg16
(lp1657
sg19
(lp1658
sg22
(lp1659
sg25
I0
sba(iArchitecture
Entity
p1660
(dp1661
g11
(lp1662
sg14
S'com.google.common.cache.CacheStats'
p1663
sg16
(lp1664
sg19
(lp1665
sg22
(lp1666
sg25
I0
sba(iArchitecture
Entity
p1667
(dp1668
g11
(lp1669
sg14
S'com.google.common.cache.ForwardingCache'
p1670
sg16
(lp1671
sg19
(lp1672
sg22
(lp1673
sg25
I0
sba(iArchitecture
Entity
p1674
(dp1675
g11
(lp1676
sg14
S'com.google.common.cache.ForwardingLoadingCache'
p1677
sg16
(lp1678
sg19
(lp1679
sg22
(lp1680
sg25
I0
sba(iArchitecture
Entity
p1681
(dp1682
g11
(lp1683
sg14
S'com.google.common.cache.LoadingCache'
p1684
sg16
(lp1685
sg19
(lp1686
sg22
(lp1687
sg25
I0
sba(iArchitecture
Entity
p1688
(dp1689
g11
(lp1690
sg14
S'com.google.common.cache.LongAddables'
p1691
sg16
(lp1692
sg19
(lp1693
sg22
(lp1694
sg25
I0
sba(iArchitecture
Entity
p1695
(dp1696
g11
(lp1697
sg14
S'com.google.common.cache.RemovalCause'
p1698
sg16
(lp1699
sg19
(lp1700
sg22
(lp1701
sg25
I0
sba(iArchitecture
Entity
p1702
(dp1703
g11
(lp1704
sg14
S'com.google.common.cache.RemovalListener'
p1705
sg16
(lp1706
sg19
(lp1707
sg22
(lp1708
sg25
I0
sba(iArchitecture
Entity
p1709
(dp1710
g11
(lp1711
sg14
S'com.google.common.cache.RemovalListeners'
p1712
sg16
(lp1713
sg19
(lp1714
sg22
(lp1715
sg25
I0
sba(iArchitecture
Entity
p1716
(dp1717
g11
(lp1718
sg14
S'com.google.common.cache.RemovalNotification'
p1719
sg16
(lp1720
sg19
(lp1721
sg22
(lp1722
sg25
I0
sba(iArchitecture
Entity
p1723
(dp1724
g11
(lp1725
sg14
S'com.google.common.cache.Striped64'
p1726
sg16
(lp1727
sg19
(lp1728
sg22
(lp1729
sg25
I0
sba(iArchitecture
Entity
p1730
(dp1731
g11
(lp1732
sg14
S'com.google.common.cache.Weigher'
p1733
sg16
(lp1734
sg19
(lp1735
sg22
(lp1736
sg25
I0
sba(iArchitecture
Entity
p1737
(dp1738
g11
(lp1739
sg14
S'com.google.common.cache.package-info'
p1740
sg16
(lp1741
sg19
(lp1742
sg22
(lp1743
sg25
I0
sba(iArchitecture
Entity
p1744
(dp1745
g11
(lp1746
sg14
S'com.google.common.collect.AbstractIterator'
p1747
sg16
(lp1748
sg19
(lp1749
sg22
(lp1750
sg25
I0
sba(iArchitecture
Entity
p1751
(dp1752
g11
(lp1753
sg14
S'com.google.common.collect.AbstractMapEntry'
p1754
sg16
(lp1755
sg19
(lp1756
sg22
(lp1757
sg25
I0
sba(iArchitecture
Entity
p1758
(dp1759
g11
(lp1760
sg14
S'com.google.common.collect.AbstractSortedMultiset'
p1761
sg16
(lp1762
sg19
(lp1763
sg22
(lp1764
sg25
I0
sba(iArchitecture
Entity
p1765
(dp1766
g11
(lp1767
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p1768
sg16
(lp1769
sg19
(lp1770
sg22
(lp1771
sg25
I0
sba(iArchitecture
Entity
p1772
(dp1773
g11
(lp1774
sg14
S'com.google.common.collect.CollectPreconditions'
p1775
sg16
(lp1776
sg19
(lp1777
sg22
(lp1778
sg25
I0
sba(iArchitecture
Entity
p1779
(dp1780
g11
(lp1781
sg14
S'com.google.common.collect.Constraint'
p1782
sg16
(lp1783
sg19
(lp1784
sg22
(lp1785
sg25
I0
sba(iArchitecture
Entity
p1786
(dp1787
g11
(lp1788
sg14
S'com.google.common.collect.Constraints'
p1789
sg16
(lp1790
sg19
(lp1791
sg22
(lp1792
sg25
I0
sba(iArchitecture
Entity
p1793
(dp1794
g11
(lp1795
g13
asg14
S'com.google.common.collect.Cut'
p1796
sg16
(lp1797
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1798
asg19
(lp1799
g21
asg22
(lp1800
g24
asg25
I0
sba(iArchitecture
Entity
p1801
(dp1802
g11
(lp1803
g13
asg14
S'com.google.common.collect.DiscreteDomain'
p1804
sg16
(lp1805
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1806
asg19
(lp1807
g21
asg22
(lp1808
g24
asg25
I0
sba(iArchitecture
Entity
p1809
(dp1810
g11
(lp1811
sg14
S'com.google.common.collect.FilteredKeyListMultimap'
p1812
sg16
(lp1813
sg19
(lp1814
sg22
(lp1815
sg25
I0
sba(iArchitecture
Entity
p1816
(dp1817
g11
(lp1818
sg14
S'com.google.common.collect.FilteredSetMultimap'
p1819
sg16
(lp1820
sg19
(lp1821
sg22
(lp1822
sg25
I0
sba(iArchitecture
Entity
p1823
(dp1824
g11
(lp1825
sg14
S'com.google.common.collect.ForwardingCollection'
p1826
sg16
(lp1827
sg19
(lp1828
sg22
(lp1829
sg25
I0
sba(iArchitecture
Entity
p1830
(dp1831
g11
(lp1832
sg14
S'com.google.common.collect.ForwardingConcurrentMap'
p1833
sg16
(lp1834
sg19
(lp1835
sg22
(lp1836
sg25
I0
sba(iArchitecture
Entity
p1837
(dp1838
g11
(lp1839
sg14
S'com.google.common.collect.ForwardingImmutableList'
p1840
sg16
(lp1841
sg19
(lp1842
sg22
(lp1843
sg25
I0
sba(iArchitecture
Entity
p1844
(dp1845
g11
(lp1846
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p1847
sg16
(lp1848
sg19
(lp1849
sg22
(lp1850
sg25
I0
sba(iArchitecture
Entity
p1851
(dp1852
g11
(lp1853
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p1854
sg16
(lp1855
sg19
(lp1856
sg22
(lp1857
sg25
I0
sba(iArchitecture
Entity
p1858
(dp1859
g11
(lp1860
sg14
S'com.google.common.collect.ForwardingIterator'
p1861
sg16
(lp1862
sg19
(lp1863
sg22
(lp1864
sg25
I0
sba(iArchitecture
Entity
p1865
(dp1866
g11
(lp1867
sg14
S'com.google.common.collect.ForwardingListIterator'
p1868
sg16
(lp1869
sg19
(lp1870
sg22
(lp1871
sg25
I0
sba(iArchitecture
Entity
p1872
(dp1873
g11
(lp1874
sg14
S'com.google.common.collect.ForwardingListMultimap'
p1875
sg16
(lp1876
sg19
(lp1877
sg22
(lp1878
sg25
I0
sba(iArchitecture
Entity
p1879
(dp1880
g11
(lp1881
sg14
S'com.google.common.collect.ForwardingMap'
p1882
sg16
(lp1883
sg19
(lp1884
sg22
(lp1885
sg25
I0
sba(iArchitecture
Entity
p1886
(dp1887
g11
(lp1888
sg14
S'com.google.common.collect.ForwardingMapEntry'
p1889
sg16
(lp1890
sg19
(lp1891
sg22
(lp1892
sg25
I0
sba(iArchitecture
Entity
p1893
(dp1894
g11
(lp1895
sg14
S'com.google.common.collect.ForwardingMultiset'
p1896
sg16
(lp1897
sg19
(lp1898
sg22
(lp1899
sg25
I0
sba(iArchitecture
Entity
p1900
(dp1901
g11
(lp1902
sg14
S'com.google.common.collect.ForwardingNavigableMap'
p1903
sg16
(lp1904
sg19
(lp1905
sg22
(lp1906
sg25
I0
sba(iArchitecture
Entity
p1907
(dp1908
g11
(lp1909
sg14
S'com.google.common.collect.ForwardingNavigableSet'
p1910
sg16
(lp1911
sg19
(lp1912
sg22
(lp1913
sg25
I0
sba(iArchitecture
Entity
p1914
(dp1915
g11
(lp1916
sg14
S'com.google.common.collect.ForwardingObject'
p1917
sg16
(lp1918
sg19
(lp1919
sg22
(lp1920
sg25
I0
sba(iArchitecture
Entity
p1921
(dp1922
g11
(lp1923
sg14
S'com.google.common.collect.ForwardingQueue'
p1924
sg16
(lp1925
sg19
(lp1926
sg22
(lp1927
sg25
I0
sba(iArchitecture
Entity
p1928
(dp1929
g11
(lp1930
sg14
S'com.google.common.collect.ForwardingSet'
p1931
sg16
(lp1932
sg19
(lp1933
sg22
(lp1934
sg25
I0
sba(iArchitecture
Entity
p1935
(dp1936
g11
(lp1937
sg14
S'com.google.common.collect.ForwardingSortedMap'
p1938
sg16
(lp1939
sg19
(lp1940
sg22
(lp1941
sg25
I0
sba(iArchitecture
Entity
p1942
(dp1943
g11
(lp1944
sg14
S'com.google.common.collect.ForwardingSortedMultiset'
p1945
sg16
(lp1946
sg19
(lp1947
sg22
(lp1948
sg25
I0
sba(iArchitecture
Entity
p1949
(dp1950
g11
(lp1951
sg14
S'com.google.common.collect.ForwardingSortedSet'
p1952
sg16
(lp1953
sg19
(lp1954
sg22
(lp1955
sg25
I0
sba(iArchitecture
Entity
p1956
(dp1957
g11
(lp1958
sg14
S'com.google.common.collect.GenericMapMaker'
p1959
sg16
(lp1960
sg19
(lp1961
sg22
(lp1962
sg25
I0
sba(iArchitecture
Entity
p1963
(dp1964
g11
(lp1965
sg14
S'com.google.common.collect.GwtTransient'
p1966
sg16
(lp1967
sg19
(lp1968
sg22
(lp1969
sg25
I0
sba(iArchitecture
Entity
p1970
(dp1971
g11
(lp1972
sg14
S'com.google.common.collect.ImmutableEnumMap'
p1973
sg16
(lp1974
sg19
(lp1975
sg22
(lp1976
sg25
I0
sba(iArchitecture
Entity
p1977
(dp1978
g11
(lp1979
sg14
S'com.google.common.collect.ImmutableEnumSet'
p1980
sg16
(lp1981
sg19
(lp1982
sg22
(lp1983
sg25
I0
sba(iArchitecture
Entity
p1984
(dp1985
g11
(lp1986
sg14
S'com.google.common.collect.ImmutableMapEntry'
p1987
sg16
(lp1988
sg19
(lp1989
sg22
(lp1990
sg25
I0
sba(iArchitecture
Entity
p1991
(dp1992
g11
(lp1993
sg14
S'com.google.common.collect.ImmutableMapEntrySet'
p1994
sg16
(lp1995
sg19
(lp1996
sg22
(lp1997
sg25
I0
sba(iArchitecture
Entity
p1998
(dp1999
g11
(lp2000
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p2001
sg16
(lp2002
sg19
(lp2003
sg22
(lp2004
sg25
I0
sba(iArchitecture
Entity
p2005
(dp2006
g11
(lp2007
sg14
S'com.google.common.collect.Interners'
p2008
sg16
(lp2009
sg19
(lp2010
sg22
(lp2011
sg25
I0
sba(iArchitecture
Entity
p2012
(dp2013
g11
(lp2014
V1885
p2015
asg14
S'com.google.common.collect.MapMaker'
p2016
sg16
(lp2017
VMapMaker javadoc advertises "on-demand computation of values for keys not already present" but this doesn't appear to actually be possible.\u000a
p2018
asg19
(lp2019
(lp2020
I2
aasg22
(lp2021
VJavadoc error in MapMaker
p2022
asg25
I0
sba(iArchitecture
Entity
p2023
(dp2024
g11
(lp2025
sg14
S'com.google.common.collect.MultimapBuilder'
p2026
sg16
(lp2027
sg19
(lp2028
sg22
(lp2029
sg25
I0
sba(iArchitecture
Entity
p2030
(dp2031
g11
(lp2032
sg14
S'com.google.common.collect.Multiset'
p2033
sg16
(lp2034
sg19
(lp2035
sg22
(lp2036
sg25
I0
sba(iArchitecture
Entity
p2037
(dp2038
g11
(lp2039
sg14
S'com.google.common.collect.PeekingIterator'
p2040
sg16
(lp2041
sg19
(lp2042
sg22
(lp2043
sg25
I0
sba(iArchitecture
Entity
p2044
(dp2045
g11
(lp2046
sg14
S'com.google.common.collect.RegularImmutableAsList'
p2047
sg16
(lp2048
sg19
(lp2049
sg22
(lp2050
sg25
I0
sba(iArchitecture
Entity
p2051
(dp2052
g11
(lp2053
sg14
S'com.google.common.collect.SingletonImmutableTable'
p2054
sg16
(lp2055
sg19
(lp2056
sg22
(lp2057
sg25
I0
sba(iArchitecture
Entity
p2058
(dp2059
g11
(lp2060
sg14
S'com.google.common.collect.SortedLists'
p2061
sg16
(lp2062
sg19
(lp2063
sg22
(lp2064
sg25
I0
sba(iArchitecture
Entity
p2065
(dp2066
g11
(lp2067
sg14
S'com.google.common.collect.SortedMultiset'
p2068
sg16
(lp2069
sg19
(lp2070
sg22
(lp2071
sg25
I0
sba(iArchitecture
Entity
p2072
(dp2073
g11
(lp2074
sg14
S'com.google.common.collect.StandardRowSortedTable'
p2075
sg16
(lp2076
sg19
(lp2077
sg22
(lp2078
sg25
I0
sba(iArchitecture
Entity
p2079
(dp2080
g11
(lp2081
sg14
S'com.google.common.collect.TreeTraverser'
p2082
sg16
(lp2083
sg19
(lp2084
sg22
(lp2085
sg25
I0
sba(iArchitecture
Entity
p2086
(dp2087
g11
(lp2088
sg14
S'com.google.common.collect.UnmodifiableListIterator'
p2089
sg16
(lp2090
sg19
(lp2091
sg22
(lp2092
sg25
I0
sba(iArchitecture
Entity
p2093
(dp2094
g11
(lp2095
sg14
S'com.google.common.collect.UnmodifiableSortedMultiset'
p2096
sg16
(lp2097
sg19
(lp2098
sg22
(lp2099
sg25
I0
sba(iArchitecture
Entity
p2100
(dp2101
g11
(lp2102
sg14
S'com.google.common.collect.package-info'
p2103
sg16
(lp2104
sg19
(lp2105
sg22
(lp2106
sg25
I0
sba(iArchitecture
Entity
p2107
(dp2108
g11
(lp2109
sg14
S'com.google.common.escape.package-info'
p2110
sg16
(lp2111
sg19
(lp2112
sg22
(lp2113
sg25
I0
sba(iArchitecture
Entity
p2114
(dp2115
g11
(lp2116
sg14
S'com.google.common.eventbus.AsyncEventBus'
p2117
sg16
(lp2118
sg19
(lp2119
sg22
(lp2120
sg25
I0
sba(iArchitecture
Entity
p2121
(dp2122
g11
(lp2123
g86
asg14
S'com.google.common.eventbus.EventBus'
p2124
sg16
(lp2125
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2126
asg19
(lp2127
g91
asg22
(lp2128
g93
asg25
I0
sba(iArchitecture
Entity
p2129
(dp2130
g11
(lp2131
sg14
S'com.google.common.html.HtmlEscapers'
p2132
sg16
(lp2133
sg19
(lp2134
sg22
(lp2135
sg25
I0
sba(iArchitecture
Entity
p2136
(dp2137
g11
(lp2138
sg14
S'com.google.common.io.Resources'
p2139
sg16
(lp2140
sg19
(lp2141
sg22
(lp2142
sg25
I0
sba(iArchitecture
Entity
p2143
(dp2144
g11
(lp2145
sg14
S'com.google.common.math.DoubleUtils'
p2146
sg16
(lp2147
sg19
(lp2148
sg22
(lp2149
sg25
I0
sba(iArchitecture
Entity
p2150
(dp2151
g11
(lp2152
sg14
S'com.google.common.math.LongMath'
p2153
sg16
(lp2154
sg19
(lp2155
sg22
(lp2156
sg25
I0
sba(iArchitecture
Entity
p2157
(dp2158
g11
(lp2159
sg14
S'com.google.common.math.MathPreconditions'
p2160
sg16
(lp2161
sg19
(lp2162
sg22
(lp2163
sg25
I0
sba(iArchitecture
Entity
p2164
(dp2165
g11
(lp2166
sg14
S'com.google.common.net.HostAndPort'
p2167
sg16
(lp2168
sg19
(lp2169
sg22
(lp2170
sg25
I0
sba(iArchitecture
Entity
p2171
(dp2172
g11
(lp2173
sg14
S'com.google.common.net.HostSpecifier'
p2174
sg16
(lp2175
sg19
(lp2176
sg22
(lp2177
sg25
I0
sba(iArchitecture
Entity
p2178
(dp2179
g11
(lp2180
sg14
S'com.google.common.net.HttpHeaders'
p2181
sg16
(lp2182
sg19
(lp2183
sg22
(lp2184
sg25
I0
sba(iArchitecture
Entity
p2185
(dp2186
g11
(lp2187
g86
asg14
S'com.google.common.net.InetAddresses'
p2188
sg16
(lp2189
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2190
asg19
(lp2191
g91
asg22
(lp2192
g93
asg25
I0
sba(iArchitecture
Entity
p2193
(dp2194
g11
(lp2195
sg14
S'com.google.common.net.InternetDomainName'
p2196
sg16
(lp2197
sg19
(lp2198
sg22
(lp2199
sg25
I0
sba(iArchitecture
Entity
p2200
(dp2201
g11
(lp2202
sg14
S'com.google.common.net.UrlEscapers'
p2203
sg16
(lp2204
sg19
(lp2205
sg22
(lp2206
sg25
I0
sba(iArchitecture
Entity
p2207
(dp2208
g11
(lp2209
sg14
S'com.google.common.net.package-info'
p2210
sg16
(lp2211
sg19
(lp2212
sg22
(lp2213
sg25
I0
sba(iArchitecture
Entity
p2214
(dp2215
g11
(lp2216
sg14
S'com.google.common.primitives.ParseRequest'
p2217
sg16
(lp2218
sg19
(lp2219
sg22
(lp2220
sg25
I0
sba(iArchitecture
Entity
p2221
(dp2222
g11
(lp2223
sg14
S'com.google.common.primitives.package-info'
p2224
sg16
(lp2225
sg19
(lp2226
sg22
(lp2227
sg25
I0
sba(iArchitecture
Entity
p2228
(dp2229
g11
(lp2230
sg14
S'com.google.common.reflect.AbstractInvocationHandler'
p2231
sg16
(lp2232
sg19
(lp2233
sg22
(lp2234
sg25
I0
sba(iArchitecture
Entity
p2235
(dp2236
g11
(lp2237
sg14
S'com.google.common.reflect.ClassPath'
p2238
sg16
(lp2239
sg19
(lp2240
sg22
(lp2241
sg25
I0
sba(iArchitecture
Entity
p2242
(dp2243
g11
(lp2244
sg14
S'com.google.common.reflect.Reflection'
p2245
sg16
(lp2246
sg19
(lp2247
sg22
(lp2248
sg25
I0
sba(iArchitecture
Entity
p2249
(dp2250
g11
(lp2251
sg14
S'com.google.common.reflect.TypeCapture'
p2252
sg16
(lp2253
sg19
(lp2254
sg22
(lp2255
sg25
I0
sba(iArchitecture
Entity
p2256
(dp2257
g11
(lp2258
sg14
S'com.google.common.util.concurrent.AbstractCheckedFuture'
p2259
sg16
(lp2260
sg19
(lp2261
sg22
(lp2262
sg25
I0
sba(iArchitecture
Entity
p2263
(dp2264
g11
(lp2265
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadService'
p2266
sg16
(lp2267
sg19
(lp2268
sg22
(lp2269
sg25
I0
sba(iArchitecture
Entity
p2270
(dp2271
g11
(lp2272
g13
asg14
S'com.google.common.util.concurrent.AbstractFuture'
p2273
sg16
(lp2274
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2275
asg19
(lp2276
g21
asg22
(lp2277
g24
asg25
I0
sba(iArchitecture
Entity
p2278
(dp2279
g11
(lp2280
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorService'
p2281
sg16
(lp2282
sg19
(lp2283
sg22
(lp2284
sg25
I0
sba(iArchitecture
Entity
p2285
(dp2286
g11
(lp2287
V2072
p2288
ag2288
asg14
S'com.google.common.util.concurrent.AbstractScheduledService'
p2289
sg16
(lp2290
V(Source attached below which demonstrates the issue).\u000aI have an implementation of an AbstractScheduledService which overrides the scheduler() method and creates and returns a CustomScheduler.  This CustomScheduler's getNextSchedule() method sleeps for a period of time (which makes the deadlock more predicable) and then either returns a Schedule, or if the Service\u2019s state is STOPPING it throws an exception.  \u000aThe problem arises when it throws an exception.  After throwing the exception the service never actually terminates, and the shutDown() method is never called.  After a brief investigation, it looks as though there is a deadlock between notifyFailed() and stopAsync() in AbstractService class.  notifyFailed() (called from the catch block of reschedule() method in one of AbstractScheduledService inner classes) tries to enter the monitor field but is blocked as the monitor is currently held by stopAsync(), and stopAsync() hasn\u2019t released the monitor yet as it is blocked when calling this.doStop() (in case 3 of switch stmt).  The doStop() called is the impl in AbstractScheduledService, and this gets blocked on the first line waiting for this.runningTask.cancel(false) to return.\u000a\u000aI haven\u2019t had time to download the source code and build things myself to investigate it further, but hopefully there is enough here to go on.  Below is some source code which demonstrates the problem, and the log output showing that the service\u2019s shutDown() method is not called and the service and JVM hasn\u2019t terminated yet.\u000a\u000a``` java\u000apublic class Main {\u000a    public static void main(String[] args) throws Exception {\u000a        Service service = new ScheduledServiceWithCustomBlockingScheduler(5000);\u000a        new ServiceStateMonitor().monitorServiceStateWithServiceListener(service);\u000a        System.out.println("starting service");\u000a        service.startAsync();\u000a        Thread.sleep(6000); // wait just enough time for 2nd call of getNextSchedule() to start\u000a        System.out.println("Stopping service");\u000a        service.stopAsync();\u000a        System.out.println("Bye");\u000a      }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ScheduledServiceWithCustomBlockingScheduler extends AbstractScheduledService {\u000a    private long blockTime;\u000a\u000a    public ScheduledServiceWithCustomBlockingScheduler(final long blockTime) {\u000a        this.blockTime = blockTime;\u000a    }\u000a\u000a    @Override\u000a    protected void runOneIteration() throws Exception {\u000a        System.out.println("runOneIteration()");\u000a    }\u000a\u000a    @Override\u000a    protected Scheduler scheduler() {\u000a        return new CustomScheduler() {\u000a            @Override\u000a            protected Schedule getNextSchedule() throws Exception {\u000a                System.out.println("getNextSchedule()...");\u000a                Thread.sleep(blockTime);\u000a                if (state() == State.STOPPING) {\u000a                    System.out.println("getNextSchedule() - not running anymore so don't return scheduler");\u000a                    throw new Exception("not running anymore so don't return scheduler");\u000a                }\u000a                System.out.println("...getNextSchedule()");\u000a                return new Schedule(0, TimeUnit.NANOSECONDS);\u000a            }\u000a        };\u000a    }\u000a\u000a    @Override\u000a    protected void startUp() throws Exception {\u000a        System.out.println("startUp()");\u000a    }\u000a\u000a    @Override\u000a    protected void shutDown() throws Exception {\u000a        System.out.println("shutDown()");\u000a    }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ServiceStateMonitor {\u000a    public void monitorServiceStateWithServiceListener(final Service serviceToMonitor) {\u000a        serviceToMonitor.addListener(new PrintOutNewStateServiceListener(), MoreExecutors.directExecutor());\u000a    }\u000a\u000a    private class PrintOutNewStateServiceListener extends Service.Listener {\u000a        @Override\u000a        public void starting() {\u000a            System.out.println("SERVICE LISTENER : Starting");\u000a        }\u000a\u000a        @Override\u000a        public void running() {\u000a            System.out.println("SERVICE LISTENER : Running");\u000a        }\u000a\u000a        @Override\u000a        public void stopping(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Stopping");\u000a        }\u000a\u000a        @Override\u000a        public void terminated(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Terminated");\u000a        }\u000a\u000a        @Override\u000a        public void failed(final Service.State from, final Throwable failure) {\u000a            System.out.println("SERVICE LISTENER : Failed");\u000a        }\u000a    }\u000a}\u000a```\u000a\u000aThe Standard Ouput from running the main()\u000a\u000a```\u000astarting service\u000aSERVICE LISTENER : Starting\u000astartUp()\u000agetNextSchedule()...\u000a...getNextSchedule()\u000aSERVICE LISTENER : Running\u000arunOneIteration()\u000agetNextSchedule()...\u000aStopping service\u000agetNextSchedule() - not running anymore so don't return scheduler\u000a```\u000a\u000anotice that there is no "shutDown()" or "Bye" output line.\u000a
p2291
aV(Source attached below which demonstrates the issue).\u000aI have an implementation of an AbstractScheduledService which overrides the scheduler() method and creates and returns a CustomScheduler.  This CustomScheduler's getNextSchedule() method sleeps for a period of time (which makes the deadlock more predicable) and then either returns a Schedule, or if the Service\u2019s state is STOPPING it throws an exception.  \u000aThe problem arises when it throws an exception.  After throwing the exception the service never actually terminates, and the shutDown() method is never called.  After a brief investigation, it looks as though there is a deadlock between notifyFailed() and stopAsync() in AbstractService class.  notifyFailed() (called from the catch block of reschedule() method in one of AbstractScheduledService inner classes) tries to enter the monitor field but is blocked as the monitor is currently held by stopAsync(), and stopAsync() hasn\u2019t released the monitor yet as it is blocked when calling this.doStop() (in case 3 of switch stmt).  The doStop() called is the impl in AbstractScheduledService, and this gets blocked on the first line waiting for this.runningTask.cancel(false) to return.\u000a\u000aI haven\u2019t had time to download the source code and build things myself to investigate it further, but hopefully there is enough here to go on.  Below is some source code which demonstrates the problem, and the log output showing that the service\u2019s shutDown() method is not called and the service and JVM hasn\u2019t terminated yet.\u000a\u000a``` java\u000apublic class Main {\u000a    public static void main(String[] args) throws Exception {\u000a        Service service = new ScheduledServiceWithCustomBlockingScheduler(5000);\u000a        new ServiceStateMonitor().monitorServiceStateWithServiceListener(service);\u000a        System.out.println("starting service");\u000a        service.startAsync();\u000a        Thread.sleep(6000); // wait just enough time for 2nd call of getNextSchedule() to start\u000a        System.out.println("Stopping service");\u000a        service.stopAsync();\u000a        System.out.println("Bye");\u000a      }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ScheduledServiceWithCustomBlockingScheduler extends AbstractScheduledService {\u000a    private long blockTime;\u000a\u000a    public ScheduledServiceWithCustomBlockingScheduler(final long blockTime) {\u000a        this.blockTime = blockTime;\u000a    }\u000a\u000a    @Override\u000a    protected void runOneIteration() throws Exception {\u000a        System.out.println("runOneIteration()");\u000a    }\u000a\u000a    @Override\u000a    protected Scheduler scheduler() {\u000a        return new CustomScheduler() {\u000a            @Override\u000a            protected Schedule getNextSchedule() throws Exception {\u000a                System.out.println("getNextSchedule()...");\u000a                Thread.sleep(blockTime);\u000a                if (state() == State.STOPPING) {\u000a                    System.out.println("getNextSchedule() - not running anymore so don't return scheduler");\u000a                    throw new Exception("not running anymore so don't return scheduler");\u000a                }\u000a                System.out.println("...getNextSchedule()");\u000a                return new Schedule(0, TimeUnit.NANOSECONDS);\u000a            }\u000a        };\u000a    }\u000a\u000a    @Override\u000a    protected void startUp() throws Exception {\u000a        System.out.println("startUp()");\u000a    }\u000a\u000a    @Override\u000a    protected void shutDown() throws Exception {\u000a        System.out.println("shutDown()");\u000a    }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ServiceStateMonitor {\u000a    public void monitorServiceStateWithServiceListener(final Service serviceToMonitor) {\u000a        serviceToMonitor.addListener(new PrintOutNewStateServiceListener(), MoreExecutors.directExecutor());\u000a    }\u000a\u000a    private class PrintOutNewStateServiceListener extends Service.Listener {\u000a        @Override\u000a        public void starting() {\u000a            System.out.println("SERVICE LISTENER : Starting");\u000a        }\u000a\u000a        @Override\u000a        public void running() {\u000a            System.out.println("SERVICE LISTENER : Running");\u000a        }\u000a\u000a        @Override\u000a        public void stopping(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Stopping");\u000a        }\u000a\u000a        @Override\u000a        public void terminated(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Terminated");\u000a        }\u000a\u000a        @Override\u000a        public void failed(final Service.State from, final Throwable failure) {\u000a            System.out.println("SERVICE LISTENER : Failed");\u000a        }\u000a    }\u000a}\u000a```\u000a\u000aThe Standard Ouput from running the main()\u000a\u000a```\u000astarting service\u000aSERVICE LISTENER : Starting\u000astartUp()\u000agetNextSchedule()...\u000a...getNextSchedule()\u000aSERVICE LISTENER : Running\u000arunOneIteration()\u000agetNextSchedule()...\u000aStopping service\u000agetNextSchedule() - not running anymore so don't return scheduler\u000a```\u000a\u000anotice that there is no "shutDown()" or "Bye" output line.\u000a
p2292
asg19
(lp2293
(lp2294
I1
aag2294
asg22
(lp2295
VDeadlock when stopping an AbstractScheduledService and Exception thrown from CustomScheduler.getNextSchedule()
p2296
ag2296
asg25
I0
sba(iArchitecture
Entity
p2297
(dp2298
g11
(lp2299
sg14
S'com.google.common.util.concurrent.AbstractService'
p2300
sg16
(lp2301
sg19
(lp2302
sg22
(lp2303
sg25
I0
sba(iArchitecture
Entity
p2304
(dp2305
g11
(lp2306
sg14
S'com.google.common.util.concurrent.Callables'
p2307
sg16
(lp2308
sg19
(lp2309
sg22
(lp2310
sg25
I0
sba(iArchitecture
Entity
p2311
(dp2312
g11
(lp2313
g13
ag13
asg14
S'com.google.common.util.concurrent.CycleDetectingLockFactory'
p2314
sg16
(lp2315
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2316
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2317
asg19
(lp2318
g21
ag21
asg22
(lp2319
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p2320
(dp2321
g11
(lp2322
sg14
S'com.google.common.util.concurrent.ExecutionError'
p2323
sg16
(lp2324
sg19
(lp2325
sg22
(lp2326
sg25
I0
sba(iArchitecture
Entity
p2327
(dp2328
g11
(lp2329
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueue'
p2330
sg16
(lp2331
sg19
(lp2332
sg22
(lp2333
sg25
I0
sba(iArchitecture
Entity
p2334
(dp2335
g11
(lp2336
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFuture'
p2337
sg16
(lp2338
sg19
(lp2339
sg22
(lp2340
sg25
I0
sba(iArchitecture
Entity
p2341
(dp2342
g11
(lp2343
sg14
S'com.google.common.util.concurrent.ForwardingExecutorService'
p2344
sg16
(lp2345
sg19
(lp2346
sg22
(lp2347
sg25
I0
sba(iArchitecture
Entity
p2348
(dp2349
g11
(lp2350
sg14
S'com.google.common.util.concurrent.ForwardingFuture'
p2351
sg16
(lp2352
sg19
(lp2353
sg22
(lp2354
sg25
I0
sba(iArchitecture
Entity
p2355
(dp2356
g11
(lp2357
sg14
S'com.google.common.util.concurrent.ForwardingListenableFuture'
p2358
sg16
(lp2359
sg19
(lp2360
sg22
(lp2361
sg25
I0
sba(iArchitecture
Entity
p2362
(dp2363
g11
(lp2364
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorService'
p2365
sg16
(lp2366
sg19
(lp2367
sg22
(lp2368
sg25
I0
sba(iArchitecture
Entity
p2369
(dp2370
g11
(lp2371
sg14
S'com.google.common.util.concurrent.JdkFutureAdapters'
p2372
sg16
(lp2373
sg19
(lp2374
sg22
(lp2375
sg25
I0
sba(iArchitecture
Entity
p2376
(dp2377
g11
(lp2378
sg14
S'com.google.common.util.concurrent.ListenerCallQueue'
p2379
sg16
(lp2380
sg19
(lp2381
sg22
(lp2382
sg25
I0
sba(iArchitecture
Entity
p2383
(dp2384
g11
(lp2385
sg14
S'com.google.common.util.concurrent.ListeningExecutorService'
p2386
sg16
(lp2387
sg19
(lp2388
sg22
(lp2389
sg25
I0
sba(iArchitecture
Entity
p2390
(dp2391
g11
(lp2392
g86
ag86
asg14
S'com.google.common.util.concurrent.RateLimiter'
p2393
sg16
(lp2394
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2395
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2396
asg19
(lp2397
g91
ag91
asg22
(lp2398
g93
ag93
asg25
I0
sba(iArchitecture
Entity
p2399
(dp2400
g11
(lp2401
sg14
S'com.google.common.util.concurrent.Runnables'
p2402
sg16
(lp2403
sg19
(lp2404
sg22
(lp2405
sg25
I0
sba(iArchitecture
Entity
p2406
(dp2407
g11
(lp2408
g86
asg14
S'com.google.common.util.concurrent.Service'
p2409
sg16
(lp2410
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2411
asg19
(lp2412
g91
asg22
(lp2413
g93
asg25
I0
sba(iArchitecture
Entity
p2414
(dp2415
g11
(lp2416
sg14
S'com.google.common.util.concurrent.ServiceManager'
p2417
sg16
(lp2418
sg19
(lp2419
sg22
(lp2420
sg25
I0
sba(iArchitecture
Entity
p2421
(dp2422
g11
(lp2423
g86
ag86
asg14
S'com.google.common.util.concurrent.ThreadFactoryBuilder'
p2424
sg16
(lp2425
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2426
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2427
asg19
(lp2428
g91
ag91
asg22
(lp2429
g93
ag93
asg25
I0
sba(iArchitecture
Entity
p2430
(dp2431
g11
(lp2432
sg14
S'com.google.common.util.concurrent.UncheckedExecutionException'
p2433
sg16
(lp2434
sg19
(lp2435
sg22
(lp2436
sg25
I0
sba(iArchitecture
Entity
p2437
(dp2438
g11
(lp2439
sg14
S'com.google.common.util.concurrent.UncheckedTimeoutException'
p2440
sg16
(lp2441
sg19
(lp2442
sg22
(lp2443
sg25
I0
sba(iArchitecture
Entity
p2444
(dp2445
g11
(lp2446
sg14
S'com.google.common.util.concurrent.WrappingExecutorService'
p2447
sg16
(lp2448
sg19
(lp2449
sg22
(lp2450
sg25
I0
sba(iArchitecture
Entity
p2451
(dp2452
g11
(lp2453
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorService'
p2454
sg16
(lp2455
sg19
(lp2456
sg22
(lp2457
sg25
I0
sba(iArchitecture
Entity
p2458
(dp2459
g11
(lp2460
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixPatterns'
p2461
sg16
(lp2462
sg19
(lp2463
sg22
(lp2464
sg25
I0
sba(iArchitecture
Entity
p2465
(dp2466
g11
(lp2467
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixType'
p2468
sg16
(lp2469
sg19
(lp2470
sg22
(lp2471
sg25
I0
sbasg1017
(lp2472
g1570
ag1577
ag1585
ag1592
ag1599
ag1606
ag1613
ag1620
ag1627
ag1634
ag1641
ag1648
ag1656
ag1663
ag1670
ag1677
ag1684
ag1691
ag1698
ag1705
ag1712
ag1719
ag1726
ag1733
ag1740
ag1747
ag1754
ag1761
ag1768
ag1775
ag1782
ag1789
ag1796
ag1804
ag1812
ag1819
ag1826
ag1833
ag1840
ag1847
ag1854
ag1861
ag1868
ag1875
ag1882
ag1889
ag1896
ag1903
ag1910
ag1917
ag1924
ag1931
ag1938
ag1945
ag1952
ag1959
ag1966
ag1973
ag1980
ag1987
ag1994
ag2001
ag2008
ag2016
ag2026
ag2033
ag2040
ag2047
ag2054
ag2061
ag2068
ag2075
ag2082
ag2089
ag2096
ag2103
ag2110
ag2117
ag2124
ag2132
ag2139
ag2146
ag2153
ag2160
ag2167
ag2174
ag2181
ag2188
ag2196
ag2203
ag2210
ag2217
ag2224
ag2231
ag2238
ag2245
ag2252
ag2259
ag2266
ag2273
ag2281
ag2289
ag2300
ag2307
ag2314
ag2323
ag2330
ag2337
ag2344
ag2351
ag2358
ag2365
ag2372
ag2379
ag2386
ag2393
ag2402
ag2409
ag2417
ag2424
ag2433
ag2440
ag2447
ag2454
ag2461
ag2468
asg25
I0
sg1019
S'networking'
p2473
sba(iArchitecture
Cluster
p2474
(dp2475
g7
(lp2476
(iArchitecture
Entity
p2477
(dp2478
g11
(lp2479
sg14
S'com.google.common.annotations.VisibleForTesting'
p2480
sg16
(lp2481
sg19
(lp2482
sg22
(lp2483
sg25
I0
sba(iArchitecture
Entity
p2484
(dp2485
g11
(lp2486
sg14
S'com.google.common.base.Enums'
p2487
sg16
(lp2488
sg19
(lp2489
sg22
(lp2490
sg25
I0
sba(iArchitecture
Entity
p2491
(dp2492
g11
(lp2493
sg14
S'com.google.common.base.FinalizablePhantomReference'
p2494
sg16
(lp2495
sg19
(lp2496
sg22
(lp2497
sg25
I0
sba(iArchitecture
Entity
p2498
(dp2499
g11
(lp2500
sg14
S'com.google.common.base.FinalizableReference'
p2501
sg16
(lp2502
sg19
(lp2503
sg22
(lp2504
sg25
I0
sba(iArchitecture
Entity
p2505
(dp2506
g11
(lp2507
sg14
S'com.google.common.base.FinalizableSoftReference'
p2508
sg16
(lp2509
sg19
(lp2510
sg22
(lp2511
sg25
I0
sba(iArchitecture
Entity
p2512
(dp2513
g11
(lp2514
sg14
S'com.google.common.base.FinalizableWeakReference'
p2515
sg16
(lp2516
sg19
(lp2517
sg22
(lp2518
sg25
I0
sba(iArchitecture
Entity
p2519
(dp2520
g11
(lp2521
sg14
S'com.google.common.cache.LongAddable'
p2522
sg16
(lp2523
sg19
(lp2524
sg22
(lp2525
sg25
I0
sba(iArchitecture
Entity
p2526
(dp2527
g11
(lp2528
sg14
S'com.google.common.collect.ComputationException'
p2529
sg16
(lp2530
sg19
(lp2531
sg22
(lp2532
sg25
I0
sba(iArchitecture
Entity
p2533
(dp2534
g11
(lp2535
sg14
S'com.google.common.collect.EvictingQueue'
p2536
sg16
(lp2537
sg19
(lp2538
sg22
(lp2539
sg25
I0
sba(iArchitecture
Entity
p2540
(dp2541
g11
(lp2542
sg14
S'com.google.common.collect.FilteredMultimapValues'
p2543
sg16
(lp2544
sg19
(lp2545
sg22
(lp2546
sg25
I0
sba(iArchitecture
Entity
p2547
(dp2548
g11
(lp2549
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p2550
sg16
(lp2551
sg19
(lp2552
sg22
(lp2553
sg25
I0
sba(iArchitecture
Entity
p2554
(dp2555
g11
(lp2556
sg14
S'com.google.common.collect.RegularImmutableMap'
p2557
sg16
(lp2558
sg19
(lp2559
sg22
(lp2560
sg25
I0
sba(iArchitecture
Entity
p2561
(dp2562
g11
(lp2563
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p2564
sg16
(lp2565
sg19
(lp2566
sg22
(lp2567
sg25
I0
sba(iArchitecture
Entity
p2568
(dp2569
g11
(lp2570
sg14
S'com.google.common.eventbus.SubscriberExceptionHandler'
p2571
sg16
(lp2572
sg19
(lp2573
sg22
(lp2574
sg25
I0
sba(iArchitecture
Entity
p2575
(dp2576
g11
(lp2577
sg14
S'com.google.common.hash.Funnel'
p2578
sg16
(lp2579
sg19
(lp2580
sg22
(lp2581
sg25
I0
sba(iArchitecture
Entity
p2582
(dp2583
g11
(lp2584
sg14
S'com.google.common.io.InputSupplier'
p2585
sg16
(lp2586
sg19
(lp2587
sg22
(lp2588
sg25
I0
sba(iArchitecture
Entity
p2589
(dp2590
g11
(lp2591
sg14
S'com.google.common.util.concurrent.SmoothRateLimiter'
p2592
sg16
(lp2593
sg19
(lp2594
sg22
(lp2595
sg25
I0
sba(iArchitecture
Entity
p2596
(dp2597
g11
(lp2598
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p2599
sg16
(lp2600
sg19
(lp2601
sg22
(lp2602
sg25
I0
sbasg1017
(lp2603
g2480
ag2487
ag2494
ag2501
ag2508
ag2515
ag2522
ag2529
ag2536
ag2543
ag2550
ag2557
ag2564
ag2571
ag2578
ag2585
ag2592
ag2599
asg25
I0
sg1019
S'no_match'
p2604
sba(iArchitecture
Cluster
p2605
(dp2606
g7
(lp2607
(iArchitecture
Entity
p2608
(dp2609
g11
(lp2610
sg14
S'com.google.common.annotations.Beta'
p2611
sg16
(lp2612
sg19
(lp2613
sg22
(lp2614
sg25
I0
sba(iArchitecture
Entity
p2615
(dp2616
g11
(lp2617
sg14
S'com.google.common.annotations.GwtCompatible'
p2618
sg16
(lp2619
sg19
(lp2620
sg22
(lp2621
sg25
I0
sba(iArchitecture
Entity
p2622
(dp2623
g11
(lp2624
sg14
S'com.google.common.annotations.GwtIncompatible'
p2625
sg16
(lp2626
sg19
(lp2627
sg22
(lp2628
sg25
I0
sba(iArchitecture
Entity
p2629
(dp2630
g11
(lp2631
sg14
S'com.google.common.annotations.package-info'
p2632
sg16
(lp2633
sg19
(lp2634
sg22
(lp2635
sg25
I0
sba(iArchitecture
Entity
p2636
(dp2637
g11
(lp2638
g13
aV2037
p2639
asg14
S'com.google.common.base.Absent'
p2640
sg16
(lp2641
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2642
aVUncorrect hashCode() implementation at com.google.common.base.Absent and com.google.common.base.Present - for example if hashCode() of reference at Present return 0 then it hashCode() equal Absent.\u000a\u000aexample: Optional.absent() has same hash code as Optional.of(0.0) or Optional.of(0)\u000a
p2643
asg19
(lp2644
g21
a(lp2645
I0
aasg22
(lp2646
g24
aVOptional.hashCode()
p2647
asg25
I0
sba(iArchitecture
Entity
p2648
(dp2649
g11
(lp2650
sg14
S'com.google.common.base.Defaults'
p2651
sg16
(lp2652
sg19
(lp2653
sg22
(lp2654
sg25
I0
sba(iArchitecture
Entity
p2655
(dp2656
g11
(lp2657
sg14
S'com.google.common.base.Function'
p2658
sg16
(lp2659
sg19
(lp2660
sg22
(lp2661
sg25
I0
sba(iArchitecture
Entity
p2662
(dp2663
g11
(lp2664
g2639
ag2639
asg14
S'com.google.common.base.Optional'
p2665
sg16
(lp2666
VUncorrect hashCode() implementation at com.google.common.base.Absent and com.google.common.base.Present - for example if hashCode() of reference at Present return 0 then it hashCode() equal Absent.\u000a\u000aexample: Optional.absent() has same hash code as Optional.of(0.0) or Optional.of(0)\u000a
p2667
aVUncorrect hashCode() implementation at com.google.common.base.Absent and com.google.common.base.Present - for example if hashCode() of reference at Present return 0 then it hashCode() equal Absent.\u000a\u000aexample: Optional.absent() has same hash code as Optional.of(0.0) or Optional.of(0)\u000a
p2668
asg19
(lp2669
g2645
ag2645
asg22
(lp2670
g2647
ag2647
asg25
I0
sba(iArchitecture
Entity
p2671
(dp2672
g11
(lp2673
sg14
S'com.google.common.base.Platform'
p2674
sg16
(lp2675
sg19
(lp2676
sg22
(lp2677
sg25
I0
sba(iArchitecture
Entity
p2678
(dp2679
g11
(lp2680
sg14
S'com.google.common.base.Predicate'
p2681
sg16
(lp2682
sg19
(lp2683
sg22
(lp2684
sg25
I0
sba(iArchitecture
Entity
p2685
(dp2686
g11
(lp2687
sg14
S'com.google.common.base.Present'
p2688
sg16
(lp2689
sg19
(lp2690
sg22
(lp2691
sg25
I0
sba(iArchitecture
Entity
p2692
(dp2693
g11
(lp2694
sg14
S'com.google.common.base.StandardSystemProperty'
p2695
sg16
(lp2696
sg19
(lp2697
sg22
(lp2698
sg25
I0
sba(iArchitecture
Entity
p2699
(dp2700
g11
(lp2701
V2039
p2702
ag2702
ag2702
ag86
aV1312
p2703
ag2703
asg14
S'com.google.common.base.Stopwatch'
p2704
sg16
(lp2705
VHello, I was reading through the set of tests at https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/base/StopwatchTest.java , and I noticed there are two tests that appear to do the same thing - testElapsed_millis() and testElapsedMillis(). Is this expected? Could one test perhaps be an old test under a different naming convention? From the history it looks like they were added independently.\u000a\u000aThe contribution guide recommends creating an issue as the first step, so I thought I would ask.\u000a\u000aGitHub suggests that both functions are only called from guava-gwt/test/com/google/common/base/StopwatchTest_gwt.java . Would it be appropriate to create a pull request to remove one of the tests? (Or of course, feel free to simply remove one yourself if the workflow is easier; I just wanted to ask)\u000a\u000aCheers!\u000a
p2706
aVHello, I was reading through the set of tests at https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/base/StopwatchTest.java , and I noticed there are two tests that appear to do the same thing - testElapsed_millis() and testElapsedMillis(). Is this expected? Could one test perhaps be an old test under a different naming convention? From the history it looks like they were added independently.\u000a\u000aThe contribution guide recommends creating an issue as the first step, so I thought I would ask.\u000a\u000aGitHub suggests that both functions are only called from guava-gwt/test/com/google/common/base/StopwatchTest_gwt.java . Would it be appropriate to create a pull request to remove one of the tests? (Or of course, feel free to simply remove one yourself if the workflow is easier; I just wanted to ask)\u000a\u000aCheers!\u000a
p2707
aVHello, I was reading through the set of tests at https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/base/StopwatchTest.java , and I noticed there are two tests that appear to do the same thing - testElapsed_millis() and testElapsedMillis(). Is this expected? Could one test perhaps be an old test under a different naming convention? From the history it looks like they were added independently.\u000a\u000aThe contribution guide recommends creating an issue as the first step, so I thought I would ask.\u000a\u000aGitHub suggests that both functions are only called from guava-gwt/test/com/google/common/base/StopwatchTest_gwt.java . Would it be appropriate to create a pull request to remove one of the tests? (Or of course, feel free to simply remove one yourself if the workflow is easier; I just wanted to ask)\u000a\u000aCheers!\u000a
p2708
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2709
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1312) created by **vgal...@tennaxia.com** on 2013-02-28 at 01:05 PM_\u000a\u000a---\u000a\u000aHello,\u000a\u000aIt would be great if Stopwatch could be promoted in next release.\u000a\u000aThank you\u000a\u000avictor\u000a
p2710
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1312) created by **vgal...@tennaxia.com** on 2013-02-28 at 01:05 PM_\u000a\u000a---\u000a\u000aHello,\u000a\u000aIt would be great if Stopwatch could be promoted in next release.\u000a\u000aThank you\u000a\u000avictor\u000a
p2711
asg19
(lp2712
(lp2713
I6
aag2713
ag2713
ag91
a(lp2714
I7
aag2714
asg22
(lp2715
VPossible duplicate tests? - testElapsed_millis() and testElapsedMillis()
p2716
ag2716
ag2716
ag93
aVDe-@Beta Stopwatch
p2717
ag2717
asg25
I0
sba(iArchitecture
Entity
p2718
(dp2719
g11
(lp2720
sg14
S'com.google.common.base.Supplier'
p2721
sg16
(lp2722
sg19
(lp2723
sg22
(lp2724
sg25
I0
sba(iArchitecture
Entity
p2725
(dp2726
g11
(lp2727
sg14
S'com.google.common.base.Suppliers'
p2728
sg16
(lp2729
sg19
(lp2730
sg22
(lp2731
sg25
I0
sba(iArchitecture
Entity
p2732
(dp2733
g11
(lp2734
sg14
S'com.google.common.base.internal.Finalizer'
p2735
sg16
(lp2736
sg19
(lp2737
sg22
(lp2738
sg25
I0
sba(iArchitecture
Entity
p2739
(dp2740
g11
(lp2741
g13
ag13
aV2178
p2742
ag86
ag98
asg14
S'com.google.common.cache.Cache'
p2743
sg16
(lp2744
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2745
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2746
aVAs a novice of using Cache I think its statistic activation should be documented in the API of stats().\u000a\u000aFirst: recordStats() is to be isssued.\u000aSecond: stats() can not be instantiated because it is a factory for a final statistic.\u000a
p2747
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2748
aVWhen the cache is being cleared, either through `Cache.invalidateAll()` or `asMap().clear()`, the removal cause is always `EXPLICIT`. However the map may contain expired or GC'd entries that would be removed on the next maintenance cycle. The removal cause should indicate the actual state of the entry, not merely the action that triggered the eventual removal.\u000a\u000aDue to weak and soft references the key or value may be null. A listener should only expect to receive a null key or value if the cause is `COLLECTED`, as indicated by `RemovalNotification`:\u000a\u000a> The key and/or value may be null if they were already garbage collected.\u000a\u000aTherefore a listener might decide to inspect the properties without a null guard, leading to an NPE.\u000a\u000a``` java\u000a@Test\u000apublic void clear_expireAfterAccess() {\u000a  FakeTicker ticker = new FakeTicker();\u000a  RemovalListener<Integer, Integer> listener = Mockito.mock(RemovalListener.class);\u000a  ArgumentCaptor<RemovalNotification<Integer, Integer>> captor =\u000a      ArgumentCaptor.forClass(RemovalNotification.class);\u000a  Cache<Integer, Integer> cache = CacheBuilder.newBuilder()\u000a      .expireAfterAccess(1, TimeUnit.MINUTES)\u000a      .removalListener(listener)\u000a      .ticker(ticker)\u000a      .build();\u000a  cache.put(1, 1);\u000a  ticker.advance(10, TimeUnit.MINUTES);\u000a  cache.invalidateAll();\u000a\u000a  verify(listener).onRemoval(captor.capture());\u000a  assertThat(captor.getValue().getCause(), is(RemovalCause.EXPIRED));\u000a}\u000a```\u000a\u000aThe fix is to change `LocalCache$Segment#clear()` to inspect the key, value, and expiration status when determining the cause. \u000a\u000aUnfortunately this race condition is more widespread due to `enqueueNotification` not being tolerant to a garbage collection nulling out the key/value. Prior to constructing the notification, the method must take a strong reference to the key and value, check if either was collected, and if so publish a `COLLECTED` instead of the caller's cause.\u000a
p2749
asg19
(lp2750
g21
ag21
a(lp2751
I2
aag91
ag105
asg22
(lp2752
g24
ag24
aVCache.stats usage should be documented better
p2753
ag93
ag108
asg25
I0
sba(iArchitecture
Entity
p2754
(dp2755
g11
(lp2756
sg14
S'com.google.common.collect.AbstractBiMap'
p2757
sg16
(lp2758
sg19
(lp2759
sg22
(lp2760
sg25
I0
sba(iArchitecture
Entity
p2761
(dp2762
g11
(lp2763
sg14
S'com.google.common.collect.AbstractListMultimap'
p2764
sg16
(lp2765
sg19
(lp2766
sg22
(lp2767
sg25
I0
sba(iArchitecture
Entity
p2768
(dp2769
g11
(lp2770
sg14
S'com.google.common.collect.AbstractSequentialIterator'
p2771
sg16
(lp2772
sg19
(lp2773
sg22
(lp2774
sg25
I0
sba(iArchitecture
Entity
p2775
(dp2776
g11
(lp2777
sg14
S'com.google.common.collect.AbstractSetMultimap'
p2778
sg16
(lp2779
sg19
(lp2780
sg22
(lp2781
sg25
I0
sba(iArchitecture
Entity
p2782
(dp2783
g11
(lp2784
sg14
S'com.google.common.collect.AbstractSortedKeySortedSetMultimap'
p2785
sg16
(lp2786
sg19
(lp2787
sg22
(lp2788
sg25
I0
sba(iArchitecture
Entity
p2789
(dp2790
g11
(lp2791
sg14
S'com.google.common.collect.AbstractSortedSetMultimap'
p2792
sg16
(lp2793
sg19
(lp2794
sg22
(lp2795
sg25
I0
sba(iArchitecture
Entity
p2796
(dp2797
g11
(lp2798
sg14
S'com.google.common.collect.ArrayTable'
p2799
sg16
(lp2800
sg19
(lp2801
sg22
(lp2802
sg25
I0
sba(iArchitecture
Entity
p2803
(dp2804
g11
(lp2805
sg14
S'com.google.common.collect.BiMap'
p2806
sg16
(lp2807
sg19
(lp2808
sg22
(lp2809
sg25
I0
sba(iArchitecture
Entity
p2810
(dp2811
g11
(lp2812
sg14
S'com.google.common.collect.BoundType'
p2813
sg16
(lp2814
sg19
(lp2815
sg22
(lp2816
sg25
I0
sba(iArchitecture
Entity
p2817
(dp2818
g11
(lp2819
sg14
S'com.google.common.collect.ClassToInstanceMap'
p2820
sg16
(lp2821
sg19
(lp2822
sg22
(lp2823
sg25
I0
sba(iArchitecture
Entity
p2824
(dp2825
g11
(lp2826
g13
asg14
S'com.google.common.collect.EmptyImmutableListMultimap'
p2827
sg16
(lp2828
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2829
asg19
(lp2830
g21
asg22
(lp2831
g24
asg25
I0
sba(iArchitecture
Entity
p2832
(dp2833
g11
(lp2834
g13
asg14
S'com.google.common.collect.EmptyImmutableSetMultimap'
p2835
sg16
(lp2836
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2837
asg19
(lp2838
g21
asg22
(lp2839
g24
asg25
I0
sba(iArchitecture
Entity
p2840
(dp2841
g11
(lp2842
sg14
S'com.google.common.collect.EnumBiMap'
p2843
sg16
(lp2844
sg19
(lp2845
sg22
(lp2846
sg25
I0
sba(iArchitecture
Entity
p2847
(dp2848
g11
(lp2849
sg14
S'com.google.common.collect.EnumHashBiMap'
p2850
sg16
(lp2851
sg19
(lp2852
sg22
(lp2853
sg25
I0
sba(iArchitecture
Entity
p2854
(dp2855
g11
(lp2856
sg14
S'com.google.common.collect.EnumMultiset'
p2857
sg16
(lp2858
sg19
(lp2859
sg22
(lp2860
sg25
I0
sba(iArchitecture
Entity
p2861
(dp2862
g11
(lp2863
sg14
S'com.google.common.collect.FilteredEntrySetMultimap'
p2864
sg16
(lp2865
sg19
(lp2866
sg22
(lp2867
sg25
I0
sba(iArchitecture
Entity
p2868
(dp2869
g11
(lp2870
sg14
S'com.google.common.collect.FilteredKeyMultimap'
p2871
sg16
(lp2872
sg19
(lp2873
sg22
(lp2874
sg25
I0
sba(iArchitecture
Entity
p2875
(dp2876
g11
(lp2877
sg14
S'com.google.common.collect.FilteredKeySetMultimap'
p2878
sg16
(lp2879
sg19
(lp2880
sg22
(lp2881
sg25
I0
sba(iArchitecture
Entity
p2882
(dp2883
g11
(lp2884
sg14
S'com.google.common.collect.FilteredMultimap'
p2885
sg16
(lp2886
sg19
(lp2887
sg22
(lp2888
sg25
I0
sba(iArchitecture
Entity
p2889
(dp2890
g11
(lp2891
sg14
S'com.google.common.collect.ForwardingSetMultimap'
p2892
sg16
(lp2893
sg19
(lp2894
sg22
(lp2895
sg25
I0
sba(iArchitecture
Entity
p2896
(dp2897
g11
(lp2898
sg14
S'com.google.common.collect.ForwardingSortedSetMultimap'
p2899
sg16
(lp2900
sg19
(lp2901
sg22
(lp2902
sg25
I0
sba(iArchitecture
Entity
p2903
(dp2904
g11
(lp2905
sg14
S'com.google.common.collect.HashBasedTable'
p2906
sg16
(lp2907
sg19
(lp2908
sg22
(lp2909
sg25
I0
sba(iArchitecture
Entity
p2910
(dp2911
g11
(lp2912
sg14
S'com.google.common.collect.ImmutableBiMap'
p2913
sg16
(lp2914
sg19
(lp2915
sg22
(lp2916
sg25
I0
sba(iArchitecture
Entity
p2917
(dp2918
g11
(lp2919
sg14
S'com.google.common.collect.ImmutableClassToInstanceMap'
p2920
sg16
(lp2921
sg19
(lp2922
sg22
(lp2923
sg25
I0
sba(iArchitecture
Entity
p2924
(dp2925
g11
(lp2926
V2082
p2927
asg14
S'com.google.common.collect.ImmutableMap'
p2928
sg16
(lp2929
VI'm a [Spoon](https://github.com/INRIA/spoon) contributor, an open source project to analyse and transform Java source code. This project have a dependency to [JDT](https://eclipse.org/jdt/) to compile target source code. Recently, I tried to analyse Guava with Spoon but JDT can't compile our project.\u000a\u000aWhat is the problem?\u000a\u000aIn [`ImmutableMap`](https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableMap.java) class, we have these methods:\u000a\u000a``` java\u000a// If the map is an EnumMap, it must have key type K for some <K extends Enum<K>>.\u000a@SuppressWarnings({"unchecked", "rawtypes"})\u000aprivate static <K, V> ImmutableMap<K, V> copyOfEnumMapUnsafe(Map<? extends K, ? extends V> map) {\u000a    return copyOfEnumMap((EnumMap) map);\u000a}\u000a\u000aprivate static <K extends Enum<K>, V> ImmutableMap<K, V> copyOfEnumMap(EnumMap<K, ? extends V> original) {\u000a    EnumMap<K, V> copy = new EnumMap<K, V>(original);\u000a    for (Map.Entry<?, ?> entry : copy.entrySet()) {\u000a        checkEntryNotNull(entry.getKey(), entry.getValue());\u000a    }\u000a    return ImmutableEnumMap.asImmutable(copy);\u000a}\u000a```\u000a\u000aThis code is valid but there is an error from JDT:\u000a\u000a> Type mismatch: cannot convert from `<Enum<Enum<K>>>` to `<K>`\u000a\u000aBefore the creation of this issue, I reported the bug in the bugtracker of JDT (issue [here](https://bugs.eclipse.org/bugs/show_bug.cgi?id=469404)). In 2 words, the conclusion was that: "Yes, JDT don't support this usage of Java but there is a better practice". This better practice is explained [here](https://bugs.eclipse.org/bugs/show_bug.cgi?id=469404#c3):\u000a\u000a``` java\u000aprivate static <K extends Enum<K>> ImmutableMap<K, V> copyOfEnumMap(EnumMap<K, ? extends V> original) {\u000a    return copyOfEnumMap((EnumMap<K,?>) map);\u000a}\u000a```\u000a\u000aI tried some tricky solutions but, unfortunately, this solution can't be applied in your project. So I come to notify you that your project can't be compiled by JDT.\u000a
p2930
asg19
(lp2931
(lp2932
asg22
(lp2933
VGuava can't be compiled by JDT
p2934
asg25
I0
sba(iArchitecture
Entity
p2935
(dp2936
g11
(lp2937
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p2938
sg16
(lp2939
sg19
(lp2940
sg22
(lp2941
sg25
I0
sba(iArchitecture
Entity
p2942
(dp2943
g11
(lp2944
sg14
S'com.google.common.collect.ImmutableMapValues'
p2945
sg16
(lp2946
sg19
(lp2947
sg22
(lp2948
sg25
I0
sba(iArchitecture
Entity
p2949
(dp2950
g11
(lp2951
sg14
S'com.google.common.collect.ImmutableSetMultimap'
p2952
sg16
(lp2953
sg19
(lp2954
sg22
(lp2955
sg25
I0
sba(iArchitecture
Entity
p2956
(dp2957
g11
(lp2958
sg14
S'com.google.common.collect.ImmutableSortedMap'
p2959
sg16
(lp2960
sg19
(lp2961
sg22
(lp2962
sg25
I0
sba(iArchitecture
Entity
p2963
(dp2964
g11
(lp2965
sg14
S'com.google.common.collect.ImmutableSortedMapFauxverideShim'
p2966
sg16
(lp2967
sg19
(lp2968
sg22
(lp2969
sg25
I0
sba(iArchitecture
Entity
p2970
(dp2971
g11
(lp2972
sg14
S'com.google.common.collect.ImmutableSortedMultisetFauxverideShim'
p2973
sg16
(lp2974
sg19
(lp2975
sg22
(lp2976
sg25
I0
sba(iArchitecture
Entity
p2977
(dp2978
g11
(lp2979
sg14
S'com.google.common.collect.ImmutableSortedSetFauxverideShim'
p2980
sg16
(lp2981
sg19
(lp2982
sg22
(lp2983
sg25
I0
sba(iArchitecture
Entity
p2984
(dp2985
g11
(lp2986
sg14
S'com.google.common.collect.ImmutableTable'
p2987
sg16
(lp2988
sg19
(lp2989
sg22
(lp2990
sg25
I0
sba(iArchitecture
Entity
p2991
(dp2992
g11
(lp2993
sg14
S'com.google.common.collect.Interner'
p2994
sg16
(lp2995
sg19
(lp2996
sg22
(lp2997
sg25
I0
sba(iArchitecture
Entity
p2998
(dp2999
g11
(lp3000
sg14
S'com.google.common.collect.LinkedHashMultimap'
p3001
sg16
(lp3002
sg19
(lp3003
sg22
(lp3004
sg25
I0
sba(iArchitecture
Entity
p3005
(dp3006
g11
(lp3007
sg14
S'com.google.common.collect.ListMultimap'
p3008
sg16
(lp3009
sg19
(lp3010
sg22
(lp3011
sg25
I0
sba(iArchitecture
Entity
p3012
(dp3013
g11
(lp3014
sg14
S'com.google.common.collect.MapConstraint'
p3015
sg16
(lp3016
sg19
(lp3017
sg22
(lp3018
sg25
I0
sba(iArchitecture
Entity
p3019
(dp3020
g11
(lp3021
sg14
S'com.google.common.collect.MapConstraints'
p3022
sg16
(lp3023
sg19
(lp3024
sg22
(lp3025
sg25
I0
sba(iArchitecture
Entity
p3026
(dp3027
g11
(lp3028
sg14
S'com.google.common.collect.MapDifference'
p3029
sg16
(lp3030
sg19
(lp3031
sg22
(lp3032
sg25
I0
sba(iArchitecture
Entity
p3033
(dp3034
g11
(lp3035
g323
ag323
asg14
S'com.google.common.collect.Maps'
p3036
sg16
(lp3037
VWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p3038
aVWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p3039
asg19
(lp3040
g329
ag329
asg22
(lp3041
g331
ag331
asg25
I0
sba(iArchitecture
Entity
p3042
(dp3043
g11
(lp3044
sg14
S'com.google.common.collect.Multimap'
p3045
sg16
(lp3046
sg19
(lp3047
sg22
(lp3048
sg25
I0
sba(iArchitecture
Entity
p3049
(dp3050
g11
(lp3051
sg14
S'com.google.common.collect.Multimaps'
p3052
sg16
(lp3053
sg19
(lp3054
sg22
(lp3055
sg25
I0
sba(iArchitecture
Entity
p3056
(dp3057
g11
(lp3058
V1437
p3059
ag3059
asg14
S'com.google.common.collect.MutableClassToInstanceMap'
p3060
sg16
(lp3061
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1437) created by **mike.rumpf** on 2013-05-31 at 06:11 AM_\u000a\u000a---\u000a\u000aMutableClassToInstanceMap defines a serialVersionUID but itself does not implement Serializable. This is inconsistent to other guava collection types.\u000a
p3062
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1437) created by **mike.rumpf** on 2013-05-31 at 06:11 AM_\u000a\u000a---\u000a\u000aMutableClassToInstanceMap defines a serialVersionUID but itself does not implement Serializable. This is inconsistent to other guava collection types.\u000a
p3063
asg19
(lp3064
(lp3065
I0
aag3065
asg22
(lp3066
VMutableClassToInstanceMap should implement Serializable
p3067
ag3067
asg25
I0
sba(iArchitecture
Entity
p3068
(dp3069
g11
(lp3070
V1328
p3071
asg14
S'com.google.common.collect.Platform'
p3072
sg16
(lp3073
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1328) created by **gokhanoner** on 2013-03-11 at 03:23 PM_\u000a\u000a---\u000a\u000aHi,\u000a\u000aprivate static final ImmutableSet&lt;String> ISLEM_EB_FIELDS = ImmutableSet.of("ISLBLG");\u000a\u000aFor above desc, a singletonImmutableSet is created. When I try\u000a\u000aISLEM_EB_FIELDS.toArray(new String[0])\u000a\u000aon V13.0.1, ist OK but in v14, it throw class not found exception for\u000a\u000acom.google.common.collect.GwtPlatform.java\u000a\u000aI tried it on a GWT application.\u000a
p3074
asg19
(lp3075
(lp3076
I1
aasg22
(lp3077
VImmutableSet.toArray issue on singletonImmutableSet for v14
p3078
asg25
I0
sba(iArchitecture
Entity
p3079
(dp3080
g11
(lp3081
sg14
S'com.google.common.collect.Queues'
p3082
sg16
(lp3083
sg19
(lp3084
sg22
(lp3085
sg25
I0
sba(iArchitecture
Entity
p3086
(dp3087
g11
(lp3088
sg14
S'com.google.common.collect.RangeMap'
p3089
sg16
(lp3090
sg19
(lp3091
sg22
(lp3092
sg25
I0
sba(iArchitecture
Entity
p3093
(dp3094
g11
(lp3095
sg14
S'com.google.common.collect.RangeSet'
p3096
sg16
(lp3097
sg19
(lp3098
sg22
(lp3099
sg25
I0
sba(iArchitecture
Entity
p3100
(dp3101
g11
(lp3102
sg14
S'com.google.common.collect.RowSortedTable'
p3103
sg16
(lp3104
sg19
(lp3105
sg22
(lp3106
sg25
I0
sba(iArchitecture
Entity
p3107
(dp3108
g11
(lp3109
sg14
S'com.google.common.collect.SetMultimap'
p3110
sg16
(lp3111
sg19
(lp3112
sg22
(lp3113
sg25
I0
sba(iArchitecture
Entity
p3114
(dp3115
g11
(lp3116
V1001
p3117
ag3117
asg14
S'com.google.common.collect.Sets'
p3118
sg16
(lp3119
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1001) created by **kevinb@google.com** on 2012-05-11 at 04:32 PM_\u000a\u000a---\u000a\u000aNow that Guava requires JDK 6, we can probably reimplement Sets.newSetFromMap as a pass-through to Collections.newSetFromMap(), and deprecate it.  However,\u000a\u000a(a) no sense doing that until after the backport is worked out, and\u000a\u000a(b) I don't think we can do the usual "schedule for deletion in 18 months" thing. For the time being, I think we need to ensure that the relationship between guava and guava5 is that of a purely compatible superset. Otherwise libraries that build against guava5 in order to be available to their JDK 5 users may break when used by JDK 6 users (who use guava instead of guava5).\u000a\u000aNot sure for which other libraries we might have a similar situation.\u000a
p3120
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1001) created by **kevinb@google.com** on 2012-05-11 at 04:32 PM_\u000a\u000a---\u000a\u000aNow that Guava requires JDK 6, we can probably reimplement Sets.newSetFromMap as a pass-through to Collections.newSetFromMap(), and deprecate it.  However,\u000a\u000a(a) no sense doing that until after the backport is worked out, and\u000a\u000a(b) I don't think we can do the usual "schedule for deletion in 18 months" thing. For the time being, I think we need to ensure that the relationship between guava and guava5 is that of a purely compatible superset. Otherwise libraries that build against guava5 in order to be available to their JDK 5 users may break when used by JDK 6 users (who use guava instead of guava5).\u000a\u000aNot sure for which other libraries we might have a similar situation.\u000a
p3121
asg19
(lp3122
(lp3123
I0
aag3123
asg22
(lp3124
VReimplement and deprecate Sets.newSetFromMap (but no removing it)
p3125
ag3125
asg25
I0
sba(iArchitecture
Entity
p3126
(dp3127
g11
(lp3128
sg14
S'com.google.common.collect.SortedIterable'
p3129
sg16
(lp3130
sg19
(lp3131
sg22
(lp3132
sg25
I0
sba(iArchitecture
Entity
p3133
(dp3134
g11
(lp3135
sg14
S'com.google.common.collect.SortedIterables'
p3136
sg16
(lp3137
sg19
(lp3138
sg22
(lp3139
sg25
I0
sba(iArchitecture
Entity
p3140
(dp3141
g11
(lp3142
sg14
S'com.google.common.collect.SortedMapDifference'
p3143
sg16
(lp3144
sg19
(lp3145
sg22
(lp3146
sg25
I0
sba(iArchitecture
Entity
p3147
(dp3148
g11
(lp3149
sg14
S'com.google.common.collect.SortedMultisetBridge'
p3150
sg16
(lp3151
sg19
(lp3152
sg22
(lp3153
sg25
I0
sba(iArchitecture
Entity
p3154
(dp3155
g11
(lp3156
sg14
S'com.google.common.collect.SortedMultisets'
p3157
sg16
(lp3158
sg19
(lp3159
sg22
(lp3160
sg25
I0
sba(iArchitecture
Entity
p3161
(dp3162
g11
(lp3163
sg14
S'com.google.common.collect.SortedSetMultimap'
p3164
sg16
(lp3165
sg19
(lp3166
sg22
(lp3167
sg25
I0
sba(iArchitecture
Entity
p3168
(dp3169
g11
(lp3170
sg14
S'com.google.common.collect.SparseImmutableTable'
p3171
sg16
(lp3172
sg19
(lp3173
sg22
(lp3174
sg25
I0
sba(iArchitecture
Entity
p3175
(dp3176
g11
(lp3177
sg14
S'com.google.common.collect.Table'
p3178
sg16
(lp3179
sg19
(lp3180
sg22
(lp3181
sg25
I0
sba(iArchitecture
Entity
p3182
(dp3183
g11
(lp3184
sg14
S'com.google.common.collect.Tables'
p3185
sg16
(lp3186
sg19
(lp3187
sg22
(lp3188
sg25
I0
sba(iArchitecture
Entity
p3189
(dp3190
g11
(lp3191
sg14
S'com.google.common.collect.TreeBasedTable'
p3192
sg16
(lp3193
sg19
(lp3194
sg22
(lp3195
sg25
I0
sba(iArchitecture
Entity
p3196
(dp3197
g11
(lp3198
sg14
S'com.google.common.collect.TreeMultimap'
p3199
sg16
(lp3200
sg19
(lp3201
sg22
(lp3202
sg25
I0
sba(iArchitecture
Entity
p3203
(dp3204
g11
(lp3205
sg14
S'com.google.common.collect.WellBehavedMap'
p3206
sg16
(lp3207
sg19
(lp3208
sg22
(lp3209
sg25
I0
sba(iArchitecture
Entity
p3210
(dp3211
g11
(lp3212
sg14
S'com.google.common.eventbus.AllowConcurrentEvents'
p3213
sg16
(lp3214
sg19
(lp3215
sg22
(lp3216
sg25
I0
sba(iArchitecture
Entity
p3217
(dp3218
g11
(lp3219
sg14
S'com.google.common.eventbus.AnnotatedSubscriberFinder'
p3220
sg16
(lp3221
sg19
(lp3222
sg22
(lp3223
sg25
I0
sba(iArchitecture
Entity
p3224
(dp3225
g11
(lp3226
sg14
S'com.google.common.eventbus.DeadEvent'
p3227
sg16
(lp3228
sg19
(lp3229
sg22
(lp3230
sg25
I0
sba(iArchitecture
Entity
p3231
(dp3232
g11
(lp3233
sg14
S'com.google.common.eventbus.Subscribe'
p3234
sg16
(lp3235
sg19
(lp3236
sg22
(lp3237
sg25
I0
sba(iArchitecture
Entity
p3238
(dp3239
g11
(lp3240
sg14
S'com.google.common.eventbus.SubscriberExceptionContext'
p3241
sg16
(lp3242
sg19
(lp3243
sg22
(lp3244
sg25
I0
sba(iArchitecture
Entity
p3245
(dp3246
g11
(lp3247
sg14
S'com.google.common.eventbus.SubscriberFindingStrategy'
p3248
sg16
(lp3249
sg19
(lp3250
sg22
(lp3251
sg25
I0
sba(iArchitecture
Entity
p3252
(dp3253
g11
(lp3254
sg14
S'com.google.common.eventbus.SynchronizedEventSubscriber'
p3255
sg16
(lp3256
sg19
(lp3257
sg22
(lp3258
sg25
I0
sba(iArchitecture
Entity
p3259
(dp3260
g11
(lp3261
sg14
S'com.google.common.eventbus.package-info'
p3262
sg16
(lp3263
sg19
(lp3264
sg22
(lp3265
sg25
I0
sba(iArchitecture
Entity
p3266
(dp3267
g11
(lp3268
sg14
S'com.google.common.hash.package-info'
p3269
sg16
(lp3270
sg19
(lp3271
sg22
(lp3272
sg25
I0
sba(iArchitecture
Entity
p3273
(dp3274
g11
(lp3275
sg14
S'com.google.common.html.package-info'
p3276
sg16
(lp3277
sg19
(lp3278
sg22
(lp3279
sg25
I0
sba(iArchitecture
Entity
p3280
(dp3281
g11
(lp3282
sg14
S'com.google.common.io.Closer'
p3283
sg16
(lp3284
sg19
(lp3285
sg22
(lp3286
sg25
I0
sba(iArchitecture
Entity
p3287
(dp3288
g11
(lp3289
sg14
S'com.google.common.math.package-info'
p3290
sg16
(lp3291
sg19
(lp3292
sg22
(lp3293
sg25
I0
sba(iArchitecture
Entity
p3294
(dp3295
g11
(lp3296
sg14
S'com.google.common.net.MediaType'
p3297
sg16
(lp3298
sg19
(lp3299
sg22
(lp3300
sg25
I0
sba(iArchitecture
Entity
p3301
(dp3302
g11
(lp3303
sg14
S'com.google.common.primitives.Primitives'
p3304
sg16
(lp3305
sg19
(lp3306
sg22
(lp3307
sg25
I0
sba(iArchitecture
Entity
p3308
(dp3309
g11
(lp3310
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMap'
p3311
sg16
(lp3312
sg19
(lp3313
sg22
(lp3314
sg25
I0
sba(iArchitecture
Entity
p3315
(dp3316
g11
(lp3317
sg14
S'com.google.common.reflect.MutableTypeToInstanceMap'
p3318
sg16
(lp3319
sg19
(lp3320
sg22
(lp3321
sg25
I0
sba(iArchitecture
Entity
p3322
(dp3323
g11
(lp3324
sg14
S'com.google.common.reflect.TypeParameter'
p3325
sg16
(lp3326
sg19
(lp3327
sg22
(lp3328
sg25
I0
sba(iArchitecture
Entity
p3329
(dp3330
g11
(lp3331
V2158
p3332
asg14
S'com.google.common.reflect.TypeResolver'
p3333
sg16
(lp3334
VThe visitClass implementation in TypeResolver.populateTypeMappings has the following body:\u000a\u000a```\u000a  @Override void visitClass(Class<?> fromClass) {\u000a    // Can't map from a raw class to anything other than itself.\u000a    // You can't say "assuming String is Integer".\u000a    // And we don't support "assuming String is T"; user has to say "assuming T is String". \u000a    throw new IllegalArgumentException("No type mapping from " + fromClass);\u000a  }\u000a```\u000a\u000aIt would be great if the IllegalArgumentException message reported the type it's trying to convert to, as well as the one its converting from, for easier debugging should this exception be thrown.\u000a
p3335
asg19
(lp3336
(lp3337
I0
aasg22
(lp3338
VTypeVisitor.visitClass in TypeResolver.populateTypeMappings should report the to type as well as the from type
p3339
asg25
I0
sba(iArchitecture
Entity
p3340
(dp3341
g11
(lp3342
sg14
S'com.google.common.reflect.TypeToInstanceMap'
p3343
sg16
(lp3344
sg19
(lp3345
sg22
(lp3346
sg25
I0
sba(iArchitecture
Entity
p3347
(dp3348
g11
(lp3349
sg14
S'com.google.common.reflect.TypeToken'
p3350
sg16
(lp3351
sg19
(lp3352
sg22
(lp3353
sg25
I0
sba(iArchitecture
Entity
p3354
(dp3355
g11
(lp3356
sg14
S'com.google.common.reflect.TypeVisitor'
p3357
sg16
(lp3358
sg19
(lp3359
sg22
(lp3360
sg25
I0
sba(iArchitecture
Entity
p3361
(dp3362
g11
(lp3363
V1738
p3364
asg14
S'com.google.common.reflect.Types'
p3365
sg16
(lp3366
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1738) created by **socram8888** on 2014-04-24 at 10:38 AM_\u000a\u000a---\u000a\u000aApparently Oracle has added a new abstract method to TypeVariable (getAnnotatedBounds) which is not implemented.\u000a
p3367
asg19
(lp3368
(lp3369
I7
aasg22
(lp3370
VUnable to compile on Java 8
p3371
asg25
I0
sba(iArchitecture
Entity
p3372
(dp3373
g11
(lp3374
sg14
S'com.google.common.reflect.package-info'
p3375
sg16
(lp3376
sg19
(lp3377
sg22
(lp3378
sg25
I0
sba(iArchitecture
Entity
p3379
(dp3380
g11
(lp3381
sg14
S'com.google.common.util.concurrent.AsyncSettableFuture'
p3382
sg16
(lp3383
sg19
(lp3384
sg22
(lp3385
sg25
I0
sba(iArchitecture
Entity
p3386
(dp3387
g11
(lp3388
sg14
S'com.google.common.util.concurrent.AtomicLongMap'
p3389
sg16
(lp3390
sg19
(lp3391
sg22
(lp3392
sg25
I0
sba(iArchitecture
Entity
p3393
(dp3394
g11
(lp3395
sg14
S'com.google.common.util.concurrent.Atomics'
p3396
sg16
(lp3397
sg19
(lp3398
sg22
(lp3399
sg25
I0
sba(iArchitecture
Entity
p3400
(dp3401
g11
(lp3402
sg14
S'com.google.common.util.concurrent.CheckedFuture'
p3403
sg16
(lp3404
sg19
(lp3405
sg22
(lp3406
sg25
I0
sba(iArchitecture
Entity
p3407
(dp3408
g11
(lp3409
sg14
S'com.google.common.util.concurrent.ExecutionList'
p3410
sg16
(lp3411
sg19
(lp3412
sg22
(lp3413
sg25
I0
sba(iArchitecture
Entity
p3414
(dp3415
g11
(lp3416
sg14
S'com.google.common.util.concurrent.FakeTimeLimiter'
p3417
sg16
(lp3418
sg19
(lp3419
sg22
(lp3420
sg25
I0
sba(iArchitecture
Entity
p3421
(dp3422
g11
(lp3423
sg14
S'com.google.common.util.concurrent.FutureCallback'
p3424
sg16
(lp3425
sg19
(lp3426
sg22
(lp3427
sg25
I0
sba(iArchitecture
Entity
p3428
(dp3429
g11
(lp3430
sg14
S'com.google.common.util.concurrent.FutureFallback'
p3431
sg16
(lp3432
sg19
(lp3433
sg22
(lp3434
sg25
I0
sba(iArchitecture
Entity
p3435
(dp3436
g11
(lp3437
sg14
S'com.google.common.util.concurrent.ListenableFuture'
p3438
sg16
(lp3439
sg19
(lp3440
sg22
(lp3441
sg25
I0
sba(iArchitecture
Entity
p3442
(dp3443
g11
(lp3444
sg14
S'com.google.common.util.concurrent.ListenableFutureTask'
p3445
sg16
(lp3446
sg19
(lp3447
sg22
(lp3448
sg25
I0
sba(iArchitecture
Entity
p3449
(dp3450
g11
(lp3451
sg14
S'com.google.common.util.concurrent.ListenableScheduledFuture'
p3452
sg16
(lp3453
sg19
(lp3454
sg22
(lp3455
sg25
I0
sba(iArchitecture
Entity
p3456
(dp3457
g11
(lp3458
sg14
S'com.google.common.util.concurrent.ListeningScheduledExecutorService'
p3459
sg16
(lp3460
sg19
(lp3461
sg22
(lp3462
sg25
I0
sba(iArchitecture
Entity
p3463
(dp3464
g11
(lp3465
V2133
p3466
asg14
S'com.google.common.util.concurrent.MoreExecutors'
p3467
sg16
(lp3468
V`MoreExecutors.java:541`\u000a\u000a``` java\u000a    @Override\u000a    public <V> ListenableScheduledFuture<V> schedule(\u000a        Callable<V> callable, long delay, TimeUnit unit) {\u000a      TrustedListenableFutureTask<V> task = TrustedListenableFutureTask.create(callable);\u000a      ScheduledFuture<?> scheduled = delegate.schedule(task, delay, unit);\u000a      return new ListenableScheduledTask<V>(task, scheduled);\u000a    }\u000a```\u000a\u000a`delegate.schedule(Runnable...)` is invoked here instead of the (intended?) `delegate.schedule(Callable<V>...)`. As a result, the `ScheduledListeningDecorator` is unusable for `Callable<?>`.\u000a
p3469
asg19
(lp3470
(lp3471
I2
aasg22
(lp3472
VBUG: ScheduledListeningDecorator schedule(Callable<V>....) delegates to schedule(Runnable
p3473
asg25
I0
sba(iArchitecture
Entity
p3474
(dp3475
g11
(lp3476
sg14
S'com.google.common.util.concurrent.SerializingExecutor'
p3477
sg16
(lp3478
sg19
(lp3479
sg22
(lp3480
sg25
I0
sba(iArchitecture
Entity
p3481
(dp3482
g11
(lp3483
sg14
S'com.google.common.util.concurrent.SettableFuture'
p3484
sg16
(lp3485
sg19
(lp3486
sg22
(lp3487
sg25
I0
sba(iArchitecture
Entity
p3488
(dp3489
g11
(lp3490
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiter'
p3491
sg16
(lp3492
sg19
(lp3493
sg22
(lp3494
sg25
I0
sba(iArchitecture
Entity
p3495
(dp3496
g11
(lp3497
sg14
S'com.google.common.util.concurrent.TimeLimiter'
p3498
sg16
(lp3499
sg19
(lp3500
sg22
(lp3501
sg25
I0
sba(iArchitecture
Entity
p3502
(dp3503
g11
(lp3504
sg14
S'com.google.common.util.concurrent.package-info'
p3505
sg16
(lp3506
sg19
(lp3507
sg22
(lp3508
sg25
I0
sba(iArchitecture
Entity
p3509
(dp3510
g11
(lp3511
sg14
S'com.google.common.xml.package-info'
p3512
sg16
(lp3513
sg19
(lp3514
sg22
(lp3515
sg25
I0
sbasg1017
(lp3516
g2611
ag2618
ag2625
ag2632
ag2640
ag2651
ag2658
ag2665
ag2674
ag2681
ag2688
ag2695
ag2704
ag2721
ag2728
ag2735
ag2743
ag2757
ag2764
ag2771
ag2778
ag2785
ag2792
ag2799
ag2806
ag2813
ag2820
ag2827
ag2835
ag2843
ag2850
ag2857
ag2864
ag2871
ag2878
ag2885
ag2892
ag2899
ag2906
ag2913
ag2920
ag2928
ag2938
ag2945
ag2952
ag2959
ag2966
ag2973
ag2980
ag2987
ag2994
ag3001
ag3008
ag3015
ag3022
ag3029
ag3036
ag3045
ag3052
ag3060
ag3072
ag3082
ag3089
ag3096
ag3103
ag3110
ag3118
ag3129
ag3136
ag3143
ag3150
ag3157
ag3164
ag3171
ag3178
ag3185
ag3192
ag3199
ag3206
ag3213
ag3220
ag3227
ag3234
ag3241
ag3248
ag3255
ag3262
ag3269
ag3276
ag3283
ag3290
ag3297
ag3304
ag3311
ag3318
ag3325
ag3333
ag3343
ag3350
ag3357
ag3365
ag3375
ag3382
ag3389
ag3396
ag3403
ag3410
ag3417
ag3424
ag3431
ag3438
ag3445
ag3452
ag3459
ag3467
ag3477
ag3484
ag3491
ag3498
ag3505
ag3512
asg25
I0
sg1019
S'sql'
p3517
sbasS'target_sub'
p3518
S''
p3519
sg1017
(lp3520
sS'is_component_arch'
p3521
I00
sg1019
S'v18.0'
p3522
sba(iArchitecture
Architecture
p3523
(dp3524
g3
(lp3525
(iArchitecture
Cluster
p3526
(dp3527
g7
(lp3528
(iArchitecture
Entity
p3529
(dp3530
g11
(lp3531
sg14
S'com.google.common.base.AbstractIteratorTest'
p3532
sg16
(lp3533
sg19
(lp3534
sg22
(lp3535
sg25
I0
sba(iArchitecture
Entity
p3536
(dp3537
g11
(lp3538
sg14
S'com.google.common.base.AsciiBenchmark'
p3539
sg16
(lp3540
sg19
(lp3541
sg22
(lp3542
sg25
I0
sba(iArchitecture
Entity
p3543
(dp3544
g11
(lp3545
sg14
S'com.google.common.base.CaseFormatTest'
p3546
sg16
(lp3547
sg19
(lp3548
sg22
(lp3549
sg25
I0
sba(iArchitecture
Entity
p3550
(dp3551
g11
(lp3552
V2410
p3553
asg14
S'com.google.common.base.CharMatcher'
p3554
sg16
(lp3555
VThe second sentence of the JavaDoc for `CharMatcher.matchesNoneOf` is not correct: "The default implementation iterates over the sequence, invoking matches(char) for each character, until this returns false or the end is reached."  This should be "until this returns true or the end is reached".  It appears the incorrect line may have been copied from `CharMatcher.matchesAllOf`\u000a\u000aSimilarly, the "returns" section currently says: "true if this matcher matches every character in the sequence, including when the sequence is empty" (same as `matchesAllOf`). It should say something like "true if this matches matches no character in the sequence, including when the sequence is empty".\u000a
p3556
asg19
(lp3557
(lp3558
I2
aasg22
(lp3559
VCharMatcher.matchesNoneOf JavaDoc is incorrect
p3560
asg25
I0
sba(iArchitecture
Entity
p3561
(dp3562
g11
(lp3563
sg14
S'com.google.common.base.CharMatcherBenchmark'
p3564
sg16
(lp3565
sg19
(lp3566
sg22
(lp3567
sg25
I0
sba(iArchitecture
Entity
p3568
(dp3569
g11
(lp3570
sg14
S'com.google.common.base.CharMatcherTest'
p3571
sg16
(lp3572
sg19
(lp3573
sg22
(lp3574
sg25
I0
sba(iArchitecture
Entity
p3575
(dp3576
g11
(lp3577
sg14
S'com.google.common.base.ConverterTest'
p3578
sg16
(lp3579
sg19
(lp3580
sg22
(lp3581
sg25
I0
sba(iArchitecture
Entity
p3582
(dp3583
g11
(lp3584
sg14
S'com.google.common.base.Equivalence'
p3585
sg16
(lp3586
sg19
(lp3587
sg22
(lp3588
sg25
I0
sba(iArchitecture
Entity
p3589
(dp3590
g11
(lp3591
sg14
S'com.google.common.base.EquivalenceTest'
p3592
sg16
(lp3593
sg19
(lp3594
sg22
(lp3595
sg25
I0
sba(iArchitecture
Entity
p3596
(dp3597
g11
(lp3598
sg14
S'com.google.common.base.Functions'
p3599
sg16
(lp3600
sg19
(lp3601
sg22
(lp3602
sg25
I0
sba(iArchitecture
Entity
p3603
(dp3604
g11
(lp3605
sg14
S'com.google.common.base.FunctionsTest'
p3606
sg16
(lp3607
sg19
(lp3608
sg22
(lp3609
sg25
I0
sba(iArchitecture
Entity
p3610
(dp3611
g11
(lp3612
sg14
S'com.google.common.base.JoinerBenchmark'
p3613
sg16
(lp3614
sg19
(lp3615
sg22
(lp3616
sg25
I0
sba(iArchitecture
Entity
p3617
(dp3618
g11
(lp3619
sg14
S'com.google.common.base.JoinerTest'
p3620
sg16
(lp3621
sg19
(lp3622
sg22
(lp3623
sg25
I0
sba(iArchitecture
Entity
p3624
(dp3625
g11
(lp3626
sg14
S'com.google.common.base.LazyStackTraceBenchmark'
p3627
sg16
(lp3628
sg19
(lp3629
sg22
(lp3630
sg25
I0
sba(iArchitecture
Entity
p3631
(dp3632
g11
(lp3633
sg14
S'com.google.common.base.ObjectsBenchmark'
p3634
sg16
(lp3635
sg19
(lp3636
sg22
(lp3637
sg25
I0
sba(iArchitecture
Entity
p3638
(dp3639
g11
(lp3640
sg14
S'com.google.common.base.OptionalTest'
p3641
sg16
(lp3642
sg19
(lp3643
sg22
(lp3644
sg25
I0
sba(iArchitecture
Entity
p3645
(dp3646
g11
(lp3647
sg14
S'com.google.common.base.PairwiseEquivalence'
p3648
sg16
(lp3649
sg19
(lp3650
sg22
(lp3651
sg25
I0
sba(iArchitecture
Entity
p3652
(dp3653
g11
(lp3654
sg14
S'com.google.common.base.Preconditions'
p3655
sg16
(lp3656
sg19
(lp3657
sg22
(lp3658
sg25
I0
sba(iArchitecture
Entity
p3659
(dp3660
g11
(lp3661
sg14
S'com.google.common.base.PreconditionsTest'
p3662
sg16
(lp3663
sg19
(lp3664
sg22
(lp3665
sg25
I0
sba(iArchitecture
Entity
p3666
(dp3667
g11
(lp3668
V1444
p3669
ag3669
asg14
S'com.google.common.base.Predicates'
p3670
sg16
(lp3671
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p3672
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p3673
asg19
(lp3674
(lp3675
I1
aag3675
asg22
(lp3676
VPredicates.assignableFrom is named backward, and its doc is backward, too
p3677
ag3677
asg25
I0
sba(iArchitecture
Entity
p3678
(dp3679
g11
(lp3680
g3669
asg14
S'com.google.common.base.PredicatesTest'
p3681
sg16
(lp3682
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p3683
asg19
(lp3684
g3675
asg22
(lp3685
g3677
asg25
I0
sba(iArchitecture
Entity
p3686
(dp3687
g11
(lp3688
sg14
S'com.google.common.base.SmallCharMatcher'
p3689
sg16
(lp3690
sg19
(lp3691
sg22
(lp3692
sg25
I0
sba(iArchitecture
Entity
p3693
(dp3694
g11
(lp3695
sg14
S'com.google.common.base.Splitter'
p3696
sg16
(lp3697
sg19
(lp3698
sg22
(lp3699
sg25
I0
sba(iArchitecture
Entity
p3700
(dp3701
g11
(lp3702
sg14
S'com.google.common.base.SplitterBenchmark'
p3703
sg16
(lp3704
sg19
(lp3705
sg22
(lp3706
sg25
I0
sba(iArchitecture
Entity
p3707
(dp3708
g11
(lp3709
sg14
S'com.google.common.base.SplitterTest'
p3710
sg16
(lp3711
sg19
(lp3712
sg22
(lp3713
sg25
I0
sba(iArchitecture
Entity
p3714
(dp3715
g11
(lp3716
V2365
p3717
ag3717
asg14
S'com.google.common.base.StopwatchTest'
p3718
sg16
(lp3719
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p3720
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p3721
asg19
(lp3722
(lp3723
I1
aag3723
asg22
(lp3724
VImplement Stopwatch.toString() under GWT
p3725
ag3725
asg25
I0
sba(iArchitecture
Entity
p3726
(dp3727
g11
(lp3728
sg14
S'com.google.common.base.Strings'
p3729
sg16
(lp3730
sg19
(lp3731
sg22
(lp3732
sg25
I0
sba(iArchitecture
Entity
p3733
(dp3734
g11
(lp3735
sg14
S'com.google.common.base.StringsRepeatBenchmark'
p3736
sg16
(lp3737
sg19
(lp3738
sg22
(lp3739
sg25
I0
sba(iArchitecture
Entity
p3740
(dp3741
g11
(lp3742
sg14
S'com.google.common.base.SuppliersTest'
p3743
sg16
(lp3744
sg19
(lp3745
sg22
(lp3746
sg25
I0
sba(iArchitecture
Entity
p3747
(dp3748
g11
(lp3749
V2457
p3750
ag3750
asg14
S'com.google.common.base.ThrowablesTest'
p3751
sg16
(lp3752
V
p3753
ag3753
asg19
(lp3754
(lp3755
I0
aag3755
asg22
(lp3756
VEmulate Throwables in GWT
p3757
ag3757
asg25
I0
sba(iArchitecture
Entity
p3758
(dp3759
g11
(lp3760
sg14
S'com.google.common.base.ToStringHelperBenchmark'
p3761
sg16
(lp3762
sg19
(lp3763
sg22
(lp3764
sg25
I0
sba(iArchitecture
Entity
p3765
(dp3766
g11
(lp3767
sg14
S'com.google.common.base.ToStringHelperTest'
p3768
sg16
(lp3769
sg19
(lp3770
sg22
(lp3771
sg25
I0
sba(iArchitecture
Entity
p3772
(dp3773
g11
(lp3774
sg14
S'com.google.common.base.VerifyTest'
p3775
sg16
(lp3776
sg19
(lp3777
sg22
(lp3778
sg25
I0
sba(iArchitecture
Entity
p3779
(dp3780
g11
(lp3781
sg14
S'com.google.common.base.WhitespaceMatcherBenchmark'
p3782
sg16
(lp3783
sg19
(lp3784
sg22
(lp3785
sg25
I0
sba(iArchitecture
Entity
p3786
(dp3787
g11
(lp3788
sg14
S'com.google.common.cache.AbstractCacheTest'
p3789
sg16
(lp3790
sg19
(lp3791
sg22
(lp3792
sg25
I0
sba(iArchitecture
Entity
p3793
(dp3794
g11
(lp3795
sg14
S'com.google.common.cache.AbstractLoadingCacheTest'
p3796
sg16
(lp3797
sg19
(lp3798
sg22
(lp3799
sg25
I0
sba(iArchitecture
Entity
p3800
(dp3801
g11
(lp3802
sg14
S'com.google.common.cache.CacheBuilderFactory'
p3803
sg16
(lp3804
sg19
(lp3805
sg22
(lp3806
sg25
I0
sba(iArchitecture
Entity
p3807
(dp3808
g11
(lp3809
sg14
S'com.google.common.cache.CacheBuilderSpec'
p3810
sg16
(lp3811
sg19
(lp3812
sg22
(lp3813
sg25
I0
sba(iArchitecture
Entity
p3814
(dp3815
g11
(lp3816
sg14
S'com.google.common.cache.CacheBuilderSpecTest'
p3817
sg16
(lp3818
sg19
(lp3819
sg22
(lp3820
sg25
I0
sba(iArchitecture
Entity
p3821
(dp3822
g11
(lp3823
sg14
S'com.google.common.cache.CacheBuilderTest'
p3824
sg16
(lp3825
sg19
(lp3826
sg22
(lp3827
sg25
I0
sba(iArchitecture
Entity
p3828
(dp3829
g11
(lp3830
sg14
S'com.google.common.cache.CacheLoadingTest'
p3831
sg16
(lp3832
sg19
(lp3833
sg22
(lp3834
sg25
I0
sba(iArchitecture
Entity
p3835
(dp3836
g11
(lp3837
sg14
S'com.google.common.cache.CacheStatsTest'
p3838
sg16
(lp3839
sg19
(lp3840
sg22
(lp3841
sg25
I0
sba(iArchitecture
Entity
p3842
(dp3843
g11
(lp3844
sg14
S'com.google.common.cache.ChainBenchmark'
p3845
sg16
(lp3846
sg19
(lp3847
sg22
(lp3848
sg25
I0
sba(iArchitecture
Entity
p3849
(dp3850
g11
(lp3851
sg14
S'com.google.common.cache.EmptyCachesTest'
p3852
sg16
(lp3853
sg19
(lp3854
sg22
(lp3855
sg25
I0
sba(iArchitecture
Entity
p3856
(dp3857
g11
(lp3858
sg14
S'com.google.common.cache.ForwardingCacheTest'
p3859
sg16
(lp3860
sg19
(lp3861
sg22
(lp3862
sg25
I0
sba(iArchitecture
Entity
p3863
(dp3864
g11
(lp3865
sg14
S'com.google.common.cache.ForwardingLoadingCacheTest'
p3866
sg16
(lp3867
sg19
(lp3868
sg22
(lp3869
sg25
I0
sba(iArchitecture
Entity
p3870
(dp3871
g11
(lp3872
sg14
S'com.google.common.cache.LoadingCacheSingleThreadBenchmark'
p3873
sg16
(lp3874
sg19
(lp3875
sg22
(lp3876
sg25
I0
sba(iArchitecture
Entity
p3877
(dp3878
g11
(lp3879
sg14
S'com.google.common.cache.LocalCache'
p3880
sg16
(lp3881
sg19
(lp3882
sg22
(lp3883
sg25
I0
sba(iArchitecture
Entity
p3884
(dp3885
g11
(lp3886
sg14
S'com.google.common.cache.LocalCacheTest'
p3887
sg16
(lp3888
sg19
(lp3889
sg22
(lp3890
sg25
I0
sba(iArchitecture
Entity
p3891
(dp3892
g11
(lp3893
sg14
S'com.google.common.cache.LongAdder'
p3894
sg16
(lp3895
sg19
(lp3896
sg22
(lp3897
sg25
I0
sba(iArchitecture
Entity
p3898
(dp3899
g11
(lp3900
sg14
S'com.google.common.cache.MapMakerComparisonBenchmark'
p3901
sg16
(lp3902
sg19
(lp3903
sg22
(lp3904
sg25
I0
sba(iArchitecture
Entity
p3905
(dp3906
g11
(lp3907
sg14
S'com.google.common.cache.SegmentBenchmark'
p3908
sg16
(lp3909
sg19
(lp3910
sg22
(lp3911
sg25
I0
sba(iArchitecture
Entity
p3912
(dp3913
g11
(lp3914
sg14
S'com.google.common.cache.TestingWeighers'
p3915
sg16
(lp3916
sg19
(lp3917
sg22
(lp3918
sg25
I0
sba(iArchitecture
Entity
p3919
(dp3920
g11
(lp3921
sg14
S'com.google.common.collect.AbstractBiMap'
p3922
sg16
(lp3923
sg19
(lp3924
sg22
(lp3925
sg25
I0
sba(iArchitecture
Entity
p3926
(dp3927
g11
(lp3928
sg14
S'com.google.common.collect.AbstractBiMapTest'
p3929
sg16
(lp3930
sg19
(lp3931
sg22
(lp3932
sg25
I0
sba(iArchitecture
Entity
p3933
(dp3934
g11
(lp3935
sg14
S'com.google.common.collect.AbstractImmutableSetTest'
p3936
sg16
(lp3937
sg19
(lp3938
sg22
(lp3939
sg25
I0
sba(iArchitecture
Entity
p3940
(dp3941
g11
(lp3942
sg14
S'com.google.common.collect.AbstractImmutableTableTest'
p3943
sg16
(lp3944
sg19
(lp3945
sg22
(lp3946
sg25
I0
sba(iArchitecture
Entity
p3947
(dp3948
g11
(lp3949
sg14
S'com.google.common.collect.AbstractIndexedListIterator'
p3950
sg16
(lp3951
sg19
(lp3952
sg22
(lp3953
sg25
I0
sba(iArchitecture
Entity
p3954
(dp3955
g11
(lp3956
sg14
S'com.google.common.collect.AbstractIteratorTest'
p3957
sg16
(lp3958
sg19
(lp3959
sg22
(lp3960
sg25
I0
sba(iArchitecture
Entity
p3961
(dp3962
g11
(lp3963
sg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p3964
sg16
(lp3965
sg19
(lp3966
sg22
(lp3967
sg25
I0
sba(iArchitecture
Entity
p3968
(dp3969
g11
(lp3970
sg14
S'com.google.common.collect.AbstractMapBasedMultiset'
p3971
sg16
(lp3972
sg19
(lp3973
sg22
(lp3974
sg25
I0
sba(iArchitecture
Entity
p3975
(dp3976
g11
(lp3977
sg14
S'com.google.common.collect.AbstractMultimap'
p3978
sg16
(lp3979
sg19
(lp3980
sg22
(lp3981
sg25
I0
sba(iArchitecture
Entity
p3982
(dp3983
g11
(lp3984
sg14
S'com.google.common.collect.AbstractMultiset'
p3985
sg16
(lp3986
sg19
(lp3987
sg22
(lp3988
sg25
I0
sba(iArchitecture
Entity
p3989
(dp3990
g11
(lp3991
sg14
S'com.google.common.collect.AbstractNavigableMap'
p3992
sg16
(lp3993
sg19
(lp3994
sg22
(lp3995
sg25
I0
sba(iArchitecture
Entity
p3996
(dp3997
g11
(lp3998
sg14
S'com.google.common.collect.AbstractRangeSet'
p3999
sg16
(lp4000
sg19
(lp4001
sg22
(lp4002
sg25
I0
sba(iArchitecture
Entity
p4003
(dp4004
g11
(lp4005
sg14
S'com.google.common.collect.AbstractSequentialIteratorTest'
p4006
sg16
(lp4007
sg19
(lp4008
sg22
(lp4009
sg25
I0
sba(iArchitecture
Entity
p4010
(dp4011
g11
(lp4012
sg14
S'com.google.common.collect.AbstractTable'
p4013
sg16
(lp4014
sg19
(lp4015
sg22
(lp4016
sg25
I0
sba(iArchitecture
Entity
p4017
(dp4018
g11
(lp4019
sg14
S'com.google.common.collect.AbstractTableReadTest'
p4020
sg16
(lp4021
sg19
(lp4022
sg22
(lp4023
sg25
I0
sba(iArchitecture
Entity
p4024
(dp4025
g11
(lp4026
sg14
S'com.google.common.collect.ArrayListMultimapTest'
p4027
sg16
(lp4028
sg19
(lp4029
sg22
(lp4030
sg25
I0
sba(iArchitecture
Entity
p4031
(dp4032
g11
(lp4033
sg14
S'com.google.common.collect.ArrayTableTest'
p4034
sg16
(lp4035
sg19
(lp4036
sg22
(lp4037
sg25
I0
sba(iArchitecture
Entity
p4038
(dp4039
g11
(lp4040
sg14
S'com.google.common.collect.ArrayTableTest_gwt'
p4041
sg16
(lp4042
sg19
(lp4043
sg22
(lp4044
sg25
I0
sba(iArchitecture
Entity
p4045
(dp4046
g11
(lp4047
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p4048
sg16
(lp4049
sg19
(lp4050
sg22
(lp4051
sg25
I0
sba(iArchitecture
Entity
p4052
(dp4053
g11
(lp4054
sg14
S'com.google.common.collect.BinaryTreeTraverserBenchmark'
p4055
sg16
(lp4056
sg19
(lp4057
sg22
(lp4058
sg25
I0
sba(iArchitecture
Entity
p4059
(dp4060
g11
(lp4061
sg14
S'com.google.common.collect.CartesianList'
p4062
sg16
(lp4063
sg19
(lp4064
sg22
(lp4065
sg25
I0
sba(iArchitecture
Entity
p4066
(dp4067
g11
(lp4068
sg14
S'com.google.common.collect.CollectionBenchmarkSampleData'
p4069
sg16
(lp4070
sg19
(lp4071
sg22
(lp4072
sg25
I0
sba(iArchitecture
Entity
p4073
(dp4074
g11
(lp4075
sg14
S'com.google.common.collect.Collections2'
p4076
sg16
(lp4077
sg19
(lp4078
sg22
(lp4079
sg25
I0
sba(iArchitecture
Entity
p4080
(dp4081
g11
(lp4082
sg14
S'com.google.common.collect.Collections2Test'
p4083
sg16
(lp4084
sg19
(lp4085
sg22
(lp4086
sg25
I0
sba(iArchitecture
Entity
p4087
(dp4088
g11
(lp4089
sg14
S'com.google.common.collect.Collections2Test_gwt'
p4090
sg16
(lp4091
sg19
(lp4092
sg22
(lp4093
sg25
I0
sba(iArchitecture
Entity
p4094
(dp4095
g11
(lp4096
sg14
S'com.google.common.collect.ComparatorDelegationOverheadBenchmark'
p4097
sg16
(lp4098
sg19
(lp4099
sg22
(lp4100
sg25
I0
sba(iArchitecture
Entity
p4101
(dp4102
g11
(lp4103
sg14
S'com.google.common.collect.ComparisonChain'
p4104
sg16
(lp4105
sg19
(lp4106
sg22
(lp4107
sg25
I0
sba(iArchitecture
Entity
p4108
(dp4109
g11
(lp4110
sg14
S'com.google.common.collect.ComparisonChainTest'
p4111
sg16
(lp4112
sg19
(lp4113
sg22
(lp4114
sg25
I0
sba(iArchitecture
Entity
p4115
(dp4116
g11
(lp4117
sg14
S'com.google.common.collect.CompoundOrdering'
p4118
sg16
(lp4119
sg19
(lp4120
sg22
(lp4121
sg25
I0
sba(iArchitecture
Entity
p4122
(dp4123
g11
(lp4124
sg14
S'com.google.common.collect.ComputingConcurrentHashMap'
p4125
sg16
(lp4126
sg19
(lp4127
sg22
(lp4128
sg25
I0
sba(iArchitecture
Entity
p4129
(dp4130
g11
(lp4131
sg14
S'com.google.common.collect.ConcurrentHashMultiset'
p4132
sg16
(lp4133
sg19
(lp4134
sg22
(lp4135
sg25
I0
sba(iArchitecture
Entity
p4136
(dp4137
g11
(lp4138
sg14
S'com.google.common.collect.ConcurrentHashMultisetBasherTest'
p4139
sg16
(lp4140
sg19
(lp4141
sg22
(lp4142
sg25
I0
sba(iArchitecture
Entity
p4143
(dp4144
g11
(lp4145
sg14
S'com.google.common.collect.ConcurrentHashMultisetBenchmark'
p4146
sg16
(lp4147
sg19
(lp4148
sg22
(lp4149
sg25
I0
sba(iArchitecture
Entity
p4150
(dp4151
g11
(lp4152
sg14
S'com.google.common.collect.ConcurrentHashMultisetTest'
p4153
sg16
(lp4154
sg19
(lp4155
sg22
(lp4156
sg25
I0
sba(iArchitecture
Entity
p4157
(dp4158
g11
(lp4159
sg14
S'com.google.common.collect.ConstrainedMapImplementsMapTest'
p4160
sg16
(lp4161
sg19
(lp4162
sg22
(lp4163
sg25
I0
sba(iArchitecture
Entity
p4164
(dp4165
g11
(lp4166
sg14
S'com.google.common.collect.ConstrainedMapImplementsMapTest_gwt'
p4167
sg16
(lp4168
sg19
(lp4169
sg22
(lp4170
sg25
I0
sba(iArchitecture
Entity
p4171
(dp4172
g11
(lp4173
sg14
S'com.google.common.collect.ConstrainedMultimapAsMapImplementsMapTest_gwt'
p4174
sg16
(lp4175
sg19
(lp4176
sg22
(lp4177
sg25
I0
sba(iArchitecture
Entity
p4178
(dp4179
g11
(lp4180
sg14
S'com.google.common.collect.ContiguousSet'
p4181
sg16
(lp4182
sg19
(lp4183
sg22
(lp4184
sg25
I0
sba(iArchitecture
Entity
p4185
(dp4186
g11
(lp4187
sg14
S'com.google.common.collect.ContiguousSetTest'
p4188
sg16
(lp4189
sg19
(lp4190
sg22
(lp4191
sg25
I0
sba(iArchitecture
Entity
p4192
(dp4193
g11
(lp4194
sg14
S'com.google.common.collect.Count'
p4195
sg16
(lp4196
sg19
(lp4197
sg22
(lp4198
sg25
I0
sba(iArchitecture
Entity
p4199
(dp4200
g11
(lp4201
sg14
S'com.google.common.collect.DenseImmutableTable'
p4202
sg16
(lp4203
sg19
(lp4204
sg22
(lp4205
sg25
I0
sba(iArchitecture
Entity
p4206
(dp4207
g11
(lp4208
sg14
S'com.google.common.collect.DescendingImmutableSortedMultiset'
p4209
sg16
(lp4210
sg19
(lp4211
sg22
(lp4212
sg25
I0
sba(iArchitecture
Entity
p4213
(dp4214
g11
(lp4215
sg14
S'com.google.common.collect.DescendingImmutableSortedSet'
p4216
sg16
(lp4217
sg19
(lp4218
sg22
(lp4219
sg25
I0
sba(iArchitecture
Entity
p4220
(dp4221
g11
(lp4222
sg14
S'com.google.common.collect.DescendingMultiset'
p4223
sg16
(lp4224
sg19
(lp4225
sg22
(lp4226
sg25
I0
sba(iArchitecture
Entity
p4227
(dp4228
g11
(lp4229
sg14
S'com.google.common.collect.EmptyContiguousSet'
p4230
sg16
(lp4231
sg19
(lp4232
sg22
(lp4233
sg25
I0
sba(iArchitecture
Entity
p4234
(dp4235
g11
(lp4236
sg14
S'com.google.common.collect.EmptyImmutableTableTest'
p4237
sg16
(lp4238
sg19
(lp4239
sg22
(lp4240
sg25
I0
sba(iArchitecture
Entity
p4241
(dp4242
g11
(lp4243
sg14
S'com.google.common.collect.EmptyImmutableTableTest_gwt'
p4244
sg16
(lp4245
sg19
(lp4246
sg22
(lp4247
sg25
I0
sba(iArchitecture
Entity
p4248
(dp4249
g11
(lp4250
sg14
S'com.google.common.collect.EnumHashBiMapTest'
p4251
sg16
(lp4252
sg19
(lp4253
sg22
(lp4254
sg25
I0
sba(iArchitecture
Entity
p4255
(dp4256
g11
(lp4257
sg14
S'com.google.common.collect.EnumMultisetTest'
p4258
sg16
(lp4259
sg19
(lp4260
sg22
(lp4261
sg25
I0
sba(iArchitecture
Entity
p4262
(dp4263
g11
(lp4264
sg14
S'com.google.common.collect.EvictingQueueTest'
p4265
sg16
(lp4266
sg19
(lp4267
sg22
(lp4268
sg25
I0
sba(iArchitecture
Entity
p4269
(dp4270
g11
(lp4271
sg14
S'com.google.common.collect.ExplicitOrdering'
p4272
sg16
(lp4273
sg19
(lp4274
sg22
(lp4275
sg25
I0
sba(iArchitecture
Entity
p4276
(dp4277
g11
(lp4278
sg14
S'com.google.common.collect.FauxveridesTest'
p4279
sg16
(lp4280
sg19
(lp4281
sg22
(lp4282
sg25
I0
sba(iArchitecture
Entity
p4283
(dp4284
g11
(lp4285
sg14
S'com.google.common.collect.FilteredEntryMultimap'
p4286
sg16
(lp4287
sg19
(lp4288
sg22
(lp4289
sg25
I0
sba(iArchitecture
Entity
p4290
(dp4291
g11
(lp4292
sg14
S'com.google.common.collect.FluentIterableTest'
p4293
sg16
(lp4294
sg19
(lp4295
sg22
(lp4296
sg25
I0
sba(iArchitecture
Entity
p4297
(dp4298
g11
(lp4299
sg14
S'com.google.common.collect.ForMapMultimapAsMapImplementsMapTest'
p4300
sg16
(lp4301
sg19
(lp4302
sg22
(lp4303
sg25
I0
sba(iArchitecture
Entity
p4304
(dp4305
g11
(lp4306
sg14
S'com.google.common.collect.ForMapMultimapAsMapImplementsMapTest_gwt'
p4307
sg16
(lp4308
sg19
(lp4309
sg22
(lp4310
sg25
I0
sba(iArchitecture
Entity
p4311
(dp4312
g11
(lp4313
sg14
S'com.google.common.collect.ForwardingBlockingDeque'
p4314
sg16
(lp4315
sg19
(lp4316
sg22
(lp4317
sg25
I0
sba(iArchitecture
Entity
p4318
(dp4319
g11
(lp4320
sg14
S'com.google.common.collect.ForwardingBlockingDequeTest'
p4321
sg16
(lp4322
sg19
(lp4323
sg22
(lp4324
sg25
I0
sba(iArchitecture
Entity
p4325
(dp4326
g11
(lp4327
sg14
S'com.google.common.collect.ForwardingCollectionTest'
p4328
sg16
(lp4329
sg19
(lp4330
sg22
(lp4331
sg25
I0
sba(iArchitecture
Entity
p4332
(dp4333
g11
(lp4334
sg14
S'com.google.common.collect.ForwardingDeque'
p4335
sg16
(lp4336
sg19
(lp4337
sg22
(lp4338
sg25
I0
sba(iArchitecture
Entity
p4339
(dp4340
g11
(lp4341
sg14
S'com.google.common.collect.ForwardingDequeTest'
p4342
sg16
(lp4343
sg19
(lp4344
sg22
(lp4345
sg25
I0
sba(iArchitecture
Entity
p4346
(dp4347
g11
(lp4348
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p4349
sg16
(lp4350
sg19
(lp4351
sg22
(lp4352
sg25
I0
sba(iArchitecture
Entity
p4353
(dp4354
g11
(lp4355
sg14
S'com.google.common.collect.ForwardingImmutableList'
p4356
sg16
(lp4357
sg19
(lp4358
sg22
(lp4359
sg25
I0
sba(iArchitecture
Entity
p4360
(dp4361
g11
(lp4362
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p4363
sg16
(lp4364
sg19
(lp4365
sg22
(lp4366
sg25
I0
sba(iArchitecture
Entity
p4367
(dp4368
g11
(lp4369
sg14
S'com.google.common.collect.ForwardingList'
p4370
sg16
(lp4371
sg19
(lp4372
sg22
(lp4373
sg25
I0
sba(iArchitecture
Entity
p4374
(dp4375
g11
(lp4376
sg14
S'com.google.common.collect.ForwardingListIteratorTest'
p4377
sg16
(lp4378
sg19
(lp4379
sg22
(lp4380
sg25
I0
sba(iArchitecture
Entity
p4381
(dp4382
g11
(lp4383
sg14
S'com.google.common.collect.ForwardingListTest'
p4384
sg16
(lp4385
sg19
(lp4386
sg22
(lp4387
sg25
I0
sba(iArchitecture
Entity
p4388
(dp4389
g11
(lp4390
sg14
S'com.google.common.collect.ForwardingMapTest'
p4391
sg16
(lp4392
sg19
(lp4393
sg22
(lp4394
sg25
I0
sba(iArchitecture
Entity
p4395
(dp4396
g11
(lp4397
sg14
S'com.google.common.collect.ForwardingMultimap'
p4398
sg16
(lp4399
sg19
(lp4400
sg22
(lp4401
sg25
I0
sba(iArchitecture
Entity
p4402
(dp4403
g11
(lp4404
sg14
S'com.google.common.collect.ForwardingMultimapTest'
p4405
sg16
(lp4406
sg19
(lp4407
sg22
(lp4408
sg25
I0
sba(iArchitecture
Entity
p4409
(dp4410
g11
(lp4411
sg14
S'com.google.common.collect.ForwardingMultisetTest'
p4412
sg16
(lp4413
sg19
(lp4414
sg22
(lp4415
sg25
I0
sba(iArchitecture
Entity
p4416
(dp4417
g11
(lp4418
sg14
S'com.google.common.collect.ForwardingNavigableMapTest'
p4419
sg16
(lp4420
sg19
(lp4421
sg22
(lp4422
sg25
I0
sba(iArchitecture
Entity
p4423
(dp4424
g11
(lp4425
sg14
S'com.google.common.collect.ForwardingNavigableSetTest'
p4426
sg16
(lp4427
sg19
(lp4428
sg22
(lp4429
sg25
I0
sba(iArchitecture
Entity
p4430
(dp4431
g11
(lp4432
sg14
S'com.google.common.collect.ForwardingQueueTest'
p4433
sg16
(lp4434
sg19
(lp4435
sg22
(lp4436
sg25
I0
sba(iArchitecture
Entity
p4437
(dp4438
g11
(lp4439
sg14
S'com.google.common.collect.ForwardingSetTest'
p4440
sg16
(lp4441
sg19
(lp4442
sg22
(lp4443
sg25
I0
sba(iArchitecture
Entity
p4444
(dp4445
g11
(lp4446
sg14
S'com.google.common.collect.ForwardingSortedMapImplementsMapTest'
p4447
sg16
(lp4448
sg19
(lp4449
sg22
(lp4450
sg25
I0
sba(iArchitecture
Entity
p4451
(dp4452
g11
(lp4453
sg14
S'com.google.common.collect.ForwardingSortedMapImplementsMapTest_gwt'
p4454
sg16
(lp4455
sg19
(lp4456
sg22
(lp4457
sg25
I0
sba(iArchitecture
Entity
p4458
(dp4459
g11
(lp4460
sg14
S'com.google.common.collect.ForwardingSortedMapTest'
p4461
sg16
(lp4462
sg19
(lp4463
sg22
(lp4464
sg25
I0
sba(iArchitecture
Entity
p4465
(dp4466
g11
(lp4467
sg14
S'com.google.common.collect.ForwardingSortedMultisetTest'
p4468
sg16
(lp4469
sg19
(lp4470
sg22
(lp4471
sg25
I0
sba(iArchitecture
Entity
p4472
(dp4473
g11
(lp4474
sg14
S'com.google.common.collect.ForwardingSortedSetTest'
p4475
sg16
(lp4476
sg19
(lp4477
sg22
(lp4478
sg25
I0
sba(iArchitecture
Entity
p4479
(dp4480
g11
(lp4481
sg14
S'com.google.common.collect.ForwardingTable'
p4482
sg16
(lp4483
sg19
(lp4484
sg22
(lp4485
sg25
I0
sba(iArchitecture
Entity
p4486
(dp4487
g11
(lp4488
sg14
S'com.google.common.collect.ForwardingTableTest'
p4489
sg16
(lp4490
sg19
(lp4491
sg22
(lp4492
sg25
I0
sba(iArchitecture
Entity
p4493
(dp4494
g11
(lp4495
sg14
S'com.google.common.collect.ForwardingTestCase'
p4496
sg16
(lp4497
sg19
(lp4498
sg22
(lp4499
sg25
I0
sba(iArchitecture
Entity
p4500
(dp4501
g11
(lp4502
sg14
S'com.google.common.collect.GeneralRange'
p4503
sg16
(lp4504
sg19
(lp4505
sg22
(lp4506
sg25
I0
sba(iArchitecture
Entity
p4507
(dp4508
g11
(lp4509
sg14
S'com.google.common.collect.GeneralRangeTest'
p4510
sg16
(lp4511
sg19
(lp4512
sg22
(lp4513
sg25
I0
sba(iArchitecture
Entity
p4514
(dp4515
g11
(lp4516
sg14
S'com.google.common.collect.HashBasedTableTest_gwt'
p4517
sg16
(lp4518
sg19
(lp4519
sg22
(lp4520
sg25
I0
sba(iArchitecture
Entity
p4521
(dp4522
g11
(lp4523
sg14
S'com.google.common.collect.HashBiMap'
p4524
sg16
(lp4525
sg19
(lp4526
sg22
(lp4527
sg25
I0
sba(iArchitecture
Entity
p4528
(dp4529
g11
(lp4530
sg14
S'com.google.common.collect.HashBiMapTest'
p4531
sg16
(lp4532
sg19
(lp4533
sg22
(lp4534
sg25
I0
sba(iArchitecture
Entity
p4535
(dp4536
g11
(lp4537
sg14
S'com.google.common.collect.HashMultimapTest'
p4538
sg16
(lp4539
sg19
(lp4540
sg22
(lp4541
sg25
I0
sba(iArchitecture
Entity
p4542
(dp4543
g11
(lp4544
sg14
S'com.google.common.collect.HashMultisetAddPresentBenchmark'
p4545
sg16
(lp4546
sg19
(lp4547
sg22
(lp4548
sg25
I0
sba(iArchitecture
Entity
p4549
(dp4550
g11
(lp4551
sg14
S'com.google.common.collect.Hashing'
p4552
sg16
(lp4553
sg19
(lp4554
sg22
(lp4555
sg25
I0
sba(iArchitecture
Entity
p4556
(dp4557
g11
(lp4558
sg14
S'com.google.common.collect.ImmutableBiMapTest'
p4559
sg16
(lp4560
sg19
(lp4561
sg22
(lp4562
sg25
I0
sba(iArchitecture
Entity
p4563
(dp4564
g11
(lp4565
sg14
S'com.google.common.collect.ImmutableBiMapTest_gwt'
p4566
sg16
(lp4567
sg19
(lp4568
sg22
(lp4569
sg25
I0
sba(iArchitecture
Entity
p4570
(dp4571
g11
(lp4572
sg14
S'com.google.common.collect.ImmutableCollection'
p4573
sg16
(lp4574
sg19
(lp4575
sg22
(lp4576
sg25
I0
sba(iArchitecture
Entity
p4577
(dp4578
g11
(lp4579
sg14
S'com.google.common.collect.ImmutableList'
p4580
sg16
(lp4581
sg19
(lp4582
sg22
(lp4583
sg25
I0
sba(iArchitecture
Entity
p4584
(dp4585
g11
(lp4586
sg14
S'com.google.common.collect.ImmutableListCreationBenchmark'
p4587
sg16
(lp4588
sg19
(lp4589
sg22
(lp4590
sg25
I0
sba(iArchitecture
Entity
p4591
(dp4592
g11
(lp4593
sg14
S'com.google.common.collect.ImmutableListMultimapTest'
p4594
sg16
(lp4595
sg19
(lp4596
sg22
(lp4597
sg25
I0
sba(iArchitecture
Entity
p4598
(dp4599
g11
(lp4600
sg14
S'com.google.common.collect.ImmutableListMultimapTest_gwt'
p4601
sg16
(lp4602
sg19
(lp4603
sg22
(lp4604
sg25
I0
sba(iArchitecture
Entity
p4605
(dp4606
g11
(lp4607
sg14
S'com.google.common.collect.ImmutableListTest'
p4608
sg16
(lp4609
sg19
(lp4610
sg22
(lp4611
sg25
I0
sba(iArchitecture
Entity
p4612
(dp4613
g11
(lp4614
sg14
S'com.google.common.collect.ImmutableListTest_gwt'
p4615
sg16
(lp4616
sg19
(lp4617
sg22
(lp4618
sg25
I0
sba(iArchitecture
Entity
p4619
(dp4620
g11
(lp4621
sg14
S'com.google.common.collect.ImmutableMap'
p4622
sg16
(lp4623
sg19
(lp4624
sg22
(lp4625
sg25
I0
sba(iArchitecture
Entity
p4626
(dp4627
g11
(lp4628
sg14
S'com.google.common.collect.ImmutableMapTest'
p4629
sg16
(lp4630
sg19
(lp4631
sg22
(lp4632
sg25
I0
sba(iArchitecture
Entity
p4633
(dp4634
g11
(lp4635
sg14
S'com.google.common.collect.ImmutableMapTest_gwt'
p4636
sg16
(lp4637
sg19
(lp4638
sg22
(lp4639
sg25
I0
sba(iArchitecture
Entity
p4640
(dp4641
g11
(lp4642
sg14
S'com.google.common.collect.ImmutableMapValues'
p4643
sg16
(lp4644
sg19
(lp4645
sg22
(lp4646
sg25
I0
sba(iArchitecture
Entity
p4647
(dp4648
g11
(lp4649
sg14
S'com.google.common.collect.ImmutableMultimapAsMapImplementsMapTest_gwt'
p4650
sg16
(lp4651
sg19
(lp4652
sg22
(lp4653
sg25
I0
sba(iArchitecture
Entity
p4654
(dp4655
g11
(lp4656
sg14
S'com.google.common.collect.ImmutableMultimapTest'
p4657
sg16
(lp4658
sg19
(lp4659
sg22
(lp4660
sg25
I0
sba(iArchitecture
Entity
p4661
(dp4662
g11
(lp4663
sg14
S'com.google.common.collect.ImmutableMultiset'
p4664
sg16
(lp4665
sg19
(lp4666
sg22
(lp4667
sg25
I0
sba(iArchitecture
Entity
p4668
(dp4669
g11
(lp4670
sg14
S'com.google.common.collect.ImmutableMultisetTest'
p4671
sg16
(lp4672
sg19
(lp4673
sg22
(lp4674
sg25
I0
sba(iArchitecture
Entity
p4675
(dp4676
g11
(lp4677
sg14
S'com.google.common.collect.ImmutableMultisetTest_gwt'
p4678
sg16
(lp4679
sg19
(lp4680
sg22
(lp4681
sg25
I0
sba(iArchitecture
Entity
p4682
(dp4683
g11
(lp4684
V2258
p4685
asg14
S'com.google.common.collect.ImmutableRangeMap'
p4686
sg16
(lp4687
VMutable operations on `ImmutableRangeSet` (`add`, `remove`, `clear`, etc) should be marked as unsupported and deprecated and javadoc modified appropriately, in a similar way to mutable operations on the other immutable collections.\u000a
p4688
asg19
(lp4689
(lp4690
I2
aasg22
(lp4691
VMutable operations on ImmutableRangeSet should be deprecated
p4692
asg25
I0
sba(iArchitecture
Entity
p4693
(dp4694
g11
(lp4695
sg14
S'com.google.common.collect.ImmutableRangeMapTest'
p4696
sg16
(lp4697
sg19
(lp4698
sg22
(lp4699
sg25
I0
sba(iArchitecture
Entity
p4700
(dp4701
g11
(lp4702
g4685
asg14
S'com.google.common.collect.ImmutableRangeSet'
p4703
sg16
(lp4704
VMutable operations on `ImmutableRangeSet` (`add`, `remove`, `clear`, etc) should be marked as unsupported and deprecated and javadoc modified appropriately, in a similar way to mutable operations on the other immutable collections.\u000a
p4705
asg19
(lp4706
g4690
asg22
(lp4707
g4692
asg25
I0
sba(iArchitecture
Entity
p4708
(dp4709
g11
(lp4710
sg14
S'com.google.common.collect.ImmutableRangeSetTest'
p4711
sg16
(lp4712
sg19
(lp4713
sg22
(lp4714
sg25
I0
sba(iArchitecture
Entity
p4715
(dp4716
g11
(lp4717
sg14
S'com.google.common.collect.ImmutableSet'
p4718
sg16
(lp4719
sg19
(lp4720
sg22
(lp4721
sg25
I0
sba(iArchitecture
Entity
p4722
(dp4723
g11
(lp4724
sg14
S'com.google.common.collect.ImmutableSetMultimapAsMapImplementsMapTest_gwt'
p4725
sg16
(lp4726
sg19
(lp4727
sg22
(lp4728
sg25
I0
sba(iArchitecture
Entity
p4729
(dp4730
g11
(lp4731
sg14
S'com.google.common.collect.ImmutableSetMultimapTest'
p4732
sg16
(lp4733
sg19
(lp4734
sg22
(lp4735
sg25
I0
sba(iArchitecture
Entity
p4736
(dp4737
g11
(lp4738
sg14
S'com.google.common.collect.ImmutableSetMultimapTest_gwt'
p4739
sg16
(lp4740
sg19
(lp4741
sg22
(lp4742
sg25
I0
sba(iArchitecture
Entity
p4743
(dp4744
g11
(lp4745
sg14
S'com.google.common.collect.ImmutableSetTest'
p4746
sg16
(lp4747
sg19
(lp4748
sg22
(lp4749
sg25
I0
sba(iArchitecture
Entity
p4750
(dp4751
g11
(lp4752
sg14
S'com.google.common.collect.ImmutableSetTest_gwt'
p4753
sg16
(lp4754
sg19
(lp4755
sg22
(lp4756
sg25
I0
sba(iArchitecture
Entity
p4757
(dp4758
g11
(lp4759
sg14
S'com.google.common.collect.ImmutableSortedMapTest'
p4760
sg16
(lp4761
sg19
(lp4762
sg22
(lp4763
sg25
I0
sba(iArchitecture
Entity
p4764
(dp4765
g11
(lp4766
sg14
S'com.google.common.collect.ImmutableSortedMapTest_gwt'
p4767
sg16
(lp4768
sg19
(lp4769
sg22
(lp4770
sg25
I0
sba(iArchitecture
Entity
p4771
(dp4772
g11
(lp4773
sg14
S'com.google.common.collect.ImmutableSortedMultiset'
p4774
sg16
(lp4775
sg19
(lp4776
sg22
(lp4777
sg25
I0
sba(iArchitecture
Entity
p4778
(dp4779
g11
(lp4780
sg14
S'com.google.common.collect.ImmutableSortedMultisetTest'
p4781
sg16
(lp4782
sg19
(lp4783
sg22
(lp4784
sg25
I0
sba(iArchitecture
Entity
p4785
(dp4786
g11
(lp4787
sg14
S'com.google.common.collect.ImmutableSortedSet'
p4788
sg16
(lp4789
sg19
(lp4790
sg22
(lp4791
sg25
I0
sba(iArchitecture
Entity
p4792
(dp4793
g11
(lp4794
sg14
S'com.google.common.collect.ImmutableSortedSetTest'
p4795
sg16
(lp4796
sg19
(lp4797
sg22
(lp4798
sg25
I0
sba(iArchitecture
Entity
p4799
(dp4800
g11
(lp4801
sg14
S'com.google.common.collect.ImmutableSortedSetTest_gwt'
p4802
sg16
(lp4803
sg19
(lp4804
sg22
(lp4805
sg25
I0
sba(iArchitecture
Entity
p4806
(dp4807
g11
(lp4808
sg14
S'com.google.common.collect.ImmutableTableTest_gwt'
p4809
sg16
(lp4810
sg19
(lp4811
sg22
(lp4812
sg25
I0
sba(iArchitecture
Entity
p4813
(dp4814
g11
(lp4815
sg14
S'com.google.common.collect.InternersBenchmark'
p4816
sg16
(lp4817
sg19
(lp4818
sg22
(lp4819
sg25
I0
sba(iArchitecture
Entity
p4820
(dp4821
g11
(lp4822
sg14
S'com.google.common.collect.InternersTest'
p4823
sg16
(lp4824
sg19
(lp4825
sg22
(lp4826
sg25
I0
sba(iArchitecture
Entity
p4827
(dp4828
g11
(lp4829
sg14
S'com.google.common.collect.Iterables'
p4830
sg16
(lp4831
sg19
(lp4832
sg22
(lp4833
sg25
I0
sba(iArchitecture
Entity
p4834
(dp4835
g11
(lp4836
sg14
S'com.google.common.collect.IterablesTest'
p4837
sg16
(lp4838
sg19
(lp4839
sg22
(lp4840
sg25
I0
sba(iArchitecture
Entity
p4841
(dp4842
g11
(lp4843
sg14
S'com.google.common.collect.IterablesTest_gwt'
p4844
sg16
(lp4845
sg19
(lp4846
sg22
(lp4847
sg25
I0
sba(iArchitecture
Entity
p4848
(dp4849
g11
(lp4850
sg14
S'com.google.common.collect.IteratorBenchmark'
p4851
sg16
(lp4852
sg19
(lp4853
sg22
(lp4854
sg25
I0
sba(iArchitecture
Entity
p4855
(dp4856
g11
(lp4857
sg14
S'com.google.common.collect.Iterators'
p4858
sg16
(lp4859
sg19
(lp4860
sg22
(lp4861
sg25
I0
sba(iArchitecture
Entity
p4862
(dp4863
g11
(lp4864
sg14
S'com.google.common.collect.IteratorsTest'
p4865
sg16
(lp4866
sg19
(lp4867
sg22
(lp4868
sg25
I0
sba(iArchitecture
Entity
p4869
(dp4870
g11
(lp4871
sg14
S'com.google.common.collect.IteratorsTest_gwt'
p4872
sg16
(lp4873
sg19
(lp4874
sg22
(lp4875
sg25
I0
sba(iArchitecture
Entity
p4876
(dp4877
g11
(lp4878
sg14
S'com.google.common.collect.LexicographicalOrdering'
p4879
sg16
(lp4880
sg19
(lp4881
sg22
(lp4882
sg25
I0
sba(iArchitecture
Entity
p4883
(dp4884
g11
(lp4885
sg14
S'com.google.common.collect.LinkedHashMultimap'
p4886
sg16
(lp4887
sg19
(lp4888
sg22
(lp4889
sg25
I0
sba(iArchitecture
Entity
p4890
(dp4891
g11
(lp4892
sg14
S'com.google.common.collect.LinkedHashMultimapTest'
p4893
sg16
(lp4894
sg19
(lp4895
sg22
(lp4896
sg25
I0
sba(iArchitecture
Entity
p4897
(dp4898
g11
(lp4899
sg14
S'com.google.common.collect.LinkedListMultimap'
p4900
sg16
(lp4901
sg19
(lp4902
sg22
(lp4903
sg25
I0
sba(iArchitecture
Entity
p4904
(dp4905
g11
(lp4906
sg14
S'com.google.common.collect.Lists'
p4907
sg16
(lp4908
sg19
(lp4909
sg22
(lp4910
sg25
I0
sba(iArchitecture
Entity
p4911
(dp4912
g11
(lp4913
sg14
S'com.google.common.collect.ListsTest'
p4914
sg16
(lp4915
sg19
(lp4916
sg22
(lp4917
sg25
I0
sba(iArchitecture
Entity
p4918
(dp4919
g11
(lp4920
sg14
S'com.google.common.collect.ListsTest_gwt'
p4921
sg16
(lp4922
sg19
(lp4923
sg22
(lp4924
sg25
I0
sba(iArchitecture
Entity
p4925
(dp4926
g11
(lp4927
sg14
S'com.google.common.collect.MapConstraintsTest'
p4928
sg16
(lp4929
sg19
(lp4930
sg22
(lp4931
sg25
I0
sba(iArchitecture
Entity
p4932
(dp4933
g11
(lp4934
sg14
S'com.google.common.collect.MapConstraintsTest_gwt'
p4935
sg16
(lp4936
sg19
(lp4937
sg22
(lp4938
sg25
I0
sba(iArchitecture
Entity
p4939
(dp4940
g11
(lp4941
sg14
S'com.google.common.collect.MapMaker'
p4942
sg16
(lp4943
sg19
(lp4944
sg22
(lp4945
sg25
I0
sba(iArchitecture
Entity
p4946
(dp4947
g11
(lp4948
sg14
S'com.google.common.collect.MapMakerInternalMap'
p4949
sg16
(lp4950
sg19
(lp4951
sg22
(lp4952
sg25
I0
sba(iArchitecture
Entity
p4953
(dp4954
g11
(lp4955
sg14
S'com.google.common.collect.MapMakerInternalMapTest'
p4956
sg16
(lp4957
sg19
(lp4958
sg22
(lp4959
sg25
I0
sba(iArchitecture
Entity
p4960
(dp4961
g11
(lp4962
sg14
S'com.google.common.collect.MapMakerSingleThreadBenchmark'
p4963
sg16
(lp4964
sg19
(lp4965
sg22
(lp4966
sg25
I0
sba(iArchitecture
Entity
p4967
(dp4968
g11
(lp4969
sg14
S'com.google.common.collect.MapMakerTest'
p4970
sg16
(lp4971
sg19
(lp4972
sg22
(lp4973
sg25
I0
sba(iArchitecture
Entity
p4974
(dp4975
g11
(lp4976
sg14
S'com.google.common.collect.MapsSortedTransformValuesTest_gwt'
p4977
sg16
(lp4978
sg19
(lp4979
sg22
(lp4980
sg25
I0
sba(iArchitecture
Entity
p4981
(dp4982
g11
(lp4983
sg14
S'com.google.common.collect.MapsTest'
p4984
sg16
(lp4985
sg19
(lp4986
sg22
(lp4987
sg25
I0
sba(iArchitecture
Entity
p4988
(dp4989
g11
(lp4990
sg14
S'com.google.common.collect.MapsTest_gwt'
p4991
sg16
(lp4992
sg19
(lp4993
sg22
(lp4994
sg25
I0
sba(iArchitecture
Entity
p4995
(dp4996
g11
(lp4997
sg14
S'com.google.common.collect.MapsTransformValuesTest_gwt'
p4998
sg16
(lp4999
sg19
(lp5000
sg22
(lp5001
sg25
I0
sba(iArchitecture
Entity
p5002
(dp5003
g11
(lp5004
sg14
S'com.google.common.collect.MapsTransformValuesUnmodifiableIteratorTest_gwt'
p5005
sg16
(lp5006
sg19
(lp5007
sg22
(lp5008
sg25
I0
sba(iArchitecture
Entity
p5009
(dp5010
g11
(lp5011
sg14
S'com.google.common.collect.MinMaxPriorityQueue'
p5012
sg16
(lp5013
sg19
(lp5014
sg22
(lp5015
sg25
I0
sba(iArchitecture
Entity
p5016
(dp5017
g11
(lp5018
sg14
S'com.google.common.collect.MinMaxPriorityQueueBenchmark'
p5019
sg16
(lp5020
sg19
(lp5021
sg22
(lp5022
sg25
I0
sba(iArchitecture
Entity
p5023
(dp5024
g11
(lp5025
sg14
S'com.google.common.collect.MinMaxPriorityQueueTest'
p5026
sg16
(lp5027
sg19
(lp5028
sg22
(lp5029
sg25
I0
sba(iArchitecture
Entity
p5030
(dp5031
g11
(lp5032
sg14
S'com.google.common.collect.MultimapsCollectionTest'
p5033
sg16
(lp5034
sg19
(lp5035
sg22
(lp5036
sg25
I0
sba(iArchitecture
Entity
p5037
(dp5038
g11
(lp5039
sg14
S'com.google.common.collect.MultimapsTest'
p5040
sg16
(lp5041
sg19
(lp5042
sg22
(lp5043
sg25
I0
sba(iArchitecture
Entity
p5044
(dp5045
g11
(lp5046
sg14
S'com.google.common.collect.MultimapsTest_gwt'
p5047
sg16
(lp5048
sg19
(lp5049
sg22
(lp5050
sg25
I0
sba(iArchitecture
Entity
p5051
(dp5052
g11
(lp5053
sg14
S'com.google.common.collect.MultimapsTransformValuesAsMapTest_gwt'
p5054
sg16
(lp5055
sg19
(lp5056
sg22
(lp5057
sg25
I0
sba(iArchitecture
Entity
p5058
(dp5059
g11
(lp5060
sg14
S'com.google.common.collect.MultipleSetContainsBenchmark'
p5061
sg16
(lp5062
sg19
(lp5063
sg22
(lp5064
sg25
I0
sba(iArchitecture
Entity
p5065
(dp5066
g11
(lp5067
sg14
S'com.google.common.collect.MultisetIteratorBenchmark'
p5068
sg16
(lp5069
sg19
(lp5070
sg22
(lp5071
sg25
I0
sba(iArchitecture
Entity
p5072
(dp5073
g11
(lp5074
sg14
S'com.google.common.collect.Multisets'
p5075
sg16
(lp5076
sg19
(lp5077
sg22
(lp5078
sg25
I0
sba(iArchitecture
Entity
p5079
(dp5080
g11
(lp5081
sg14
S'com.google.common.collect.MultisetsTest'
p5082
sg16
(lp5083
sg19
(lp5084
sg22
(lp5085
sg25
I0
sba(iArchitecture
Entity
p5086
(dp5087
g11
(lp5088
sg14
S'com.google.common.collect.MultisetsTest_gwt'
p5089
sg16
(lp5090
sg19
(lp5091
sg22
(lp5092
sg25
I0
sba(iArchitecture
Entity
p5093
(dp5094
g11
(lp5095
sg14
S'com.google.common.collect.NewCustomTableTest_gwt'
p5096
sg16
(lp5097
sg19
(lp5098
sg22
(lp5099
sg25
I0
sba(iArchitecture
Entity
p5100
(dp5101
g11
(lp5102
sg14
S'com.google.common.collect.NullsFirstOrdering'
p5103
sg16
(lp5104
sg19
(lp5105
sg22
(lp5106
sg25
I0
sba(iArchitecture
Entity
p5107
(dp5108
g11
(lp5109
sg14
S'com.google.common.collect.NullsLastOrdering'
p5110
sg16
(lp5111
sg19
(lp5112
sg22
(lp5113
sg25
I0
sba(iArchitecture
Entity
p5114
(dp5115
g11
(lp5116
sg14
S'com.google.common.collect.ObjectArrays'
p5117
sg16
(lp5118
sg19
(lp5119
sg22
(lp5120
sg25
I0
sba(iArchitecture
Entity
p5121
(dp5122
g11
(lp5123
sg14
S'com.google.common.collect.ObjectArraysTest'
p5124
sg16
(lp5125
sg19
(lp5126
sg22
(lp5127
sg25
I0
sba(iArchitecture
Entity
p5128
(dp5129
g11
(lp5130
sg14
S'com.google.common.collect.OrderingTest'
p5131
sg16
(lp5132
sg19
(lp5133
sg22
(lp5134
sg25
I0
sba(iArchitecture
Entity
p5135
(dp5136
g11
(lp5137
sg14
S'com.google.common.collect.PeekingIteratorTest'
p5138
sg16
(lp5139
sg19
(lp5140
sg22
(lp5141
sg25
I0
sba(iArchitecture
Entity
p5142
(dp5143
g11
(lp5144
sg14
S'com.google.common.collect.Platform'
p5145
sg16
(lp5146
sg19
(lp5147
sg22
(lp5148
sg25
I0
sba(iArchitecture
Entity
p5149
(dp5150
g11
(lp5151
sg14
S'com.google.common.collect.PowerSetBenchmark'
p5152
sg16
(lp5153
sg19
(lp5154
sg22
(lp5155
sg25
I0
sba(iArchitecture
Entity
p5156
(dp5157
g11
(lp5158
sg14
S'com.google.common.collect.QueuesTest'
p5159
sg16
(lp5160
sg19
(lp5161
sg22
(lp5162
sg25
I0
sba(iArchitecture
Entity
p5163
(dp5164
g11
(lp5165
V2376
p5166
ag5166
ag5166
ag5166
asg14
S'com.google.common.collect.Range'
p5167
sg16
(lp5168
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5169
aV`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5170
aV`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5171
aV`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5172
asg19
(lp5173
(lp5174
I1
aag5174
ag5174
ag5174
asg22
(lp5175
VConsider replacing unicode character in Range.toString()
p5176
ag5176
ag5176
ag5176
asg25
I0
sba(iArchitecture
Entity
p5177
(dp5178
g11
(lp5179
g5166
asg14
S'com.google.common.collect.RangeTest'
p5180
sg16
(lp5181
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5182
asg19
(lp5183
g5174
asg22
(lp5184
g5176
asg25
I0
sba(iArchitecture
Entity
p5185
(dp5186
g11
(lp5187
sg14
S'com.google.common.collect.RangeTest_gwt'
p5188
sg16
(lp5189
sg19
(lp5190
sg22
(lp5191
sg25
I0
sba(iArchitecture
Entity
p5192
(dp5193
g11
(lp5194
sg14
S'com.google.common.collect.RegularContiguousSet'
p5195
sg16
(lp5196
sg19
(lp5197
sg22
(lp5198
sg25
I0
sba(iArchitecture
Entity
p5199
(dp5200
g11
(lp5201
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p5202
sg16
(lp5203
sg19
(lp5204
sg22
(lp5205
sg25
I0
sba(iArchitecture
Entity
p5206
(dp5207
g11
(lp5208
sg14
S'com.google.common.collect.RegularImmutableList'
p5209
sg16
(lp5210
sg19
(lp5211
sg22
(lp5212
sg25
I0
sba(iArchitecture
Entity
p5213
(dp5214
g11
(lp5215
sg14
S'com.google.common.collect.RegularImmutableMultiset'
p5216
sg16
(lp5217
sg19
(lp5218
sg22
(lp5219
sg25
I0
sba(iArchitecture
Entity
p5220
(dp5221
g11
(lp5222
sg14
S'com.google.common.collect.RegularImmutableSet'
p5223
sg16
(lp5224
sg19
(lp5225
sg22
(lp5226
sg25
I0
sba(iArchitecture
Entity
p5227
(dp5228
g11
(lp5229
sg14
S'com.google.common.collect.RegularImmutableSortedMultiset'
p5230
sg16
(lp5231
sg19
(lp5232
sg22
(lp5233
sg25
I0
sba(iArchitecture
Entity
p5234
(dp5235
g11
(lp5236
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p5237
sg16
(lp5238
sg19
(lp5239
sg22
(lp5240
sg25
I0
sba(iArchitecture
Entity
p5241
(dp5242
g11
(lp5243
sg14
S'com.google.common.collect.RegularImmutableTable'
p5244
sg16
(lp5245
sg19
(lp5246
sg22
(lp5247
sg25
I0
sba(iArchitecture
Entity
p5248
(dp5249
g11
(lp5250
sg14
S'com.google.common.collect.RegularImmutableTableTest'
p5251
sg16
(lp5252
sg19
(lp5253
sg22
(lp5254
sg25
I0
sba(iArchitecture
Entity
p5255
(dp5256
g11
(lp5257
sg14
S'com.google.common.collect.ReverseOrdering'
p5258
sg16
(lp5259
sg19
(lp5260
sg22
(lp5261
sg25
I0
sba(iArchitecture
Entity
p5262
(dp5263
g11
(lp5264
sg14
S'com.google.common.collect.SetCreationBenchmark'
p5265
sg16
(lp5266
sg19
(lp5267
sg22
(lp5268
sg25
I0
sba(iArchitecture
Entity
p5269
(dp5270
g11
(lp5271
sg14
S'com.google.common.collect.SetIterationBenchmark'
p5272
sg16
(lp5273
sg19
(lp5274
sg22
(lp5275
sg25
I0
sba(iArchitecture
Entity
p5276
(dp5277
g11
(lp5278
sg14
S'com.google.common.collect.SetOperationsTest'
p5279
sg16
(lp5280
sg19
(lp5281
sg22
(lp5282
sg25
I0
sba(iArchitecture
Entity
p5283
(dp5284
g11
(lp5285
sg14
S'com.google.common.collect.Sets'
p5286
sg16
(lp5287
sg19
(lp5288
sg22
(lp5289
sg25
I0
sba(iArchitecture
Entity
p5290
(dp5291
g11
(lp5292
sg14
S'com.google.common.collect.SetsTest'
p5293
sg16
(lp5294
sg19
(lp5295
sg22
(lp5296
sg25
I0
sba(iArchitecture
Entity
p5297
(dp5298
g11
(lp5299
sg14
S'com.google.common.collect.SetsTest_gwt'
p5300
sg16
(lp5301
sg19
(lp5302
sg22
(lp5303
sg25
I0
sba(iArchitecture
Entity
p5304
(dp5305
g11
(lp5306
sg14
S'com.google.common.collect.SimpleAbstractMultisetTest'
p5307
sg16
(lp5308
sg19
(lp5309
sg22
(lp5310
sg25
I0
sba(iArchitecture
Entity
p5311
(dp5312
g11
(lp5313
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p5314
sg16
(lp5315
sg19
(lp5316
sg22
(lp5317
sg25
I0
sba(iArchitecture
Entity
p5318
(dp5319
g11
(lp5320
sg14
S'com.google.common.collect.SingletonImmutableList'
p5321
sg16
(lp5322
sg19
(lp5323
sg22
(lp5324
sg25
I0
sba(iArchitecture
Entity
p5325
(dp5326
g11
(lp5327
sg14
S'com.google.common.collect.SingletonImmutableSet'
p5328
sg16
(lp5329
sg19
(lp5330
sg22
(lp5331
sg25
I0
sba(iArchitecture
Entity
p5332
(dp5333
g11
(lp5334
sg14
S'com.google.common.collect.SingletonImmutableTableTest'
p5335
sg16
(lp5336
sg19
(lp5337
sg22
(lp5338
sg25
I0
sba(iArchitecture
Entity
p5339
(dp5340
g11
(lp5341
sg14
S'com.google.common.collect.SingletonImmutableTableTest_gwt'
p5342
sg16
(lp5343
sg19
(lp5344
sg22
(lp5345
sg25
I0
sba(iArchitecture
Entity
p5346
(dp5347
g11
(lp5348
sg14
S'com.google.common.collect.SortedCopyBenchmark'
p5349
sg16
(lp5350
sg19
(lp5351
sg22
(lp5352
sg25
I0
sba(iArchitecture
Entity
p5353
(dp5354
g11
(lp5355
sg14
S'com.google.common.collect.StandardTable'
p5356
sg16
(lp5357
sg19
(lp5358
sg22
(lp5359
sg25
I0
sba(iArchitecture
Entity
p5360
(dp5361
g11
(lp5362
sg14
S'com.google.common.collect.SubMapMultimapAsMapImplementsMapTest'
p5363
sg16
(lp5364
sg19
(lp5365
sg22
(lp5366
sg25
I0
sba(iArchitecture
Entity
p5367
(dp5368
g11
(lp5369
sg14
S'com.google.common.collect.SubMapMultimapAsMapImplementsMapTest_gwt'
p5370
sg16
(lp5371
sg19
(lp5372
sg22
(lp5373
sg25
I0
sba(iArchitecture
Entity
p5374
(dp5375
g11
(lp5376
sg14
S'com.google.common.collect.Synchronized'
p5377
sg16
(lp5378
sg19
(lp5379
sg22
(lp5380
sg25
I0
sba(iArchitecture
Entity
p5381
(dp5382
g11
(lp5383
sg14
S'com.google.common.collect.SynchronizedDequeTest'
p5384
sg16
(lp5385
sg19
(lp5386
sg22
(lp5387
sg25
I0
sba(iArchitecture
Entity
p5388
(dp5389
g11
(lp5390
sg14
S'com.google.common.collect.SynchronizedMapTest'
p5391
sg16
(lp5392
sg19
(lp5393
sg22
(lp5394
sg25
I0
sba(iArchitecture
Entity
p5395
(dp5396
g11
(lp5397
sg14
S'com.google.common.collect.SynchronizedMultimapTest'
p5398
sg16
(lp5399
sg19
(lp5400
sg22
(lp5401
sg25
I0
sba(iArchitecture
Entity
p5402
(dp5403
g11
(lp5404
sg14
S'com.google.common.collect.SynchronizedNavigableMapTest'
p5405
sg16
(lp5406
sg19
(lp5407
sg22
(lp5408
sg25
I0
sba(iArchitecture
Entity
p5409
(dp5410
g11
(lp5411
sg14
S'com.google.common.collect.SynchronizedNavigableSetTest'
p5412
sg16
(lp5413
sg19
(lp5414
sg22
(lp5415
sg25
I0
sba(iArchitecture
Entity
p5416
(dp5417
g11
(lp5418
sg14
S'com.google.common.collect.SynchronizedQueueTest'
p5419
sg16
(lp5420
sg19
(lp5421
sg22
(lp5422
sg25
I0
sba(iArchitecture
Entity
p5423
(dp5424
g11
(lp5425
sg14
S'com.google.common.collect.SynchronizedSetTest'
p5426
sg16
(lp5427
sg19
(lp5428
sg22
(lp5429
sg25
I0
sba(iArchitecture
Entity
p5430
(dp5431
g11
(lp5432
sg14
S'com.google.common.collect.TableCollectionTest_gwt'
p5433
sg16
(lp5434
sg19
(lp5435
sg22
(lp5436
sg25
I0
sba(iArchitecture
Entity
p5437
(dp5438
g11
(lp5439
sg14
S'com.google.common.collect.TransformedListIterator'
p5440
sg16
(lp5441
sg19
(lp5442
sg22
(lp5443
sg25
I0
sba(iArchitecture
Entity
p5444
(dp5445
g11
(lp5446
sg14
S'com.google.common.collect.TransposedTableTest_gwt'
p5447
sg16
(lp5448
sg19
(lp5449
sg22
(lp5450
sg25
I0
sba(iArchitecture
Entity
p5451
(dp5452
g11
(lp5453
sg14
S'com.google.common.collect.TreeBasedTableTest'
p5454
sg16
(lp5455
sg19
(lp5456
sg22
(lp5457
sg25
I0
sba(iArchitecture
Entity
p5458
(dp5459
g11
(lp5460
sg14
S'com.google.common.collect.TreeBasedTableTest_gwt'
p5461
sg16
(lp5462
sg19
(lp5463
sg22
(lp5464
sg25
I0
sba(iArchitecture
Entity
p5465
(dp5466
g11
(lp5467
sg14
S'com.google.common.collect.TreeMultimapExplicitTest'
p5468
sg16
(lp5469
sg19
(lp5470
sg22
(lp5471
sg25
I0
sba(iArchitecture
Entity
p5472
(dp5473
g11
(lp5474
sg14
S'com.google.common.collect.TreeMultimapNaturalTest'
p5475
sg16
(lp5476
sg19
(lp5477
sg22
(lp5478
sg25
I0
sba(iArchitecture
Entity
p5479
(dp5480
g11
(lp5481
sg14
S'com.google.common.collect.TreeMultiset'
p5482
sg16
(lp5483
sg19
(lp5484
sg22
(lp5485
sg25
I0
sba(iArchitecture
Entity
p5486
(dp5487
g11
(lp5488
sg14
S'com.google.common.collect.TreeMultisetTest'
p5489
sg16
(lp5490
sg19
(lp5491
sg22
(lp5492
sg25
I0
sba(iArchitecture
Entity
p5493
(dp5494
g11
(lp5495
sg14
S'com.google.common.collect.TreeRangeMap'
p5496
sg16
(lp5497
sg19
(lp5498
sg22
(lp5499
sg25
I0
sba(iArchitecture
Entity
p5500
(dp5501
g11
(lp5502
sg14
S'com.google.common.collect.TreeRangeMapTest'
p5503
sg16
(lp5504
sg19
(lp5505
sg22
(lp5506
sg25
I0
sba(iArchitecture
Entity
p5507
(dp5508
g11
(lp5509
sg14
S'com.google.common.collect.TreeRangeSet'
p5510
sg16
(lp5511
sg19
(lp5512
sg22
(lp5513
sg25
I0
sba(iArchitecture
Entity
p5514
(dp5515
g11
(lp5516
sg14
S'com.google.common.collect.TreeRangeSetTest'
p5517
sg16
(lp5518
sg19
(lp5519
sg22
(lp5520
sg25
I0
sba(iArchitecture
Entity
p5521
(dp5522
g11
(lp5523
sg14
S'com.google.common.collect.TreeTraverserTest'
p5524
sg16
(lp5525
sg19
(lp5526
sg22
(lp5527
sg25
I0
sba(iArchitecture
Entity
p5528
(dp5529
g11
(lp5530
sg14
S'com.google.common.collect.UnmodifiableIteratorTest'
p5531
sg16
(lp5532
sg19
(lp5533
sg22
(lp5534
sg25
I0
sba(iArchitecture
Entity
p5535
(dp5536
g11
(lp5537
sg14
S'com.google.common.collect.UnmodifiableListIteratorTest'
p5538
sg16
(lp5539
sg19
(lp5540
sg22
(lp5541
sg25
I0
sba(iArchitecture
Entity
p5542
(dp5543
g11
(lp5544
sg14
S'com.google.common.collect.UnmodifiableMultimapAsMapImplementsMapTest_gwt'
p5545
sg16
(lp5546
sg19
(lp5547
sg22
(lp5548
sg25
I0
sba(iArchitecture
Entity
p5549
(dp5550
g11
(lp5551
sg14
S'com.google.common.collect.testing.AbstractIteratorTester'
p5552
sg16
(lp5553
sg19
(lp5554
sg22
(lp5555
sg25
I0
sba(iArchitecture
Entity
p5556
(dp5557
g11
(lp5558
sg14
S'com.google.common.collect.testing.AbstractTester'
p5559
sg16
(lp5560
sg19
(lp5561
sg22
(lp5562
sg25
I0
sba(iArchitecture
Entity
p5563
(dp5564
g11
(lp5565
sg14
S'com.google.common.collect.testing.FeatureSpecificTestSuiteBuilderTest'
p5566
sg16
(lp5567
sg19
(lp5568
sg22
(lp5569
sg25
I0
sba(iArchitecture
Entity
p5570
(dp5571
g11
(lp5572
sg14
S'com.google.common.collect.testing.Helpers'
p5573
sg16
(lp5574
sg19
(lp5575
sg22
(lp5576
sg25
I0
sba(iArchitecture
Entity
p5577
(dp5578
g11
(lp5579
sg14
S'com.google.common.collect.testing.IteratorTesterTest'
p5580
sg16
(lp5581
sg19
(lp5582
sg22
(lp5583
sg25
I0
sba(iArchitecture
Entity
p5584
(dp5585
g11
(lp5586
sg14
S'com.google.common.collect.testing.MinimalCollection'
p5587
sg16
(lp5588
sg19
(lp5589
sg22
(lp5590
sg25
I0
sba(iArchitecture
Entity
p5591
(dp5592
g11
(lp5593
sg14
S'com.google.common.collect.testing.MinimalIterableTest'
p5594
sg16
(lp5595
sg19
(lp5596
sg22
(lp5597
sg25
I0
sba(iArchitecture
Entity
p5598
(dp5599
g11
(lp5600
sg14
S'com.google.common.collect.testing.OneSizeGenerator'
p5601
sg16
(lp5602
sg19
(lp5603
sg22
(lp5604
sg25
I0
sba(iArchitecture
Entity
p5605
(dp5606
g11
(lp5607
sg14
S'com.google.common.collect.testing.SafeTreeMap'
p5608
sg16
(lp5609
sg19
(lp5610
sg22
(lp5611
sg25
I0
sba(iArchitecture
Entity
p5612
(dp5613
g11
(lp5614
sg14
S'com.google.common.collect.testing.SafeTreeSet'
p5615
sg16
(lp5616
sg19
(lp5617
sg22
(lp5618
sg25
I0
sba(iArchitecture
Entity
p5619
(dp5620
g11
(lp5621
sg14
S'com.google.common.collect.testing.SampleElements'
p5622
sg16
(lp5623
sg19
(lp5624
sg22
(lp5625
sg25
I0
sba(iArchitecture
Entity
p5626
(dp5627
g11
(lp5628
sg14
S'com.google.common.collect.testing.TestEnumMapGenerator'
p5629
sg16
(lp5630
sg19
(lp5631
sg22
(lp5632
sg25
I0
sba(iArchitecture
Entity
p5633
(dp5634
g11
(lp5635
sg14
S'com.google.common.collect.testing.TestEnumSetGenerator'
p5636
sg16
(lp5637
sg19
(lp5638
sg22
(lp5639
sg25
I0
sba(iArchitecture
Entity
p5640
(dp5641
g11
(lp5642
sg14
S'com.google.common.collect.testing.TestStringCollectionGenerator'
p5643
sg16
(lp5644
sg19
(lp5645
sg22
(lp5646
sg25
I0
sba(iArchitecture
Entity
p5647
(dp5648
g11
(lp5649
sg14
S'com.google.common.collect.testing.TestStringListGenerator'
p5650
sg16
(lp5651
sg19
(lp5652
sg22
(lp5653
sg25
I0
sba(iArchitecture
Entity
p5654
(dp5655
g11
(lp5656
sg14
S'com.google.common.collect.testing.TestStringMapGenerator'
p5657
sg16
(lp5658
sg19
(lp5659
sg22
(lp5660
sg25
I0
sba(iArchitecture
Entity
p5661
(dp5662
g11
(lp5663
sg14
S'com.google.common.collect.testing.TestStringQueueGenerator'
p5664
sg16
(lp5665
sg19
(lp5666
sg22
(lp5667
sg25
I0
sba(iArchitecture
Entity
p5668
(dp5669
g11
(lp5670
sg14
S'com.google.common.collect.testing.TestUnhashableCollectionGenerator'
p5671
sg16
(lp5672
sg19
(lp5673
sg22
(lp5674
sg25
I0
sba(iArchitecture
Entity
p5675
(dp5676
g11
(lp5677
sg14
S'com.google.common.collect.testing.TestsForListsInJavaUtil'
p5678
sg16
(lp5679
sg19
(lp5680
sg22
(lp5681
sg25
I0
sba(iArchitecture
Entity
p5682
(dp5683
g11
(lp5684
sg14
S'com.google.common.collect.testing.TestsForQueuesInJavaUtil'
p5685
sg16
(lp5686
sg19
(lp5687
sg22
(lp5688
sg25
I0
sba(iArchitecture
Entity
p5689
(dp5690
g11
(lp5691
sg14
S'com.google.common.collect.testing.TestsForSetsInJavaUtil'
p5692
sg16
(lp5693
sg19
(lp5694
sg22
(lp5695
sg25
I0
sba(iArchitecture
Entity
p5696
(dp5697
g11
(lp5698
sg14
S'com.google.common.collect.testing.UnhashableObject'
p5699
sg16
(lp5700
sg19
(lp5701
sg22
(lp5702
sg25
I0
sba(iArchitecture
Entity
p5703
(dp5704
g11
(lp5705
sg14
S'com.google.common.collect.testing.features.TesterRequirements'
p5706
sg16
(lp5707
sg19
(lp5708
sg22
(lp5709
sg25
I0
sba(iArchitecture
Entity
p5710
(dp5711
g11
(lp5712
sg14
S'com.google.common.collect.testing.google.AbstractMultisetSetCountTester'
p5713
sg16
(lp5714
sg19
(lp5715
sg22
(lp5716
sg25
I0
sba(iArchitecture
Entity
p5717
(dp5718
g11
(lp5719
sg14
S'com.google.common.collect.testing.google.BiMapClearTester'
p5720
sg16
(lp5721
sg19
(lp5722
sg22
(lp5723
sg25
I0
sba(iArchitecture
Entity
p5724
(dp5725
g11
(lp5726
sg14
S'com.google.common.collect.testing.google.BiMapRemoveTester'
p5727
sg16
(lp5728
sg19
(lp5729
sg22
(lp5730
sg25
I0
sba(iArchitecture
Entity
p5731
(dp5732
g11
(lp5733
sg14
S'com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators'
p5734
sg16
(lp5735
sg19
(lp5736
sg22
(lp5737
sg25
I0
sba(iArchitecture
Entity
p5738
(dp5739
g11
(lp5740
sg14
S'com.google.common.collect.testing.google.MultimapClearTester'
p5741
sg16
(lp5742
sg19
(lp5743
sg22
(lp5744
sg25
I0
sba(iArchitecture
Entity
p5745
(dp5746
g11
(lp5747
sg14
S'com.google.common.collect.testing.google.MultimapContainsEntryTester'
p5748
sg16
(lp5749
sg19
(lp5750
sg22
(lp5751
sg25
I0
sba(iArchitecture
Entity
p5752
(dp5753
g11
(lp5754
sg14
S'com.google.common.collect.testing.google.MultimapContainsKeyTester'
p5755
sg16
(lp5756
sg19
(lp5757
sg22
(lp5758
sg25
I0
sba(iArchitecture
Entity
p5759
(dp5760
g11
(lp5761
sg14
S'com.google.common.collect.testing.google.MultimapGetTester'
p5762
sg16
(lp5763
sg19
(lp5764
sg22
(lp5765
sg25
I0
sba(iArchitecture
Entity
p5766
(dp5767
g11
(lp5768
sg14
S'com.google.common.collect.testing.google.MultimapPutAllMultimapTester'
p5769
sg16
(lp5770
sg19
(lp5771
sg22
(lp5772
sg25
I0
sba(iArchitecture
Entity
p5773
(dp5774
g11
(lp5775
sg14
S'com.google.common.collect.testing.google.MultimapPutIterableTester'
p5776
sg16
(lp5777
sg19
(lp5778
sg22
(lp5779
sg25
I0
sba(iArchitecture
Entity
p5780
(dp5781
g11
(lp5782
sg14
S'com.google.common.collect.testing.google.MultimapPutTester'
p5783
sg16
(lp5784
sg19
(lp5785
sg22
(lp5786
sg25
I0
sba(iArchitecture
Entity
p5787
(dp5788
g11
(lp5789
sg14
S'com.google.common.collect.testing.google.MultimapSizeTester'
p5790
sg16
(lp5791
sg19
(lp5792
sg22
(lp5793
sg25
I0
sba(iArchitecture
Entity
p5794
(dp5795
g11
(lp5796
sg14
S'com.google.common.collect.testing.google.MultisetAddTester'
p5797
sg16
(lp5798
sg19
(lp5799
sg22
(lp5800
sg25
I0
sba(iArchitecture
Entity
p5801
(dp5802
g11
(lp5803
sg14
S'com.google.common.collect.testing.google.MultisetCountTester'
p5804
sg16
(lp5805
sg19
(lp5806
sg22
(lp5807
sg25
I0
sba(iArchitecture
Entity
p5808
(dp5809
g11
(lp5810
sg14
S'com.google.common.collect.testing.google.MultisetNavigationTester'
p5811
sg16
(lp5812
sg19
(lp5813
sg22
(lp5814
sg25
I0
sba(iArchitecture
Entity
p5815
(dp5816
g11
(lp5817
sg14
S'com.google.common.collect.testing.google.MultisetReadsTester'
p5818
sg16
(lp5819
sg19
(lp5820
sg22
(lp5821
sg25
I0
sba(iArchitecture
Entity
p5822
(dp5823
g11
(lp5824
sg14
S'com.google.common.collect.testing.google.MultisetRemoveTester'
p5825
sg16
(lp5826
sg19
(lp5827
sg22
(lp5828
sg25
I0
sba(iArchitecture
Entity
p5829
(dp5830
g11
(lp5831
sg14
S'com.google.common.collect.testing.google.MultisetSetCountConditionallyTester'
p5832
sg16
(lp5833
sg19
(lp5834
sg22
(lp5835
sg25
I0
sba(iArchitecture
Entity
p5836
(dp5837
g11
(lp5838
sg14
S'com.google.common.collect.testing.google.MultisetSetCountUnconditionallyTester'
p5839
sg16
(lp5840
sg19
(lp5841
sg22
(lp5842
sg25
I0
sba(iArchitecture
Entity
p5843
(dp5844
g11
(lp5845
sg14
S'com.google.common.collect.testing.google.TestStringBiMapGenerator'
p5846
sg16
(lp5847
sg19
(lp5848
sg22
(lp5849
sg25
I0
sba(iArchitecture
Entity
p5850
(dp5851
g11
(lp5852
sg14
S'com.google.common.collect.testing.google.TestStringListMultimapGenerator'
p5853
sg16
(lp5854
sg19
(lp5855
sg22
(lp5856
sg25
I0
sba(iArchitecture
Entity
p5857
(dp5858
g11
(lp5859
sg14
S'com.google.common.collect.testing.google.TestStringMultisetGenerator'
p5860
sg16
(lp5861
sg19
(lp5862
sg22
(lp5863
sg25
I0
sba(iArchitecture
Entity
p5864
(dp5865
g11
(lp5866
sg14
S'com.google.common.collect.testing.google.TestStringSetMultimapGenerator'
p5867
sg16
(lp5868
sg19
(lp5869
sg22
(lp5870
sg25
I0
sba(iArchitecture
Entity
p5871
(dp5872
g11
(lp5873
sg14
S'com.google.common.collect.testing.testers.AbstractListIndexOfTester'
p5874
sg16
(lp5875
sg19
(lp5876
sg22
(lp5877
sg25
I0
sba(iArchitecture
Entity
p5878
(dp5879
g11
(lp5880
sg14
S'com.google.common.collect.testing.testers.CollectionContainsAllTester'
p5881
sg16
(lp5882
sg19
(lp5883
sg22
(lp5884
sg25
I0
sba(iArchitecture
Entity
p5885
(dp5886
g11
(lp5887
sg14
S'com.google.common.collect.testing.testers.CollectionContainsTester'
p5888
sg16
(lp5889
sg19
(lp5890
sg22
(lp5891
sg25
I0
sba(iArchitecture
Entity
p5892
(dp5893
g11
(lp5894
sg14
S'com.google.common.collect.testing.testers.CollectionRemoveAllTester'
p5895
sg16
(lp5896
sg19
(lp5897
sg22
(lp5898
sg25
I0
sba(iArchitecture
Entity
p5899
(dp5900
g11
(lp5901
sg14
S'com.google.common.collect.testing.testers.CollectionRemoveTester'
p5902
sg16
(lp5903
sg19
(lp5904
sg22
(lp5905
sg25
I0
sba(iArchitecture
Entity
p5906
(dp5907
g11
(lp5908
sg14
S'com.google.common.collect.testing.testers.CollectionRetainAllTester'
p5909
sg16
(lp5910
sg19
(lp5911
sg22
(lp5912
sg25
I0
sba(iArchitecture
Entity
p5913
(dp5914
g11
(lp5915
sg14
S'com.google.common.collect.testing.testers.CollectionToArrayTester'
p5916
sg16
(lp5917
sg19
(lp5918
sg22
(lp5919
sg25
I0
sba(iArchitecture
Entity
p5920
(dp5921
g11
(lp5922
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapPutIfAbsentTester'
p5923
sg16
(lp5924
sg19
(lp5925
sg22
(lp5926
sg25
I0
sba(iArchitecture
Entity
p5927
(dp5928
g11
(lp5929
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapReplaceEntryTester'
p5930
sg16
(lp5931
sg19
(lp5932
sg22
(lp5933
sg25
I0
sba(iArchitecture
Entity
p5934
(dp5935
g11
(lp5936
sg14
S'com.google.common.collect.testing.testers.ListAddAllAtIndexTester'
p5937
sg16
(lp5938
sg19
(lp5939
sg22
(lp5940
sg25
I0
sba(iArchitecture
Entity
p5941
(dp5942
g11
(lp5943
sg14
S'com.google.common.collect.testing.testers.ListEqualsTester'
p5944
sg16
(lp5945
sg19
(lp5946
sg22
(lp5947
sg25
I0
sba(iArchitecture
Entity
p5948
(dp5949
g11
(lp5950
sg14
S'com.google.common.collect.testing.testers.ListSetTester'
p5951
sg16
(lp5952
sg19
(lp5953
sg22
(lp5954
sg25
I0
sba(iArchitecture
Entity
p5955
(dp5956
g11
(lp5957
sg14
S'com.google.common.collect.testing.testers.ListSubListTester'
p5958
sg16
(lp5959
sg19
(lp5960
sg22
(lp5961
sg25
I0
sba(iArchitecture
Entity
p5962
(dp5963
g11
(lp5964
sg14
S'com.google.common.collect.testing.testers.MapContainsKeyTester'
p5965
sg16
(lp5966
sg19
(lp5967
sg22
(lp5968
sg25
I0
sba(iArchitecture
Entity
p5969
(dp5970
g11
(lp5971
sg14
S'com.google.common.collect.testing.testers.MapContainsValueTester'
p5972
sg16
(lp5973
sg19
(lp5974
sg22
(lp5975
sg25
I0
sba(iArchitecture
Entity
p5976
(dp5977
g11
(lp5978
sg14
S'com.google.common.collect.testing.testers.MapGetTester'
p5979
sg16
(lp5980
sg19
(lp5981
sg22
(lp5982
sg25
I0
sba(iArchitecture
Entity
p5983
(dp5984
g11
(lp5985
sg14
S'com.google.common.collect.testing.testers.MapPutTester'
p5986
sg16
(lp5987
sg19
(lp5988
sg22
(lp5989
sg25
I0
sba(iArchitecture
Entity
p5990
(dp5991
g11
(lp5992
sg14
S'com.google.common.collect.testing.testers.MapRemoveTester'
p5993
sg16
(lp5994
sg19
(lp5995
sg22
(lp5996
sg25
I0
sba(iArchitecture
Entity
p5997
(dp5998
g11
(lp5999
sg14
S'com.google.common.collect.testing.testers.NavigableMapNavigationTester'
p6000
sg16
(lp6001
sg19
(lp6002
sg22
(lp6003
sg25
I0
sba(iArchitecture
Entity
p6004
(dp6005
g11
(lp6006
sg14
S'com.google.common.collect.testing.testers.NavigableSetNavigationTester'
p6007
sg16
(lp6008
sg19
(lp6009
sg22
(lp6010
sg25
I0
sba(iArchitecture
Entity
p6011
(dp6012
g11
(lp6013
sg14
S'com.google.common.collect.testing.testers.Platform'
p6014
sg16
(lp6015
sg19
(lp6016
sg22
(lp6017
sg25
I0
sba(iArchitecture
Entity
p6018
(dp6019
g11
(lp6020
sg14
S'com.google.common.collect.testing.testers.SetEqualsTester'
p6021
sg16
(lp6022
sg19
(lp6023
sg22
(lp6024
sg25
I0
sba(iArchitecture
Entity
p6025
(dp6026
g11
(lp6027
sg14
S'com.google.common.collect.testing.testers.SortedMapNavigationTester'
p6028
sg16
(lp6029
sg19
(lp6030
sg22
(lp6031
sg25
I0
sba(iArchitecture
Entity
p6032
(dp6033
g11
(lp6034
sg14
S'com.google.common.escape.ArrayBasedEscaperMapTest'
p6035
sg16
(lp6036
sg19
(lp6037
sg22
(lp6038
sg25
I0
sba(iArchitecture
Entity
p6039
(dp6040
g11
(lp6041
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaperTest'
p6042
sg16
(lp6043
sg19
(lp6044
sg22
(lp6045
sg25
I0
sba(iArchitecture
Entity
p6046
(dp6047
g11
(lp6048
sg14
S'com.google.common.escape.CharEscaper'
p6049
sg16
(lp6050
sg19
(lp6051
sg22
(lp6052
sg25
I0
sba(iArchitecture
Entity
p6053
(dp6054
g11
(lp6055
sg14
S'com.google.common.escape.CharEscaperBuilder'
p6056
sg16
(lp6057
sg19
(lp6058
sg22
(lp6059
sg25
I0
sba(iArchitecture
Entity
p6060
(dp6061
g11
(lp6062
sg14
S'com.google.common.escape.UnicodeEscaper'
p6063
sg16
(lp6064
sg19
(lp6065
sg22
(lp6066
sg25
I0
sba(iArchitecture
Entity
p6067
(dp6068
g11
(lp6069
sg14
S'com.google.common.escape.UnicodeEscaperTest'
p6070
sg16
(lp6071
sg19
(lp6072
sg22
(lp6073
sg25
I0
sba(iArchitecture
Entity
p6074
(dp6075
g11
(lp6076
sg14
S'com.google.common.escape.testing.EscaperAsserts'
p6077
sg16
(lp6078
sg19
(lp6079
sg22
(lp6080
sg25
I0
sba(iArchitecture
Entity
p6081
(dp6082
g11
(lp6083
sg14
S'com.google.common.eventbus.DispatcherTest'
p6084
sg16
(lp6085
sg19
(lp6086
sg22
(lp6087
sg25
I0
sba(iArchitecture
Entity
p6088
(dp6089
g11
(lp6090
sg14
S'com.google.common.eventbus.ReentrantEventsTest'
p6091
sg16
(lp6092
sg19
(lp6093
sg22
(lp6094
sg25
I0
sba(iArchitecture
Entity
p6095
(dp6096
g11
(lp6097
sg14
S'com.google.common.eventbus.Subscriber'
p6098
sg16
(lp6099
sg19
(lp6100
sg22
(lp6101
sg25
I0
sba(iArchitecture
Entity
p6102
(dp6103
g11
(lp6104
sg14
S'com.google.common.eventbus.SubscriberTest'
p6105
sg16
(lp6106
sg19
(lp6107
sg22
(lp6108
sg25
I0
sba(iArchitecture
Entity
p6109
(dp6110
g11
(lp6111
sg14
S'com.google.common.eventbus.outside.AnnotatedSubscriberFinderTests'
p6112
sg16
(lp6113
sg19
(lp6114
sg22
(lp6115
sg25
I0
sba(iArchitecture
Entity
p6116
(dp6117
g11
(lp6118
sg14
S'com.google.common.hash.AbstractByteHasherTest'
p6119
sg16
(lp6120
sg19
(lp6121
sg22
(lp6122
sg25
I0
sba(iArchitecture
Entity
p6123
(dp6124
g11
(lp6125
sg14
S'com.google.common.hash.AbstractCompositeHashFunction'
p6126
sg16
(lp6127
sg19
(lp6128
sg22
(lp6129
sg25
I0
sba(iArchitecture
Entity
p6130
(dp6131
g11
(lp6132
sg14
S'com.google.common.hash.BloomFilterStrategies'
p6133
sg16
(lp6134
sg19
(lp6135
sg22
(lp6136
sg25
I0
sba(iArchitecture
Entity
p6137
(dp6138
g11
(lp6139
sg14
S'com.google.common.hash.BloomFilterTest'
p6140
sg16
(lp6141
sg19
(lp6142
sg22
(lp6143
sg25
I0
sba(iArchitecture
Entity
p6144
(dp6145
g11
(lp6146
sg14
S'com.google.common.hash.ChecksumBenchmark'
p6147
sg16
(lp6148
sg19
(lp6149
sg22
(lp6150
sg25
I0
sba(iArchitecture
Entity
p6151
(dp6152
g11
(lp6153
sg14
S'com.google.common.hash.ChecksumHashFunction'
p6154
sg16
(lp6155
sg19
(lp6156
sg22
(lp6157
sg25
I0
sba(iArchitecture
Entity
p6158
(dp6159
g11
(lp6160
sg14
S'com.google.common.hash.Crc32cHashFunction'
p6161
sg16
(lp6162
sg19
(lp6163
sg22
(lp6164
sg25
I0
sba(iArchitecture
Entity
p6165
(dp6166
g11
(lp6167
sg14
S'com.google.common.hash.Crc32cHashFunctionTest'
p6168
sg16
(lp6169
sg19
(lp6170
sg22
(lp6171
sg25
I0
sba(iArchitecture
Entity
p6172
(dp6173
g11
(lp6174
sg14
S'com.google.common.hash.FunnelsTest'
p6175
sg16
(lp6176
sg19
(lp6177
sg22
(lp6178
sg25
I0
sba(iArchitecture
Entity
p6179
(dp6180
g11
(lp6181
sg14
S'com.google.common.hash.HashCode'
p6182
sg16
(lp6183
sg19
(lp6184
sg22
(lp6185
sg25
I0
sba(iArchitecture
Entity
p6186
(dp6187
g11
(lp6188
sg14
S'com.google.common.hash.HashCodeBenchmark'
p6189
sg16
(lp6190
sg19
(lp6191
sg22
(lp6192
sg25
I0
sba(iArchitecture
Entity
p6193
(dp6194
g11
(lp6195
sg14
S'com.google.common.hash.HashCodeTest'
p6196
sg16
(lp6197
sg19
(lp6198
sg22
(lp6199
sg25
I0
sba(iArchitecture
Entity
p6200
(dp6201
g11
(lp6202
sg14
S'com.google.common.hash.HashFunctionBenchmark'
p6203
sg16
(lp6204
sg19
(lp6205
sg22
(lp6206
sg25
I0
sba(iArchitecture
Entity
p6207
(dp6208
g11
(lp6209
sg14
S'com.google.common.hash.HashTestUtils'
p6210
sg16
(lp6211
sg19
(lp6212
sg22
(lp6213
sg25
I0
sba(iArchitecture
Entity
p6214
(dp6215
g11
(lp6216
sg14
S'com.google.common.hash.Hashing'
p6217
sg16
(lp6218
sg19
(lp6219
sg22
(lp6220
sg25
I0
sba(iArchitecture
Entity
p6221
(dp6222
g11
(lp6223
sg14
S'com.google.common.hash.HashingInputStreamTest'
p6224
sg16
(lp6225
sg19
(lp6226
sg22
(lp6227
sg25
I0
sba(iArchitecture
Entity
p6228
(dp6229
g11
(lp6230
sg14
S'com.google.common.hash.HashingTest'
p6231
sg16
(lp6232
sg19
(lp6233
sg22
(lp6234
sg25
I0
sba(iArchitecture
Entity
p6235
(dp6236
g11
(lp6237
sg14
S'com.google.common.hash.MessageDigestCreationBenchmark'
p6238
sg16
(lp6239
sg19
(lp6240
sg22
(lp6241
sg25
I0
sba(iArchitecture
Entity
p6242
(dp6243
g11
(lp6244
sg14
S'com.google.common.hash.Murmur3Hash32Test'
p6245
sg16
(lp6246
sg19
(lp6247
sg22
(lp6248
sg25
I0
sba(iArchitecture
Entity
p6249
(dp6250
g11
(lp6251
sg14
S'com.google.common.hash.Murmur3_128HashFunction'
p6252
sg16
(lp6253
sg19
(lp6254
sg22
(lp6255
sg25
I0
sba(iArchitecture
Entity
p6256
(dp6257
g11
(lp6258
sg14
S'com.google.common.hash.Murmur3_32HashFunction'
p6259
sg16
(lp6260
sg19
(lp6261
sg22
(lp6262
sg25
I0
sba(iArchitecture
Entity
p6263
(dp6264
g11
(lp6265
sg14
S'com.google.common.hash.SipHashFunction'
p6266
sg16
(lp6267
sg19
(lp6268
sg22
(lp6269
sg25
I0
sba(iArchitecture
Entity
p6270
(dp6271
g11
(lp6272
V2124
p6273
asg14
S'com.google.common.io.BaseEncoding'
p6274
sg16
(lp6275
VThe next GWT release will probably have emulations for `Charset` built in. Internal CL 99622756 will be removing our custom emulations, but I think we can go further, changing calls to methods like `getBytes` to use the `Charset` versions.\u000a\u000aThis assumes that we require the new GWT version for the post-19 Guava release. This was not the plan on #1999 but might be reasonable. Otherwise, we need a workaround. We'd need to figure out if our emulations would interfere with the GWT versions for users who _are_ using the new GWT.\u000a
p6276
asg19
(lp6277
(lp6278
I0
aasg22
(lp6279
VUse String.getBytes(Charset) and other Charset utilities once GWT supports them
p6280
asg25
I0
sba(iArchitecture
Entity
p6281
(dp6282
g11
(lp6283
sg14
S'com.google.common.io.BaseEncodingBenchmark'
p6284
sg16
(lp6285
sg19
(lp6286
sg22
(lp6287
sg25
I0
sba(iArchitecture
Entity
p6288
(dp6289
g11
(lp6290
sg14
S'com.google.common.io.ByteArrayDataOutput'
p6291
sg16
(lp6292
sg19
(lp6293
sg22
(lp6294
sg25
I0
sba(iArchitecture
Entity
p6295
(dp6296
g11
(lp6297
sg14
S'com.google.common.io.ByteSourceTester'
p6298
sg16
(lp6299
sg19
(lp6300
sg22
(lp6301
sg25
I0
sba(iArchitecture
Entity
p6302
(dp6303
g11
(lp6304
sg14
S'com.google.common.io.CharSequenceReader'
p6305
sg16
(lp6306
sg19
(lp6307
sg22
(lp6308
sg25
I0
sba(iArchitecture
Entity
p6309
(dp6310
g11
(lp6311
sg14
S'com.google.common.io.FilesSimplifyPathTest'
p6312
sg16
(lp6313
sg19
(lp6314
sg22
(lp6315
sg25
I0
sba(iArchitecture
Entity
p6316
(dp6317
g11
(lp6318
sg14
S'com.google.common.io.MultiReader'
p6319
sg16
(lp6320
sg19
(lp6321
sg22
(lp6322
sg25
I0
sba(iArchitecture
Entity
p6323
(dp6324
g11
(lp6325
sg14
S'com.google.common.math.ApacheBenchmark'
p6326
sg16
(lp6327
sg19
(lp6328
sg22
(lp6329
sg25
I0
sba(iArchitecture
Entity
p6330
(dp6331
g11
(lp6332
sg14
S'com.google.common.math.BigIntegerMath'
p6333
sg16
(lp6334
sg19
(lp6335
sg22
(lp6336
sg25
I0
sba(iArchitecture
Entity
p6337
(dp6338
g11
(lp6339
sg14
S'com.google.common.math.BigIntegerMathBenchmark'
p6340
sg16
(lp6341
sg19
(lp6342
sg22
(lp6343
sg25
I0
sba(iArchitecture
Entity
p6344
(dp6345
g11
(lp6346
sg14
S'com.google.common.math.BigIntegerMathRoundingBenchmark'
p6347
sg16
(lp6348
sg19
(lp6349
sg22
(lp6350
sg25
I0
sba(iArchitecture
Entity
p6351
(dp6352
g11
(lp6353
sg14
S'com.google.common.math.BigIntegerMathTest'
p6354
sg16
(lp6355
sg19
(lp6356
sg22
(lp6357
sg25
I0
sba(iArchitecture
Entity
p6358
(dp6359
g11
(lp6360
sg14
S'com.google.common.math.DoubleMathBenchmark'
p6361
sg16
(lp6362
sg19
(lp6363
sg22
(lp6364
sg25
I0
sba(iArchitecture
Entity
p6365
(dp6366
g11
(lp6367
sg14
S'com.google.common.math.DoubleMathRoundingBenchmark'
p6368
sg16
(lp6369
sg19
(lp6370
sg22
(lp6371
sg25
I0
sba(iArchitecture
Entity
p6372
(dp6373
g11
(lp6374
sg14
S'com.google.common.math.DoubleMathTest'
p6375
sg16
(lp6376
sg19
(lp6377
sg22
(lp6378
sg25
I0
sba(iArchitecture
Entity
p6379
(dp6380
g11
(lp6381
sg14
S'com.google.common.math.IntMath'
p6382
sg16
(lp6383
sg19
(lp6384
sg22
(lp6385
sg25
I0
sba(iArchitecture
Entity
p6386
(dp6387
g11
(lp6388
sg14
S'com.google.common.math.IntMathBenchmark'
p6389
sg16
(lp6390
sg19
(lp6391
sg22
(lp6392
sg25
I0
sba(iArchitecture
Entity
p6393
(dp6394
g11
(lp6395
sg14
S'com.google.common.math.IntMathRoundingBenchmark'
p6396
sg16
(lp6397
sg19
(lp6398
sg22
(lp6399
sg25
I0
sba(iArchitecture
Entity
p6400
(dp6401
g11
(lp6402
sg14
S'com.google.common.math.IntMathTest'
p6403
sg16
(lp6404
sg19
(lp6405
sg22
(lp6406
sg25
I0
sba(iArchitecture
Entity
p6407
(dp6408
g11
(lp6409
sg14
S'com.google.common.math.LessThanBenchmark'
p6410
sg16
(lp6411
sg19
(lp6412
sg22
(lp6413
sg25
I0
sba(iArchitecture
Entity
p6414
(dp6415
g11
(lp6416
sg14
S'com.google.common.math.LongMath'
p6417
sg16
(lp6418
sg19
(lp6419
sg22
(lp6420
sg25
I0
sba(iArchitecture
Entity
p6421
(dp6422
g11
(lp6423
sg14
S'com.google.common.math.LongMathBenchmark'
p6424
sg16
(lp6425
sg19
(lp6426
sg22
(lp6427
sg25
I0
sba(iArchitecture
Entity
p6428
(dp6429
g11
(lp6430
sg14
S'com.google.common.math.LongMathRoundingBenchmark'
p6431
sg16
(lp6432
sg19
(lp6433
sg22
(lp6434
sg25
I0
sba(iArchitecture
Entity
p6435
(dp6436
g11
(lp6437
sg14
S'com.google.common.math.LongMathTest'
p6438
sg16
(lp6439
sg19
(lp6440
sg22
(lp6441
sg25
I0
sba(iArchitecture
Entity
p6442
(dp6443
g11
(lp6444
sg14
S'com.google.common.math.MathBenchmarking'
p6445
sg16
(lp6446
sg19
(lp6447
sg22
(lp6448
sg25
I0
sba(iArchitecture
Entity
p6449
(dp6450
g11
(lp6451
sg14
S'com.google.common.math.MathPreconditionsTest'
p6452
sg16
(lp6453
sg19
(lp6454
sg22
(lp6455
sg25
I0
sba(iArchitecture
Entity
p6456
(dp6457
g11
(lp6458
sg14
S'com.google.common.net.HostAndPortTest'
p6459
sg16
(lp6460
sg19
(lp6461
sg22
(lp6462
sg25
I0
sba(iArchitecture
Entity
p6463
(dp6464
g11
(lp6465
sg14
S'com.google.common.net.MediaTypeTest'
p6466
sg16
(lp6467
sg19
(lp6468
sg22
(lp6469
sg25
I0
sba(iArchitecture
Entity
p6470
(dp6471
g11
(lp6472
sg14
S'com.google.common.net.PercentEscaper'
p6473
sg16
(lp6474
sg19
(lp6475
sg22
(lp6476
sg25
I0
sba(iArchitecture
Entity
p6477
(dp6478
g11
(lp6479
sg14
S'com.google.common.net.PercentEscaperTest'
p6480
sg16
(lp6481
sg19
(lp6482
sg22
(lp6483
sg25
I0
sba(iArchitecture
Entity
p6484
(dp6485
g11
(lp6486
V1942
p6487
asg14
S'com.google.common.primitives.Booleans'
p6488
sg16
(lp6489
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6490
asg19
(lp6491
(lp6492
I6
aasg22
(lp6493
VLine comment on requiring Java 6
p6494
asg25
I0
sba(iArchitecture
Entity
p6495
(dp6496
g11
(lp6497
sg14
S'com.google.common.primitives.BooleansTest'
p6498
sg16
(lp6499
sg19
(lp6500
sg22
(lp6501
sg25
I0
sba(iArchitecture
Entity
p6502
(dp6503
g11
(lp6504
sg14
S'com.google.common.primitives.BooleansTest_gwt'
p6505
sg16
(lp6506
sg19
(lp6507
sg22
(lp6508
sg25
I0
sba(iArchitecture
Entity
p6509
(dp6510
g11
(lp6511
sg14
S'com.google.common.primitives.ByteArrayAsListTest'
p6512
sg16
(lp6513
sg19
(lp6514
sg22
(lp6515
sg25
I0
sba(iArchitecture
Entity
p6516
(dp6517
g11
(lp6518
g6487
asg14
S'com.google.common.primitives.Bytes'
p6519
sg16
(lp6520
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6521
asg19
(lp6522
g6492
asg22
(lp6523
g6494
asg25
I0
sba(iArchitecture
Entity
p6524
(dp6525
g11
(lp6526
g6487
asg14
S'com.google.common.primitives.Chars'
p6527
sg16
(lp6528
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6529
asg19
(lp6530
g6492
asg22
(lp6531
g6494
asg25
I0
sba(iArchitecture
Entity
p6532
(dp6533
g11
(lp6534
sg14
S'com.google.common.primitives.CharsTest'
p6535
sg16
(lp6536
sg19
(lp6537
sg22
(lp6538
sg25
I0
sba(iArchitecture
Entity
p6539
(dp6540
g11
(lp6541
sg14
S'com.google.common.primitives.DoubleArrayAsListTest'
p6542
sg16
(lp6543
sg19
(lp6544
sg22
(lp6545
sg25
I0
sba(iArchitecture
Entity
p6546
(dp6547
g11
(lp6548
g6487
asg14
S'com.google.common.primitives.Doubles'
p6549
sg16
(lp6550
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6551
asg19
(lp6552
g6492
asg22
(lp6553
g6494
asg25
I0
sba(iArchitecture
Entity
p6554
(dp6555
g11
(lp6556
sg14
S'com.google.common.primitives.DoublesTest'
p6557
sg16
(lp6558
sg19
(lp6559
sg22
(lp6560
sg25
I0
sba(iArchitecture
Entity
p6561
(dp6562
g11
(lp6563
sg14
S'com.google.common.primitives.FloatArrayAsListTest'
p6564
sg16
(lp6565
sg19
(lp6566
sg22
(lp6567
sg25
I0
sba(iArchitecture
Entity
p6568
(dp6569
g11
(lp6570
g6487
asg14
S'com.google.common.primitives.Floats'
p6571
sg16
(lp6572
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6573
asg19
(lp6574
g6492
asg22
(lp6575
g6494
asg25
I0
sba(iArchitecture
Entity
p6576
(dp6577
g11
(lp6578
sg14
S'com.google.common.primitives.IntArrayAsListTest'
p6579
sg16
(lp6580
sg19
(lp6581
sg22
(lp6582
sg25
I0
sba(iArchitecture
Entity
p6583
(dp6584
g11
(lp6585
g6487
asg14
S'com.google.common.primitives.Ints'
p6586
sg16
(lp6587
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6588
asg19
(lp6589
g6492
asg22
(lp6590
g6494
asg25
I0
sba(iArchitecture
Entity
p6591
(dp6592
g11
(lp6593
sg14
S'com.google.common.primitives.IntsTest'
p6594
sg16
(lp6595
sg19
(lp6596
sg22
(lp6597
sg25
I0
sba(iArchitecture
Entity
p6598
(dp6599
g11
(lp6600
sg14
S'com.google.common.primitives.IntsTest_gwt'
p6601
sg16
(lp6602
sg19
(lp6603
sg22
(lp6604
sg25
I0
sba(iArchitecture
Entity
p6605
(dp6606
g11
(lp6607
sg14
S'com.google.common.primitives.LongArrayAsListTest'
p6608
sg16
(lp6609
sg19
(lp6610
sg22
(lp6611
sg25
I0
sba(iArchitecture
Entity
p6612
(dp6613
g11
(lp6614
g6487
asg14
S'com.google.common.primitives.Longs'
p6615
sg16
(lp6616
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6617
asg19
(lp6618
g6492
asg22
(lp6619
g6494
asg25
I0
sba(iArchitecture
Entity
p6620
(dp6621
g11
(lp6622
sg14
S'com.google.common.primitives.LongsTest'
p6623
sg16
(lp6624
sg19
(lp6625
sg22
(lp6626
sg25
I0
sba(iArchitecture
Entity
p6627
(dp6628
g11
(lp6629
sg14
S'com.google.common.primitives.LongsTest_gwt'
p6630
sg16
(lp6631
sg19
(lp6632
sg22
(lp6633
sg25
I0
sba(iArchitecture
Entity
p6634
(dp6635
g11
(lp6636
sg14
S'com.google.common.primitives.PrimitivesTest'
p6637
sg16
(lp6638
sg19
(lp6639
sg22
(lp6640
sg25
I0
sba(iArchitecture
Entity
p6641
(dp6642
g11
(lp6643
sg14
S'com.google.common.primitives.ShortArrayAsListTest'
p6644
sg16
(lp6645
sg19
(lp6646
sg22
(lp6647
sg25
I0
sba(iArchitecture
Entity
p6648
(dp6649
g11
(lp6650
g6487
asg14
S'com.google.common.primitives.Shorts'
p6651
sg16
(lp6652
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6653
asg19
(lp6654
g6492
asg22
(lp6655
g6494
asg25
I0
sba(iArchitecture
Entity
p6656
(dp6657
g11
(lp6658
sg14
S'com.google.common.primitives.ShortsTest'
p6659
sg16
(lp6660
sg19
(lp6661
sg22
(lp6662
sg25
I0
sba(iArchitecture
Entity
p6663
(dp6664
g11
(lp6665
sg14
S'com.google.common.primitives.SignedBytes'
p6666
sg16
(lp6667
sg19
(lp6668
sg22
(lp6669
sg25
I0
sba(iArchitecture
Entity
p6670
(dp6671
g11
(lp6672
sg14
S'com.google.common.primitives.SignedBytesTest'
p6673
sg16
(lp6674
sg19
(lp6675
sg22
(lp6676
sg25
I0
sba(iArchitecture
Entity
p6677
(dp6678
g11
(lp6679
sg14
S'com.google.common.primitives.UnsignedBytes'
p6680
sg16
(lp6681
sg19
(lp6682
sg22
(lp6683
sg25
I0
sba(iArchitecture
Entity
p6684
(dp6685
g11
(lp6686
sg14
S'com.google.common.primitives.UnsignedBytesBenchmark'
p6687
sg16
(lp6688
sg19
(lp6689
sg22
(lp6690
sg25
I0
sba(iArchitecture
Entity
p6691
(dp6692
g11
(lp6693
sg14
S'com.google.common.primitives.UnsignedBytesTest'
p6694
sg16
(lp6695
sg19
(lp6696
sg22
(lp6697
sg25
I0
sba(iArchitecture
Entity
p6698
(dp6699
g11
(lp6700
sg14
S'com.google.common.primitives.UnsignedInteger'
p6701
sg16
(lp6702
sg19
(lp6703
sg22
(lp6704
sg25
I0
sba(iArchitecture
Entity
p6705
(dp6706
g11
(lp6707
sg14
S'com.google.common.primitives.UnsignedIntegerTest'
p6708
sg16
(lp6709
sg19
(lp6710
sg22
(lp6711
sg25
I0
sba(iArchitecture
Entity
p6712
(dp6713
g11
(lp6714
sg14
S'com.google.common.primitives.UnsignedInts'
p6715
sg16
(lp6716
sg19
(lp6717
sg22
(lp6718
sg25
I0
sba(iArchitecture
Entity
p6719
(dp6720
g11
(lp6721
sg14
S'com.google.common.primitives.UnsignedIntsTest'
p6722
sg16
(lp6723
sg19
(lp6724
sg22
(lp6725
sg25
I0
sba(iArchitecture
Entity
p6726
(dp6727
g11
(lp6728
sg14
S'com.google.common.primitives.UnsignedLong'
p6729
sg16
(lp6730
sg19
(lp6731
sg22
(lp6732
sg25
I0
sba(iArchitecture
Entity
p6733
(dp6734
g11
(lp6735
sg14
S'com.google.common.primitives.UnsignedLongTest'
p6736
sg16
(lp6737
sg19
(lp6738
sg22
(lp6739
sg25
I0
sba(iArchitecture
Entity
p6740
(dp6741
g11
(lp6742
sg14
S'com.google.common.primitives.UnsignedLongs'
p6743
sg16
(lp6744
sg19
(lp6745
sg22
(lp6746
sg25
I0
sba(iArchitecture
Entity
p6747
(dp6748
g11
(lp6749
sg14
S'com.google.common.primitives.UnsignedLongsBenchmark'
p6750
sg16
(lp6751
sg19
(lp6752
sg22
(lp6753
sg25
I0
sba(iArchitecture
Entity
p6754
(dp6755
g11
(lp6756
sg14
S'com.google.common.primitives.UnsignedLongsTest'
p6757
sg16
(lp6758
sg19
(lp6759
sg22
(lp6760
sg25
I0
sba(iArchitecture
Entity
p6761
(dp6762
g11
(lp6763
sg14
S'com.google.common.reflect.Element'
p6764
sg16
(lp6765
sg19
(lp6766
sg22
(lp6767
sg25
I0
sba(iArchitecture
Entity
p6768
(dp6769
g11
(lp6770
sg14
S'com.google.common.reflect.ElementTest'
p6771
sg16
(lp6772
sg19
(lp6773
sg22
(lp6774
sg25
I0
sba(iArchitecture
Entity
p6775
(dp6776
g11
(lp6777
sg14
S'com.google.common.reflect.Invokable'
p6778
sg16
(lp6779
sg19
(lp6780
sg22
(lp6781
sg25
I0
sba(iArchitecture
Entity
p6782
(dp6783
g11
(lp6784
sg14
S'com.google.common.reflect.InvokableTest'
p6785
sg16
(lp6786
sg19
(lp6787
sg22
(lp6788
sg25
I0
sba(iArchitecture
Entity
p6789
(dp6790
g11
(lp6791
sg14
S'com.google.common.reflect.Parameter'
p6792
sg16
(lp6793
sg19
(lp6794
sg22
(lp6795
sg25
I0
sba(iArchitecture
Entity
p6796
(dp6797
g11
(lp6798
sg14
S'com.google.common.reflect.ParameterTest'
p6799
sg16
(lp6800
sg19
(lp6801
sg22
(lp6802
sg25
I0
sba(iArchitecture
Entity
p6803
(dp6804
g11
(lp6805
sg14
S'com.google.common.reflect.TypeResolverTest'
p6806
sg16
(lp6807
sg19
(lp6808
sg22
(lp6809
sg25
I0
sba(iArchitecture
Entity
p6810
(dp6811
g11
(lp6812
sg14
S'com.google.common.reflect.TypeTokenTest'
p6813
sg16
(lp6814
sg19
(lp6815
sg22
(lp6816
sg25
I0
sba(iArchitecture
Entity
p6817
(dp6818
g11
(lp6819
sg14
S'com.google.common.testing.ClassSanityTesterTest'
p6820
sg16
(lp6821
sg19
(lp6822
sg22
(lp6823
sg25
I0
sba(iArchitecture
Entity
p6824
(dp6825
g11
(lp6826
sg14
S'com.google.common.testing.EqualsTesterTest'
p6827
sg16
(lp6828
sg19
(lp6829
sg22
(lp6830
sg25
I0
sba(iArchitecture
Entity
p6831
(dp6832
g11
(lp6833
sg14
S'com.google.common.testing.FakeTickerTest'
p6834
sg16
(lp6835
sg19
(lp6836
sg22
(lp6837
sg25
I0
sba(iArchitecture
Entity
p6838
(dp6839
g11
(lp6840
sg14
S'com.google.common.testing.FreshValueGeneratorTest'
p6841
sg16
(lp6842
sg19
(lp6843
sg22
(lp6844
sg25
I0
sba(iArchitecture
Entity
p6845
(dp6846
g11
(lp6847
sg14
S'com.google.common.testing.GcFinalization'
p6848
sg16
(lp6849
sg19
(lp6850
sg22
(lp6851
sg25
I0
sba(iArchitecture
Entity
p6852
(dp6853
g11
(lp6854
sg14
S'com.google.common.testing.GcFinalizationTest'
p6855
sg16
(lp6856
sg19
(lp6857
sg22
(lp6858
sg25
I0
sba(iArchitecture
Entity
p6859
(dp6860
g11
(lp6861
V1819
p6862
asg14
S'com.google.common.testing.NullPointerTesterTest'
p6863
sg16
(lp6864
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1819) created by **ogregoire** on 2014-07-29 at 03:35 PM_\u000a\u000a---\u000a\u000aWhen I call the following, the test case fails (see full test case in attachment).\u000a\u000a&nbsp;&nbsp;new ClassSanityTester().testNulls(MyObject.class);\u000a\u000aI get the following error: No exception thrown for parameter at index 0 from MyObjectTest$MyObject.public boolean MyObjectTest$MyObject.equals(java.lang.Object)[null] for class MyObjectTest$MyObject\u000a\u000aClearly, this indicates that it expects a call to "equals(Object)" to throw a NullPointerException. That method should never throw an exception but rather return true or false. The test seems to skip this assertion and I'm surprised this hasn't been reported earlier. \u000a\u000aPlease make it so ClassSanityTester#testNulls(Class) doesn't fail when equals is behaving correctly (see the test case where testEquals(MyObject.class succeeds).\u000a\u000aOn a side note, the text returned should be adapted as it mentions three times MyObjectTest$MyObject. That's 2 too many, and it renders the whole error message nearly not understandable.\u000a
p6865
asg19
(lp6866
(lp6867
I1
aasg22
(lp6868
VNullPointerTester should not require @Nullable on the param of an equals() override
p6869
asg25
I0
sba(iArchitecture
Entity
p6870
(dp6871
g11
(lp6872
sg14
S'com.google.common.testing.RelationshipTester'
p6873
sg16
(lp6874
sg19
(lp6875
sg22
(lp6876
sg25
I0
sba(iArchitecture
Entity
p6877
(dp6878
g11
(lp6879
sg14
S'com.google.common.testing.SerializableTesterTest'
p6880
sg16
(lp6881
sg19
(lp6882
sg22
(lp6883
sg25
I0
sba(iArchitecture
Entity
p6884
(dp6885
g11
(lp6886
sg14
S'com.google.common.testing.TearDownStackTest'
p6887
sg16
(lp6888
sg19
(lp6889
sg22
(lp6890
sg25
I0
sba(iArchitecture
Entity
p6891
(dp6892
g11
(lp6893
sg14
S'com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest'
p6894
sg16
(lp6895
sg19
(lp6896
sg22
(lp6897
sg25
I0
sba(iArchitecture
Entity
p6898
(dp6899
g11
(lp6900
sg14
S'com.google.common.util.concurrent.AbstractAbstractFutureTest'
p6901
sg16
(lp6902
sg19
(lp6903
sg22
(lp6904
sg25
I0
sba(iArchitecture
Entity
p6905
(dp6906
g11
(lp6907
V1961
p6908
asg14
S'com.google.common.util.concurrent.AbstractFuture'
p6909
sg16
(lp6910
VOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p6911
asg19
(lp6912
(lp6913
I0
aasg22
(lp6914
VMake immediateFailedFuture and immediateCancelledFuture return a TrustedFuture?
p6915
asg25
I0
sba(iArchitecture
Entity
p6916
(dp6917
g11
(lp6918
sg14
S'com.google.common.util.concurrent.AbstractFutureTest'
p6919
sg16
(lp6920
sg19
(lp6921
sg22
(lp6922
sg25
I0
sba(iArchitecture
Entity
p6923
(dp6924
g11
(lp6925
sg14
S'com.google.common.util.concurrent.AbstractIdleService'
p6926
sg16
(lp6927
sg19
(lp6928
sg22
(lp6929
sg25
I0
sba(iArchitecture
Entity
p6930
(dp6931
g11
(lp6932
V2463
p6933
ag6933
asg14
S'com.google.common.util.concurrent.AggregateFuture'
p6934
sg16
(lp6935
VWe already do in `AbstractFuture`.\u000a
p6936
aVWe already do in `AbstractFuture`.\u000a
p6937
asg19
(lp6938
(lp6939
I1
aag6939
asg22
(lp6940
VWork around Samsung 5.0.x Atomic*FieldUpdater bug in AggregateFutureState and InterruptibleTask
p6941
ag6941
asg25
I0
sba(iArchitecture
Entity
p6942
(dp6943
g11
(lp6944
sg14
S'com.google.common.util.concurrent.AtomicDouble'
p6945
sg16
(lp6946
sg19
(lp6947
sg22
(lp6948
sg25
I0
sba(iArchitecture
Entity
p6949
(dp6950
g11
(lp6951
sg14
S'com.google.common.util.concurrent.AtomicDoubleArray'
p6952
sg16
(lp6953
sg19
(lp6954
sg22
(lp6955
sg25
I0
sba(iArchitecture
Entity
p6956
(dp6957
g11
(lp6958
sg14
S'com.google.common.util.concurrent.AtomicDoubleArrayTest'
p6959
sg16
(lp6960
sg19
(lp6961
sg22
(lp6962
sg25
I0
sba(iArchitecture
Entity
p6963
(dp6964
g11
(lp6965
sg14
S'com.google.common.util.concurrent.AtomicDoubleTest'
p6966
sg16
(lp6967
sg19
(lp6968
sg22
(lp6969
sg25
I0
sba(iArchitecture
Entity
p6970
(dp6971
g11
(lp6972
sg14
S'com.google.common.util.concurrent.AtomicsTest'
p6973
sg16
(lp6974
sg19
(lp6975
sg22
(lp6976
sg25
I0
sba(iArchitecture
Entity
p6977
(dp6978
g11
(lp6979
sg14
S'com.google.common.util.concurrent.CallablesTest'
p6980
sg16
(lp6981
sg19
(lp6982
sg22
(lp6983
sg25
I0
sba(iArchitecture
Entity
p6984
(dp6985
g11
(lp6986
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactoryBenchmark'
p6987
sg16
(lp6988
sg19
(lp6989
sg22
(lp6990
sg25
I0
sba(iArchitecture
Entity
p6991
(dp6992
g11
(lp6993
sg14
S'com.google.common.util.concurrent.ExecutionListBenchmark'
p6994
sg16
(lp6995
sg19
(lp6996
sg22
(lp6997
sg25
I0
sba(iArchitecture
Entity
p6998
(dp6999
g11
(lp7000
sg14
S'com.google.common.util.concurrent.FutureCallbackTest'
p7001
sg16
(lp7002
sg19
(lp7003
sg22
(lp7004
sg25
I0
sba(iArchitecture
Entity
p7005
(dp7006
g11
(lp7007
g6933
aV1999
p7008
aV2254
p7009
ag7009
asg14
S'com.google.common.util.concurrent.FuturesTest'
p7010
sg16
(lp7011
VWe already do in `AbstractFuture`.\u000a
p7012
aV- @lowasser internal CL 88242480 wants to use `SimpleImmutableEntry`.\u000a- Internal CL 86210805 can be rolled back to use `AssertionError(String, Throwable)`.\u000a- @kak internal CL 83767705 wanted to use `Arrays.copyOf`.\u000a- My internal CL 59647656 wants to remove `AbstractIteratorTester` workarounds for bugs in `java.util` classes fixed in new releases of GWT.\u000a\u000aGWT 2.7.0 was released in November. But note that we had bug reports from users of GWT 2.5.1 as late as October 2014, 9 months after the release of 2.6.0. We should get some idea of how quickly external users update the version of GWT they use.\u000a
p7013
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p7014
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p7015
asg19
(lp7016
g6939
a(lp7017
I7
aa(lp7018
I1
aag7018
asg22
(lp7019
g6941
aVRelease a Guava that supports+requires GWT 2.8.0 upon GWT release
p7020
aVNesting Futures.transform() eats StackOverflowError and causes the Future to hang forever
p7021
ag7021
asg25
I0
sba(iArchitecture
Entity
p7022
(dp7023
g11
(lp7024
sg14
S'com.google.common.util.concurrent.GeneratedMonitorTest'
p7025
sg16
(lp7026
sg19
(lp7027
sg22
(lp7028
sg25
I0
sba(iArchitecture
Entity
p7029
(dp7030
g11
(lp7031
sg14
S'com.google.common.util.concurrent.JSR166TestCase'
p7032
sg16
(lp7033
sg19
(lp7034
sg22
(lp7035
sg25
I0
sba(iArchitecture
Entity
p7036
(dp7037
g11
(lp7038
sg14
S'com.google.common.util.concurrent.Monitor'
p7039
sg16
(lp7040
sg19
(lp7041
sg22
(lp7042
sg25
I0
sba(iArchitecture
Entity
p7043
(dp7044
g11
(lp7045
sg14
S'com.google.common.util.concurrent.MonitorBasedArrayBlockingQueue'
p7046
sg16
(lp7047
sg19
(lp7048
sg22
(lp7049
sg25
I0
sba(iArchitecture
Entity
p7050
(dp7051
g11
(lp7052
sg14
S'com.google.common.util.concurrent.MonitorBasedPriorityBlockingQueue'
p7053
sg16
(lp7054
sg19
(lp7055
sg22
(lp7056
sg25
I0
sba(iArchitecture
Entity
p7057
(dp7058
g11
(lp7059
sg14
S'com.google.common.util.concurrent.MonitorBenchmark'
p7060
sg16
(lp7061
sg19
(lp7062
sg22
(lp7063
sg25
I0
sba(iArchitecture
Entity
p7064
(dp7065
g11
(lp7066
sg14
S'com.google.common.util.concurrent.MonitorTestCase'
p7067
sg16
(lp7068
sg19
(lp7069
sg22
(lp7070
sg25
I0
sba(iArchitecture
Entity
p7071
(dp7072
g11
(lp7073
sg14
S'com.google.common.util.concurrent.RateLimiterTest'
p7074
sg16
(lp7075
sg19
(lp7076
sg22
(lp7077
sg25
I0
sba(iArchitecture
Entity
p7078
(dp7079
g11
(lp7080
sg14
S'com.google.common.util.concurrent.SerializingExecutorTest'
p7081
sg16
(lp7082
sg19
(lp7083
sg22
(lp7084
sg25
I0
sba(iArchitecture
Entity
p7085
(dp7086
g11
(lp7087
sg14
S'com.google.common.util.concurrent.SettableFutureTest'
p7088
sg16
(lp7089
sg19
(lp7090
sg22
(lp7091
sg25
I0
sba(iArchitecture
Entity
p7092
(dp7093
g11
(lp7094
sg14
S'com.google.common.util.concurrent.Striped'
p7095
sg16
(lp7096
sg19
(lp7097
sg22
(lp7098
sg25
I0
sba(iArchitecture
Entity
p7099
(dp7100
g11
(lp7101
sg14
S'com.google.common.util.concurrent.StripedBenchmark'
p7102
sg16
(lp7103
sg19
(lp7104
sg22
(lp7105
sg25
I0
sba(iArchitecture
Entity
p7106
(dp7107
g11
(lp7108
sg14
S'com.google.common.util.concurrent.StripedTest'
p7109
sg16
(lp7110
sg19
(lp7111
sg22
(lp7112
sg25
I0
sba(iArchitecture
Entity
p7113
(dp7114
g11
(lp7115
sg14
S'com.google.common.util.concurrent.SupplementalMonitorTest'
p7116
sg16
(lp7117
sg19
(lp7118
sg22
(lp7119
sg25
I0
sba(iArchitecture
Entity
p7120
(dp7121
g11
(lp7122
sg14
S'com.google.common.util.concurrent.TestThread'
p7123
sg16
(lp7124
sg19
(lp7125
sg22
(lp7126
sg25
I0
sba(iArchitecture
Entity
p7127
(dp7128
g11
(lp7129
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p7130
sg16
(lp7131
sg19
(lp7132
sg22
(lp7133
sg25
I0
sba(iArchitecture
Entity
p7134
(dp7135
g11
(lp7136
sg14
S'com.google.common.util.concurrent.WrappingExecutorServiceTest'
p7137
sg16
(lp7138
sg19
(lp7139
sg22
(lp7140
sg25
I0
sba(iArchitecture
Entity
p7141
(dp7142
g11
(lp7143
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorServiceTest'
p7144
sg16
(lp7145
sg19
(lp7146
sg22
(lp7147
sg25
I0
sba(iArchitecture
Entity
p7148
(dp7149
g11
(lp7150
sg14
S'com.google.common.util.concurrent.testing.AbstractListenableFutureTest'
p7151
sg16
(lp7152
sg19
(lp7153
sg22
(lp7154
sg25
I0
sba(iArchitecture
Entity
p7155
(dp7156
g11
(lp7157
sg14
S'com.google.common.util.concurrent.testing.TestingExecutorsTest'
p7158
sg16
(lp7159
sg19
(lp7160
sg22
(lp7161
sg25
I0
sba(iArchitecture
Entity
p7162
(dp7163
g11
(lp7164
sg14
S'java.util.concurrent.ConcurrentHashMap'
p7165
sg16
(lp7166
sg19
(lp7167
sg22
(lp7168
sg25
I0
sba(iArchitecture
Entity
p7169
(dp7170
g11
(lp7171
sg14
S'java.util.concurrent.CountDownLatch'
p7172
sg16
(lp7173
sg19
(lp7174
sg22
(lp7175
sg25
I0
sba(iArchitecture
Entity
p7176
(dp7177
g11
(lp7178
sg14
S'java.util.concurrent.TimeUnit'
p7179
sg16
(lp7180
sg19
(lp7181
sg22
(lp7182
sg25
I0
sba(iArchitecture
Entity
p7183
(dp7184
g11
(lp7185
sg14
S'java.util.concurrent.atomic.AtomicBoolean'
p7186
sg16
(lp7187
sg19
(lp7188
sg22
(lp7189
sg25
I0
sba(iArchitecture
Entity
p7190
(dp7191
g11
(lp7192
sg14
S'java.util.concurrent.atomic.AtomicInteger'
p7193
sg16
(lp7194
sg19
(lp7195
sg22
(lp7196
sg25
I0
sba(iArchitecture
Entity
p7197
(dp7198
g11
(lp7199
sg14
S'java.util.concurrent.atomic.AtomicLong'
p7200
sg16
(lp7201
sg19
(lp7202
sg22
(lp7203
sg25
I0
sbasg1017
(lp7204
g3532
ag3539
ag3546
ag3554
ag3564
ag3571
ag3578
ag3585
ag3592
ag3599
ag3606
ag3613
ag3620
ag3627
ag3634
ag3641
ag3648
ag3655
ag3662
ag3670
ag3681
ag3689
ag3696
ag3703
ag3710
ag3718
ag3729
ag3736
ag3743
ag3751
ag3761
ag3768
ag3775
ag3782
ag3789
ag3796
ag3803
ag3810
ag3817
ag3824
ag3831
ag3838
ag3845
ag3852
ag3859
ag3866
ag3873
ag3880
ag3887
ag3894
ag3901
ag3908
ag3915
ag3922
ag3929
ag3936
ag3943
ag3950
ag3957
ag3964
ag3971
ag3978
ag3985
ag3992
ag3999
ag4006
ag4013
ag4020
ag4027
ag4034
ag4041
ag4048
ag4055
ag4062
ag4069
ag4076
ag4083
ag4090
ag4097
ag4104
ag4111
ag4118
ag4125
ag4132
ag4139
ag4146
ag4153
ag4160
ag4167
ag4174
ag4181
ag4188
ag4195
ag4202
ag4209
ag4216
ag4223
ag4230
ag4237
ag4244
ag4251
ag4258
ag4265
ag4272
ag4279
ag4286
ag4293
ag4300
ag4307
ag4314
ag4321
ag4328
ag4335
ag4342
ag4349
ag4356
ag4363
ag4370
ag4377
ag4384
ag4391
ag4398
ag4405
ag4412
ag4419
ag4426
ag4433
ag4440
ag4447
ag4454
ag4461
ag4468
ag4475
ag4482
ag4489
ag4496
ag4503
ag4510
ag4517
ag4524
ag4531
ag4538
ag4545
ag4552
ag4559
ag4566
ag4573
ag4580
ag4587
ag4594
ag4601
ag4608
ag4615
ag4622
ag4629
ag4636
ag4643
ag4650
ag4657
ag4664
ag4671
ag4678
ag4686
ag4696
ag4703
ag4711
ag4718
ag4725
ag4732
ag4739
ag4746
ag4753
ag4760
ag4767
ag4774
ag4781
ag4788
ag4795
ag4802
ag4809
ag4816
ag4823
ag4830
ag4837
ag4844
ag4851
ag4858
ag4865
ag4872
ag4879
ag4886
ag4893
ag4900
ag4907
ag4914
ag4921
ag4928
ag4935
ag4942
ag4949
ag4956
ag4963
ag4970
ag4977
ag4984
ag4991
ag4998
ag5005
ag5012
ag5019
ag5026
ag5033
ag5040
ag5047
ag5054
ag5061
ag5068
ag5075
ag5082
ag5089
ag5096
ag5103
ag5110
ag5117
ag5124
ag5131
ag5138
ag5145
ag5152
ag5159
ag5167
ag5180
ag5188
ag5195
ag5202
ag5209
ag5216
ag5223
ag5230
ag5237
ag5244
ag5251
ag5258
ag5265
ag5272
ag5279
ag5286
ag5293
ag5300
ag5307
ag5314
ag5321
ag5328
ag5335
ag5342
ag5349
ag5356
ag5363
ag5370
ag5377
ag5384
ag5391
ag5398
ag5405
ag5412
ag5419
ag5426
ag5433
ag5440
ag5447
ag5454
ag5461
ag5468
ag5475
ag5482
ag5489
ag5496
ag5503
ag5510
ag5517
ag5524
ag5531
ag5538
ag5545
ag5552
ag5559
ag5566
ag5573
ag5580
ag5587
ag5594
ag5601
ag5608
ag5615
ag5622
ag5629
ag5636
ag5643
ag5650
ag5657
ag5664
ag5671
ag5678
ag5685
ag5692
ag5699
ag5706
ag5713
ag5720
ag5727
ag5734
ag5741
ag5748
ag5755
ag5762
ag5769
ag5776
ag5783
ag5790
ag5797
ag5804
ag5811
ag5818
ag5825
ag5832
ag5839
ag5846
ag5853
ag5860
ag5867
ag5874
ag5881
ag5888
ag5895
ag5902
ag5909
ag5916
ag5923
ag5930
ag5937
ag5944
ag5951
ag5958
ag5965
ag5972
ag5979
ag5986
ag5993
ag6000
ag6007
ag6014
ag6021
ag6028
ag6035
ag6042
ag6049
ag6056
ag6063
ag6070
ag6077
ag6084
ag6091
ag6098
ag6105
ag6112
ag6119
ag6126
ag6133
ag6140
ag6147
ag6154
ag6161
ag6168
ag6175
ag6182
ag6189
ag6196
ag6203
ag6210
ag6217
ag6224
ag6231
ag6238
ag6245
ag6252
ag6259
ag6266
ag6274
ag6284
ag6291
ag6298
ag6305
ag6312
ag6319
ag6326
ag6333
ag6340
ag6347
ag6354
ag6361
ag6368
ag6375
ag6382
ag6389
ag6396
ag6403
ag6410
ag6417
ag6424
ag6431
ag6438
ag6445
ag6452
ag6459
ag6466
ag6473
ag6480
ag6488
ag6498
ag6505
ag6512
ag6519
ag6527
ag6535
ag6542
ag6549
ag6557
ag6564
ag6571
ag6579
ag6586
ag6594
ag6601
ag6608
ag6615
ag6623
ag6630
ag6637
ag6644
ag6651
ag6659
ag6666
ag6673
ag6680
ag6687
ag6694
ag6701
ag6708
ag6715
ag6722
ag6729
ag6736
ag6743
ag6750
ag6757
ag6764
ag6771
ag6778
ag6785
ag6792
ag6799
ag6806
ag6813
ag6820
ag6827
ag6834
ag6841
ag6848
ag6855
ag6863
ag6873
ag6880
ag6887
ag6894
ag6901
ag6909
ag6919
ag6926
ag6934
ag6945
ag6952
ag6959
ag6966
ag6973
ag6980
ag6987
ag6994
ag7001
ag7010
ag7025
ag7032
ag7039
ag7046
ag7053
ag7060
ag7067
ag7074
ag7081
ag7088
ag7095
ag7102
ag7109
ag7116
ag7123
ag7130
ag7137
ag7144
ag7151
ag7158
ag7165
ag7172
ag7179
ag7186
ag7193
ag7200
asg25
I0
sg1019
S'graphics'
p7205
sba(iArchitecture
Cluster
p7206
(dp7207
g7
(lp7208
(iArchitecture
Entity
p7209
(dp7210
g11
(lp7211
sg14
S'com.google.common.GwtTestSuite'
p7212
sg16
(lp7213
sg19
(lp7214
sg22
(lp7215
sg25
I0
sba(iArchitecture
Entity
p7216
(dp7217
g11
(lp7218
sg14
S'com.google.common.base.Ascii'
p7219
sg16
(lp7220
sg19
(lp7221
sg22
(lp7222
sg25
I0
sba(iArchitecture
Entity
p7223
(dp7224
g11
(lp7225
sg14
S'com.google.common.base.BenchmarkHelpers'
p7226
sg16
(lp7227
sg19
(lp7228
sg22
(lp7229
sg25
I0
sba(iArchitecture
Entity
p7230
(dp7231
g11
(lp7232
sg14
S'com.google.common.base.CaseFormat'
p7233
sg16
(lp7234
sg19
(lp7235
sg22
(lp7236
sg25
I0
sba(iArchitecture
Entity
p7237
(dp7238
g11
(lp7239
sg14
S'com.google.common.base.Charsets'
p7240
sg16
(lp7241
sg19
(lp7242
sg22
(lp7243
sg25
I0
sba(iArchitecture
Entity
p7244
(dp7245
g11
(lp7246
sg14
S'com.google.common.base.CharsetsTest'
p7247
sg16
(lp7248
sg19
(lp7249
sg22
(lp7250
sg25
I0
sba(iArchitecture
Entity
p7251
(dp7252
g11
(lp7253
sg14
S'com.google.common.base.DefaultsTest'
p7254
sg16
(lp7255
sg19
(lp7256
sg22
(lp7257
sg25
I0
sba(iArchitecture
Entity
p7258
(dp7259
g11
(lp7260
sg14
S'com.google.common.base.FunctionalEquivalence'
p7261
sg16
(lp7262
sg19
(lp7263
sg22
(lp7264
sg25
I0
sba(iArchitecture
Entity
p7265
(dp7266
g11
(lp7267
sg14
S'com.google.common.base.MoreObjects'
p7268
sg16
(lp7269
sg19
(lp7270
sg22
(lp7271
sg25
I0
sba(iArchitecture
Entity
p7272
(dp7273
g11
(lp7274
sg14
S'com.google.common.base.Objects'
p7275
sg16
(lp7276
sg19
(lp7277
sg22
(lp7278
sg25
I0
sba(iArchitecture
Entity
p7279
(dp7280
g11
(lp7281
sg14
S'com.google.common.base.ObjectsTest'
p7282
sg16
(lp7283
sg19
(lp7284
sg22
(lp7285
sg25
I0
sba(iArchitecture
Entity
p7286
(dp7287
g11
(lp7288
sg14
S'com.google.common.base.StringsTest'
p7289
sg16
(lp7290
sg19
(lp7291
sg22
(lp7292
sg25
I0
sba(iArchitecture
Entity
p7293
(dp7294
g11
(lp7295
sg14
S'com.google.common.base.Utf8'
p7296
sg16
(lp7297
sg19
(lp7298
sg22
(lp7299
sg25
I0
sba(iArchitecture
Entity
p7300
(dp7301
g11
(lp7302
sg14
S'com.google.common.base.Utf8Test'
p7303
sg16
(lp7304
sg19
(lp7305
sg22
(lp7306
sg25
I0
sba(iArchitecture
Entity
p7307
(dp7308
g11
(lp7309
sg14
S'com.google.common.collect.AbstractRangeSetTest'
p7310
sg16
(lp7311
sg19
(lp7312
sg22
(lp7313
sg25
I0
sba(iArchitecture
Entity
p7314
(dp7315
g11
(lp7316
sg14
S'com.google.common.collect.AbstractTableTest'
p7317
sg16
(lp7318
sg19
(lp7319
sg22
(lp7320
sg25
I0
sba(iArchitecture
Entity
p7321
(dp7322
g11
(lp7323
sg14
S'com.google.common.collect.AllEqualOrdering'
p7324
sg16
(lp7325
sg19
(lp7326
sg22
(lp7327
sg25
I0
sba(iArchitecture
Entity
p7328
(dp7329
g11
(lp7330
sg14
S'com.google.common.collect.ByFunctionOrdering'
p7331
sg16
(lp7332
sg19
(lp7333
sg22
(lp7334
sg25
I0
sba(iArchitecture
Entity
p7335
(dp7336
g11
(lp7337
sg14
S'com.google.common.collect.ComparatorOrdering'
p7338
sg16
(lp7339
sg19
(lp7340
sg22
(lp7341
sg25
I0
sba(iArchitecture
Entity
p7342
(dp7343
g11
(lp7344
sg14
S'com.google.common.collect.ConstrainedSetMultimapTest'
p7345
sg16
(lp7346
sg19
(lp7347
sg22
(lp7348
sg25
I0
sba(iArchitecture
Entity
p7349
(dp7350
g11
(lp7351
sg14
S'com.google.common.collect.FilteredCollectionsTest'
p7352
sg16
(lp7353
sg19
(lp7354
sg22
(lp7355
sg25
I0
sba(iArchitecture
Entity
p7356
(dp7357
g11
(lp7358
sg14
S'com.google.common.collect.FilteredMultimapTest'
p7359
sg16
(lp7360
sg19
(lp7361
sg22
(lp7362
sg25
I0
sba(iArchitecture
Entity
p7363
(dp7364
g11
(lp7365
sg14
S'com.google.common.collect.FluentIterable'
p7366
sg16
(lp7367
sg19
(lp7368
sg22
(lp7369
sg25
I0
sba(iArchitecture
Entity
p7370
(dp7371
g11
(lp7372
sg14
S'com.google.common.collect.GwtSerializationDependencies'
p7373
sg16
(lp7374
sg19
(lp7375
sg22
(lp7376
sg25
I0
sba(iArchitecture
Entity
p7377
(dp7378
g11
(lp7379
sg14
S'com.google.common.collect.HashBasedTableTest'
p7380
sg16
(lp7381
sg19
(lp7382
sg22
(lp7383
sg25
I0
sba(iArchitecture
Entity
p7384
(dp7385
g11
(lp7386
sg14
S'com.google.common.collect.HashMultimap'
p7387
sg16
(lp7388
sg19
(lp7389
sg22
(lp7390
sg25
I0
sba(iArchitecture
Entity
p7391
(dp7392
g11
(lp7393
sg14
S'com.google.common.collect.HashMultiset'
p7394
sg16
(lp7395
sg19
(lp7396
sg22
(lp7397
sg25
I0
sba(iArchitecture
Entity
p7398
(dp7399
g11
(lp7400
sg14
S'com.google.common.collect.ImmutableAsList'
p7401
sg16
(lp7402
sg19
(lp7403
sg22
(lp7404
sg25
I0
sba(iArchitecture
Entity
p7405
(dp7406
g11
(lp7407
sg14
S'com.google.common.collect.ImmutableCollectionTest'
p7408
sg16
(lp7409
sg19
(lp7410
sg22
(lp7411
sg25
I0
sba(iArchitecture
Entity
p7412
(dp7413
g11
(lp7414
sg14
S'com.google.common.collect.ImmutableEntry'
p7415
sg16
(lp7416
sg19
(lp7417
sg22
(lp7418
sg25
I0
sba(iArchitecture
Entity
p7419
(dp7420
g11
(lp7421
sg14
S'com.google.common.collect.ImmutableListMultimap'
p7422
sg16
(lp7423
sg19
(lp7424
sg22
(lp7425
sg25
I0
sba(iArchitecture
Entity
p7426
(dp7427
g11
(lp7428
sg14
S'com.google.common.collect.ImmutableTableTest'
p7429
sg16
(lp7430
sg19
(lp7431
sg22
(lp7432
sg25
I0
sba(iArchitecture
Entity
p7433
(dp7434
g11
(lp7435
sg14
S'com.google.common.collect.LinkedHashMultiset'
p7436
sg16
(lp7437
sg19
(lp7438
sg22
(lp7439
sg25
I0
sba(iArchitecture
Entity
p7440
(dp7441
g11
(lp7442
sg14
S'com.google.common.collect.MapsSortedTransformValuesTest'
p7443
sg16
(lp7444
sg19
(lp7445
sg22
(lp7446
sg25
I0
sba(iArchitecture
Entity
p7447
(dp7448
g11
(lp7449
sg14
S'com.google.common.collect.MultimapBuilderTest'
p7450
sg16
(lp7451
sg19
(lp7452
sg22
(lp7453
sg25
I0
sba(iArchitecture
Entity
p7454
(dp7455
g11
(lp7456
sg14
S'com.google.common.collect.NaturalOrdering'
p7457
sg16
(lp7458
sg19
(lp7459
sg22
(lp7460
sg25
I0
sba(iArchitecture
Entity
p7461
(dp7462
g11
(lp7463
sg14
S'com.google.common.collect.NewCustomTableTest'
p7464
sg16
(lp7465
sg19
(lp7466
sg22
(lp7467
sg25
I0
sba(iArchitecture
Entity
p7468
(dp7469
g11
(lp7470
sg14
S'com.google.common.collect.RangeNonGwtTest'
p7471
sg16
(lp7472
sg19
(lp7473
sg22
(lp7474
sg25
I0
sba(iArchitecture
Entity
p7475
(dp7476
g11
(lp7477
sg14
S'com.google.common.collect.RegularImmutableAsListTest'
p7478
sg16
(lp7479
sg19
(lp7480
sg22
(lp7481
sg25
I0
sba(iArchitecture
Entity
p7482
(dp7483
g11
(lp7484
sg14
S'com.google.common.collect.ReverseNaturalOrdering'
p7485
sg16
(lp7486
sg19
(lp7487
sg22
(lp7488
sg25
I0
sba(iArchitecture
Entity
p7489
(dp7490
g11
(lp7491
sg14
S'com.google.common.collect.Serialization'
p7492
sg16
(lp7493
sg19
(lp7494
sg22
(lp7495
sg25
I0
sba(iArchitecture
Entity
p7496
(dp7497
g11
(lp7498
sg14
S'com.google.common.collect.SpecialRandom'
p7499
sg16
(lp7500
sg19
(lp7501
sg22
(lp7502
sg25
I0
sba(iArchitecture
Entity
p7503
(dp7504
g11
(lp7505
sg14
S'com.google.common.collect.TableCollectionTest'
p7506
sg16
(lp7507
sg19
(lp7508
sg22
(lp7509
sg25
I0
sba(iArchitecture
Entity
p7510
(dp7511
g11
(lp7512
sg14
S'com.google.common.collect.TablesTest'
p7513
sg16
(lp7514
sg19
(lp7515
sg22
(lp7516
sg25
I0
sba(iArchitecture
Entity
p7517
(dp7518
g11
(lp7519
sg14
S'com.google.common.collect.TablesTransformValuesTest'
p7520
sg16
(lp7521
sg19
(lp7522
sg22
(lp7523
sg25
I0
sba(iArchitecture
Entity
p7524
(dp7525
g11
(lp7526
sg14
S'com.google.common.collect.TransformedIterator'
p7527
sg16
(lp7528
sg19
(lp7529
sg22
(lp7530
sg25
I0
sba(iArchitecture
Entity
p7531
(dp7532
g11
(lp7533
sg14
S'com.google.common.collect.TransposedTableTest'
p7534
sg16
(lp7535
sg19
(lp7536
sg22
(lp7537
sg25
I0
sba(iArchitecture
Entity
p7538
(dp7539
g11
(lp7540
sg14
S'com.google.common.collect.UsingToStringOrdering'
p7541
sg16
(lp7542
sg19
(lp7543
sg22
(lp7544
sg25
I0
sba(iArchitecture
Entity
p7545
(dp7546
g11
(lp7547
sg14
S'com.google.common.collect.testing.AbstractCollectionTester'
p7548
sg16
(lp7549
sg19
(lp7550
sg22
(lp7551
sg25
I0
sba(iArchitecture
Entity
p7552
(dp7553
g11
(lp7554
sg14
S'com.google.common.collect.testing.BaseComparable'
p7555
sg16
(lp7556
sg19
(lp7557
sg22
(lp7558
sg25
I0
sba(iArchitecture
Entity
p7559
(dp7560
g11
(lp7561
sg14
S'com.google.common.collect.testing.DerivedComparable'
p7562
sg16
(lp7563
sg19
(lp7564
sg22
(lp7565
sg25
I0
sba(iArchitecture
Entity
p7566
(dp7567
g11
(lp7568
sg14
S'com.google.common.collect.testing.DerivedTestIteratorGenerator'
p7569
sg16
(lp7570
sg19
(lp7571
sg22
(lp7572
sg25
I0
sba(iArchitecture
Entity
p7573
(dp7574
g11
(lp7575
sg14
S'com.google.common.collect.testing.IteratorTestSuiteBuilder'
p7576
sg16
(lp7577
sg19
(lp7578
sg22
(lp7579
sg25
I0
sba(iArchitecture
Entity
p7580
(dp7581
g11
(lp7582
sg14
S'com.google.common.collect.testing.OpenJdk6Tests'
p7583
sg16
(lp7584
sg19
(lp7585
sg22
(lp7586
sg25
I0
sba(iArchitecture
Entity
p7587
(dp7588
g11
(lp7589
sg14
S'com.google.common.collect.testing.Platform'
p7590
sg16
(lp7591
sg19
(lp7592
sg22
(lp7593
sg25
I0
sba(iArchitecture
Entity
p7594
(dp7595
g11
(lp7596
sg14
S'com.google.common.collect.testing.ReserializingTestCollectionGenerator'
p7597
sg16
(lp7598
sg19
(lp7599
sg22
(lp7600
sg25
I0
sba(iArchitecture
Entity
p7601
(dp7602
g11
(lp7603
sg14
S'com.google.common.collect.testing.TestCharacterListGenerator'
p7604
sg16
(lp7605
sg19
(lp7606
sg22
(lp7607
sg25
I0
sba(iArchitecture
Entity
p7608
(dp7609
g11
(lp7610
sg14
S'com.google.common.collect.testing.TestsForMapsInJavaUtil'
p7611
sg16
(lp7612
sg19
(lp7613
sg22
(lp7614
sg25
I0
sba(iArchitecture
Entity
p7615
(dp7616
g11
(lp7617
sg14
S'com.google.common.collect.testing.google.BiMapInverseTester'
p7618
sg16
(lp7619
sg19
(lp7620
sg22
(lp7621
sg25
I0
sba(iArchitecture
Entity
p7622
(dp7623
g11
(lp7624
sg14
S'com.google.common.collect.testing.testers.CollectionEqualsTester'
p7625
sg16
(lp7626
sg19
(lp7627
sg22
(lp7628
sg25
I0
sba(iArchitecture
Entity
p7629
(dp7630
g11
(lp7631
sg14
S'com.google.common.escape.ArrayBasedCharEscaper'
p7632
sg16
(lp7633
sg19
(lp7634
sg22
(lp7635
sg25
I0
sba(iArchitecture
Entity
p7636
(dp7637
g11
(lp7638
sg14
S'com.google.common.escape.ArrayBasedCharEscaperTest'
p7639
sg16
(lp7640
sg19
(lp7641
sg22
(lp7642
sg25
I0
sba(iArchitecture
Entity
p7643
(dp7644
g11
(lp7645
sg14
S'com.google.common.escape.ArrayBasedEscaperMap'
p7646
sg16
(lp7647
sg19
(lp7648
sg22
(lp7649
sg25
I0
sba(iArchitecture
Entity
p7650
(dp7651
g11
(lp7652
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaper'
p7653
sg16
(lp7654
sg19
(lp7655
sg22
(lp7656
sg25
I0
sba(iArchitecture
Entity
p7657
(dp7658
g11
(lp7659
sg14
S'com.google.common.escape.Escaper'
p7660
sg16
(lp7661
sg19
(lp7662
sg22
(lp7663
sg25
I0
sba(iArchitecture
Entity
p7664
(dp7665
g11
(lp7666
sg14
S'com.google.common.escape.Escapers'
p7667
sg16
(lp7668
sg19
(lp7669
sg22
(lp7670
sg25
I0
sba(iArchitecture
Entity
p7671
(dp7672
g11
(lp7673
sg14
S'com.google.common.escape.EscapersTest'
p7674
sg16
(lp7675
sg19
(lp7676
sg22
(lp7677
sg25
I0
sba(iArchitecture
Entity
p7678
(dp7679
g11
(lp7680
sg14
S'com.google.common.escape.Platform'
p7681
sg16
(lp7682
sg19
(lp7683
sg22
(lp7684
sg25
I0
sba(iArchitecture
Entity
p7685
(dp7686
g11
(lp7687
sg14
S'com.google.common.eventbus.DeadEvent'
p7688
sg16
(lp7689
sg19
(lp7690
sg22
(lp7691
sg25
I0
sba(iArchitecture
Entity
p7692
(dp7693
g11
(lp7694
sg14
S'com.google.common.eventbus.SubscriberRegistryTest'
p7695
sg16
(lp7696
sg19
(lp7697
sg22
(lp7698
sg25
I0
sba(iArchitecture
Entity
p7699
(dp7700
g11
(lp7701
sg14
S'com.google.common.hash.AbstractByteHasher'
p7702
sg16
(lp7703
sg19
(lp7704
sg22
(lp7705
sg25
I0
sba(iArchitecture
Entity
p7706
(dp7707
g11
(lp7708
sg14
S'com.google.common.hash.AbstractHasher'
p7709
sg16
(lp7710
sg19
(lp7711
sg22
(lp7712
sg25
I0
sba(iArchitecture
Entity
p7713
(dp7714
g11
(lp7715
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunction'
p7716
sg16
(lp7717
sg19
(lp7718
sg22
(lp7719
sg25
I0
sba(iArchitecture
Entity
p7720
(dp7721
g11
(lp7722
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunctionTest'
p7723
sg16
(lp7724
sg19
(lp7725
sg22
(lp7726
sg25
I0
sba(iArchitecture
Entity
p7727
(dp7728
g11
(lp7729
sg14
S'com.google.common.hash.AbstractStreamingHashFunction'
p7730
sg16
(lp7731
sg19
(lp7732
sg22
(lp7733
sg25
I0
sba(iArchitecture
Entity
p7734
(dp7735
g11
(lp7736
sg14
S'com.google.common.hash.AbstractStreamingHasherTest'
p7737
sg16
(lp7738
sg19
(lp7739
sg22
(lp7740
sg25
I0
sba(iArchitecture
Entity
p7741
(dp7742
g11
(lp7743
sg14
S'com.google.common.hash.BloomFilter'
p7744
sg16
(lp7745
sg19
(lp7746
sg22
(lp7747
sg25
I0
sba(iArchitecture
Entity
p7748
(dp7749
g11
(lp7750
sg14
S'com.google.common.hash.ChecksumHashFunctionTest'
p7751
sg16
(lp7752
sg19
(lp7753
sg22
(lp7754
sg25
I0
sba(iArchitecture
Entity
p7755
(dp7756
g11
(lp7757
sg14
S'com.google.common.hash.Funnels'
p7758
sg16
(lp7759
sg19
(lp7760
sg22
(lp7761
sg25
I0
sba(iArchitecture
Entity
p7762
(dp7763
g11
(lp7764
sg14
S'com.google.common.hash.HashFunction'
p7765
sg16
(lp7766
sg19
(lp7767
sg22
(lp7768
sg25
I0
sba(iArchitecture
Entity
p7769
(dp7770
g11
(lp7771
sg14
S'com.google.common.hash.Hasher'
p7772
sg16
(lp7773
sg19
(lp7774
sg22
(lp7775
sg25
I0
sba(iArchitecture
Entity
p7776
(dp7777
g11
(lp7778
sg14
S'com.google.common.hash.HashingInputStream'
p7779
sg16
(lp7780
sg19
(lp7781
sg22
(lp7782
sg25
I0
sba(iArchitecture
Entity
p7783
(dp7784
g11
(lp7785
sg14
S'com.google.common.hash.HashingOutputStream'
p7786
sg16
(lp7787
sg19
(lp7788
sg22
(lp7789
sg25
I0
sba(iArchitecture
Entity
p7790
(dp7791
g11
(lp7792
sg14
S'com.google.common.hash.HashingOutputStreamTest'
p7793
sg16
(lp7794
sg19
(lp7795
sg22
(lp7796
sg25
I0
sba(iArchitecture
Entity
p7797
(dp7798
g11
(lp7799
sg14
S'com.google.common.hash.MessageDigestAlgorithmBenchmark'
p7800
sg16
(lp7801
sg19
(lp7802
sg22
(lp7803
sg25
I0
sba(iArchitecture
Entity
p7804
(dp7805
g11
(lp7806
sg14
S'com.google.common.hash.MessageDigestHashFunction'
p7807
sg16
(lp7808
sg19
(lp7809
sg22
(lp7810
sg25
I0
sba(iArchitecture
Entity
p7811
(dp7812
g11
(lp7813
sg14
S'com.google.common.hash.MessageDigestHashFunctionTest'
p7814
sg16
(lp7815
sg19
(lp7816
sg22
(lp7817
sg25
I0
sba(iArchitecture
Entity
p7818
(dp7819
g11
(lp7820
sg14
S'com.google.common.hash.Murmur3Hash128Test'
p7821
sg16
(lp7822
sg19
(lp7823
sg22
(lp7824
sg25
I0
sba(iArchitecture
Entity
p7825
(dp7826
g11
(lp7827
sg14
S'com.google.common.hash.PrimitiveSink'
p7828
sg16
(lp7829
sg19
(lp7830
sg22
(lp7831
sg25
I0
sba(iArchitecture
Entity
p7832
(dp7833
g11
(lp7834
sg14
S'com.google.common.hash.SipHashFunctionTest'
p7835
sg16
(lp7836
sg19
(lp7837
sg22
(lp7838
sg25
I0
sba(iArchitecture
Entity
p7839
(dp7840
g11
(lp7841
sg14
S'com.google.common.io.AppendableWriter'
p7842
sg16
(lp7843
sg19
(lp7844
sg22
(lp7845
sg25
I0
sba(iArchitecture
Entity
p7846
(dp7847
g11
(lp7848
sg14
S'com.google.common.io.AppendableWriterTest'
p7849
sg16
(lp7850
sg19
(lp7851
sg22
(lp7852
sg25
I0
sba(iArchitecture
Entity
p7853
(dp7854
g11
(lp7855
g6273
asg14
S'com.google.common.io.BaseEncodingTest'
p7856
sg16
(lp7857
VThe next GWT release will probably have emulations for `Charset` built in. Internal CL 99622756 will be removing our custom emulations, but I think we can go further, changing calls to methods like `getBytes` to use the `Charset` versions.\u000a\u000aThis assumes that we require the new GWT version for the post-19 Guava release. This was not the plan on #1999 but might be reasonable. Otherwise, we need a workaround. We'd need to figure out if our emulations would interfere with the GWT versions for users who _are_ using the new GWT.\u000a
p7858
asg19
(lp7859
g6278
asg22
(lp7860
g6280
asg25
I0
sba(iArchitecture
Entity
p7861
(dp7862
g11
(lp7863
sg14
S'com.google.common.io.BaseEncodingTest_gwt'
p7864
sg16
(lp7865
sg19
(lp7866
sg22
(lp7867
sg25
I0
sba(iArchitecture
Entity
p7868
(dp7869
g11
(lp7870
sg14
S'com.google.common.io.ByteArrayDataInput'
p7871
sg16
(lp7872
sg19
(lp7873
sg22
(lp7874
sg25
I0
sba(iArchitecture
Entity
p7875
(dp7876
g11
(lp7877
sg14
S'com.google.common.io.ByteProcessor'
p7878
sg16
(lp7879
sg19
(lp7880
sg22
(lp7881
sg25
I0
sba(iArchitecture
Entity
p7882
(dp7883
g11
(lp7884
sg14
S'com.google.common.io.ByteSink'
p7885
sg16
(lp7886
sg19
(lp7887
sg22
(lp7888
sg25
I0
sba(iArchitecture
Entity
p7889
(dp7890
g11
(lp7891
sg14
S'com.google.common.io.ByteSinkTest'
p7892
sg16
(lp7893
sg19
(lp7894
sg22
(lp7895
sg25
I0
sba(iArchitecture
Entity
p7896
(dp7897
g11
(lp7898
sg14
S'com.google.common.io.ByteSinkTester'
p7899
sg16
(lp7900
sg19
(lp7901
sg22
(lp7902
sg25
I0
sba(iArchitecture
Entity
p7903
(dp7904
g11
(lp7905
sg14
S'com.google.common.io.ByteSource'
p7906
sg16
(lp7907
sg19
(lp7908
sg22
(lp7909
sg25
I0
sba(iArchitecture
Entity
p7910
(dp7911
g11
(lp7912
sg14
S'com.google.common.io.ByteSourceTest'
p7913
sg16
(lp7914
sg19
(lp7915
sg22
(lp7916
sg25
I0
sba(iArchitecture
Entity
p7917
(dp7918
g11
(lp7919
sg14
S'com.google.common.io.ByteStreams'
p7920
sg16
(lp7921
sg19
(lp7922
sg22
(lp7923
sg25
I0
sba(iArchitecture
Entity
p7924
(dp7925
g11
(lp7926
sg14
S'com.google.common.io.ByteStreamsTest'
p7927
sg16
(lp7928
sg19
(lp7929
sg22
(lp7930
sg25
I0
sba(iArchitecture
Entity
p7931
(dp7932
g11
(lp7933
sg14
S'com.google.common.io.CharSequenceReaderTest'
p7934
sg16
(lp7935
sg19
(lp7936
sg22
(lp7937
sg25
I0
sba(iArchitecture
Entity
p7938
(dp7939
g11
(lp7940
sg14
S'com.google.common.io.CharSink'
p7941
sg16
(lp7942
sg19
(lp7943
sg22
(lp7944
sg25
I0
sba(iArchitecture
Entity
p7945
(dp7946
g11
(lp7947
sg14
S'com.google.common.io.CharSinkTest'
p7948
sg16
(lp7949
sg19
(lp7950
sg22
(lp7951
sg25
I0
sba(iArchitecture
Entity
p7952
(dp7953
g11
(lp7954
sg14
S'com.google.common.io.CharSinkTester'
p7955
sg16
(lp7956
sg19
(lp7957
sg22
(lp7958
sg25
I0
sba(iArchitecture
Entity
p7959
(dp7960
g11
(lp7961
sg14
S'com.google.common.io.CharSource'
p7962
sg16
(lp7963
sg19
(lp7964
sg22
(lp7965
sg25
I0
sba(iArchitecture
Entity
p7966
(dp7967
g11
(lp7968
sg14
S'com.google.common.io.CharSourceTest'
p7969
sg16
(lp7970
sg19
(lp7971
sg22
(lp7972
sg25
I0
sba(iArchitecture
Entity
p7973
(dp7974
g11
(lp7975
sg14
S'com.google.common.io.CharSourceTester'
p7976
sg16
(lp7977
sg19
(lp7978
sg22
(lp7979
sg25
I0
sba(iArchitecture
Entity
p7980
(dp7981
g11
(lp7982
sg14
S'com.google.common.io.CharStreams'
p7983
sg16
(lp7984
sg19
(lp7985
sg22
(lp7986
sg25
I0
sba(iArchitecture
Entity
p7987
(dp7988
g11
(lp7989
sg14
S'com.google.common.io.CharStreamsTest'
p7990
sg16
(lp7991
sg19
(lp7992
sg22
(lp7993
sg25
I0
sba(iArchitecture
Entity
p7994
(dp7995
g11
(lp7996
sg14
S'com.google.common.io.Closeables'
p7997
sg16
(lp7998
sg19
(lp7999
sg22
(lp8000
sg25
I0
sba(iArchitecture
Entity
p8001
(dp8002
g11
(lp8003
sg14
S'com.google.common.io.CloseablesTest'
p8004
sg16
(lp8005
sg19
(lp8006
sg22
(lp8007
sg25
I0
sba(iArchitecture
Entity
p8008
(dp8009
g11
(lp8010
sg14
S'com.google.common.io.CloserTest'
p8011
sg16
(lp8012
sg19
(lp8013
sg22
(lp8014
sg25
I0
sba(iArchitecture
Entity
p8015
(dp8016
g11
(lp8017
sg14
S'com.google.common.io.CountingInputStream'
p8018
sg16
(lp8019
sg19
(lp8020
sg22
(lp8021
sg25
I0
sba(iArchitecture
Entity
p8022
(dp8023
g11
(lp8024
sg14
S'com.google.common.io.CountingInputStreamTest'
p8025
sg16
(lp8026
sg19
(lp8027
sg22
(lp8028
sg25
I0
sba(iArchitecture
Entity
p8029
(dp8030
g11
(lp8031
sg14
S'com.google.common.io.CountingOutputStream'
p8032
sg16
(lp8033
sg19
(lp8034
sg22
(lp8035
sg25
I0
sba(iArchitecture
Entity
p8036
(dp8037
g11
(lp8038
sg14
S'com.google.common.io.CountingOutputStreamTest'
p8039
sg16
(lp8040
sg19
(lp8041
sg22
(lp8042
sg25
I0
sba(iArchitecture
Entity
p8043
(dp8044
g11
(lp8045
sg14
S'com.google.common.io.FileBackedOutputStream'
p8046
sg16
(lp8047
sg19
(lp8048
sg22
(lp8049
sg25
I0
sba(iArchitecture
Entity
p8050
(dp8051
g11
(lp8052
sg14
S'com.google.common.io.FileBackedOutputStreamTest'
p8053
sg16
(lp8054
sg19
(lp8055
sg22
(lp8056
sg25
I0
sba(iArchitecture
Entity
p8057
(dp8058
g11
(lp8059
sg14
S'com.google.common.io.FileTreeTraverserTest'
p8060
sg16
(lp8061
sg19
(lp8062
sg22
(lp8063
sg25
I0
sba(iArchitecture
Entity
p8064
(dp8065
g11
(lp8066
sg14
S'com.google.common.io.FileWriteMode'
p8067
sg16
(lp8068
sg19
(lp8069
sg22
(lp8070
sg25
I0
sba(iArchitecture
Entity
p8071
(dp8072
g11
(lp8073
sg14
S'com.google.common.io.Files'
p8074
sg16
(lp8075
sg19
(lp8076
sg22
(lp8077
sg25
I0
sba(iArchitecture
Entity
p8078
(dp8079
g11
(lp8080
sg14
S'com.google.common.io.FilesTest'
p8081
sg16
(lp8082
sg19
(lp8083
sg22
(lp8084
sg25
I0
sba(iArchitecture
Entity
p8085
(dp8086
g11
(lp8087
sg14
S'com.google.common.io.Flushables'
p8088
sg16
(lp8089
sg19
(lp8090
sg22
(lp8091
sg25
I0
sba(iArchitecture
Entity
p8092
(dp8093
g11
(lp8094
sg14
S'com.google.common.io.FlushablesTest'
p8095
sg16
(lp8096
sg19
(lp8097
sg22
(lp8098
sg25
I0
sba(iArchitecture
Entity
p8099
(dp8100
g11
(lp8101
sg14
S'com.google.common.io.IoTestCase'
p8102
sg16
(lp8103
sg19
(lp8104
sg22
(lp8105
sg25
I0
sba(iArchitecture
Entity
p8106
(dp8107
g11
(lp8108
sg14
S'com.google.common.io.LineBuffer'
p8109
sg16
(lp8110
sg19
(lp8111
sg22
(lp8112
sg25
I0
sba(iArchitecture
Entity
p8113
(dp8114
g11
(lp8115
sg14
S'com.google.common.io.LineBufferTest'
p8116
sg16
(lp8117
sg19
(lp8118
sg22
(lp8119
sg25
I0
sba(iArchitecture
Entity
p8120
(dp8121
g11
(lp8122
sg14
S'com.google.common.io.LineProcessor'
p8123
sg16
(lp8124
sg19
(lp8125
sg22
(lp8126
sg25
I0
sba(iArchitecture
Entity
p8127
(dp8128
g11
(lp8129
sg14
S'com.google.common.io.LineReader'
p8130
sg16
(lp8131
sg19
(lp8132
sg22
(lp8133
sg25
I0
sba(iArchitecture
Entity
p8134
(dp8135
g11
(lp8136
sg14
S'com.google.common.io.LittleEndianDataInputStream'
p8137
sg16
(lp8138
sg19
(lp8139
sg22
(lp8140
sg25
I0
sba(iArchitecture
Entity
p8141
(dp8142
g11
(lp8143
sg14
S'com.google.common.io.LittleEndianDataInputStreamTest'
p8144
sg16
(lp8145
sg19
(lp8146
sg22
(lp8147
sg25
I0
sba(iArchitecture
Entity
p8148
(dp8149
g11
(lp8150
sg14
S'com.google.common.io.LittleEndianDataOutputStream'
p8151
sg16
(lp8152
sg19
(lp8153
sg22
(lp8154
sg25
I0
sba(iArchitecture
Entity
p8155
(dp8156
g11
(lp8157
sg14
S'com.google.common.io.LittleEndianDataOutputStreamTest'
p8158
sg16
(lp8159
sg19
(lp8160
sg22
(lp8161
sg25
I0
sba(iArchitecture
Entity
p8162
(dp8163
g11
(lp8164
sg14
S'com.google.common.io.MultiInputStream'
p8165
sg16
(lp8166
sg19
(lp8167
sg22
(lp8168
sg25
I0
sba(iArchitecture
Entity
p8169
(dp8170
g11
(lp8171
sg14
S'com.google.common.io.MultiInputStreamTest'
p8172
sg16
(lp8173
sg19
(lp8174
sg22
(lp8175
sg25
I0
sba(iArchitecture
Entity
p8176
(dp8177
g11
(lp8178
sg14
S'com.google.common.io.MultiReaderTest'
p8179
sg16
(lp8180
sg19
(lp8181
sg22
(lp8182
sg25
I0
sba(iArchitecture
Entity
p8183
(dp8184
g11
(lp8185
sg14
S'com.google.common.io.OutputSupplier'
p8186
sg16
(lp8187
sg19
(lp8188
sg22
(lp8189
sg25
I0
sba(iArchitecture
Entity
p8190
(dp8191
g11
(lp8192
sg14
S'com.google.common.io.PackageSanityTests'
p8193
sg16
(lp8194
sg19
(lp8195
sg22
(lp8196
sg25
I0
sba(iArchitecture
Entity
p8197
(dp8198
g11
(lp8199
sg14
S'com.google.common.io.PatternFilenameFilter'
p8200
sg16
(lp8201
sg19
(lp8202
sg22
(lp8203
sg25
I0
sba(iArchitecture
Entity
p8204
(dp8205
g11
(lp8206
sg14
S'com.google.common.io.PatternFilenameFilterTest'
p8207
sg16
(lp8208
sg19
(lp8209
sg22
(lp8210
sg25
I0
sba(iArchitecture
Entity
p8211
(dp8212
g11
(lp8213
sg14
S'com.google.common.io.RandomAmountInputStream'
p8214
sg16
(lp8215
sg19
(lp8216
sg22
(lp8217
sg25
I0
sba(iArchitecture
Entity
p8218
(dp8219
g11
(lp8220
sg14
S'com.google.common.io.SourceSinkFactories'
p8221
sg16
(lp8222
sg19
(lp8223
sg22
(lp8224
sg25
I0
sba(iArchitecture
Entity
p8225
(dp8226
g11
(lp8227
sg14
S'com.google.common.io.SourceSinkFactory'
p8228
sg16
(lp8229
sg19
(lp8230
sg22
(lp8231
sg25
I0
sba(iArchitecture
Entity
p8232
(dp8233
g11
(lp8234
sg14
S'com.google.common.io.SourceSinkTester'
p8235
sg16
(lp8236
sg19
(lp8237
sg22
(lp8238
sg25
I0
sba(iArchitecture
Entity
p8239
(dp8240
g11
(lp8241
sg14
S'com.google.common.io.TestByteSink'
p8242
sg16
(lp8243
sg19
(lp8244
sg22
(lp8245
sg25
I0
sba(iArchitecture
Entity
p8246
(dp8247
g11
(lp8248
sg14
S'com.google.common.io.TestByteSource'
p8249
sg16
(lp8250
sg19
(lp8251
sg22
(lp8252
sg25
I0
sba(iArchitecture
Entity
p8253
(dp8254
g11
(lp8255
sg14
S'com.google.common.io.TestCharSink'
p8256
sg16
(lp8257
sg19
(lp8258
sg22
(lp8259
sg25
I0
sba(iArchitecture
Entity
p8260
(dp8261
g11
(lp8262
sg14
S'com.google.common.io.TestCharSource'
p8263
sg16
(lp8264
sg19
(lp8265
sg22
(lp8266
sg25
I0
sba(iArchitecture
Entity
p8267
(dp8268
g11
(lp8269
sg14
S'com.google.common.io.TestInputStream'
p8270
sg16
(lp8271
sg19
(lp8272
sg22
(lp8273
sg25
I0
sba(iArchitecture
Entity
p8274
(dp8275
g11
(lp8276
sg14
S'com.google.common.io.TestOption'
p8277
sg16
(lp8278
sg19
(lp8279
sg22
(lp8280
sg25
I0
sba(iArchitecture
Entity
p8281
(dp8282
g11
(lp8283
sg14
S'com.google.common.io.TestOutputStream'
p8284
sg16
(lp8285
sg19
(lp8286
sg22
(lp8287
sg25
I0
sba(iArchitecture
Entity
p8288
(dp8289
g11
(lp8290
sg14
S'com.google.common.io.TestReader'
p8291
sg16
(lp8292
sg19
(lp8293
sg22
(lp8294
sg25
I0
sba(iArchitecture
Entity
p8295
(dp8296
g11
(lp8297
sg14
S'com.google.common.io.TestStreamSupplier'
p8298
sg16
(lp8299
sg19
(lp8300
sg22
(lp8301
sg25
I0
sba(iArchitecture
Entity
p8302
(dp8303
g11
(lp8304
sg14
S'com.google.common.io.TestWriter'
p8305
sg16
(lp8306
sg19
(lp8307
sg22
(lp8308
sg25
I0
sba(iArchitecture
Entity
p8309
(dp8310
g11
(lp8311
sg14
S'com.google.common.io.package-info'
p8312
sg16
(lp8313
sg19
(lp8314
sg22
(lp8315
sg25
I0
sba(iArchitecture
Entity
p8316
(dp8317
g11
(lp8318
sg14
S'com.google.common.math.DoubleUtilsTest'
p8319
sg16
(lp8320
sg19
(lp8321
sg22
(lp8322
sg25
I0
sba(iArchitecture
Entity
p8323
(dp8324
g11
(lp8325
sg14
S'com.google.common.net.MediaTypeTest'
p8326
sg16
(lp8327
sg19
(lp8328
sg22
(lp8329
sg25
I0
sba(iArchitecture
Entity
p8330
(dp8331
g11
(lp8332
sg14
S'com.google.common.primitives.BytesTest'
p8333
sg16
(lp8334
sg19
(lp8335
sg22
(lp8336
sg25
I0
sba(iArchitecture
Entity
p8337
(dp8338
g11
(lp8339
sg14
S'com.google.common.primitives.CharArrayAsListTest'
p8340
sg16
(lp8341
sg19
(lp8342
sg22
(lp8343
sg25
I0
sba(iArchitecture
Entity
p8344
(dp8345
g11
(lp8346
sg14
S'com.google.common.primitives.PackageSanityTests'
p8347
sg16
(lp8348
sg19
(lp8349
sg22
(lp8350
sg25
I0
sba(iArchitecture
Entity
p8351
(dp8352
g11
(lp8353
sg14
S'com.google.common.testing.ArbitraryInstancesTest'
p8354
sg16
(lp8355
sg19
(lp8356
sg22
(lp8357
sg25
I0
sba(iArchitecture
Entity
p8358
(dp8359
g11
(lp8360
sg14
S'com.google.common.testing.ClusterException'
p8361
sg16
(lp8362
sg19
(lp8363
sg22
(lp8364
sg25
I0
sba(iArchitecture
Entity
p8365
(dp8366
g11
(lp8367
sg14
S'com.google.common.testing.FakeTickerTest'
p8368
sg16
(lp8369
sg19
(lp8370
sg22
(lp8371
sg25
I0
sba(iArchitecture
Entity
p8372
(dp8373
g11
(lp8374
sg14
S'com.google.common.testing.Platform'
p8375
sg16
(lp8376
sg19
(lp8377
sg22
(lp8378
sg25
I0
sba(iArchitecture
Entity
p8379
(dp8380
g11
(lp8381
sg14
S'com.google.common.testing.SerializableTester'
p8382
sg16
(lp8383
sg19
(lp8384
sg22
(lp8385
sg25
I0
sba(iArchitecture
Entity
p8386
(dp8387
g11
(lp8388
sg14
S'com.google.common.testing.TearDownStackTest_gwt'
p8389
sg16
(lp8390
sg19
(lp8391
sg22
(lp8392
sg25
I0
sba(iArchitecture
Entity
p8393
(dp8394
g11
(lp8395
sg14
S'com.google.common.testing.anotherpackage.SomeClassThatDoesNotUseNullable'
p8396
sg16
(lp8397
sg19
(lp8398
sg22
(lp8399
sg25
I0
sba(iArchitecture
Entity
p8400
(dp8401
g11
(lp8402
sg14
S'com.google.common.util.concurrent.AbstractChainedListenableFutureTest'
p8403
sg16
(lp8404
sg19
(lp8405
sg22
(lp8406
sg25
I0
sba(iArchitecture
Entity
p8407
(dp8408
g11
(lp8409
sg14
S'com.google.common.util.concurrent.ForwardingObjectTesterTest'
p8410
sg16
(lp8411
sg19
(lp8412
sg22
(lp8413
sg25
I0
sba(iArchitecture
Entity
p8414
(dp8415
g11
(lp8416
g6933
ag6908
ag6908
ag7008
aV2379
p8417
ag7009
ag7009
asg14
S'com.google.common.util.concurrent.Futures'
p8418
sg16
(lp8419
VWe already do in `AbstractFuture`.\u000a
p8420
aVOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p8421
aVOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p8422
aV- @lowasser internal CL 88242480 wants to use `SimpleImmutableEntry`.\u000a- Internal CL 86210805 can be rolled back to use `AssertionError(String, Throwable)`.\u000a- @kak internal CL 83767705 wanted to use `Arrays.copyOf`.\u000a- My internal CL 59647656 wants to remove `AbstractIteratorTester` workarounds for bugs in `java.util` classes fixed in new releases of GWT.\u000a\u000aGWT 2.7.0 was released in November. But note that we had bug reports from users of GWT 2.5.1 as late as October 2014, 9 months after the release of 2.6.0. We should get some idea of how quickly external users update the version of GWT they use.\u000a
p8423
aVPreviously we at least showed [the `@GwtIncompatible` reason in the Javadoc](http://google.github.io/guava/releases/19.0/api/docs/com/google/common/util/concurrent/Futures.html#catching%28com.google.common.util.concurrent.ListenableFuture, java.lang.Class, com.google.common.base.Function%29). But this will be going away in 20.0 with the removal of `@GwtIncompatible` reasons.\u000a\u000aFurthermore, even _with_ the reason, I saw multiple people who were confused.\u000a\u000aThere are various directions we could go here, including removing `@GwtIncompatible` (by adding a manual emulation to `Futures.java` ). But I'm wondering if, whichever direction we go, we pretty much need to start the Javadoc with **This is available under GWT, but you need to pass `Throwable.class` specifically.**\u000a
p8424
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8425
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8426
asg19
(lp8427
g6939
ag6913
ag6913
ag7017
a(lp8428
I2
aag7018
ag7018
asg22
(lp8429
g6941
ag6915
ag6915
ag7020
aVBetter documentation of Futures.catching GWT availability
p8430
ag7021
ag7021
asg25
I0
sba(iArchitecture
Entity
p8431
(dp8432
g11
(lp8433
sg14
S'com.google.common.util.concurrent.FuturesGetCheckedInputs'
p8434
sg16
(lp8435
sg19
(lp8436
sg22
(lp8437
sg25
I0
sba(iArchitecture
Entity
p8438
(dp8439
g11
(lp8440
sg14
S'com.google.common.util.concurrent.FuturesGetCheckedTest'
p8441
sg16
(lp8442
sg19
(lp8443
sg22
(lp8444
sg25
I0
sba(iArchitecture
Entity
p8445
(dp8446
g11
(lp8447
g6933
ag7008
ag7009
ag7009
asg14
S'com.google.common.util.concurrent.FuturesTest'
p8448
sg16
(lp8449
VWe already do in `AbstractFuture`.\u000a
p8450
aV- @lowasser internal CL 88242480 wants to use `SimpleImmutableEntry`.\u000a- Internal CL 86210805 can be rolled back to use `AssertionError(String, Throwable)`.\u000a- @kak internal CL 83767705 wanted to use `Arrays.copyOf`.\u000a- My internal CL 59647656 wants to remove `AbstractIteratorTester` workarounds for bugs in `java.util` classes fixed in new releases of GWT.\u000a\u000aGWT 2.7.0 was released in November. But note that we had bug reports from users of GWT 2.5.1 as late as October 2014, 9 months after the release of 2.6.0. We should get some idea of how quickly external users update the version of GWT they use.\u000a
p8451
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8452
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8453
asg19
(lp8454
g6939
ag7017
ag7018
ag7018
asg22
(lp8455
g6941
ag7020
ag7021
ag7021
asg25
I0
sba(iArchitecture
Entity
p8456
(dp8457
g11
(lp8458
g7009
asg14
S'com.google.common.util.concurrent.FuturesTest_gwt'
p8459
sg16
(lp8460
VHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8461
asg19
(lp8462
g7018
asg22
(lp8463
g7021
asg25
I0
sba(iArchitecture
Entity
p8464
(dp8465
g11
(lp8466
sg14
S'com.google.common.util.concurrent.FuturesTransformAsyncFunctionTest'
p8467
sg16
(lp8468
sg19
(lp8469
sg22
(lp8470
sg25
I0
sba(iArchitecture
Entity
p8471
(dp8472
g11
(lp8473
sg14
S'com.google.common.util.concurrent.FuturesTransformAsyncTest'
p8474
sg16
(lp8475
sg19
(lp8476
sg22
(lp8477
sg25
I0
sba(iArchitecture
Entity
p8478
(dp8479
g11
(lp8480
sg14
S'com.google.common.util.concurrent.FuturesTransformTest'
p8481
sg16
(lp8482
sg19
(lp8483
sg22
(lp8484
sg25
I0
sba(iArchitecture
Entity
p8485
(dp8486
g11
(lp8487
sg14
S'com.google.common.util.concurrent.GwtFuturesCatchingSpecialization'
p8488
sg16
(lp8489
sg19
(lp8490
sg22
(lp8491
sg25
I0
sba(iArchitecture
Entity
p8492
(dp8493
g11
(lp8494
g6933
asg14
S'com.google.common.util.concurrent.InterruptibleTask'
p8495
sg16
(lp8496
VWe already do in `AbstractFuture`.\u000a
p8497
asg19
(lp8498
g6939
asg22
(lp8499
g6941
asg25
I0
sba(iArchitecture
Entity
p8500
(dp8501
g11
(lp8502
sg14
S'com.google.common.util.concurrent.InterruptionUtil'
p8503
sg16
(lp8504
sg19
(lp8505
sg22
(lp8506
sg25
I0
sba(iArchitecture
Entity
p8507
(dp8508
g11
(lp8509
sg14
S'com.google.common.util.concurrent.JdkFutureAdaptersTest'
p8510
sg16
(lp8511
sg19
(lp8512
sg22
(lp8513
sg25
I0
sba(iArchitecture
Entity
p8514
(dp8515
g11
(lp8516
sg14
S'com.google.common.util.concurrent.PackageSanityTests'
p8517
sg16
(lp8518
sg19
(lp8519
sg22
(lp8520
sg25
I0
sba(iArchitecture
Entity
p8521
(dp8522
g11
(lp8523
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiterTest'
p8524
sg16
(lp8525
sg19
(lp8526
sg22
(lp8527
sg25
I0
sba(iArchitecture
Entity
p8528
(dp8529
g11
(lp8530
sg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlers'
p8531
sg16
(lp8532
sg19
(lp8533
sg22
(lp8534
sg25
I0
sba(iArchitecture
Entity
p8535
(dp8536
g11
(lp8537
sg14
S'com.google.common.xml.XmlEscapers'
p8538
sg16
(lp8539
sg19
(lp8540
sg22
(lp8541
sg25
I0
sba(iArchitecture
Entity
p8542
(dp8543
g11
(lp8544
sg14
S'com.google.common.xml.XmlEscapersTest'
p8545
sg16
(lp8546
sg19
(lp8547
sg22
(lp8548
sg25
I0
sba(iArchitecture
Entity
p8549
(dp8550
g11
(lp8551
sg14
S'com.google.thirdparty.publicsuffix.TrieParser'
p8552
sg16
(lp8553
sg19
(lp8554
sg22
(lp8555
sg25
I0
sba(iArchitecture
Entity
p8556
(dp8557
g11
(lp8558
sg14
S'java.nio.charset.Charset'
p8559
sg16
(lp8560
sg19
(lp8561
sg22
(lp8562
sg25
I0
sba(iArchitecture
Entity
p8563
(dp8564
g11
(lp8565
sg14
S'java.nio.charset.IllegalCharsetNameException'
p8566
sg16
(lp8567
sg19
(lp8568
sg22
(lp8569
sg25
I0
sba(iArchitecture
Entity
p8570
(dp8571
g11
(lp8572
sg14
S'java.nio.charset.UnsupportedCharsetException'
p8573
sg16
(lp8574
sg19
(lp8575
sg22
(lp8576
sg25
I0
sba(iArchitecture
Entity
p8577
(dp8578
g11
(lp8579
sg14
S'java.util.concurrent.CancellationException'
p8580
sg16
(lp8581
sg19
(lp8582
sg22
(lp8583
sg25
I0
sba(iArchitecture
Entity
p8584
(dp8585
g11
(lp8586
sg14
S'java.util.concurrent.Executors'
p8587
sg16
(lp8588
sg19
(lp8589
sg22
(lp8590
sg25
I0
sba(iArchitecture
Entity
p8591
(dp8592
g11
(lp8593
sg14
S'java.util.concurrent.RejectedExecutionException'
p8594
sg16
(lp8595
sg19
(lp8596
sg22
(lp8597
sg25
I0
sba(iArchitecture
Entity
p8598
(dp8599
g11
(lp8600
sg14
S'java.util.concurrent.TimeoutException'
p8601
sg16
(lp8602
sg19
(lp8603
sg22
(lp8604
sg25
I0
sbasg1017
(lp8605
g7212
ag7219
ag7226
ag7233
ag7240
ag7247
ag7254
ag7261
ag7268
ag7275
ag7282
ag7289
ag7296
ag7303
ag7310
ag7317
ag7324
ag7331
ag7338
ag7345
ag7352
ag7359
ag7366
ag7373
ag7380
ag7387
ag7394
ag7401
ag7408
ag7415
ag7422
ag7429
ag7436
ag7443
ag7450
ag7457
ag7464
ag7471
ag7478
ag7485
ag7492
ag7499
ag7506
ag7513
ag7520
ag7527
ag7534
ag7541
ag7548
ag7555
ag7562
ag7569
ag7576
ag7583
ag7590
ag7597
ag7604
ag7611
ag7618
ag7625
ag7632
ag7639
ag7646
ag7653
ag7660
ag7667
ag7674
ag7681
ag7688
ag7695
ag7702
ag7709
ag7716
ag7723
ag7730
ag7737
ag7744
ag7751
ag7758
ag7765
ag7772
ag7779
ag7786
ag7793
ag7800
ag7807
ag7814
ag7821
ag7828
ag7835
ag7842
ag7849
ag7856
ag7864
ag7871
ag7878
ag7885
ag7892
ag7899
ag7906
ag7913
ag7920
ag7927
ag7934
ag7941
ag7948
ag7955
ag7962
ag7969
ag7976
ag7983
ag7990
ag7997
ag8004
ag8011
ag8018
ag8025
ag8032
ag8039
ag8046
ag8053
ag8060
ag8067
ag8074
ag8081
ag8088
ag8095
ag8102
ag8109
ag8116
ag8123
ag8130
ag8137
ag8144
ag8151
ag8158
ag8165
ag8172
ag8179
ag8186
ag8193
ag8200
ag8207
ag8214
ag8221
ag8228
ag8235
ag8242
ag8249
ag8256
ag8263
ag8270
ag8277
ag8284
ag8291
ag8298
ag8305
ag8312
ag8319
ag8326
ag8333
ag8340
ag8347
ag8354
ag8361
ag8368
ag8375
ag8382
ag8389
ag8396
ag8403
ag8410
ag8418
ag8434
ag8441
ag8448
ag8459
ag8467
ag8474
ag8481
ag8488
ag8495
ag8503
ag8510
ag8517
ag8524
ag8531
ag8538
ag8545
ag8552
ag8559
ag8566
ag8573
ag8580
ag8587
ag8594
ag8601
asg25
I0
sg1019
S'io'
p8606
sba(iArchitecture
Cluster
p8607
(dp8608
g7
(lp8609
(iArchitecture
Entity
p8610
(dp8611
g11
(lp8612
sg14
S'com.google.common.base.AbstractIterator'
p8613
sg16
(lp8614
sg19
(lp8615
sg22
(lp8616
sg25
I0
sba(iArchitecture
Entity
p8617
(dp8618
g11
(lp8619
sg14
S'com.google.common.base.AbstractIteratorTest'
p8620
sg16
(lp8621
sg19
(lp8622
sg22
(lp8623
sg25
I0
sba(iArchitecture
Entity
p8624
(dp8625
g11
(lp8626
sg14
S'com.google.common.base.AbstractIteratorTest_gwt'
p8627
sg16
(lp8628
sg19
(lp8629
sg22
(lp8630
sg25
I0
sba(iArchitecture
Entity
p8631
(dp8632
g11
(lp8633
sg14
S'com.google.common.base.AsciiTest'
p8634
sg16
(lp8635
sg19
(lp8636
sg22
(lp8637
sg25
I0
sba(iArchitecture
Entity
p8638
(dp8639
g11
(lp8640
sg14
S'com.google.common.base.AsciiTest_gwt'
p8641
sg16
(lp8642
sg19
(lp8643
sg22
(lp8644
sg25
I0
sba(iArchitecture
Entity
p8645
(dp8646
g11
(lp8647
sg14
S'com.google.common.base.CaseFormatTest_gwt'
p8648
sg16
(lp8649
sg19
(lp8650
sg22
(lp8651
sg25
I0
sba(iArchitecture
Entity
p8652
(dp8653
g11
(lp8654
sg14
S'com.google.common.base.CharMatcherTest_gwt'
p8655
sg16
(lp8656
sg19
(lp8657
sg22
(lp8658
sg25
I0
sba(iArchitecture
Entity
p8659
(dp8660
g11
(lp8661
sg14
S'com.google.common.base.CharsetsTest_gwt'
p8662
sg16
(lp8663
sg19
(lp8664
sg22
(lp8665
sg25
I0
sba(iArchitecture
Entity
p8666
(dp8667
g11
(lp8668
sg14
S'com.google.common.base.Converter'
p8669
sg16
(lp8670
sg19
(lp8671
sg22
(lp8672
sg25
I0
sba(iArchitecture
Entity
p8673
(dp8674
g11
(lp8675
sg14
S'com.google.common.base.ConverterTest_gwt'
p8676
sg16
(lp8677
sg19
(lp8678
sg22
(lp8679
sg25
I0
sba(iArchitecture
Entity
p8680
(dp8681
g11
(lp8682
sg14
S'com.google.common.base.Enums'
p8683
sg16
(lp8684
sg19
(lp8685
sg22
(lp8686
sg25
I0
sba(iArchitecture
Entity
p8687
(dp8688
g11
(lp8689
sg14
S'com.google.common.base.EnumsBenchmark'
p8690
sg16
(lp8691
sg19
(lp8692
sg22
(lp8693
sg25
I0
sba(iArchitecture
Entity
p8694
(dp8695
g11
(lp8696
sg14
S'com.google.common.base.EnumsTest'
p8697
sg16
(lp8698
sg19
(lp8699
sg22
(lp8700
sg25
I0
sba(iArchitecture
Entity
p8701
(dp8702
g11
(lp8703
sg14
S'com.google.common.base.EnumsTest_gwt'
p8704
sg16
(lp8705
sg19
(lp8706
sg22
(lp8707
sg25
I0
sba(iArchitecture
Entity
p8708
(dp8709
g11
(lp8710
sg14
S'com.google.common.base.EquivalenceTest_gwt'
p8711
sg16
(lp8712
sg19
(lp8713
sg22
(lp8714
sg25
I0
sba(iArchitecture
Entity
p8715
(dp8716
g11
(lp8717
sg14
S'com.google.common.base.FinalizableReferenceQueue'
p8718
sg16
(lp8719
sg19
(lp8720
sg22
(lp8721
sg25
I0
sba(iArchitecture
Entity
p8722
(dp8723
g11
(lp8724
sg14
S'com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest'
p8725
sg16
(lp8726
sg19
(lp8727
sg22
(lp8728
sg25
I0
sba(iArchitecture
Entity
p8729
(dp8730
g11
(lp8731
sg14
S'com.google.common.base.FinalizableReferenceQueueTest'
p8732
sg16
(lp8733
sg19
(lp8734
sg22
(lp8735
sg25
I0
sba(iArchitecture
Entity
p8736
(dp8737
g11
(lp8738
sg14
S'com.google.common.base.FunctionsTest_gwt'
p8739
sg16
(lp8740
sg19
(lp8741
sg22
(lp8742
sg25
I0
sba(iArchitecture
Entity
p8743
(dp8744
g11
(lp8745
sg14
S'com.google.common.base.GwtSerializationDependencies'
p8746
sg16
(lp8747
sg19
(lp8748
sg22
(lp8749
sg25
I0
sba(iArchitecture
Entity
p8750
(dp8751
g11
(lp8752
sg14
S'com.google.common.base.Joiner'
p8753
sg16
(lp8754
sg19
(lp8755
sg22
(lp8756
sg25
I0
sba(iArchitecture
Entity
p8757
(dp8758
g11
(lp8759
sg14
S'com.google.common.base.JoinerTest_gwt'
p8760
sg16
(lp8761
sg19
(lp8762
sg22
(lp8763
sg25
I0
sba(iArchitecture
Entity
p8764
(dp8765
g11
(lp8766
sg14
S'com.google.common.base.ObjectsTest_gwt'
p8767
sg16
(lp8768
sg19
(lp8769
sg22
(lp8770
sg25
I0
sba(iArchitecture
Entity
p8771
(dp8772
g11
(lp8773
sg14
S'com.google.common.base.OptionalTest_gwt'
p8774
sg16
(lp8775
sg19
(lp8776
sg22
(lp8777
sg25
I0
sba(iArchitecture
Entity
p8778
(dp8779
g11
(lp8780
sg14
S'com.google.common.base.PackageSanityTests'
p8781
sg16
(lp8782
sg19
(lp8783
sg22
(lp8784
sg25
I0
sba(iArchitecture
Entity
p8785
(dp8786
g11
(lp8787
sg14
S'com.google.common.base.PreconditionsTest_gwt'
p8788
sg16
(lp8789
sg19
(lp8790
sg22
(lp8791
sg25
I0
sba(iArchitecture
Entity
p8792
(dp8793
g11
(lp8794
sg14
S'com.google.common.base.PredicatesTest_gwt'
p8795
sg16
(lp8796
sg19
(lp8797
sg22
(lp8798
sg25
I0
sba(iArchitecture
Entity
p8799
(dp8800
g11
(lp8801
sg14
S'com.google.common.base.SplitterTest_gwt'
p8802
sg16
(lp8803
sg19
(lp8804
sg22
(lp8805
sg25
I0
sba(iArchitecture
Entity
p8806
(dp8807
g11
(lp8808
sg14
S'com.google.common.base.StandardSystemPropertyTest'
p8809
sg16
(lp8810
sg19
(lp8811
sg22
(lp8812
sg25
I0
sba(iArchitecture
Entity
p8813
(dp8814
g11
(lp8815
g3717
asg14
S'com.google.common.base.StopwatchTest_gwt'
p8816
sg16
(lp8817
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p8818
asg19
(lp8819
g3723
asg22
(lp8820
g3725
asg25
I0
sba(iArchitecture
Entity
p8821
(dp8822
g11
(lp8823
sg14
S'com.google.common.base.StringsTest_gwt'
p8824
sg16
(lp8825
sg19
(lp8826
sg22
(lp8827
sg25
I0
sba(iArchitecture
Entity
p8828
(dp8829
g11
(lp8830
sg14
S'com.google.common.base.SuppliersTest_gwt'
p8831
sg16
(lp8832
sg19
(lp8833
sg22
(lp8834
sg25
I0
sba(iArchitecture
Entity
p8835
(dp8836
g11
(lp8837
sg14
S'com.google.common.base.Ticker'
p8838
sg16
(lp8839
sg19
(lp8840
sg22
(lp8841
sg25
I0
sba(iArchitecture
Entity
p8842
(dp8843
g11
(lp8844
sg14
S'com.google.common.base.ToStringHelperTest_gwt'
p8845
sg16
(lp8846
sg19
(lp8847
sg22
(lp8848
sg25
I0
sba(iArchitecture
Entity
p8849
(dp8850
g11
(lp8851
sg14
S'com.google.common.base.Utf8Test_gwt'
p8852
sg16
(lp8853
sg19
(lp8854
sg22
(lp8855
sg25
I0
sba(iArchitecture
Entity
p8856
(dp8857
g11
(lp8858
sg14
S'com.google.common.base.Verify'
p8859
sg16
(lp8860
sg19
(lp8861
sg22
(lp8862
sg25
I0
sba(iArchitecture
Entity
p8863
(dp8864
g11
(lp8865
sg14
S'com.google.common.base.VerifyException'
p8866
sg16
(lp8867
sg19
(lp8868
sg22
(lp8869
sg25
I0
sba(iArchitecture
Entity
p8870
(dp8871
g11
(lp8872
sg14
S'com.google.common.base.VerifyTest_gwt'
p8873
sg16
(lp8874
sg19
(lp8875
sg22
(lp8876
sg25
I0
sba(iArchitecture
Entity
p8877
(dp8878
g11
(lp8879
sg14
S'com.google.common.base.package-info'
p8880
sg16
(lp8881
sg19
(lp8882
sg22
(lp8883
sg25
I0
sba(iArchitecture
Entity
p8884
(dp8885
g11
(lp8886
sg14
S'com.google.common.cache.AbstractCache'
p8887
sg16
(lp8888
sg19
(lp8889
sg22
(lp8890
sg25
I0
sba(iArchitecture
Entity
p8891
(dp8892
g11
(lp8893
sg14
S'com.google.common.cache.AbstractLoadingCache'
p8894
sg16
(lp8895
sg19
(lp8896
sg22
(lp8897
sg25
I0
sba(iArchitecture
Entity
p8898
(dp8899
g11
(lp8900
sg14
S'com.google.common.cache.CacheBuilder'
p8901
sg16
(lp8902
sg19
(lp8903
sg22
(lp8904
sg25
I0
sba(iArchitecture
Entity
p8905
(dp8906
g11
(lp8907
sg14
S'com.google.common.cache.CacheBuilderGwtTest'
p8908
sg16
(lp8909
sg19
(lp8910
sg22
(lp8911
sg25
I0
sba(iArchitecture
Entity
p8912
(dp8913
g11
(lp8914
sg14
S'com.google.common.cache.CacheBuilderGwtTest_gwt'
p8915
sg16
(lp8916
sg19
(lp8917
sg22
(lp8918
sg25
I0
sba(iArchitecture
Entity
p8919
(dp8920
g11
(lp8921
sg14
S'com.google.common.cache.CacheBuilderTest_gwt'
p8922
sg16
(lp8923
sg19
(lp8924
sg22
(lp8925
sg25
I0
sba(iArchitecture
Entity
p8926
(dp8927
g11
(lp8928
sg14
S'com.google.common.cache.CacheEvictionTest'
p8929
sg16
(lp8930
sg19
(lp8931
sg22
(lp8932
sg25
I0
sba(iArchitecture
Entity
p8933
(dp8934
g11
(lp8935
sg14
S'com.google.common.cache.CacheExpirationTest'
p8936
sg16
(lp8937
sg19
(lp8938
sg22
(lp8939
sg25
I0
sba(iArchitecture
Entity
p8940
(dp8941
g11
(lp8942
sg14
S'com.google.common.cache.CacheLoader'
p8943
sg16
(lp8944
sg19
(lp8945
sg22
(lp8946
sg25
I0
sba(iArchitecture
Entity
p8947
(dp8948
g11
(lp8949
sg14
S'com.google.common.cache.CacheManualTest'
p8950
sg16
(lp8951
sg19
(lp8952
sg22
(lp8953
sg25
I0
sba(iArchitecture
Entity
p8954
(dp8955
g11
(lp8956
sg14
S'com.google.common.cache.CacheReferencesTest'
p8957
sg16
(lp8958
sg19
(lp8959
sg22
(lp8960
sg25
I0
sba(iArchitecture
Entity
p8961
(dp8962
g11
(lp8963
sg14
S'com.google.common.cache.CacheRefreshTest'
p8964
sg16
(lp8965
sg19
(lp8966
sg22
(lp8967
sg25
I0
sba(iArchitecture
Entity
p8968
(dp8969
g11
(lp8970
sg14
S'com.google.common.cache.CacheStats'
p8971
sg16
(lp8972
sg19
(lp8973
sg22
(lp8974
sg25
I0
sba(iArchitecture
Entity
p8975
(dp8976
g11
(lp8977
sg14
S'com.google.common.cache.ForwardingCache'
p8978
sg16
(lp8979
sg19
(lp8980
sg22
(lp8981
sg25
I0
sba(iArchitecture
Entity
p8982
(dp8983
g11
(lp8984
sg14
S'com.google.common.cache.ForwardingLoadingCache'
p8985
sg16
(lp8986
sg19
(lp8987
sg22
(lp8988
sg25
I0
sba(iArchitecture
Entity
p8989
(dp8990
g11
(lp8991
sg14
S'com.google.common.cache.LoadingCache'
p8992
sg16
(lp8993
sg19
(lp8994
sg22
(lp8995
sg25
I0
sba(iArchitecture
Entity
p8996
(dp8997
g11
(lp8998
sg14
S'com.google.common.cache.LocalLoadingCacheTest'
p8999
sg16
(lp9000
sg19
(lp9001
sg22
(lp9002
sg25
I0
sba(iArchitecture
Entity
p9003
(dp9004
g11
(lp9005
sg14
S'com.google.common.cache.LongAddables'
p9006
sg16
(lp9007
sg19
(lp9008
sg22
(lp9009
sg25
I0
sba(iArchitecture
Entity
p9010
(dp9011
g11
(lp9012
sg14
S'com.google.common.cache.LongAdder'
p9013
sg16
(lp9014
sg19
(lp9015
sg22
(lp9016
sg25
I0
sba(iArchitecture
Entity
p9017
(dp9018
g11
(lp9019
sg14
S'com.google.common.cache.LongAdderTest'
p9020
sg16
(lp9021
sg19
(lp9022
sg22
(lp9023
sg25
I0
sba(iArchitecture
Entity
p9024
(dp9025
g11
(lp9026
sg14
S'com.google.common.cache.PopulatedCachesTest'
p9027
sg16
(lp9028
sg19
(lp9029
sg22
(lp9030
sg25
I0
sba(iArchitecture
Entity
p9031
(dp9032
g11
(lp9033
sg14
S'com.google.common.cache.RemovalCause'
p9034
sg16
(lp9035
sg19
(lp9036
sg22
(lp9037
sg25
I0
sba(iArchitecture
Entity
p9038
(dp9039
g11
(lp9040
sg14
S'com.google.common.cache.RemovalListeners'
p9041
sg16
(lp9042
sg19
(lp9043
sg22
(lp9044
sg25
I0
sba(iArchitecture
Entity
p9045
(dp9046
g11
(lp9047
sg14
S'com.google.common.cache.RemovalNotification'
p9048
sg16
(lp9049
sg19
(lp9050
sg22
(lp9051
sg25
I0
sba(iArchitecture
Entity
p9052
(dp9053
g11
(lp9054
sg14
S'com.google.common.cache.RemovalNotificationTest'
p9055
sg16
(lp9056
sg19
(lp9057
sg22
(lp9058
sg25
I0
sba(iArchitecture
Entity
p9059
(dp9060
g11
(lp9061
sg14
S'com.google.common.cache.Striped64'
p9062
sg16
(lp9063
sg19
(lp9064
sg22
(lp9065
sg25
I0
sba(iArchitecture
Entity
p9066
(dp9067
g11
(lp9068
sg14
S'com.google.common.cache.TestModuleEntryPoint'
p9069
sg16
(lp9070
sg19
(lp9071
sg22
(lp9072
sg25
I0
sba(iArchitecture
Entity
p9073
(dp9074
g11
(lp9075
sg14
S'com.google.common.cache.TestingCacheLoaders'
p9076
sg16
(lp9077
sg19
(lp9078
sg22
(lp9079
sg25
I0
sba(iArchitecture
Entity
p9080
(dp9081
g11
(lp9082
sg14
S'com.google.common.cache.TestingRemovalListeners'
p9083
sg16
(lp9084
sg19
(lp9085
sg22
(lp9086
sg25
I0
sba(iArchitecture
Entity
p9087
(dp9088
g11
(lp9089
sg14
S'com.google.common.cache.Weigher'
p9090
sg16
(lp9091
sg19
(lp9092
sg22
(lp9093
sg25
I0
sba(iArchitecture
Entity
p9094
(dp9095
g11
(lp9096
sg14
S'com.google.common.cache.package-info'
p9097
sg16
(lp9098
sg19
(lp9099
sg22
(lp9100
sg25
I0
sba(iArchitecture
Entity
p9101
(dp9102
g11
(lp9103
sg14
S'com.google.common.collect.AbstractIterator'
p9104
sg16
(lp9105
sg19
(lp9106
sg22
(lp9107
sg25
I0
sba(iArchitecture
Entity
p9108
(dp9109
g11
(lp9110
sg14
S'com.google.common.collect.AbstractIteratorTest_gwt'
p9111
sg16
(lp9112
sg19
(lp9113
sg22
(lp9114
sg25
I0
sba(iArchitecture
Entity
p9115
(dp9116
g11
(lp9117
sg14
S'com.google.common.collect.AbstractMapEntry'
p9118
sg16
(lp9119
sg19
(lp9120
sg22
(lp9121
sg25
I0
sba(iArchitecture
Entity
p9122
(dp9123
g11
(lp9124
sg14
S'com.google.common.collect.AbstractMapEntryTest_gwt'
p9125
sg16
(lp9126
sg19
(lp9127
sg22
(lp9128
sg25
I0
sba(iArchitecture
Entity
p9129
(dp9130
g11
(lp9131
sg14
S'com.google.common.collect.AbstractMultimapAsMapImplementsMapTest'
p9132
sg16
(lp9133
sg19
(lp9134
sg22
(lp9135
sg25
I0
sba(iArchitecture
Entity
p9136
(dp9137
g11
(lp9138
sg14
S'com.google.common.collect.AbstractSequentialIteratorTest_gwt'
p9139
sg16
(lp9140
sg19
(lp9141
sg22
(lp9142
sg25
I0
sba(iArchitecture
Entity
p9143
(dp9144
g11
(lp9145
sg14
S'com.google.common.collect.AbstractSortedMultiset'
p9146
sg16
(lp9147
sg19
(lp9148
sg22
(lp9149
sg25
I0
sba(iArchitecture
Entity
p9150
(dp9151
g11
(lp9152
sg14
S'com.google.common.collect.ArrayListMultimapTest_gwt'
p9153
sg16
(lp9154
sg19
(lp9155
sg22
(lp9156
sg25
I0
sba(iArchitecture
Entity
p9157
(dp9158
g11
(lp9159
sg14
S'com.google.common.collect.ArrayListMultimap_CustomFieldSerializer'
p9160
sg16
(lp9161
sg19
(lp9162
sg22
(lp9163
sg25
I0
sba(iArchitecture
Entity
p9164
(dp9165
g11
(lp9166
sg14
S'com.google.common.collect.BenchmarkHelpers'
p9167
sg16
(lp9168
sg19
(lp9169
sg22
(lp9170
sg25
I0
sba(iArchitecture
Entity
p9171
(dp9172
g11
(lp9173
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p9174
sg16
(lp9175
sg19
(lp9176
sg22
(lp9177
sg25
I0
sba(iArchitecture
Entity
p9178
(dp9179
g11
(lp9180
sg14
S'com.google.common.collect.CollectPreconditions'
p9181
sg16
(lp9182
sg19
(lp9183
sg22
(lp9184
sg25
I0
sba(iArchitecture
Entity
p9185
(dp9186
g11
(lp9187
sg14
S'com.google.common.collect.ComparisonChainTest_gwt'
p9188
sg16
(lp9189
sg19
(lp9190
sg22
(lp9191
sg25
I0
sba(iArchitecture
Entity
p9192
(dp9193
g11
(lp9194
sg14
S'com.google.common.collect.ConstrainedBiMapTest'
p9195
sg16
(lp9196
sg19
(lp9197
sg22
(lp9198
sg25
I0
sba(iArchitecture
Entity
p9199
(dp9200
g11
(lp9201
sg14
S'com.google.common.collect.ConstrainedBiMapTest_gwt'
p9202
sg16
(lp9203
sg19
(lp9204
sg22
(lp9205
sg25
I0
sba(iArchitecture
Entity
p9206
(dp9207
g11
(lp9208
sg14
S'com.google.common.collect.ConstrainedMapTest'
p9209
sg16
(lp9210
sg19
(lp9211
sg22
(lp9212
sg25
I0
sba(iArchitecture
Entity
p9213
(dp9214
g11
(lp9215
sg14
S'com.google.common.collect.ConstrainedMapTest_gwt'
p9216
sg16
(lp9217
sg19
(lp9218
sg22
(lp9219
sg25
I0
sba(iArchitecture
Entity
p9220
(dp9221
g11
(lp9222
sg14
S'com.google.common.collect.ConstrainedMultimapAsMapImplementsMapTest'
p9223
sg16
(lp9224
sg19
(lp9225
sg22
(lp9226
sg25
I0
sba(iArchitecture
Entity
p9227
(dp9228
g11
(lp9229
sg14
S'com.google.common.collect.Constraint'
p9230
sg16
(lp9231
sg19
(lp9232
sg22
(lp9233
sg25
I0
sba(iArchitecture
Entity
p9234
(dp9235
g11
(lp9236
sg14
S'com.google.common.collect.Constraints'
p9237
sg16
(lp9238
sg19
(lp9239
sg22
(lp9240
sg25
I0
sba(iArchitecture
Entity
p9241
(dp9242
g11
(lp9243
sg14
S'com.google.common.collect.ConstraintsTest'
p9244
sg16
(lp9245
sg19
(lp9246
sg22
(lp9247
sg25
I0
sba(iArchitecture
Entity
p9248
(dp9249
g11
(lp9250
sg14
S'com.google.common.collect.ConstraintsTest_gwt'
p9251
sg16
(lp9252
sg19
(lp9253
sg22
(lp9254
sg25
I0
sba(iArchitecture
Entity
p9255
(dp9256
g11
(lp9257
sg14
S'com.google.common.collect.ConsumingQueueIterator'
p9258
sg16
(lp9259
sg19
(lp9260
sg22
(lp9261
sg25
I0
sba(iArchitecture
Entity
p9262
(dp9263
g11
(lp9264
sg14
S'com.google.common.collect.ContiguousSetTest_gwt'
p9265
sg16
(lp9266
sg19
(lp9267
sg22
(lp9268
sg25
I0
sba(iArchitecture
Entity
p9269
(dp9270
g11
(lp9271
sg14
S'com.google.common.collect.CountTest'
p9272
sg16
(lp9273
sg19
(lp9274
sg22
(lp9275
sg25
I0
sba(iArchitecture
Entity
p9276
(dp9277
g11
(lp9278
sg14
S'com.google.common.collect.CountTest_gwt'
p9279
sg16
(lp9280
sg19
(lp9281
sg22
(lp9282
sg25
I0
sba(iArchitecture
Entity
p9283
(dp9284
g11
(lp9285
sg14
S'com.google.common.collect.Cut'
p9286
sg16
(lp9287
sg19
(lp9288
sg22
(lp9289
sg25
I0
sba(iArchitecture
Entity
p9290
(dp9291
g11
(lp9292
sg14
S'com.google.common.collect.DiscreteDomain'
p9293
sg16
(lp9294
sg19
(lp9295
sg22
(lp9296
sg25
I0
sba(iArchitecture
Entity
p9297
(dp9298
g11
(lp9299
sg14
S'com.google.common.collect.DiscreteDomainTest'
p9300
sg16
(lp9301
sg19
(lp9302
sg22
(lp9303
sg25
I0
sba(iArchitecture
Entity
p9304
(dp9305
g11
(lp9306
sg14
S'com.google.common.collect.EnumBiMapTest_gwt'
p9307
sg16
(lp9308
sg19
(lp9309
sg22
(lp9310
sg25
I0
sba(iArchitecture
Entity
p9311
(dp9312
g11
(lp9313
sg14
S'com.google.common.collect.EnumHashBiMapTest_gwt'
p9314
sg16
(lp9315
sg19
(lp9316
sg22
(lp9317
sg25
I0
sba(iArchitecture
Entity
p9318
(dp9319
g11
(lp9320
sg14
S'com.google.common.collect.EnumMultisetTest_gwt'
p9321
sg16
(lp9322
sg19
(lp9323
sg22
(lp9324
sg25
I0
sba(iArchitecture
Entity
p9325
(dp9326
g11
(lp9327
sg14
S'com.google.common.collect.EvictingQueue'
p9328
sg16
(lp9329
sg19
(lp9330
sg22
(lp9331
sg25
I0
sba(iArchitecture
Entity
p9332
(dp9333
g11
(lp9334
sg14
S'com.google.common.collect.EvictingQueueTest_gwt'
p9335
sg16
(lp9336
sg19
(lp9337
sg22
(lp9338
sg25
I0
sba(iArchitecture
Entity
p9339
(dp9340
g11
(lp9341
sg14
S'com.google.common.collect.FilteredKeyListMultimap'
p9342
sg16
(lp9343
sg19
(lp9344
sg22
(lp9345
sg25
I0
sba(iArchitecture
Entity
p9346
(dp9347
g11
(lp9348
sg14
S'com.google.common.collect.FilteredSetMultimap'
p9349
sg16
(lp9350
sg19
(lp9351
sg22
(lp9352
sg25
I0
sba(iArchitecture
Entity
p9353
(dp9354
g11
(lp9355
sg14
S'com.google.common.collect.ForwardingCollection'
p9356
sg16
(lp9357
sg19
(lp9358
sg22
(lp9359
sg25
I0
sba(iArchitecture
Entity
p9360
(dp9361
g11
(lp9362
sg14
S'com.google.common.collect.ForwardingConcurrentMap'
p9363
sg16
(lp9364
sg19
(lp9365
sg22
(lp9366
sg25
I0
sba(iArchitecture
Entity
p9367
(dp9368
g11
(lp9369
sg14
S'com.google.common.collect.ForwardingImmutableList'
p9370
sg16
(lp9371
sg19
(lp9372
sg22
(lp9373
sg25
I0
sba(iArchitecture
Entity
p9374
(dp9375
g11
(lp9376
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p9377
sg16
(lp9378
sg19
(lp9379
sg22
(lp9380
sg25
I0
sba(iArchitecture
Entity
p9381
(dp9382
g11
(lp9383
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p9384
sg16
(lp9385
sg19
(lp9386
sg22
(lp9387
sg25
I0
sba(iArchitecture
Entity
p9388
(dp9389
g11
(lp9390
sg14
S'com.google.common.collect.ForwardingIterator'
p9391
sg16
(lp9392
sg19
(lp9393
sg22
(lp9394
sg25
I0
sba(iArchitecture
Entity
p9395
(dp9396
g11
(lp9397
sg14
S'com.google.common.collect.ForwardingListIterator'
p9398
sg16
(lp9399
sg19
(lp9400
sg22
(lp9401
sg25
I0
sba(iArchitecture
Entity
p9402
(dp9403
g11
(lp9404
sg14
S'com.google.common.collect.ForwardingListMultimap'
p9405
sg16
(lp9406
sg19
(lp9407
sg22
(lp9408
sg25
I0
sba(iArchitecture
Entity
p9409
(dp9410
g11
(lp9411
sg14
S'com.google.common.collect.ForwardingListMultimapTest'
p9412
sg16
(lp9413
sg19
(lp9414
sg22
(lp9415
sg25
I0
sba(iArchitecture
Entity
p9416
(dp9417
g11
(lp9418
sg14
S'com.google.common.collect.ForwardingMap'
p9419
sg16
(lp9420
sg19
(lp9421
sg22
(lp9422
sg25
I0
sba(iArchitecture
Entity
p9423
(dp9424
g11
(lp9425
sg14
S'com.google.common.collect.ForwardingMapEntry'
p9426
sg16
(lp9427
sg19
(lp9428
sg22
(lp9429
sg25
I0
sba(iArchitecture
Entity
p9430
(dp9431
g11
(lp9432
sg14
S'com.google.common.collect.ForwardingMultiset'
p9433
sg16
(lp9434
sg19
(lp9435
sg22
(lp9436
sg25
I0
sba(iArchitecture
Entity
p9437
(dp9438
g11
(lp9439
sg14
S'com.google.common.collect.ForwardingNavigableMap'
p9440
sg16
(lp9441
sg19
(lp9442
sg22
(lp9443
sg25
I0
sba(iArchitecture
Entity
p9444
(dp9445
g11
(lp9446
sg14
S'com.google.common.collect.ForwardingNavigableSet'
p9447
sg16
(lp9448
sg19
(lp9449
sg22
(lp9450
sg25
I0
sba(iArchitecture
Entity
p9451
(dp9452
g11
(lp9453
sg14
S'com.google.common.collect.ForwardingObject'
p9454
sg16
(lp9455
sg19
(lp9456
sg22
(lp9457
sg25
I0
sba(iArchitecture
Entity
p9458
(dp9459
g11
(lp9460
sg14
S'com.google.common.collect.ForwardingQueue'
p9461
sg16
(lp9462
sg19
(lp9463
sg22
(lp9464
sg25
I0
sba(iArchitecture
Entity
p9465
(dp9466
g11
(lp9467
sg14
S'com.google.common.collect.ForwardingSet'
p9468
sg16
(lp9469
sg19
(lp9470
sg22
(lp9471
sg25
I0
sba(iArchitecture
Entity
p9472
(dp9473
g11
(lp9474
sg14
S'com.google.common.collect.ForwardingSetMultimapTest'
p9475
sg16
(lp9476
sg19
(lp9477
sg22
(lp9478
sg25
I0
sba(iArchitecture
Entity
p9479
(dp9480
g11
(lp9481
sg14
S'com.google.common.collect.ForwardingSortedMap'
p9482
sg16
(lp9483
sg19
(lp9484
sg22
(lp9485
sg25
I0
sba(iArchitecture
Entity
p9486
(dp9487
g11
(lp9488
sg14
S'com.google.common.collect.ForwardingSortedMultiset'
p9489
sg16
(lp9490
sg19
(lp9491
sg22
(lp9492
sg25
I0
sba(iArchitecture
Entity
p9493
(dp9494
g11
(lp9495
sg14
S'com.google.common.collect.ForwardingSortedSet'
p9496
sg16
(lp9497
sg19
(lp9498
sg22
(lp9499
sg25
I0
sba(iArchitecture
Entity
p9500
(dp9501
g11
(lp9502
sg14
S'com.google.common.collect.ForwardingSortedSetMultimapTest'
p9503
sg16
(lp9504
sg19
(lp9505
sg22
(lp9506
sg25
I0
sba(iArchitecture
Entity
p9507
(dp9508
g11
(lp9509
sg14
S'com.google.common.collect.GeneralRangeTest_gwt'
p9510
sg16
(lp9511
sg19
(lp9512
sg22
(lp9513
sg25
I0
sba(iArchitecture
Entity
p9514
(dp9515
g11
(lp9516
sg14
S'com.google.common.collect.GenericMapMaker'
p9517
sg16
(lp9518
sg19
(lp9519
sg22
(lp9520
sg25
I0
sba(iArchitecture
Entity
p9521
(dp9522
g11
(lp9523
sg14
S'com.google.common.collect.GwtPlatform'
p9524
sg16
(lp9525
sg19
(lp9526
sg22
(lp9527
sg25
I0
sba(iArchitecture
Entity
p9528
(dp9529
g11
(lp9530
sg14
S'com.google.common.collect.GwtTransient'
p9531
sg16
(lp9532
sg19
(lp9533
sg22
(lp9534
sg25
I0
sba(iArchitecture
Entity
p9535
(dp9536
g11
(lp9537
sg14
S'com.google.common.collect.HashBiMapTest_gwt'
p9538
sg16
(lp9539
sg19
(lp9540
sg22
(lp9541
sg25
I0
sba(iArchitecture
Entity
p9542
(dp9543
g11
(lp9544
sg14
S'com.google.common.collect.HashMultimapTest'
p9545
sg16
(lp9546
sg19
(lp9547
sg22
(lp9548
sg25
I0
sba(iArchitecture
Entity
p9549
(dp9550
g11
(lp9551
sg14
S'com.google.common.collect.HashMultimapTest_gwt'
p9552
sg16
(lp9553
sg19
(lp9554
sg22
(lp9555
sg25
I0
sba(iArchitecture
Entity
p9556
(dp9557
g11
(lp9558
sg14
S'com.google.common.collect.HashMultimap_CustomFieldSerializer'
p9559
sg16
(lp9560
sg19
(lp9561
sg22
(lp9562
sg25
I0
sba(iArchitecture
Entity
p9563
(dp9564
g11
(lp9565
sg14
S'com.google.common.collect.HashMultiset'
p9566
sg16
(lp9567
sg19
(lp9568
sg22
(lp9569
sg25
I0
sba(iArchitecture
Entity
p9570
(dp9571
g11
(lp9572
sg14
S'com.google.common.collect.HashMultisetTest'
p9573
sg16
(lp9574
sg19
(lp9575
sg22
(lp9576
sg25
I0
sba(iArchitecture
Entity
p9577
(dp9578
g11
(lp9579
sg14
S'com.google.common.collect.HashMultisetTest_gwt'
p9580
sg16
(lp9581
sg19
(lp9582
sg22
(lp9583
sg25
I0
sba(iArchitecture
Entity
p9584
(dp9585
g11
(lp9586
sg14
S'com.google.common.collect.ImmutableAsList'
p9587
sg16
(lp9588
sg19
(lp9589
sg22
(lp9590
sg25
I0
sba(iArchitecture
Entity
p9591
(dp9592
g11
(lp9593
sg14
S'com.google.common.collect.ImmutableClassToInstanceMapTest'
p9594
sg16
(lp9595
sg19
(lp9596
sg22
(lp9597
sg25
I0
sba(iArchitecture
Entity
p9598
(dp9599
g11
(lp9600
sg14
S'com.google.common.collect.ImmutableCollection'
p9601
sg16
(lp9602
sg19
(lp9603
sg22
(lp9604
sg25
I0
sba(iArchitecture
Entity
p9605
(dp9606
g11
(lp9607
sg14
S'com.google.common.collect.ImmutableEnumMap'
p9608
sg16
(lp9609
sg19
(lp9610
sg22
(lp9611
sg25
I0
sba(iArchitecture
Entity
p9612
(dp9613
g11
(lp9614
sg14
S'com.google.common.collect.ImmutableEnumMapTest'
p9615
sg16
(lp9616
sg19
(lp9617
sg22
(lp9618
sg25
I0
sba(iArchitecture
Entity
p9619
(dp9620
g11
(lp9621
sg14
S'com.google.common.collect.ImmutableEnumMapTest_gwt'
p9622
sg16
(lp9623
sg19
(lp9624
sg22
(lp9625
sg25
I0
sba(iArchitecture
Entity
p9626
(dp9627
g11
(lp9628
sg14
S'com.google.common.collect.ImmutableEnumSet'
p9629
sg16
(lp9630
sg19
(lp9631
sg22
(lp9632
sg25
I0
sba(iArchitecture
Entity
p9633
(dp9634
g11
(lp9635
sg14
S'com.google.common.collect.ImmutableMapEntry'
p9636
sg16
(lp9637
sg19
(lp9638
sg22
(lp9639
sg25
I0
sba(iArchitecture
Entity
p9640
(dp9641
g11
(lp9642
sg14
S'com.google.common.collect.ImmutableMapEntrySet'
p9643
sg16
(lp9644
sg19
(lp9645
sg22
(lp9646
sg25
I0
sba(iArchitecture
Entity
p9647
(dp9648
g11
(lp9649
sg14
S'com.google.common.collect.ImmutableMultimapAsMapImplementsMapTest'
p9650
sg16
(lp9651
sg19
(lp9652
sg22
(lp9653
sg25
I0
sba(iArchitecture
Entity
p9654
(dp9655
g11
(lp9656
sg14
S'com.google.common.collect.ImmutableMultimapTest_gwt'
p9657
sg16
(lp9658
sg19
(lp9659
sg22
(lp9660
sg25
I0
sba(iArchitecture
Entity
p9661
(dp9662
g11
(lp9663
sg14
S'com.google.common.collect.ImmutableSetMultimapAsMapImplementsMapTest'
p9664
sg16
(lp9665
sg19
(lp9666
sg22
(lp9667
sg25
I0
sba(iArchitecture
Entity
p9668
(dp9669
g11
(lp9670
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p9671
sg16
(lp9672
sg19
(lp9673
sg22
(lp9674
sg25
I0
sba(iArchitecture
Entity
p9675
(dp9676
g11
(lp9677
sg14
S'com.google.common.collect.Interners'
p9678
sg16
(lp9679
sg19
(lp9680
sg22
(lp9681
sg25
I0
sba(iArchitecture
Entity
p9682
(dp9683
g11
(lp9684
sg14
S'com.google.common.collect.LenientSerializableTester'
p9685
sg16
(lp9686
sg19
(lp9687
sg22
(lp9688
sg25
I0
sba(iArchitecture
Entity
p9689
(dp9690
g11
(lp9691
sg14
S'com.google.common.collect.LinkedHashMultimapTest_gwt'
p9692
sg16
(lp9693
sg19
(lp9694
sg22
(lp9695
sg25
I0
sba(iArchitecture
Entity
p9696
(dp9697
g11
(lp9698
sg14
S'com.google.common.collect.LinkedHashMultiset'
p9699
sg16
(lp9700
sg19
(lp9701
sg22
(lp9702
sg25
I0
sba(iArchitecture
Entity
p9703
(dp9704
g11
(lp9705
sg14
S'com.google.common.collect.LinkedHashMultisetTest'
p9706
sg16
(lp9707
sg19
(lp9708
sg22
(lp9709
sg25
I0
sba(iArchitecture
Entity
p9710
(dp9711
g11
(lp9712
sg14
S'com.google.common.collect.LinkedHashMultisetTest_gwt'
p9713
sg16
(lp9714
sg19
(lp9715
sg22
(lp9716
sg25
I0
sba(iArchitecture
Entity
p9717
(dp9718
g11
(lp9719
sg14
S'com.google.common.collect.LinkedListMultimapTest'
p9720
sg16
(lp9721
sg19
(lp9722
sg22
(lp9723
sg25
I0
sba(iArchitecture
Entity
p9724
(dp9725
g11
(lp9726
sg14
S'com.google.common.collect.LinkedListMultimapTest_gwt'
p9727
sg16
(lp9728
sg19
(lp9729
sg22
(lp9730
sg25
I0
sba(iArchitecture
Entity
p9731
(dp9732
g11
(lp9733
sg14
S'com.google.common.collect.MapConstraint'
p9734
sg16
(lp9735
sg19
(lp9736
sg22
(lp9737
sg25
I0
sba(iArchitecture
Entity
p9738
(dp9739
g11
(lp9740
sg14
S'com.google.common.collect.MapMaker'
p9741
sg16
(lp9742
sg19
(lp9743
sg22
(lp9744
sg25
I0
sba(iArchitecture
Entity
p9745
(dp9746
g11
(lp9747
sg14
S'com.google.common.collect.MapMakerTest_gwt'
p9748
sg16
(lp9749
sg19
(lp9750
sg22
(lp9751
sg25
I0
sba(iArchitecture
Entity
p9752
(dp9753
g11
(lp9754
sg14
S'com.google.common.collect.MapsCollectionTest'
p9755
sg16
(lp9756
sg19
(lp9757
sg22
(lp9758
sg25
I0
sba(iArchitecture
Entity
p9759
(dp9760
g11
(lp9761
sg14
S'com.google.common.collect.MapsTransformValuesTest'
p9762
sg16
(lp9763
sg19
(lp9764
sg22
(lp9765
sg25
I0
sba(iArchitecture
Entity
p9766
(dp9767
g11
(lp9768
sg14
S'com.google.common.collect.MapsTransformValuesUnmodifiableIteratorTest'
p9769
sg16
(lp9770
sg19
(lp9771
sg22
(lp9772
sg25
I0
sba(iArchitecture
Entity
p9773
(dp9774
g11
(lp9775
sg14
S'com.google.common.collect.MultimapBuilder'
p9776
sg16
(lp9777
sg19
(lp9778
sg22
(lp9779
sg25
I0
sba(iArchitecture
Entity
p9780
(dp9781
g11
(lp9782
sg14
S'com.google.common.collect.MultimapBuilderTest_gwt'
p9783
sg16
(lp9784
sg19
(lp9785
sg22
(lp9786
sg25
I0
sba(iArchitecture
Entity
p9787
(dp9788
g11
(lp9789
sg14
S'com.google.common.collect.MultimapsFilterEntriesAsMapTest'
p9790
sg16
(lp9791
sg19
(lp9792
sg22
(lp9793
sg25
I0
sba(iArchitecture
Entity
p9794
(dp9795
g11
(lp9796
sg14
S'com.google.common.collect.MultimapsTransformValuesAsMapTest'
p9797
sg16
(lp9798
sg19
(lp9799
sg22
(lp9800
sg25
I0
sba(iArchitecture
Entity
p9801
(dp9802
g11
(lp9803
sg14
S'com.google.common.collect.Multiset'
p9804
sg16
(lp9805
sg19
(lp9806
sg22
(lp9807
sg25
I0
sba(iArchitecture
Entity
p9808
(dp9809
g11
(lp9810
sg14
S'com.google.common.collect.MultisetsCollectionTest'
p9811
sg16
(lp9812
sg19
(lp9813
sg22
(lp9814
sg25
I0
sba(iArchitecture
Entity
p9815
(dp9816
g11
(lp9817
sg14
S'com.google.common.collect.MultisetsImmutableEntryTest'
p9818
sg16
(lp9819
sg19
(lp9820
sg22
(lp9821
sg25
I0
sba(iArchitecture
Entity
p9822
(dp9823
g11
(lp9824
sg14
S'com.google.common.collect.MultisetsImmutableEntryTest_gwt'
p9825
sg16
(lp9826
sg19
(lp9827
sg22
(lp9828
sg25
I0
sba(iArchitecture
Entity
p9829
(dp9830
g11
(lp9831
sg14
S'com.google.common.collect.ObjectArraysTest_gwt'
p9832
sg16
(lp9833
sg19
(lp9834
sg22
(lp9835
sg25
I0
sba(iArchitecture
Entity
p9836
(dp9837
g11
(lp9838
sg14
S'com.google.common.collect.OrderingTest_gwt'
p9839
sg16
(lp9840
sg19
(lp9841
sg22
(lp9842
sg25
I0
sba(iArchitecture
Entity
p9843
(dp9844
g11
(lp9845
sg14
S'com.google.common.collect.PeekingIterator'
p9846
sg16
(lp9847
sg19
(lp9848
sg22
(lp9849
sg25
I0
sba(iArchitecture
Entity
p9850
(dp9851
g11
(lp9852
sg14
S'com.google.common.collect.PeekingIteratorTest'
p9853
sg16
(lp9854
sg19
(lp9855
sg22
(lp9856
sg25
I0
sba(iArchitecture
Entity
p9857
(dp9858
g11
(lp9859
sg14
S'com.google.common.collect.PeekingIteratorTest_gwt'
p9860
sg16
(lp9861
sg19
(lp9862
sg22
(lp9863
sg25
I0
sba(iArchitecture
Entity
p9864
(dp9865
g11
(lp9866
sg14
S'com.google.common.collect.RegularImmutableAsList'
p9867
sg16
(lp9868
sg19
(lp9869
sg22
(lp9870
sg25
I0
sba(iArchitecture
Entity
p9871
(dp9872
g11
(lp9873
sg14
S'com.google.common.collect.RegularImmutableAsListTest_gwt'
p9874
sg16
(lp9875
sg19
(lp9876
sg22
(lp9877
sg25
I0
sba(iArchitecture
Entity
p9878
(dp9879
g11
(lp9880
sg14
S'com.google.common.collect.RegularImmutableList'
p9881
sg16
(lp9882
sg19
(lp9883
sg22
(lp9884
sg25
I0
sba(iArchitecture
Entity
p9885
(dp9886
g11
(lp9887
sg14
S'com.google.common.collect.RegularImmutableTableTest_gwt'
p9888
sg16
(lp9889
sg19
(lp9890
sg22
(lp9891
sg25
I0
sba(iArchitecture
Entity
p9892
(dp9893
g11
(lp9894
sg14
S'com.google.common.collect.SetOperationsTest_gwt'
p9895
sg16
(lp9896
sg19
(lp9897
sg22
(lp9898
sg25
I0
sba(iArchitecture
Entity
p9899
(dp9900
g11
(lp9901
sg14
S'com.google.common.collect.SimpleAbstractMultisetTest_gwt'
p9902
sg16
(lp9903
sg19
(lp9904
sg22
(lp9905
sg25
I0
sba(iArchitecture
Entity
p9906
(dp9907
g11
(lp9908
sg14
S'com.google.common.collect.SingletonImmutableSet'
p9909
sg16
(lp9910
sg19
(lp9911
sg22
(lp9912
sg25
I0
sba(iArchitecture
Entity
p9913
(dp9914
g11
(lp9915
sg14
S'com.google.common.collect.SingletonImmutableTable'
p9916
sg16
(lp9917
sg19
(lp9918
sg22
(lp9919
sg25
I0
sba(iArchitecture
Entity
p9920
(dp9921
g11
(lp9922
sg14
S'com.google.common.collect.SortedIterablesTest_gwt'
p9923
sg16
(lp9924
sg19
(lp9925
sg22
(lp9926
sg25
I0
sba(iArchitecture
Entity
p9927
(dp9928
g11
(lp9929
sg14
S'com.google.common.collect.SortedLists'
p9930
sg16
(lp9931
sg19
(lp9932
sg22
(lp9933
sg25
I0
sba(iArchitecture
Entity
p9934
(dp9935
g11
(lp9936
sg14
S'com.google.common.collect.SortedListsTest'
p9937
sg16
(lp9938
sg19
(lp9939
sg22
(lp9940
sg25
I0
sba(iArchitecture
Entity
p9941
(dp9942
g11
(lp9943
sg14
S'com.google.common.collect.SortedListsTest_gwt'
p9944
sg16
(lp9945
sg19
(lp9946
sg22
(lp9947
sg25
I0
sba(iArchitecture
Entity
p9948
(dp9949
g11
(lp9950
sg14
S'com.google.common.collect.SortedMultiset'
p9951
sg16
(lp9952
sg19
(lp9953
sg22
(lp9954
sg25
I0
sba(iArchitecture
Entity
p9955
(dp9956
g11
(lp9957
sg14
S'com.google.common.collect.StandardRowSortedTable'
p9958
sg16
(lp9959
sg19
(lp9960
sg22
(lp9961
sg25
I0
sba(iArchitecture
Entity
p9962
(dp9963
g11
(lp9964
sg14
S'com.google.common.collect.SynchronizedBiMapTest'
p9965
sg16
(lp9966
sg19
(lp9967
sg22
(lp9968
sg25
I0
sba(iArchitecture
Entity
p9969
(dp9970
g11
(lp9971
sg14
S'com.google.common.collect.TablesTest_gwt'
p9972
sg16
(lp9973
sg19
(lp9974
sg22
(lp9975
sg25
I0
sba(iArchitecture
Entity
p9976
(dp9977
g11
(lp9978
sg14
S'com.google.common.collect.TablesTransformValuesTest_gwt'
p9979
sg16
(lp9980
sg19
(lp9981
sg22
(lp9982
sg25
I0
sba(iArchitecture
Entity
p9983
(dp9984
g11
(lp9985
sg14
S'com.google.common.collect.TreeMultimapExplicitTest_gwt'
p9986
sg16
(lp9987
sg19
(lp9988
sg22
(lp9989
sg25
I0
sba(iArchitecture
Entity
p9990
(dp9991
g11
(lp9992
sg14
S'com.google.common.collect.TreeMultimapNaturalTest_gwt'
p9993
sg16
(lp9994
sg19
(lp9995
sg22
(lp9996
sg25
I0
sba(iArchitecture
Entity
p9997
(dp9998
g11
(lp9999
sg14
S'com.google.common.collect.TreeMultisetTest_gwt'
p10000
sg16
(lp10001
sg19
(lp10002
sg22
(lp10003
sg25
I0
sba(iArchitecture
Entity
p10004
(dp10005
g11
(lp10006
sg14
S'com.google.common.collect.TreeTraverser'
p10007
sg16
(lp10008
sg19
(lp10009
sg22
(lp10010
sg25
I0
sba(iArchitecture
Entity
p10011
(dp10012
g11
(lp10013
sg14
S'com.google.common.collect.TreeTraverserTest_gwt'
p10014
sg16
(lp10015
sg19
(lp10016
sg22
(lp10017
sg25
I0
sba(iArchitecture
Entity
p10018
(dp10019
g11
(lp10020
sg14
S'com.google.common.collect.UnmodifiableIterator'
p10021
sg16
(lp10022
sg19
(lp10023
sg22
(lp10024
sg25
I0
sba(iArchitecture
Entity
p10025
(dp10026
g11
(lp10027
sg14
S'com.google.common.collect.UnmodifiableIteratorTest_gwt'
p10028
sg16
(lp10029
sg19
(lp10030
sg22
(lp10031
sg25
I0
sba(iArchitecture
Entity
p10032
(dp10033
g11
(lp10034
sg14
S'com.google.common.collect.UnmodifiableListIterator'
p10035
sg16
(lp10036
sg19
(lp10037
sg22
(lp10038
sg25
I0
sba(iArchitecture
Entity
p10039
(dp10040
g11
(lp10041
sg14
S'com.google.common.collect.UnmodifiableListIteratorTest_gwt'
p10042
sg16
(lp10043
sg19
(lp10044
sg22
(lp10045
sg25
I0
sba(iArchitecture
Entity
p10046
(dp10047
g11
(lp10048
sg14
S'com.google.common.collect.UnmodifiableMultimapAsMapImplementsMapTest'
p10049
sg16
(lp10050
sg19
(lp10051
sg22
(lp10052
sg25
I0
sba(iArchitecture
Entity
p10053
(dp10054
g11
(lp10055
sg14
S'com.google.common.collect.UnmodifiableSortedMultiset'
p10056
sg16
(lp10057
sg19
(lp10058
sg22
(lp10059
sg25
I0
sba(iArchitecture
Entity
p10060
(dp10061
g11
(lp10062
sg14
S'com.google.common.collect.WellBehavedMapTest_gwt'
p10063
sg16
(lp10064
sg19
(lp10065
sg22
(lp10066
sg25
I0
sba(iArchitecture
Entity
p10067
(dp10068
g11
(lp10069
sg14
S'com.google.common.collect.package-info'
p10070
sg16
(lp10071
sg19
(lp10072
sg22
(lp10073
sg25
I0
sba(iArchitecture
Entity
p10074
(dp10075
g11
(lp10076
sg14
S'com.google.common.collect.testing.AbstractCollectionTestSuiteBuilder'
p10077
sg16
(lp10078
sg19
(lp10079
sg22
(lp10080
sg25
I0
sba(iArchitecture
Entity
p10081
(dp10082
g11
(lp10083
sg14
S'com.google.common.collect.testing.AbstractContainerTester'
p10084
sg16
(lp10085
sg19
(lp10086
sg22
(lp10087
sg25
I0
sba(iArchitecture
Entity
p10088
(dp10089
g11
(lp10090
sg14
S'com.google.common.collect.testing.AbstractMapTester'
p10091
sg16
(lp10092
sg19
(lp10093
sg22
(lp10094
sg25
I0
sba(iArchitecture
Entity
p10095
(dp10096
g11
(lp10097
sg14
S'com.google.common.collect.testing.DerivedCollectionGenerators'
p10098
sg16
(lp10099
sg19
(lp10100
sg22
(lp10101
sg25
I0
sba(iArchitecture
Entity
p10102
(dp10103
g11
(lp10104
sg14
S'com.google.common.collect.testing.DerivedGenerator'
p10105
sg16
(lp10106
sg19
(lp10107
sg22
(lp10108
sg25
I0
sba(iArchitecture
Entity
p10109
(dp10110
g11
(lp10111
sg14
S'com.google.common.collect.testing.DerivedIteratorTestSuiteBuilder'
p10112
sg16
(lp10113
sg19
(lp10114
sg22
(lp10115
sg25
I0
sba(iArchitecture
Entity
p10116
(dp10117
g11
(lp10118
sg14
S'com.google.common.collect.testing.GwtPlatform'
p10119
sg16
(lp10120
sg19
(lp10121
sg22
(lp10122
sg25
I0
sba(iArchitecture
Entity
p10123
(dp10124
g11
(lp10125
sg14
S'com.google.common.collect.testing.HelpersTest'
p10126
sg16
(lp10127
sg19
(lp10128
sg22
(lp10129
sg25
I0
sba(iArchitecture
Entity
p10130
(dp10131
g11
(lp10132
sg14
S'com.google.common.collect.testing.HelpersTest_gwt'
p10133
sg16
(lp10134
sg19
(lp10135
sg22
(lp10136
sg25
I0
sba(iArchitecture
Entity
p10137
(dp10138
g11
(lp10139
sg14
S'com.google.common.collect.testing.IteratorFeature'
p10140
sg16
(lp10141
sg19
(lp10142
sg22
(lp10143
sg25
I0
sba(iArchitecture
Entity
p10144
(dp10145
g11
(lp10146
sg14
S'com.google.common.collect.testing.IteratorTester'
p10147
sg16
(lp10148
sg19
(lp10149
sg22
(lp10150
sg25
I0
sba(iArchitecture
Entity
p10151
(dp10152
g11
(lp10153
sg14
S'com.google.common.collect.testing.IteratorTesterTest_gwt'
p10154
sg16
(lp10155
sg19
(lp10156
sg22
(lp10157
sg25
I0
sba(iArchitecture
Entity
p10158
(dp10159
g11
(lp10160
sg14
S'com.google.common.collect.testing.ListIteratorTester'
p10161
sg16
(lp10162
sg19
(lp10163
sg22
(lp10164
sg25
I0
sba(iArchitecture
Entity
p10165
(dp10166
g11
(lp10167
sg14
S'com.google.common.collect.testing.ListTestSuiteBuilder'
p10168
sg16
(lp10169
sg19
(lp10170
sg22
(lp10171
sg25
I0
sba(iArchitecture
Entity
p10172
(dp10173
g11
(lp10174
sg14
S'com.google.common.collect.testing.MapTestSuiteBuilderTests'
p10175
sg16
(lp10176
sg19
(lp10177
sg22
(lp10178
sg25
I0
sba(iArchitecture
Entity
p10179
(dp10180
g11
(lp10181
sg14
S'com.google.common.collect.testing.MinimalCollectionTest'
p10182
sg16
(lp10183
sg19
(lp10184
sg22
(lp10185
sg25
I0
sba(iArchitecture
Entity
p10186
(dp10187
g11
(lp10188
sg14
S'com.google.common.collect.testing.MinimalIterable'
p10189
sg16
(lp10190
sg19
(lp10191
sg22
(lp10192
sg25
I0
sba(iArchitecture
Entity
p10193
(dp10194
g11
(lp10195
sg14
S'com.google.common.collect.testing.MinimalIterableTest_gwt'
p10196
sg16
(lp10197
sg19
(lp10198
sg22
(lp10199
sg25
I0
sba(iArchitecture
Entity
p10200
(dp10201
g11
(lp10202
sg14
S'com.google.common.collect.testing.NavigableMapTestSuiteBuilder'
p10203
sg16
(lp10204
sg19
(lp10205
sg22
(lp10206
sg25
I0
sba(iArchitecture
Entity
p10207
(dp10208
g11
(lp10209
sg14
S'com.google.common.collect.testing.NavigableSetTestSuiteBuilder'
p10210
sg16
(lp10211
sg19
(lp10212
sg22
(lp10213
sg25
I0
sba(iArchitecture
Entity
p10214
(dp10215
g11
(lp10216
sg14
S'com.google.common.collect.testing.OneSizeTestContainerGenerator'
p10217
sg16
(lp10218
sg19
(lp10219
sg22
(lp10220
sg25
I0
sba(iArchitecture
Entity
p10221
(dp10222
g11
(lp10223
sg14
S'com.google.common.collect.testing.QueueTestSuiteBuilder'
p10224
sg16
(lp10225
sg19
(lp10226
sg22
(lp10227
sg25
I0
sba(iArchitecture
Entity
p10228
(dp10229
g11
(lp10230
sg14
S'com.google.common.collect.testing.SafeTreeMapTest'
p10231
sg16
(lp10232
sg19
(lp10233
sg22
(lp10234
sg25
I0
sba(iArchitecture
Entity
p10235
(dp10236
g11
(lp10237
sg14
S'com.google.common.collect.testing.SafeTreeSetTest'
p10238
sg16
(lp10239
sg19
(lp10240
sg22
(lp10241
sg25
I0
sba(iArchitecture
Entity
p10242
(dp10243
g11
(lp10244
sg14
S'com.google.common.collect.testing.SetTestSuiteBuilder'
p10245
sg16
(lp10246
sg19
(lp10247
sg22
(lp10248
sg25
I0
sba(iArchitecture
Entity
p10249
(dp10250
g11
(lp10251
sg14
S'com.google.common.collect.testing.SortedMapInterfaceTest'
p10252
sg16
(lp10253
sg19
(lp10254
sg22
(lp10255
sg25
I0
sba(iArchitecture
Entity
p10256
(dp10257
g11
(lp10258
sg14
S'com.google.common.collect.testing.TestCollidingSetGenerator'
p10259
sg16
(lp10260
sg19
(lp10261
sg22
(lp10262
sg25
I0
sba(iArchitecture
Entity
p10263
(dp10264
g11
(lp10265
sg14
S'com.google.common.collect.testing.TestIntegerSetGenerator'
p10266
sg16
(lp10267
sg19
(lp10268
sg22
(lp10269
sg25
I0
sba(iArchitecture
Entity
p10270
(dp10271
g11
(lp10272
sg14
S'com.google.common.collect.testing.TestIntegerSortedSetGenerator'
p10273
sg16
(lp10274
sg19
(lp10275
sg22
(lp10276
sg25
I0
sba(iArchitecture
Entity
p10277
(dp10278
g11
(lp10279
sg14
S'com.google.common.collect.testing.TestSortedMapGenerator'
p10280
sg16
(lp10281
sg19
(lp10282
sg22
(lp10283
sg25
I0
sba(iArchitecture
Entity
p10284
(dp10285
g11
(lp10286
sg14
S'com.google.common.collect.testing.TestSortedSetGenerator'
p10287
sg16
(lp10288
sg19
(lp10289
sg22
(lp10290
sg25
I0
sba(iArchitecture
Entity
p10291
(dp10292
g11
(lp10293
sg14
S'com.google.common.collect.testing.TestStringSetGenerator'
p10294
sg16
(lp10295
sg19
(lp10296
sg22
(lp10297
sg25
I0
sba(iArchitecture
Entity
p10298
(dp10299
g11
(lp10300
sg14
S'com.google.common.collect.testing.TestStringSortedMapGenerator'
p10301
sg16
(lp10302
sg19
(lp10303
sg22
(lp10304
sg25
I0
sba(iArchitecture
Entity
p10305
(dp10306
g11
(lp10307
sg14
S'com.google.common.collect.testing.TestStringSortedSetGenerator'
p10308
sg16
(lp10309
sg19
(lp10310
sg22
(lp10311
sg25
I0
sba(iArchitecture
Entity
p10312
(dp10313
g11
(lp10314
sg14
S'com.google.common.collect.testing.features.CollectionSize'
p10315
sg16
(lp10316
sg19
(lp10317
sg22
(lp10318
sg25
I0
sba(iArchitecture
Entity
p10319
(dp10320
g11
(lp10321
sg14
S'com.google.common.collect.testing.google.AbstractMultisetTester'
p10322
sg16
(lp10323
sg19
(lp10324
sg22
(lp10325
sg25
I0
sba(iArchitecture
Entity
p10326
(dp10327
g11
(lp10328
sg14
S'com.google.common.collect.testing.google.BiMapGenerators'
p10329
sg16
(lp10330
sg19
(lp10331
sg22
(lp10332
sg25
I0
sba(iArchitecture
Entity
p10333
(dp10334
g11
(lp10335
sg14
S'com.google.common.collect.testing.google.ListMultimapEqualsTester'
p10336
sg16
(lp10337
sg19
(lp10338
sg22
(lp10339
sg25
I0
sba(iArchitecture
Entity
p10340
(dp10341
g11
(lp10342
sg14
S'com.google.common.collect.testing.google.MapGenerators'
p10343
sg16
(lp10344
sg19
(lp10345
sg22
(lp10346
sg25
I0
sba(iArchitecture
Entity
p10347
(dp10348
g11
(lp10349
sg14
S'com.google.common.collect.testing.google.MultisetFeature'
p10350
sg16
(lp10351
sg19
(lp10352
sg22
(lp10353
sg25
I0
sba(iArchitecture
Entity
p10354
(dp10355
g11
(lp10356
sg14
S'com.google.common.collect.testing.google.MultisetTestSuiteBuilder'
p10357
sg16
(lp10358
sg19
(lp10359
sg22
(lp10360
sg25
I0
sba(iArchitecture
Entity
p10361
(dp10362
g11
(lp10363
sg14
S'com.google.common.collect.testing.google.SetGenerators'
p10364
sg16
(lp10365
sg19
(lp10366
sg22
(lp10367
sg25
I0
sba(iArchitecture
Entity
p10368
(dp10369
g11
(lp10370
sg14
S'com.google.common.collect.testing.google.SetMultimapEqualsTester'
p10371
sg16
(lp10372
sg19
(lp10373
sg22
(lp10374
sg25
I0
sba(iArchitecture
Entity
p10375
(dp10376
g11
(lp10377
sg14
S'com.google.common.collect.testing.google.SortedMapGenerators'
p10378
sg16
(lp10379
sg19
(lp10380
sg22
(lp10381
sg25
I0
sba(iArchitecture
Entity
p10382
(dp10383
g11
(lp10384
sg14
S'com.google.common.collect.testing.google.SortedSetMultimapGetTester'
p10385
sg16
(lp10386
sg19
(lp10387
sg22
(lp10388
sg25
I0
sba(iArchitecture
Entity
p10389
(dp10390
g11
(lp10391
sg14
S'com.google.common.collect.testing.google.TestEnumMultisetGenerator'
p10392
sg16
(lp10393
sg19
(lp10394
sg22
(lp10395
sg25
I0
sba(iArchitecture
Entity
p10396
(dp10397
g11
(lp10398
sg14
S'com.google.common.collect.testing.google.TestMultisetGenerator'
p10399
sg16
(lp10400
sg19
(lp10401
sg22
(lp10402
sg25
I0
sba(iArchitecture
Entity
p10403
(dp10404
g11
(lp10405
sg14
S'com.google.common.collect.testing.testers.AbstractListTester'
p10406
sg16
(lp10407
sg19
(lp10408
sg22
(lp10409
sg25
I0
sba(iArchitecture
Entity
p10410
(dp10411
g11
(lp10412
sg14
S'com.google.common.collect.testing.testers.CollectionAddTester'
p10413
sg16
(lp10414
sg19
(lp10415
sg22
(lp10416
sg25
I0
sba(iArchitecture
Entity
p10417
(dp10418
g11
(lp10419
sg14
S'com.google.common.collect.testing.testers.CollectionIsEmptyTester'
p10420
sg16
(lp10421
sg19
(lp10422
sg22
(lp10423
sg25
I0
sba(iArchitecture
Entity
p10424
(dp10425
g11
(lp10426
sg14
S'com.google.common.collect.testing.testers.CollectionIteratorTester'
p10427
sg16
(lp10428
sg19
(lp10429
sg22
(lp10430
sg25
I0
sba(iArchitecture
Entity
p10431
(dp10432
g11
(lp10433
sg14
S'com.google.common.collect.testing.testers.CollectionSizeTester'
p10434
sg16
(lp10435
sg19
(lp10436
sg22
(lp10437
sg25
I0
sba(iArchitecture
Entity
p10438
(dp10439
g11
(lp10440
sg14
S'com.google.common.collect.testing.testers.ListAddAllTester'
p10441
sg16
(lp10442
sg19
(lp10443
sg22
(lp10444
sg25
I0
sba(iArchitecture
Entity
p10445
(dp10446
g11
(lp10447
sg14
S'com.google.common.collect.testing.testers.ListAddAtIndexTester'
p10448
sg16
(lp10449
sg19
(lp10450
sg22
(lp10451
sg25
I0
sba(iArchitecture
Entity
p10452
(dp10453
g11
(lp10454
sg14
S'com.google.common.collect.testing.testers.ListAddTester'
p10455
sg16
(lp10456
sg19
(lp10457
sg22
(lp10458
sg25
I0
sba(iArchitecture
Entity
p10459
(dp10460
g11
(lp10461
sg14
S'com.google.common.collect.testing.testers.ListGetTester'
p10462
sg16
(lp10463
sg19
(lp10464
sg22
(lp10465
sg25
I0
sba(iArchitecture
Entity
p10466
(dp10467
g11
(lp10468
sg14
S'com.google.common.collect.testing.testers.ListRemoveTester'
p10469
sg16
(lp10470
sg19
(lp10471
sg22
(lp10472
sg25
I0
sba(iArchitecture
Entity
p10473
(dp10474
g11
(lp10475
sg14
S'com.google.common.collect.testing.testers.ListToArrayTester'
p10476
sg16
(lp10477
sg19
(lp10478
sg22
(lp10479
sg25
I0
sba(iArchitecture
Entity
p10480
(dp10481
g11
(lp10482
sg14
S'com.google.common.collect.testing.testers.MapIsEmptyTester'
p10483
sg16
(lp10484
sg19
(lp10485
sg22
(lp10486
sg25
I0
sba(iArchitecture
Entity
p10487
(dp10488
g11
(lp10489
sg14
S'com.google.common.collect.testing.testers.MapSizeTester'
p10490
sg16
(lp10491
sg19
(lp10492
sg22
(lp10493
sg25
I0
sba(iArchitecture
Entity
p10494
(dp10495
g11
(lp10496
sg14
S'com.google.common.collect.testing.testers.Platform'
p10497
sg16
(lp10498
sg19
(lp10499
sg22
(lp10500
sg25
I0
sba(iArchitecture
Entity
p10501
(dp10502
g11
(lp10503
sg14
S'com.google.common.collect.testing.testers.SetAddAllTester'
p10504
sg16
(lp10505
sg19
(lp10506
sg22
(lp10507
sg25
I0
sba(iArchitecture
Entity
p10508
(dp10509
g11
(lp10510
sg14
S'com.google.common.escape.ArrayBasedCharEscaperTest_gwt'
p10511
sg16
(lp10512
sg19
(lp10513
sg22
(lp10514
sg25
I0
sba(iArchitecture
Entity
p10515
(dp10516
g11
(lp10517
sg14
S'com.google.common.escape.ArrayBasedEscaperMapTest_gwt'
p10518
sg16
(lp10519
sg19
(lp10520
sg22
(lp10521
sg25
I0
sba(iArchitecture
Entity
p10522
(dp10523
g11
(lp10524
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaperTest_gwt'
p10525
sg16
(lp10526
sg19
(lp10527
sg22
(lp10528
sg25
I0
sba(iArchitecture
Entity
p10529
(dp10530
g11
(lp10531
sg14
S'com.google.common.escape.EscapersTest_gwt'
p10532
sg16
(lp10533
sg19
(lp10534
sg22
(lp10535
sg25
I0
sba(iArchitecture
Entity
p10536
(dp10537
g11
(lp10538
sg14
S'com.google.common.escape.UnicodeEscaperTest_gwt'
p10539
sg16
(lp10540
sg19
(lp10541
sg22
(lp10542
sg25
I0
sba(iArchitecture
Entity
p10543
(dp10544
g11
(lp10545
sg14
S'com.google.common.escape.package-info'
p10546
sg16
(lp10547
sg19
(lp10548
sg22
(lp10549
sg25
I0
sba(iArchitecture
Entity
p10550
(dp10551
g11
(lp10552
sg14
S'com.google.common.eventbus.AsyncEventBus'
p10553
sg16
(lp10554
sg19
(lp10555
sg22
(lp10556
sg25
I0
sba(iArchitecture
Entity
p10557
(dp10558
g11
(lp10559
sg14
S'com.google.common.eventbus.AsyncEventBusTest'
p10560
sg16
(lp10561
sg19
(lp10562
sg22
(lp10563
sg25
I0
sba(iArchitecture
Entity
p10564
(dp10565
g11
(lp10566
sg14
S'com.google.common.eventbus.EventBus'
p10567
sg16
(lp10568
sg19
(lp10569
sg22
(lp10570
sg25
I0
sba(iArchitecture
Entity
p10571
(dp10572
g11
(lp10573
sg14
S'com.google.common.eventbus.EventBusTest'
p10574
sg16
(lp10575
sg19
(lp10576
sg22
(lp10577
sg25
I0
sba(iArchitecture
Entity
p10578
(dp10579
g11
(lp10580
sg14
S'com.google.common.eventbus.outside.OutsideEventBusTest'
p10581
sg16
(lp10582
sg19
(lp10583
sg22
(lp10584
sg25
I0
sba(iArchitecture
Entity
p10585
(dp10586
g11
(lp10587
sg14
S'com.google.common.hash.HashFunctionEnum'
p10588
sg16
(lp10589
sg19
(lp10590
sg22
(lp10591
sg25
I0
sba(iArchitecture
Entity
p10592
(dp10593
g11
(lp10594
sg14
S'com.google.common.html.HtmlEscapers'
p10595
sg16
(lp10596
sg19
(lp10597
sg22
(lp10598
sg25
I0
sba(iArchitecture
Entity
p10599
(dp10600
g11
(lp10601
sg14
S'com.google.common.html.HtmlEscapersTest'
p10602
sg16
(lp10603
sg19
(lp10604
sg22
(lp10605
sg25
I0
sba(iArchitecture
Entity
p10606
(dp10607
g11
(lp10608
sg14
S'com.google.common.html.HtmlEscapersTest_gwt'
p10609
sg16
(lp10610
sg19
(lp10611
sg22
(lp10612
sg25
I0
sba(iArchitecture
Entity
p10613
(dp10614
g11
(lp10615
sg14
S'com.google.common.html.TestModuleEntryPoint'
p10616
sg16
(lp10617
sg19
(lp10618
sg22
(lp10619
sg25
I0
sba(iArchitecture
Entity
p10620
(dp10621
g11
(lp10622
sg14
S'com.google.common.io.Resources'
p10623
sg16
(lp10624
sg19
(lp10625
sg22
(lp10626
sg25
I0
sba(iArchitecture
Entity
p10627
(dp10628
g11
(lp10629
sg14
S'com.google.common.io.ResourcesTest'
p10630
sg16
(lp10631
sg19
(lp10632
sg22
(lp10633
sg25
I0
sba(iArchitecture
Entity
p10634
(dp10635
g11
(lp10636
sg14
S'com.google.common.math.BigIntegerMathTest_gwt'
p10637
sg16
(lp10638
sg19
(lp10639
sg22
(lp10640
sg25
I0
sba(iArchitecture
Entity
p10641
(dp10642
g11
(lp10643
sg14
S'com.google.common.math.DoubleUtils'
p10644
sg16
(lp10645
sg19
(lp10646
sg22
(lp10647
sg25
I0
sba(iArchitecture
Entity
p10648
(dp10649
g11
(lp10650
sg14
S'com.google.common.math.IntMathTest_gwt'
p10651
sg16
(lp10652
sg19
(lp10653
sg22
(lp10654
sg25
I0
sba(iArchitecture
Entity
p10655
(dp10656
g11
(lp10657
sg14
S'com.google.common.math.LongMathTest_gwt'
p10658
sg16
(lp10659
sg19
(lp10660
sg22
(lp10661
sg25
I0
sba(iArchitecture
Entity
p10662
(dp10663
g11
(lp10664
sg14
S'com.google.common.math.MathPreconditions'
p10665
sg16
(lp10666
sg19
(lp10667
sg22
(lp10668
sg25
I0
sba(iArchitecture
Entity
p10669
(dp10670
g11
(lp10671
sg14
S'com.google.common.net.HostAndPort'
p10672
sg16
(lp10673
sg19
(lp10674
sg22
(lp10675
sg25
I0
sba(iArchitecture
Entity
p10676
(dp10677
g11
(lp10678
sg14
S'com.google.common.net.HostAndPortTest_gwt'
p10679
sg16
(lp10680
sg19
(lp10681
sg22
(lp10682
sg25
I0
sba(iArchitecture
Entity
p10683
(dp10684
g11
(lp10685
sg14
S'com.google.common.net.HostSpecifier'
p10686
sg16
(lp10687
sg19
(lp10688
sg22
(lp10689
sg25
I0
sba(iArchitecture
Entity
p10690
(dp10691
g11
(lp10692
sg14
S'com.google.common.net.HostSpecifierTest'
p10693
sg16
(lp10694
sg19
(lp10695
sg22
(lp10696
sg25
I0
sba(iArchitecture
Entity
p10697
(dp10698
g11
(lp10699
V2430
p10700
asg14
S'com.google.common.net.HttpHeaders'
p10701
sg16
(lp10702
VAs they are [common headers](https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Common_non-standard_request_fields) (at least the `X-Forwarded-Host`) it would be nice if they are defined in the class `HttpHeaders`. The `X-Forwared-Port` is used for example in [AWS](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/x-forwarded-headers.html).\u000a
p10703
asg19
(lp10704
(lp10705
I5
aasg22
(lp10706
VAdd a constant for X-Forwarded-Host and X-Forwarded-Port to HttpHeaders
p10707
asg25
I0
sba(iArchitecture
Entity
p10708
(dp10709
g11
(lp10710
sg14
S'com.google.common.net.HttpHeadersTest'
p10711
sg16
(lp10712
sg19
(lp10713
sg22
(lp10714
sg25
I0
sba(iArchitecture
Entity
p10715
(dp10716
g11
(lp10717
sg14
S'com.google.common.net.InetAddresses'
p10718
sg16
(lp10719
sg19
(lp10720
sg22
(lp10721
sg25
I0
sba(iArchitecture
Entity
p10722
(dp10723
g11
(lp10724
sg14
S'com.google.common.net.InetAddressesTest'
p10725
sg16
(lp10726
sg19
(lp10727
sg22
(lp10728
sg25
I0
sba(iArchitecture
Entity
p10729
(dp10730
g11
(lp10731
sg14
S'com.google.common.net.InternetDomainName'
p10732
sg16
(lp10733
sg19
(lp10734
sg22
(lp10735
sg25
I0
sba(iArchitecture
Entity
p10736
(dp10737
g11
(lp10738
sg14
S'com.google.common.net.InternetDomainNameTest'
p10739
sg16
(lp10740
sg19
(lp10741
sg22
(lp10742
sg25
I0
sba(iArchitecture
Entity
p10743
(dp10744
g11
(lp10745
sg14
S'com.google.common.net.InternetDomainNameTest_gwt'
p10746
sg16
(lp10747
sg19
(lp10748
sg22
(lp10749
sg25
I0
sba(iArchitecture
Entity
p10750
(dp10751
g11
(lp10752
sg14
S'com.google.common.net.MediaTypeTest_gwt'
p10753
sg16
(lp10754
sg19
(lp10755
sg22
(lp10756
sg25
I0
sba(iArchitecture
Entity
p10757
(dp10758
g11
(lp10759
sg14
S'com.google.common.net.PackageSanityTests'
p10760
sg16
(lp10761
sg19
(lp10762
sg22
(lp10763
sg25
I0
sba(iArchitecture
Entity
p10764
(dp10765
g11
(lp10766
sg14
S'com.google.common.net.PercentEscaperTest_gwt'
p10767
sg16
(lp10768
sg19
(lp10769
sg22
(lp10770
sg25
I0
sba(iArchitecture
Entity
p10771
(dp10772
g11
(lp10773
sg14
S'com.google.common.net.TestModuleEntryPoint'
p10774
sg16
(lp10775
sg19
(lp10776
sg22
(lp10777
sg25
I0
sba(iArchitecture
Entity
p10778
(dp10779
g11
(lp10780
sg14
S'com.google.common.net.UrlEscapers'
p10781
sg16
(lp10782
sg19
(lp10783
sg22
(lp10784
sg25
I0
sba(iArchitecture
Entity
p10785
(dp10786
g11
(lp10787
sg14
S'com.google.common.net.UrlEscapersTest'
p10788
sg16
(lp10789
sg19
(lp10790
sg22
(lp10791
sg25
I0
sba(iArchitecture
Entity
p10792
(dp10793
g11
(lp10794
sg14
S'com.google.common.net.UrlEscapersTest_gwt'
p10795
sg16
(lp10796
sg19
(lp10797
sg22
(lp10798
sg25
I0
sba(iArchitecture
Entity
p10799
(dp10800
g11
(lp10801
sg14
S'com.google.common.net.package-info'
p10802
sg16
(lp10803
sg19
(lp10804
sg22
(lp10805
sg25
I0
sba(iArchitecture
Entity
p10806
(dp10807
g11
(lp10808
sg14
S'com.google.common.primitives.BytesTest_gwt'
p10809
sg16
(lp10810
sg19
(lp10811
sg22
(lp10812
sg25
I0
sba(iArchitecture
Entity
p10813
(dp10814
g11
(lp10815
sg14
S'com.google.common.primitives.CharsTest_gwt'
p10816
sg16
(lp10817
sg19
(lp10818
sg22
(lp10819
sg25
I0
sba(iArchitecture
Entity
p10820
(dp10821
g11
(lp10822
sg14
S'com.google.common.primitives.DoublesTest_gwt'
p10823
sg16
(lp10824
sg19
(lp10825
sg22
(lp10826
sg25
I0
sba(iArchitecture
Entity
p10827
(dp10828
g11
(lp10829
sg14
S'com.google.common.primitives.FloatArrayAsListTest'
p10830
sg16
(lp10831
sg19
(lp10832
sg22
(lp10833
sg25
I0
sba(iArchitecture
Entity
p10834
(dp10835
g11
(lp10836
sg14
S'com.google.common.primitives.ParseRequest'
p10837
sg16
(lp10838
sg19
(lp10839
sg22
(lp10840
sg25
I0
sba(iArchitecture
Entity
p10841
(dp10842
g11
(lp10843
sg14
S'com.google.common.primitives.SignedBytesTest_gwt'
p10844
sg16
(lp10845
sg19
(lp10846
sg22
(lp10847
sg25
I0
sba(iArchitecture
Entity
p10848
(dp10849
g11
(lp10850
sg14
S'com.google.common.primitives.UnsignedIntsTest_gwt'
p10851
sg16
(lp10852
sg19
(lp10853
sg22
(lp10854
sg25
I0
sba(iArchitecture
Entity
p10855
(dp10856
g11
(lp10857
sg14
S'com.google.common.primitives.UnsignedLongTest_gwt'
p10858
sg16
(lp10859
sg19
(lp10860
sg22
(lp10861
sg25
I0
sba(iArchitecture
Entity
p10862
(dp10863
g11
(lp10864
sg14
S'com.google.common.primitives.UnsignedLongsTest_gwt'
p10865
sg16
(lp10866
sg19
(lp10867
sg22
(lp10868
sg25
I0
sba(iArchitecture
Entity
p10869
(dp10870
g11
(lp10871
sg14
S'com.google.common.primitives.package-info'
p10872
sg16
(lp10873
sg19
(lp10874
sg22
(lp10875
sg25
I0
sba(iArchitecture
Entity
p10876
(dp10877
g11
(lp10878
sg14
S'com.google.common.reflect.AbstractInvocationHandler'
p10879
sg16
(lp10880
sg19
(lp10881
sg22
(lp10882
sg25
I0
sba(iArchitecture
Entity
p10883
(dp10884
g11
(lp10885
sg14
S'com.google.common.reflect.AbstractInvocationHandlerTest'
p10886
sg16
(lp10887
sg19
(lp10888
sg22
(lp10889
sg25
I0
sba(iArchitecture
Entity
p10890
(dp10891
g11
(lp10892
V2228
p10893
ag10893
asg14
S'com.google.common.reflect.ClassPath'
p10894
sg16
(lp10895
VIf I want to load a resource I have found by classpath scanning with `ClassPath`, I need to use `Resources.asByteSource(resourceInfo.url())`. This is only little code, but hard to discover because it uses a third class `Resources` which is neither related to what I have (`ResourceInfo`) nor what I want (`ByteSource`). I also need to remember that I should go via the URL and that I cannot use `ResourceInfo.getResourceName()`.\u000a\u000aA direct method to get a `ByteSource` from a `ResourceInfo` would make this easier. Alternatively, this should be documented at least.\u000a
p10896
aVIf I want to load a resource I have found by classpath scanning with `ClassPath`, I need to use `Resources.asByteSource(resourceInfo.url())`. This is only little code, but hard to discover because it uses a third class `Resources` which is neither related to what I have (`ResourceInfo`) nor what I want (`ByteSource`). I also need to remember that I should go via the URL and that I cannot use `ResourceInfo.getResourceName()`.\u000a\u000aA direct method to get a `ByteSource` from a `ResourceInfo` would make this easier. Alternatively, this should be documented at least.\u000a
p10897
asg19
(lp10898
(lp10899
I5
aag10899
asg22
(lp10900
VAdd ClassPath.ResourceInfo.asByteSource()
p10901
ag10901
asg25
I0
sba(iArchitecture
Entity
p10902
(dp10903
g11
(lp10904
g10893
asg14
S'com.google.common.reflect.ClassPathTest'
p10905
sg16
(lp10906
VIf I want to load a resource I have found by classpath scanning with `ClassPath`, I need to use `Resources.asByteSource(resourceInfo.url())`. This is only little code, but hard to discover because it uses a third class `Resources` which is neither related to what I have (`ResourceInfo`) nor what I want (`ByteSource`). I also need to remember that I should go via the URL and that I cannot use `ResourceInfo.getResourceName()`.\u000a\u000aA direct method to get a `ByteSource` from a `ResourceInfo` would make this easier. Alternatively, this should be documented at least.\u000a
p10907
asg19
(lp10908
g10899
asg22
(lp10909
g10901
asg25
I0
sba(iArchitecture
Entity
p10910
(dp10911
g11
(lp10912
sg14
S'com.google.common.reflect.Reflection'
p10913
sg16
(lp10914
sg19
(lp10915
sg22
(lp10916
sg25
I0
sba(iArchitecture
Entity
p10917
(dp10918
g11
(lp10919
sg14
S'com.google.common.reflect.TypeCapture'
p10920
sg16
(lp10921
sg19
(lp10922
sg22
(lp10923
sg25
I0
sba(iArchitecture
Entity
p10924
(dp10925
g11
(lp10926
sg14
S'com.google.common.reflect.TypeTokenResolutionTest'
p10927
sg16
(lp10928
sg19
(lp10929
sg22
(lp10930
sg25
I0
sba(iArchitecture
Entity
p10931
(dp10932
g11
(lp10933
sg14
S'com.google.common.testing.AbstractPackageSanityTests'
p10934
sg16
(lp10935
sg19
(lp10936
sg22
(lp10937
sg25
I0
sba(iArchitecture
Entity
p10938
(dp10939
g11
(lp10940
sg14
S'com.google.common.testing.ClassSanityTester'
p10941
sg16
(lp10942
sg19
(lp10943
sg22
(lp10944
sg25
I0
sba(iArchitecture
Entity
p10945
(dp10946
g11
(lp10947
sg14
S'com.google.common.testing.EqualsTesterTest_gwt'
p10948
sg16
(lp10949
sg19
(lp10950
sg22
(lp10951
sg25
I0
sba(iArchitecture
Entity
p10952
(dp10953
g11
(lp10954
sg14
S'com.google.common.testing.EquivalenceTester'
p10955
sg16
(lp10956
sg19
(lp10957
sg22
(lp10958
sg25
I0
sba(iArchitecture
Entity
p10959
(dp10960
g11
(lp10961
sg14
S'com.google.common.testing.EquivalenceTesterTest_gwt'
p10962
sg16
(lp10963
sg19
(lp10964
sg22
(lp10965
sg25
I0
sba(iArchitecture
Entity
p10966
(dp10967
g11
(lp10968
sg14
S'com.google.common.testing.FakeTicker'
p10969
sg16
(lp10970
sg19
(lp10971
sg22
(lp10972
sg25
I0
sba(iArchitecture
Entity
p10973
(dp10974
g11
(lp10975
sg14
S'com.google.common.testing.FakeTickerTest_gwt'
p10976
sg16
(lp10977
sg19
(lp10978
sg22
(lp10979
sg25
I0
sba(iArchitecture
Entity
p10980
(dp10981
g11
(lp10982
sg14
S'com.google.common.testing.SloppyTearDown'
p10983
sg16
(lp10984
sg19
(lp10985
sg22
(lp10986
sg25
I0
sba(iArchitecture
Entity
p10987
(dp10988
g11
(lp10989
sg14
S'com.google.common.testing.TearDown'
p10990
sg16
(lp10991
sg19
(lp10992
sg22
(lp10993
sg25
I0
sba(iArchitecture
Entity
p10994
(dp10995
g11
(lp10996
sg14
S'com.google.common.testing.TestLogHandler'
p10997
sg16
(lp10998
sg19
(lp10999
sg22
(lp11000
sg25
I0
sba(iArchitecture
Entity
p11001
(dp11002
g11
(lp11003
sg14
S'com.google.common.testing.TestLogHandlerTest'
p11004
sg16
(lp11005
sg19
(lp11006
sg22
(lp11007
sg25
I0
sba(iArchitecture
Entity
p11008
(dp11009
g11
(lp11010
sg14
S'com.google.common.util.concurrent.AbstractCheckedFuture'
p11011
sg16
(lp11012
sg19
(lp11013
sg22
(lp11014
sg25
I0
sba(iArchitecture
Entity
p11015
(dp11016
g11
(lp11017
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadService'
p11018
sg16
(lp11019
sg19
(lp11020
sg22
(lp11021
sg25
I0
sba(iArchitecture
Entity
p11022
(dp11023
g11
(lp11024
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadServiceTest'
p11025
sg16
(lp11026
sg19
(lp11027
sg22
(lp11028
sg25
I0
sba(iArchitecture
Entity
p11029
(dp11030
g11
(lp11031
g6908
asg14
S'com.google.common.util.concurrent.AbstractFuture'
p11032
sg16
(lp11033
VOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p11034
asg19
(lp11035
g6913
asg22
(lp11036
g6915
asg25
I0
sba(iArchitecture
Entity
p11037
(dp11038
g11
(lp11039
sg14
S'com.google.common.util.concurrent.AbstractFutureBenchmarks'
p11040
sg16
(lp11041
sg19
(lp11042
sg22
(lp11043
sg25
I0
sba(iArchitecture
Entity
p11044
(dp11045
g11
(lp11046
sg14
S'com.google.common.util.concurrent.AbstractFutureCancellationCauseTest'
p11047
sg16
(lp11048
sg19
(lp11049
sg22
(lp11050
sg25
I0
sba(iArchitecture
Entity
p11051
(dp11052
g11
(lp11053
sg14
S'com.google.common.util.concurrent.AbstractFutureFootprintBenchmark'
p11054
sg16
(lp11055
sg19
(lp11056
sg22
(lp11057
sg25
I0
sba(iArchitecture
Entity
p11058
(dp11059
g11
(lp11060
sg14
S'com.google.common.util.concurrent.AbstractIdleServiceTest'
p11061
sg16
(lp11062
sg19
(lp11063
sg22
(lp11064
sg25
I0
sba(iArchitecture
Entity
p11065
(dp11066
g11
(lp11067
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorService'
p11068
sg16
(lp11069
sg19
(lp11070
sg22
(lp11071
sg25
I0
sba(iArchitecture
Entity
p11072
(dp11073
g11
(lp11074
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorServiceTest'
p11075
sg16
(lp11076
sg19
(lp11077
sg22
(lp11078
sg25
I0
sba(iArchitecture
Entity
p11079
(dp11080
g11
(lp11081
sg14
S'com.google.common.util.concurrent.AbstractScheduledService'
p11082
sg16
(lp11083
sg19
(lp11084
sg22
(lp11085
sg25
I0
sba(iArchitecture
Entity
p11086
(dp11087
g11
(lp11088
sg14
S'com.google.common.util.concurrent.AbstractScheduledServiceTest'
p11089
sg16
(lp11090
sg19
(lp11091
sg22
(lp11092
sg25
I0
sba(iArchitecture
Entity
p11093
(dp11094
g11
(lp11095
sg14
S'com.google.common.util.concurrent.AbstractService'
p11096
sg16
(lp11097
sg19
(lp11098
sg22
(lp11099
sg25
I0
sba(iArchitecture
Entity
p11100
(dp11101
g11
(lp11102
sg14
S'com.google.common.util.concurrent.AbstractServiceTest'
p11103
sg16
(lp11104
sg19
(lp11105
sg22
(lp11106
sg25
I0
sba(iArchitecture
Entity
p11107
(dp11108
g11
(lp11109
sg14
S'com.google.common.util.concurrent.Callables'
p11110
sg16
(lp11111
sg19
(lp11112
sg22
(lp11113
sg25
I0
sba(iArchitecture
Entity
p11114
(dp11115
g11
(lp11116
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactory'
p11117
sg16
(lp11118
sg19
(lp11119
sg22
(lp11120
sg25
I0
sba(iArchitecture
Entity
p11121
(dp11122
g11
(lp11123
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactoryTest'
p11124
sg16
(lp11125
sg19
(lp11126
sg22
(lp11127
sg25
I0
sba(iArchitecture
Entity
p11128
(dp11129
g11
(lp11130
sg14
S'com.google.common.util.concurrent.ExecutionError'
p11131
sg16
(lp11132
sg19
(lp11133
sg22
(lp11134
sg25
I0
sba(iArchitecture
Entity
p11135
(dp11136
g11
(lp11137
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueue'
p11138
sg16
(lp11139
sg19
(lp11140
sg22
(lp11141
sg25
I0
sba(iArchitecture
Entity
p11142
(dp11143
g11
(lp11144
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFuture'
p11145
sg16
(lp11146
sg19
(lp11147
sg22
(lp11148
sg25
I0
sba(iArchitecture
Entity
p11149
(dp11150
g11
(lp11151
sg14
S'com.google.common.util.concurrent.ForwardingExecutorService'
p11152
sg16
(lp11153
sg19
(lp11154
sg22
(lp11155
sg25
I0
sba(iArchitecture
Entity
p11156
(dp11157
g11
(lp11158
sg14
S'com.google.common.util.concurrent.ForwardingFuture'
p11159
sg16
(lp11160
sg19
(lp11161
sg22
(lp11162
sg25
I0
sba(iArchitecture
Entity
p11163
(dp11164
g11
(lp11165
sg14
S'com.google.common.util.concurrent.ForwardingListenableFuture'
p11166
sg16
(lp11167
sg19
(lp11168
sg22
(lp11169
sg25
I0
sba(iArchitecture
Entity
p11170
(dp11171
g11
(lp11172
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorService'
p11173
sg16
(lp11174
sg19
(lp11175
sg22
(lp11176
sg25
I0
sba(iArchitecture
Entity
p11177
(dp11178
g11
(lp11179
sg14
S'com.google.common.util.concurrent.GwtFuturesCatchingSpecialization'
p11180
sg16
(lp11181
sg19
(lp11182
sg22
(lp11183
sg25
I0
sba(iArchitecture
Entity
p11184
(dp11185
g11
(lp11186
sg14
S'com.google.common.util.concurrent.JdkFutureAdapters'
p11187
sg16
(lp11188
sg19
(lp11189
sg22
(lp11190
sg25
I0
sba(iArchitecture
Entity
p11191
(dp11192
g11
(lp11193
sg14
S'com.google.common.util.concurrent.ListenableFuture'
p11194
sg16
(lp11195
sg19
(lp11196
sg22
(lp11197
sg25
I0
sba(iArchitecture
Entity
p11198
(dp11199
g11
(lp11200
sg14
S'com.google.common.util.concurrent.ListenerCallQueue'
p11201
sg16
(lp11202
sg19
(lp11203
sg22
(lp11204
sg25
I0
sba(iArchitecture
Entity
p11205
(dp11206
g11
(lp11207
sg14
S'com.google.common.util.concurrent.ListenerCallQueueTest'
p11208
sg16
(lp11209
sg19
(lp11210
sg22
(lp11211
sg25
I0
sba(iArchitecture
Entity
p11212
(dp11213
g11
(lp11214
sg14
S'com.google.common.util.concurrent.ListeningExecutorService'
p11215
sg16
(lp11216
sg19
(lp11217
sg22
(lp11218
sg25
I0
sba(iArchitecture
Entity
p11219
(dp11220
g11
(lp11221
sg14
S'com.google.common.util.concurrent.MoreExecutors'
p11222
sg16
(lp11223
sg19
(lp11224
sg22
(lp11225
sg25
I0
sba(iArchitecture
Entity
p11226
(dp11227
g11
(lp11228
sg14
S'com.google.common.util.concurrent.MoreExecutorsTest'
p11229
sg16
(lp11230
sg19
(lp11231
sg22
(lp11232
sg25
I0
sba(iArchitecture
Entity
p11233
(dp11234
g11
(lp11235
sg14
S'com.google.common.util.concurrent.RateLimiter'
p11236
sg16
(lp11237
sg19
(lp11238
sg22
(lp11239
sg25
I0
sba(iArchitecture
Entity
p11240
(dp11241
g11
(lp11242
sg14
S'com.google.common.util.concurrent.Runnables'
p11243
sg16
(lp11244
sg19
(lp11245
sg22
(lp11246
sg25
I0
sba(iArchitecture
Entity
p11247
(dp11248
g11
(lp11249
sg14
S'com.google.common.util.concurrent.SerializingExecutor'
p11250
sg16
(lp11251
sg19
(lp11252
sg22
(lp11253
sg25
I0
sba(iArchitecture
Entity
p11254
(dp11255
g11
(lp11256
sg14
S'com.google.common.util.concurrent.Service'
p11257
sg16
(lp11258
sg19
(lp11259
sg22
(lp11260
sg25
I0
sba(iArchitecture
Entity
p11261
(dp11262
g11
(lp11263
sg14
S'com.google.common.util.concurrent.ServiceManager'
p11264
sg16
(lp11265
sg19
(lp11266
sg22
(lp11267
sg25
I0
sba(iArchitecture
Entity
p11268
(dp11269
g11
(lp11270
sg14
S'com.google.common.util.concurrent.SettableFuture'
p11271
sg16
(lp11272
sg19
(lp11273
sg22
(lp11274
sg25
I0
sba(iArchitecture
Entity
p11275
(dp11276
g11
(lp11277
sg14
S'com.google.common.util.concurrent.SingleThreadAbstractFutureBenchmark'
p11278
sg16
(lp11279
sg19
(lp11280
sg22
(lp11281
sg25
I0
sba(iArchitecture
Entity
p11282
(dp11283
g11
(lp11284
sg14
S'com.google.common.util.concurrent.SmoothRateLimiter'
p11285
sg16
(lp11286
sg19
(lp11287
sg22
(lp11288
sg25
I0
sba(iArchitecture
Entity
p11289
(dp11290
g11
(lp11291
sg14
S'com.google.common.util.concurrent.ThreadFactoryBuilder'
p11292
sg16
(lp11293
sg19
(lp11294
sg22
(lp11295
sg25
I0
sba(iArchitecture
Entity
p11296
(dp11297
g11
(lp11298
sg14
S'com.google.common.util.concurrent.TrustedInputFutureTest'
p11299
sg16
(lp11300
sg19
(lp11301
sg22
(lp11302
sg25
I0
sba(iArchitecture
Entity
p11303
(dp11304
g11
(lp11305
sg14
S'com.google.common.util.concurrent.UncheckedExecutionException'
p11306
sg16
(lp11307
sg19
(lp11308
sg22
(lp11309
sg25
I0
sba(iArchitecture
Entity
p11310
(dp11311
g11
(lp11312
sg14
S'com.google.common.util.concurrent.UncheckedTimeoutException'
p11313
sg16
(lp11314
sg19
(lp11315
sg22
(lp11316
sg25
I0
sba(iArchitecture
Entity
p11317
(dp11318
g11
(lp11319
sg14
S'com.google.common.util.concurrent.UntrustedInputFutureTest'
p11320
sg16
(lp11321
sg19
(lp11322
sg22
(lp11323
sg25
I0
sba(iArchitecture
Entity
p11324
(dp11325
g11
(lp11326
sg14
S'com.google.common.util.concurrent.WrappingExecutorService'
p11327
sg16
(lp11328
sg19
(lp11329
sg22
(lp11330
sg25
I0
sba(iArchitecture
Entity
p11331
(dp11332
g11
(lp11333
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorService'
p11334
sg16
(lp11335
sg19
(lp11336
sg22
(lp11337
sg25
I0
sba(iArchitecture
Entity
p11338
(dp11339
g11
(lp11340
sg14
S'com.google.common.util.concurrent.testing.AbstractCheckedFutureTest'
p11341
sg16
(lp11342
sg19
(lp11343
sg22
(lp11344
sg25
I0
sba(iArchitecture
Entity
p11345
(dp11346
g11
(lp11347
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixPatterns'
p11348
sg16
(lp11349
sg19
(lp11350
sg22
(lp11351
sg25
I0
sba(iArchitecture
Entity
p11352
(dp11353
g11
(lp11354
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixType'
p11355
sg16
(lp11356
sg19
(lp11357
sg22
(lp11358
sg25
I0
sba(iArchitecture
Entity
p11359
(dp11360
g11
(lp11361
sg14
S'java.lang.InterruptedException'
p11362
sg16
(lp11363
sg19
(lp11364
sg22
(lp11365
sg25
I0
sba(iArchitecture
Entity
p11366
(dp11367
g11
(lp11368
sg14
S'java.util.concurrent.Future'
p11369
sg16
(lp11370
sg19
(lp11371
sg22
(lp11372
sg25
I0
sbasg1017
(lp11373
g8613
ag8620
ag8627
ag8634
ag8641
ag8648
ag8655
ag8662
ag8669
ag8676
ag8683
ag8690
ag8697
ag8704
ag8711
ag8718
ag8725
ag8732
ag8739
ag8746
ag8753
ag8760
ag8767
ag8774
ag8781
ag8788
ag8795
ag8802
ag8809
ag8816
ag8824
ag8831
ag8838
ag8845
ag8852
ag8859
ag8866
ag8873
ag8880
ag8887
ag8894
ag8901
ag8908
ag8915
ag8922
ag8929
ag8936
ag8943
ag8950
ag8957
ag8964
ag8971
ag8978
ag8985
ag8992
ag8999
ag9006
ag9013
ag9020
ag9027
ag9034
ag9041
ag9048
ag9055
ag9062
ag9069
ag9076
ag9083
ag9090
ag9097
ag9104
ag9111
ag9118
ag9125
ag9132
ag9139
ag9146
ag9153
ag9160
ag9167
ag9174
ag9181
ag9188
ag9195
ag9202
ag9209
ag9216
ag9223
ag9230
ag9237
ag9244
ag9251
ag9258
ag9265
ag9272
ag9279
ag9286
ag9293
ag9300
ag9307
ag9314
ag9321
ag9328
ag9335
ag9342
ag9349
ag9356
ag9363
ag9370
ag9377
ag9384
ag9391
ag9398
ag9405
ag9412
ag9419
ag9426
ag9433
ag9440
ag9447
ag9454
ag9461
ag9468
ag9475
ag9482
ag9489
ag9496
ag9503
ag9510
ag9517
ag9524
ag9531
ag9538
ag9545
ag9552
ag9559
ag9566
ag9573
ag9580
ag9587
ag9594
ag9601
ag9608
ag9615
ag9622
ag9629
ag9636
ag9643
ag9650
ag9657
ag9664
ag9671
ag9678
ag9685
ag9692
ag9699
ag9706
ag9713
ag9720
ag9727
ag9734
ag9741
ag9748
ag9755
ag9762
ag9769
ag9776
ag9783
ag9790
ag9797
ag9804
ag9811
ag9818
ag9825
ag9832
ag9839
ag9846
ag9853
ag9860
ag9867
ag9874
ag9881
ag9888
ag9895
ag9902
ag9909
ag9916
ag9923
ag9930
ag9937
ag9944
ag9951
ag9958
ag9965
ag9972
ag9979
ag9986
ag9993
ag10000
ag10007
ag10014
ag10021
ag10028
ag10035
ag10042
ag10049
ag10056
ag10063
ag10070
ag10077
ag10084
ag10091
ag10098
ag10105
ag10112
ag10119
ag10126
ag10133
ag10140
ag10147
ag10154
ag10161
ag10168
ag10175
ag10182
ag10189
ag10196
ag10203
ag10210
ag10217
ag10224
ag10231
ag10238
ag10245
ag10252
ag10259
ag10266
ag10273
ag10280
ag10287
ag10294
ag10301
ag10308
ag10315
ag10322
ag10329
ag10336
ag10343
ag10350
ag10357
ag10364
ag10371
ag10378
ag10385
ag10392
ag10399
ag10406
ag10413
ag10420
ag10427
ag10434
ag10441
ag10448
ag10455
ag10462
ag10469
ag10476
ag10483
ag10490
ag10497
ag10504
ag10511
ag10518
ag10525
ag10532
ag10539
ag10546
ag10553
ag10560
ag10567
ag10574
ag10581
ag10588
ag10595
ag10602
ag10609
ag10616
ag10623
ag10630
ag10637
ag10644
ag10651
ag10658
ag10665
ag10672
ag10679
ag10686
ag10693
ag10701
ag10711
ag10718
ag10725
ag10732
ag10739
ag10746
ag10753
ag10760
ag10767
ag10774
ag10781
ag10788
ag10795
ag10802
ag10809
ag10816
ag10823
ag10830
ag10837
ag10844
ag10851
ag10858
ag10865
ag10872
ag10879
ag10886
ag10894
ag10905
ag10913
ag10920
ag10927
ag10934
ag10941
ag10948
ag10955
ag10962
ag10969
ag10976
ag10983
ag10990
ag10997
ag11004
ag11011
ag11018
ag11025
ag11032
ag11040
ag11047
ag11054
ag11061
ag11068
ag11075
ag11082
ag11089
ag11096
ag11103
ag11110
ag11117
ag11124
ag11131
ag11138
ag11145
ag11152
ag11159
ag11166
ag11173
ag11180
ag11187
ag11194
ag11201
ag11208
ag11215
ag11222
ag11229
ag11236
ag11243
ag11250
ag11257
ag11264
ag11271
ag11278
ag11285
ag11292
ag11299
ag11306
ag11313
ag11320
ag11327
ag11334
ag11341
ag11348
ag11355
ag11362
ag11369
asg25
I0
sg1019
S'networking'
p11374
sba(iArchitecture
Cluster
p11375
(dp11376
g7
(lp11377
(iArchitecture
Entity
p11378
(dp11379
g11
(lp11380
sg14
S'com.google.common.ForceGuavaCompilationEntryPoint'
p11381
sg16
(lp11382
sg19
(lp11383
sg22
(lp11384
sg25
I0
sba(iArchitecture
Entity
p11385
(dp11386
g11
(lp11387
sg14
S'com.google.common.GuavaTestsEntryPoint'
p11388
sg16
(lp11389
sg19
(lp11390
sg22
(lp11391
sg25
I0
sba(iArchitecture
Entity
p11392
(dp11393
g11
(lp11394
sg14
S'com.google.common.annotations.VisibleForTesting'
p11395
sg16
(lp11396
sg19
(lp11397
sg22
(lp11398
sg25
I0
sba(iArchitecture
Entity
p11399
(dp11400
g11
(lp11401
sg14
S'com.google.common.base.FinalizablePhantomReference'
p11402
sg16
(lp11403
sg19
(lp11404
sg22
(lp11405
sg25
I0
sba(iArchitecture
Entity
p11406
(dp11407
g11
(lp11408
sg14
S'com.google.common.base.FinalizableReference'
p11409
sg16
(lp11410
sg19
(lp11411
sg22
(lp11412
sg25
I0
sba(iArchitecture
Entity
p11413
(dp11414
g11
(lp11415
sg14
S'com.google.common.base.FinalizableSoftReference'
p11416
sg16
(lp11417
sg19
(lp11418
sg22
(lp11419
sg25
I0
sba(iArchitecture
Entity
p11420
(dp11421
g11
(lp11422
sg14
S'com.google.common.base.FinalizableWeakReference'
p11423
sg16
(lp11424
sg19
(lp11425
sg22
(lp11426
sg25
I0
sba(iArchitecture
Entity
p11427
(dp11428
g11
(lp11429
sg14
S'com.google.common.base.StopwatchBenchmark'
p11430
sg16
(lp11431
sg19
(lp11432
sg22
(lp11433
sg25
I0
sba(iArchitecture
Entity
p11434
(dp11435
g11
(lp11436
sg14
S'com.google.common.base.TestModuleEntryPoint'
p11437
sg16
(lp11438
sg19
(lp11439
sg22
(lp11440
sg25
I0
sba(iArchitecture
Entity
p11441
(dp11442
g11
(lp11443
sg14
S'com.google.common.cache.CacheTesting'
p11444
sg16
(lp11445
sg19
(lp11446
sg22
(lp11447
sg25
I0
sba(iArchitecture
Entity
p11448
(dp11449
g11
(lp11450
sg14
S'com.google.common.cache.LongAddable'
p11451
sg16
(lp11452
sg19
(lp11453
sg22
(lp11454
sg25
I0
sba(iArchitecture
Entity
p11455
(dp11456
g11
(lp11457
sg14
S'com.google.common.collect.AbstractMapEntryTest'
p11458
sg16
(lp11459
sg19
(lp11460
sg22
(lp11461
sg25
I0
sba(iArchitecture
Entity
p11462
(dp11463
g11
(lp11464
sg14
S'com.google.common.collect.ArrayListMultimap'
p11465
sg16
(lp11466
sg19
(lp11467
sg22
(lp11468
sg25
I0
sba(iArchitecture
Entity
p11469
(dp11470
g11
(lp11471
sg14
S'com.google.common.collect.ComputationException'
p11472
sg16
(lp11473
sg19
(lp11474
sg22
(lp11475
sg25
I0
sba(iArchitecture
Entity
p11476
(dp11477
g11
(lp11478
sg14
S'com.google.common.collect.ComputingConcurrentHashMapTest'
p11479
sg16
(lp11480
sg19
(lp11481
sg22
(lp11482
sg25
I0
sba(iArchitecture
Entity
p11483
(dp11484
g11
(lp11485
sg14
S'com.google.common.collect.FilteredMultimapValues'
p11486
sg16
(lp11487
sg19
(lp11488
sg22
(lp11489
sg25
I0
sba(iArchitecture
Entity
p11490
(dp11491
g11
(lp11492
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p11493
sg16
(lp11494
sg19
(lp11495
sg22
(lp11496
sg25
I0
sba(iArchitecture
Entity
p11497
(dp11498
g11
(lp11499
sg14
S'com.google.common.collect.ForwardingImmutableList_CustomFieldSerializer'
p11500
sg16
(lp11501
sg19
(lp11502
sg22
(lp11503
sg25
I0
sba(iArchitecture
Entity
p11504
(dp11505
g11
(lp11506
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p11507
sg16
(lp11508
sg19
(lp11509
sg22
(lp11510
sg25
I0
sba(iArchitecture
Entity
p11511
(dp11512
g11
(lp11513
sg14
S'com.google.common.collect.ForwardingImmutableSet_CustomFieldSerializer'
p11514
sg16
(lp11515
sg19
(lp11516
sg22
(lp11517
sg25
I0
sba(iArchitecture
Entity
p11518
(dp11519
g11
(lp11520
sg14
S'com.google.common.collect.ImmutableAsList_CustomFieldSerializer'
p11521
sg16
(lp11522
sg19
(lp11523
sg22
(lp11524
sg25
I0
sba(iArchitecture
Entity
p11525
(dp11526
g11
(lp11527
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p11528
sg16
(lp11529
sg19
(lp11530
sg22
(lp11531
sg25
I0
sba(iArchitecture
Entity
p11532
(dp11533
g11
(lp11534
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p11535
sg16
(lp11536
sg19
(lp11537
sg22
(lp11538
sg25
I0
sba(iArchitecture
Entity
p11539
(dp11540
g11
(lp11541
sg14
S'com.google.common.collect.ImmutableSortedMap'
p11542
sg16
(lp11543
sg19
(lp11544
sg22
(lp11545
sg25
I0
sba(iArchitecture
Entity
p11546
(dp11547
g11
(lp11548
sg14
S'com.google.common.collect.RegularImmutableAsList'
p11549
sg16
(lp11550
sg19
(lp11551
sg22
(lp11552
sg25
I0
sba(iArchitecture
Entity
p11553
(dp11554
g11
(lp11555
sg14
S'com.google.common.collect.RegularImmutableMap'
p11556
sg16
(lp11557
sg19
(lp11558
sg22
(lp11559
sg25
I0
sba(iArchitecture
Entity
p11560
(dp11561
g11
(lp11562
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p11563
sg16
(lp11564
sg19
(lp11565
sg22
(lp11566
sg25
I0
sba(iArchitecture
Entity
p11567
(dp11568
g11
(lp11569
sg14
S'com.google.common.collect.TableCollectionTest'
p11570
sg16
(lp11571
sg19
(lp11572
sg22
(lp11573
sg25
I0
sba(iArchitecture
Entity
p11574
(dp11575
g11
(lp11576
sg14
S'com.google.common.collect.TestModuleEntryPoint'
p11577
sg16
(lp11578
sg19
(lp11579
sg22
(lp11580
sg25
I0
sba(iArchitecture
Entity
p11581
(dp11582
g11
(lp11583
sg14
S'com.google.common.collect.testing.AnEnum'
p11584
sg16
(lp11585
sg19
(lp11586
sg22
(lp11587
sg25
I0
sba(iArchitecture
Entity
p11588
(dp11589
g11
(lp11590
sg14
S'com.google.common.collect.testing.ConcurrentMapTestSuiteBuilder'
p11591
sg16
(lp11592
sg19
(lp11593
sg22
(lp11594
sg25
I0
sba(iArchitecture
Entity
p11595
(dp11596
g11
(lp11597
sg14
S'com.google.common.collect.testing.ExampleIteratorTester'
p11598
sg16
(lp11599
sg19
(lp11600
sg22
(lp11601
sg25
I0
sba(iArchitecture
Entity
p11602
(dp11603
g11
(lp11604
sg14
S'com.google.common.collect.testing.OpenJdk6MapTests'
p11605
sg16
(lp11606
sg19
(lp11607
sg22
(lp11608
sg25
I0
sba(iArchitecture
Entity
p11609
(dp11610
g11
(lp11611
sg14
S'com.google.common.collect.testing.TestModuleEntryPoint'
p11612
sg16
(lp11613
sg19
(lp11614
sg22
(lp11615
sg25
I0
sba(iArchitecture
Entity
p11616
(dp11617
g11
(lp11618
sg14
S'com.google.common.collect.testing.google.AbstractBiMapTester'
p11619
sg16
(lp11620
sg19
(lp11621
sg22
(lp11622
sg25
I0
sba(iArchitecture
Entity
p11623
(dp11624
g11
(lp11625
sg14
S'com.google.common.collect.testing.google.ListGenerators'
p11626
sg16
(lp11627
sg19
(lp11628
sg22
(lp11629
sg25
I0
sba(iArchitecture
Entity
p11630
(dp11631
g11
(lp11632
sg14
S'com.google.common.collect.testing.google.MultimapKeysTester'
p11633
sg16
(lp11634
sg19
(lp11635
sg22
(lp11636
sg25
I0
sba(iArchitecture
Entity
p11637
(dp11638
g11
(lp11639
sg14
S'com.google.common.collect.testing.google.MultimapRemoveEntryTester'
p11640
sg16
(lp11641
sg19
(lp11642
sg22
(lp11643
sg25
I0
sba(iArchitecture
Entity
p11644
(dp11645
g11
(lp11646
sg14
S'com.google.common.collect.testing.google.MultisetEntrySetTester'
p11647
sg16
(lp11648
sg19
(lp11649
sg22
(lp11650
sg25
I0
sba(iArchitecture
Entity
p11651
(dp11652
g11
(lp11653
sg14
S'com.google.common.collect.testing.google.MultisetIteratorTester'
p11654
sg16
(lp11655
sg19
(lp11656
sg22
(lp11657
sg25
I0
sba(iArchitecture
Entity
p11658
(dp11659
g11
(lp11660
sg14
S'com.google.common.collect.testing.google.MultisetSerializationTester'
p11661
sg16
(lp11662
sg19
(lp11663
sg22
(lp11664
sg25
I0
sba(iArchitecture
Entity
p11665
(dp11666
g11
(lp11667
sg14
S'com.google.common.collect.testing.google.TestListMultimapGenerator'
p11668
sg16
(lp11669
sg19
(lp11670
sg22
(lp11671
sg25
I0
sba(iArchitecture
Entity
p11672
(dp11673
g11
(lp11674
sg14
S'com.google.common.collect.testing.google.TestSetMultimapGenerator'
p11675
sg16
(lp11676
sg19
(lp11677
sg22
(lp11678
sg25
I0
sba(iArchitecture
Entity
p11679
(dp11680
g11
(lp11681
sg14
S'com.google.common.collect.testing.testers.AbstractQueueTester'
p11682
sg16
(lp11683
sg19
(lp11684
sg22
(lp11685
sg25
I0
sba(iArchitecture
Entity
p11686
(dp11687
g11
(lp11688
sg14
S'com.google.common.collect.testing.testers.CollectionAddAllTester'
p11689
sg16
(lp11690
sg19
(lp11691
sg22
(lp11692
sg25
I0
sba(iArchitecture
Entity
p11693
(dp11694
g11
(lp11695
sg14
S'com.google.common.collect.testing.testers.CollectionSerializationTester'
p11696
sg16
(lp11697
sg19
(lp11698
sg22
(lp11699
sg25
I0
sba(iArchitecture
Entity
p11700
(dp11701
g11
(lp11702
sg14
S'com.google.common.collect.testing.testers.ListHashCodeTester'
p11703
sg16
(lp11704
sg19
(lp11705
sg22
(lp11706
sg25
I0
sba(iArchitecture
Entity
p11707
(dp11708
g11
(lp11709
sg14
S'com.google.common.collect.testing.testers.MapSerializationTester'
p11710
sg16
(lp11711
sg19
(lp11712
sg22
(lp11713
sg25
I0
sba(iArchitecture
Entity
p11714
(dp11715
g11
(lp11716
sg14
S'com.google.common.collect.testing.testers.QueueOfferTester'
p11717
sg16
(lp11718
sg19
(lp11719
sg22
(lp11720
sg25
I0
sba(iArchitecture
Entity
p11721
(dp11722
g11
(lp11723
sg14
S'com.google.common.collect.testing.testers.SetRemoveTester'
p11724
sg16
(lp11725
sg19
(lp11726
sg22
(lp11727
sg25
I0
sba(iArchitecture
Entity
p11728
(dp11729
g11
(lp11730
sg14
S'com.google.common.escape.CharEscaperBuilderTest'
p11731
sg16
(lp11732
sg19
(lp11733
sg22
(lp11734
sg25
I0
sba(iArchitecture
Entity
p11735
(dp11736
g11
(lp11737
sg14
S'com.google.common.escape.PackageSanityTests'
p11738
sg16
(lp11739
sg19
(lp11740
sg22
(lp11741
sg25
I0
sba(iArchitecture
Entity
p11742
(dp11743
g11
(lp11744
sg14
S'com.google.common.escape.TestModuleEntryPoint'
p11745
sg16
(lp11746
sg19
(lp11747
sg22
(lp11748
sg25
I0
sba(iArchitecture
Entity
p11749
(dp11750
g11
(lp11751
sg14
S'com.google.common.eventbus.Dispatcher'
p11752
sg16
(lp11753
sg19
(lp11754
sg22
(lp11755
sg25
I0
sba(iArchitecture
Entity
p11756
(dp11757
g11
(lp11758
sg14
S'com.google.common.eventbus.EventBusBenchmark'
p11759
sg16
(lp11760
sg19
(lp11761
sg22
(lp11762
sg25
I0
sba(iArchitecture
Entity
p11763
(dp11764
g11
(lp11765
sg14
S'com.google.common.eventbus.StringCatcher'
p11766
sg16
(lp11767
sg19
(lp11768
sg22
(lp11769
sg25
I0
sba(iArchitecture
Entity
p11770
(dp11771
g11
(lp11772
sg14
S'com.google.common.eventbus.SubscriberExceptionHandler'
p11773
sg16
(lp11774
sg19
(lp11775
sg22
(lp11776
sg25
I0
sba(iArchitecture
Entity
p11777
(dp11778
g11
(lp11779
sg14
S'com.google.common.hash.Funnel'
p11780
sg16
(lp11781
sg19
(lp11782
sg22
(lp11783
sg25
I0
sba(iArchitecture
Entity
p11784
(dp11785
g11
(lp11786
sg14
S'com.google.common.hash.PackageSanityTests'
p11787
sg16
(lp11788
sg19
(lp11789
sg22
(lp11790
sg25
I0
sba(iArchitecture
Entity
p11791
(dp11792
g11
(lp11793
sg14
S'com.google.common.io.InputSupplier'
p11794
sg16
(lp11795
sg19
(lp11796
sg22
(lp11797
sg25
I0
sba(iArchitecture
Entity
p11798
(dp11799
g11
(lp11800
sg14
S'com.google.common.io.TestModuleEntryPoint'
p11801
sg16
(lp11802
sg19
(lp11803
sg22
(lp11804
sg25
I0
sba(iArchitecture
Entity
p11805
(dp11806
g11
(lp11807
sg14
S'com.google.common.math.MathTesting'
p11808
sg16
(lp11809
sg19
(lp11810
sg22
(lp11811
sg25
I0
sba(iArchitecture
Entity
p11812
(dp11813
g11
(lp11814
sg14
S'com.google.common.math.PackageSanityTests'
p11815
sg16
(lp11816
sg19
(lp11817
sg22
(lp11818
sg25
I0
sba(iArchitecture
Entity
p11819
(dp11820
g11
(lp11821
sg14
S'com.google.common.math.TestModuleEntryPoint'
p11822
sg16
(lp11823
sg19
(lp11824
sg22
(lp11825
sg25
I0
sba(iArchitecture
Entity
p11826
(dp11827
g11
(lp11828
sg14
S'com.google.common.math.TestPlatform'
p11829
sg16
(lp11830
sg19
(lp11831
sg22
(lp11832
sg25
I0
sba(iArchitecture
Entity
p11833
(dp11834
g11
(lp11835
sg14
S'com.google.common.primitives.FloatsTest'
p11836
sg16
(lp11837
sg19
(lp11838
sg22
(lp11839
sg25
I0
sba(iArchitecture
Entity
p11840
(dp11841
g11
(lp11842
sg14
S'com.google.common.primitives.FloatsTest_gwt'
p11843
sg16
(lp11844
sg19
(lp11845
sg22
(lp11846
sg25
I0
sba(iArchitecture
Entity
p11847
(dp11848
g11
(lp11849
sg14
S'com.google.common.primitives.ShortsTest_gwt'
p11850
sg16
(lp11851
sg19
(lp11852
sg22
(lp11853
sg25
I0
sba(iArchitecture
Entity
p11854
(dp11855
g11
(lp11856
sg14
S'com.google.common.primitives.TestModuleEntryPoint'
p11857
sg16
(lp11858
sg19
(lp11859
sg22
(lp11860
sg25
I0
sba(iArchitecture
Entity
p11861
(dp11862
g11
(lp11863
sg14
S'com.google.common.reflect.PackageSanityTests'
p11864
sg16
(lp11865
sg19
(lp11866
sg22
(lp11867
sg25
I0
sba(iArchitecture
Entity
p11868
(dp11869
g11
(lp11870
sg14
S'com.google.common.reflect.TypeParameterTest'
p11871
sg16
(lp11872
sg19
(lp11873
sg22
(lp11874
sg25
I0
sba(iArchitecture
Entity
p11875
(dp11876
g11
(lp11877
sg14
S'com.google.common.reflect.subpackage.ClassInSubPackage'
p11878
sg16
(lp11879
sg19
(lp11880
sg22
(lp11881
sg25
I0
sba(iArchitecture
Entity
p11882
(dp11883
g11
(lp11884
sg14
S'com.google.common.testing.AbstractPackageSanityTestsTest'
p11885
sg16
(lp11886
sg19
(lp11887
sg22
(lp11888
sg25
I0
sba(iArchitecture
Entity
p11889
(dp11890
g11
(lp11891
sg14
S'com.google.common.testing.EquivalenceTesterTest'
p11892
sg16
(lp11893
sg19
(lp11894
sg22
(lp11895
sg25
I0
sba(iArchitecture
Entity
p11896
(dp11897
g11
(lp11898
sg14
S'com.google.common.testing.PackageSanityTests'
p11899
sg16
(lp11900
sg19
(lp11901
sg22
(lp11902
sg25
I0
sba(iArchitecture
Entity
p11903
(dp11904
g11
(lp11905
sg14
S'com.google.common.testing.RelationshipTesterTest'
p11906
sg16
(lp11907
sg19
(lp11908
sg22
(lp11909
sg25
I0
sba(iArchitecture
Entity
p11910
(dp11911
g11
(lp11912
sg14
S'com.google.common.testing.TearDownAccepter'
p11913
sg16
(lp11914
sg19
(lp11915
sg22
(lp11916
sg25
I0
sba(iArchitecture
Entity
p11917
(dp11918
g11
(lp11919
sg14
S'com.google.common.testing.TestModuleEntryPoint'
p11920
sg16
(lp11921
sg19
(lp11922
sg22
(lp11923
sg25
I0
sba(iArchitecture
Entity
p11924
(dp11925
g11
(lp11926
g6933
ag6933
asg14
S'com.google.common.util.concurrent.AggregateFutureState'
p11927
sg16
(lp11928
VWe already do in `AbstractFuture`.\u000a
p11929
aVWe already do in `AbstractFuture`.\u000a
p11930
asg19
(lp11931
g6939
ag6939
asg22
(lp11932
g6941
ag6941
asg25
I0
sba(iArchitecture
Entity
p11933
(dp11934
g11
(lp11935
sg14
S'com.google.common.util.concurrent.CallablesTest_gwt'
p11936
sg16
(lp11937
sg19
(lp11938
sg22
(lp11939
sg25
I0
sba(iArchitecture
Entity
p11940
(dp11941
g11
(lp11942
sg14
S'com.google.common.util.concurrent.ExecutionListTest'
p11943
sg16
(lp11944
sg19
(lp11945
sg22
(lp11946
sg25
I0
sba(iArchitecture
Entity
p11947
(dp11948
g11
(lp11949
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueueTest'
p11950
sg16
(lp11951
sg19
(lp11952
sg22
(lp11953
sg25
I0
sba(iArchitecture
Entity
p11954
(dp11955
g11
(lp11956
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFutureTest'
p11957
sg16
(lp11958
sg19
(lp11959
sg22
(lp11960
sg25
I0
sba(iArchitecture
Entity
p11961
(dp11962
g11
(lp11963
sg14
S'com.google.common.util.concurrent.ForwardingExecutorServiceTest'
p11964
sg16
(lp11965
sg19
(lp11966
sg22
(lp11967
sg25
I0
sba(iArchitecture
Entity
p11968
(dp11969
g11
(lp11970
sg14
S'com.google.common.util.concurrent.ForwardingFutureTest'
p11971
sg16
(lp11972
sg19
(lp11973
sg22
(lp11974
sg25
I0
sba(iArchitecture
Entity
p11975
(dp11976
g11
(lp11977
sg14
S'com.google.common.util.concurrent.ForwardingListenableFutureTest'
p11978
sg16
(lp11979
sg19
(lp11980
sg22
(lp11981
sg25
I0
sba(iArchitecture
Entity
p11982
(dp11983
g11
(lp11984
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorServiceTest'
p11985
sg16
(lp11986
sg19
(lp11987
sg22
(lp11988
sg25
I0
sba(iArchitecture
Entity
p11989
(dp11990
g11
(lp11991
sg14
S'com.google.common.util.concurrent.FutureCallbackTest_gwt'
p11992
sg16
(lp11993
sg19
(lp11994
sg22
(lp11995
sg25
I0
sba(iArchitecture
Entity
p11996
(dp11997
g11
(lp11998
sg14
S'com.google.common.util.concurrent.InterruptibleMonitorTest'
p11999
sg16
(lp12000
sg19
(lp12001
sg22
(lp12002
sg25
I0
sba(iArchitecture
Entity
p12003
(dp12004
g11
(lp12005
sg14
S'com.google.common.util.concurrent.ListenableFutureTaskTest'
p12006
sg16
(lp12007
sg19
(lp12008
sg22
(lp12009
sg25
I0
sba(iArchitecture
Entity
p12010
(dp12011
g11
(lp12012
sg14
S'com.google.common.util.concurrent.RunnablesTest'
p12013
sg16
(lp12014
sg19
(lp12015
sg22
(lp12016
sg25
I0
sba(iArchitecture
Entity
p12017
(dp12018
g11
(lp12019
sg14
S'com.google.common.util.concurrent.RunnablesTest_gwt'
p12020
sg16
(lp12021
sg19
(lp12022
sg22
(lp12023
sg25
I0
sba(iArchitecture
Entity
p12024
(dp12025
g11
(lp12026
sg14
S'com.google.common.util.concurrent.ThreadFactoryBuilderTest'
p12027
sg16
(lp12028
sg19
(lp12029
sg22
(lp12030
sg25
I0
sba(iArchitecture
Entity
p12031
(dp12032
g11
(lp12033
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTaskTest'
p12034
sg16
(lp12035
sg19
(lp12036
sg22
(lp12037
sg25
I0
sba(iArchitecture
Entity
p12038
(dp12039
g11
(lp12040
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTaskTest_gwt'
p12041
sg16
(lp12042
sg19
(lp12043
sg22
(lp12044
sg25
I0
sba(iArchitecture
Entity
p12045
(dp12046
g11
(lp12047
sg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlersTest'
p12048
sg16
(lp12049
sg19
(lp12050
sg22
(lp12051
sg25
I0
sba(iArchitecture
Entity
p12052
(dp12053
g11
(lp12054
sg14
S'com.google.common.util.concurrent.UninterruptibleMonitorTest'
p12055
sg16
(lp12056
sg19
(lp12057
sg22
(lp12058
sg25
I0
sba(iArchitecture
Entity
p12059
(dp12060
g11
(lp12061
sg14
S'com.google.common.util.concurrent.testing.SameThreadScheduledExecutorService'
p12062
sg16
(lp12063
sg19
(lp12064
sg22
(lp12065
sg25
I0
sba(iArchitecture
Entity
p12066
(dp12067
g11
(lp12068
sg14
S'java.lang.reflect.UndeclaredThrowableException'
p12069
sg16
(lp12070
sg19
(lp12071
sg22
(lp12072
sg25
I0
sba(iArchitecture
Entity
p12073
(dp12074
g11
(lp12075
sg14
S'java.util.concurrent.Delayed'
p12076
sg16
(lp12077
sg19
(lp12078
sg22
(lp12079
sg25
I0
sba(iArchitecture
Entity
p12080
(dp12081
g11
(lp12082
sg14
S'java.util.concurrent.ExecutionException'
p12083
sg16
(lp12084
sg19
(lp12085
sg22
(lp12086
sg25
I0
sbasg1017
(lp12087
g11381
ag11388
ag11395
ag11402
ag11409
ag11416
ag11423
ag11430
ag11437
ag11444
ag11451
ag11458
ag11465
ag11472
ag11479
ag11486
ag11493
ag11500
ag11507
ag11514
ag11521
ag11528
ag11535
ag11542
ag11549
ag11556
ag11563
ag11570
ag11577
ag11584
ag11591
ag11598
ag11605
ag11612
ag11619
ag11626
ag11633
ag11640
ag11647
ag11654
ag11661
ag11668
ag11675
ag11682
ag11689
ag11696
ag11703
ag11710
ag11717
ag11724
ag11731
ag11738
ag11745
ag11752
ag11759
ag11766
ag11773
ag11780
ag11787
ag11794
ag11801
ag11808
ag11815
ag11822
ag11829
ag11836
ag11843
ag11850
ag11857
ag11864
ag11871
ag11878
ag11885
ag11892
ag11899
ag11906
ag11913
ag11920
ag11927
ag11936
ag11943
ag11950
ag11957
ag11964
ag11971
ag11978
ag11985
ag11992
ag11999
ag12006
ag12013
ag12020
ag12027
ag12034
ag12041
ag12048
ag12055
ag12062
ag12069
ag12076
ag12083
asg25
I0
sg1019
S'no_match'
p12088
sba(iArchitecture
Cluster
p12089
(dp12090
g7
(lp12091
(iArchitecture
Entity
p12092
(dp12093
g11
(lp12094
sg14
S'com.google.common.annotations.Beta'
p12095
sg16
(lp12096
sg19
(lp12097
sg22
(lp12098
sg25
I0
sba(iArchitecture
Entity
p12099
(dp12100
g11
(lp12101
sg14
S'com.google.common.annotations.GwtCompatible'
p12102
sg16
(lp12103
sg19
(lp12104
sg22
(lp12105
sg25
I0
sba(iArchitecture
Entity
p12106
(dp12107
g11
(lp12108
sg14
S'com.google.common.annotations.GwtIncompatible'
p12109
sg16
(lp12110
sg19
(lp12111
sg22
(lp12112
sg25
I0
sba(iArchitecture
Entity
p12113
(dp12114
g11
(lp12115
sg14
S'com.google.common.annotations.package-info'
p12116
sg16
(lp12117
sg19
(lp12118
sg22
(lp12119
sg25
I0
sba(iArchitecture
Entity
p12120
(dp12121
g11
(lp12122
sg14
S'com.google.common.base.Absent'
p12123
sg16
(lp12124
sg19
(lp12125
sg22
(lp12126
sg25
I0
sba(iArchitecture
Entity
p12127
(dp12128
g11
(lp12129
sg14
S'com.google.common.base.Absent_CustomFieldSerializer'
p12130
sg16
(lp12131
sg19
(lp12132
sg22
(lp12133
sg25
I0
sba(iArchitecture
Entity
p12134
(dp12135
g11
(lp12136
sg14
S'com.google.common.base.Defaults'
p12137
sg16
(lp12138
sg19
(lp12139
sg22
(lp12140
sg25
I0
sba(iArchitecture
Entity
p12141
(dp12142
g11
(lp12143
sg14
S'com.google.common.base.Enums'
p12144
sg16
(lp12145
sg19
(lp12146
sg22
(lp12147
sg25
I0
sba(iArchitecture
Entity
p12148
(dp12149
g11
(lp12150
sg14
S'com.google.common.base.Function'
p12151
sg16
(lp12152
sg19
(lp12153
sg22
(lp12154
sg25
I0
sba(iArchitecture
Entity
p12155
(dp12156
g11
(lp12157
sg14
S'com.google.common.base.Optional'
p12158
sg16
(lp12159
sg19
(lp12160
sg22
(lp12161
sg25
I0
sba(iArchitecture
Entity
p12162
(dp12163
g11
(lp12164
sg14
S'com.google.common.base.PairwiseEquivalence_CustomFieldSerializer'
p12165
sg16
(lp12166
sg19
(lp12167
sg22
(lp12168
sg25
I0
sba(iArchitecture
Entity
p12169
(dp12170
g11
(lp12171
g3717
ag3717
asg14
S'com.google.common.base.Platform'
p12172
sg16
(lp12173
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12174
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12175
asg19
(lp12176
g3723
ag3723
asg22
(lp12177
g3725
ag3725
asg25
I0
sba(iArchitecture
Entity
p12178
(dp12179
g11
(lp12180
g3669
ag3669
asg14
S'com.google.common.base.Predicate'
p12181
sg16
(lp12182
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p12183
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p12184
asg19
(lp12185
g3675
ag3675
asg22
(lp12186
g3677
ag3677
asg25
I0
sba(iArchitecture
Entity
p12187
(dp12188
g11
(lp12189
sg14
S'com.google.common.base.Present'
p12190
sg16
(lp12191
sg19
(lp12192
sg22
(lp12193
sg25
I0
sba(iArchitecture
Entity
p12194
(dp12195
g11
(lp12196
sg14
S'com.google.common.base.Present_CustomFieldSerializer'
p12197
sg16
(lp12198
sg19
(lp12199
sg22
(lp12200
sg25
I0
sba(iArchitecture
Entity
p12201
(dp12202
g11
(lp12203
sg14
S'com.google.common.base.StandardSystemProperty'
p12204
sg16
(lp12205
sg19
(lp12206
sg22
(lp12207
sg25
I0
sba(iArchitecture
Entity
p12208
(dp12209
g11
(lp12210
g3717
ag3717
ag3717
asg14
S'com.google.common.base.Stopwatch'
p12211
sg16
(lp12212
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12213
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12214
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12215
asg19
(lp12216
g3723
ag3723
ag3723
asg22
(lp12217
g3725
ag3725
ag3725
asg25
I0
sba(iArchitecture
Entity
p12218
(dp12219
g11
(lp12220
sg14
S'com.google.common.base.Supplier'
p12221
sg16
(lp12222
sg19
(lp12223
sg22
(lp12224
sg25
I0
sba(iArchitecture
Entity
p12225
(dp12226
g11
(lp12227
sg14
S'com.google.common.base.Suppliers'
p12228
sg16
(lp12229
sg19
(lp12230
sg22
(lp12231
sg25
I0
sba(iArchitecture
Entity
p12232
(dp12233
g11
(lp12234
sg14
S'com.google.common.base.SuppressUnderAndroid'
p12235
sg16
(lp12236
sg19
(lp12237
sg22
(lp12238
sg25
I0
sba(iArchitecture
Entity
p12239
(dp12240
g11
(lp12241
g3750
ag3750
ag3750
asg14
S'com.google.common.base.Throwables'
p12242
sg16
(lp12243
g3753
ag3753
ag3753
asg19
(lp12244
g3755
ag3755
ag3755
asg22
(lp12245
g3757
ag3757
ag3757
asg25
I0
sba(iArchitecture
Entity
p12246
(dp12247
g11
(lp12248
sg14
S'com.google.common.base.internal.Finalizer'
p12249
sg16
(lp12250
sg19
(lp12251
sg22
(lp12252
sg25
I0
sba(iArchitecture
Entity
p12253
(dp12254
g11
(lp12255
sg14
S'com.google.common.cache.Cache'
p12256
sg16
(lp12257
sg19
(lp12258
sg22
(lp12259
sg25
I0
sba(iArchitecture
Entity
p12260
(dp12261
g11
(lp12262
sg14
S'com.google.common.cache.CacheLoader'
p12263
sg16
(lp12264
sg19
(lp12265
sg22
(lp12266
sg25
I0
sba(iArchitecture
Entity
p12267
(dp12268
g11
(lp12269
sg14
S'com.google.common.cache.CacheLoaderTest'
p12270
sg16
(lp12271
sg19
(lp12272
sg22
(lp12273
sg25
I0
sba(iArchitecture
Entity
p12274
(dp12275
g11
(lp12276
sg14
S'com.google.common.cache.NullCacheTest'
p12277
sg16
(lp12278
sg19
(lp12279
sg22
(lp12280
sg25
I0
sba(iArchitecture
Entity
p12281
(dp12282
g11
(lp12283
sg14
S'com.google.common.cache.PackageSanityTests'
p12284
sg16
(lp12285
sg19
(lp12286
sg22
(lp12287
sg25
I0
sba(iArchitecture
Entity
p12288
(dp12289
g11
(lp12290
sg14
S'com.google.common.cache.RemovalListener'
p12291
sg16
(lp12292
sg19
(lp12293
sg22
(lp12294
sg25
I0
sba(iArchitecture
Entity
p12295
(dp12296
g11
(lp12297
sg14
S'com.google.common.collect.AbstractBiMap'
p12298
sg16
(lp12299
sg19
(lp12300
sg22
(lp12301
sg25
I0
sba(iArchitecture
Entity
p12302
(dp12303
g11
(lp12304
sg14
S'com.google.common.collect.AbstractListMultimap'
p12305
sg16
(lp12306
sg19
(lp12307
sg22
(lp12308
sg25
I0
sba(iArchitecture
Entity
p12309
(dp12310
g11
(lp12311
sg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p12312
sg16
(lp12313
sg19
(lp12314
sg22
(lp12315
sg25
I0
sba(iArchitecture
Entity
p12316
(dp12317
g11
(lp12318
sg14
S'com.google.common.collect.AbstractSequentialIterator'
p12319
sg16
(lp12320
sg19
(lp12321
sg22
(lp12322
sg25
I0
sba(iArchitecture
Entity
p12323
(dp12324
g11
(lp12325
sg14
S'com.google.common.collect.AbstractSetMultimap'
p12326
sg16
(lp12327
sg19
(lp12328
sg22
(lp12329
sg25
I0
sba(iArchitecture
Entity
p12330
(dp12331
g11
(lp12332
sg14
S'com.google.common.collect.AbstractSortedKeySortedSetMultimap'
p12333
sg16
(lp12334
sg19
(lp12335
sg22
(lp12336
sg25
I0
sba(iArchitecture
Entity
p12337
(dp12338
g11
(lp12339
sg14
S'com.google.common.collect.AbstractSortedSetMultimap'
p12340
sg16
(lp12341
sg19
(lp12342
sg22
(lp12343
sg25
I0
sba(iArchitecture
Entity
p12344
(dp12345
g11
(lp12346
sg14
S'com.google.common.collect.AllEqualOrdering_CustomFieldSerializer'
p12347
sg16
(lp12348
sg19
(lp12349
sg22
(lp12350
sg25
I0
sba(iArchitecture
Entity
p12351
(dp12352
g11
(lp12353
sg14
S'com.google.common.collect.ArrayListMultimap'
p12354
sg16
(lp12355
sg19
(lp12356
sg22
(lp12357
sg25
I0
sba(iArchitecture
Entity
p12358
(dp12359
g11
(lp12360
sg14
S'com.google.common.collect.ArrayTable'
p12361
sg16
(lp12362
sg19
(lp12363
sg22
(lp12364
sg25
I0
sba(iArchitecture
Entity
p12365
(dp12366
g11
(lp12367
sg14
S'com.google.common.collect.BiMap'
p12368
sg16
(lp12369
sg19
(lp12370
sg22
(lp12371
sg25
I0
sba(iArchitecture
Entity
p12372
(dp12373
g11
(lp12374
sg14
S'com.google.common.collect.BoundType'
p12375
sg16
(lp12376
sg19
(lp12377
sg22
(lp12378
sg25
I0
sba(iArchitecture
Entity
p12379
(dp12380
g11
(lp12381
sg14
S'com.google.common.collect.ByFunctionOrdering_CustomFieldSerializer'
p12382
sg16
(lp12383
sg19
(lp12384
sg22
(lp12385
sg25
I0
sba(iArchitecture
Entity
p12386
(dp12387
g11
(lp12388
sg14
S'com.google.common.collect.ClassToInstanceMap'
p12389
sg16
(lp12390
sg19
(lp12391
sg22
(lp12392
sg25
I0
sba(iArchitecture
Entity
p12393
(dp12394
g11
(lp12395
sg14
S'com.google.common.collect.ComparatorOrdering_CustomFieldSerializer'
p12396
sg16
(lp12397
sg19
(lp12398
sg22
(lp12399
sg25
I0
sba(iArchitecture
Entity
p12400
(dp12401
g11
(lp12402
sg14
S'com.google.common.collect.CompoundOrdering_CustomFieldSerializer'
p12403
sg16
(lp12404
sg19
(lp12405
sg22
(lp12406
sg25
I0
sba(iArchitecture
Entity
p12407
(dp12408
g11
(lp12409
sg14
S'com.google.common.collect.DenseImmutableTable_CustomFieldSerializer'
p12410
sg16
(lp12411
sg19
(lp12412
sg22
(lp12413
sg25
I0
sba(iArchitecture
Entity
p12414
(dp12415
g11
(lp12416
sg14
S'com.google.common.collect.EmptyImmutableListMultimap'
p12417
sg16
(lp12418
sg19
(lp12419
sg22
(lp12420
sg25
I0
sba(iArchitecture
Entity
p12421
(dp12422
g11
(lp12423
sg14
S'com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer'
p12424
sg16
(lp12425
sg19
(lp12426
sg22
(lp12427
sg25
I0
sba(iArchitecture
Entity
p12428
(dp12429
g11
(lp12430
sg14
S'com.google.common.collect.EmptyImmutableSetMultimap'
p12431
sg16
(lp12432
sg19
(lp12433
sg22
(lp12434
sg25
I0
sba(iArchitecture
Entity
p12435
(dp12436
g11
(lp12437
sg14
S'com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer'
p12438
sg16
(lp12439
sg19
(lp12440
sg22
(lp12441
sg25
I0
sba(iArchitecture
Entity
p12442
(dp12443
g11
(lp12444
sg14
S'com.google.common.collect.EnumBiMap'
p12445
sg16
(lp12446
sg19
(lp12447
sg22
(lp12448
sg25
I0
sba(iArchitecture
Entity
p12449
(dp12450
g11
(lp12451
sg14
S'com.google.common.collect.EnumBiMapTest'
p12452
sg16
(lp12453
sg19
(lp12454
sg22
(lp12455
sg25
I0
sba(iArchitecture
Entity
p12456
(dp12457
g11
(lp12458
sg14
S'com.google.common.collect.EnumHashBiMap'
p12459
sg16
(lp12460
sg19
(lp12461
sg22
(lp12462
sg25
I0
sba(iArchitecture
Entity
p12463
(dp12464
g11
(lp12465
sg14
S'com.google.common.collect.EnumMultiset'
p12466
sg16
(lp12467
sg19
(lp12468
sg22
(lp12469
sg25
I0
sba(iArchitecture
Entity
p12470
(dp12471
g11
(lp12472
sg14
S'com.google.common.collect.ExplicitOrdering_CustomFieldSerializer'
p12473
sg16
(lp12474
sg19
(lp12475
sg22
(lp12476
sg25
I0
sba(iArchitecture
Entity
p12477
(dp12478
g11
(lp12479
sg14
S'com.google.common.collect.FilteredEntrySetMultimap'
p12480
sg16
(lp12481
sg19
(lp12482
sg22
(lp12483
sg25
I0
sba(iArchitecture
Entity
p12484
(dp12485
g11
(lp12486
sg14
S'com.google.common.collect.FilteredKeyMultimap'
p12487
sg16
(lp12488
sg19
(lp12489
sg22
(lp12490
sg25
I0
sba(iArchitecture
Entity
p12491
(dp12492
g11
(lp12493
sg14
S'com.google.common.collect.FilteredKeySetMultimap'
p12494
sg16
(lp12495
sg19
(lp12496
sg22
(lp12497
sg25
I0
sba(iArchitecture
Entity
p12498
(dp12499
g11
(lp12500
sg14
S'com.google.common.collect.FilteredMultimap'
p12501
sg16
(lp12502
sg19
(lp12503
sg22
(lp12504
sg25
I0
sba(iArchitecture
Entity
p12505
(dp12506
g11
(lp12507
sg14
S'com.google.common.collect.ForwardingConcurrentMapTest'
p12508
sg16
(lp12509
sg19
(lp12510
sg22
(lp12511
sg25
I0
sba(iArchitecture
Entity
p12512
(dp12513
g11
(lp12514
sg14
S'com.google.common.collect.ForwardingObjectTest'
p12515
sg16
(lp12516
sg19
(lp12517
sg22
(lp12518
sg25
I0
sba(iArchitecture
Entity
p12519
(dp12520
g11
(lp12521
sg14
S'com.google.common.collect.ForwardingSetMultimap'
p12522
sg16
(lp12523
sg19
(lp12524
sg22
(lp12525
sg25
I0
sba(iArchitecture
Entity
p12526
(dp12527
g11
(lp12528
sg14
S'com.google.common.collect.ForwardingSortedSetMultimap'
p12529
sg16
(lp12530
sg19
(lp12531
sg22
(lp12532
sg25
I0
sba(iArchitecture
Entity
p12533
(dp12534
g11
(lp12535
sg14
S'com.google.common.collect.GwtPlatform'
p12536
sg16
(lp12537
sg19
(lp12538
sg22
(lp12539
sg25
I0
sba(iArchitecture
Entity
p12540
(dp12541
g11
(lp12542
sg14
S'com.google.common.collect.HashBasedTable'
p12543
sg16
(lp12544
sg19
(lp12545
sg22
(lp12546
sg25
I0
sba(iArchitecture
Entity
p12547
(dp12548
g11
(lp12549
sg14
S'com.google.common.collect.HashBasedTable_CustomFieldSerializer'
p12550
sg16
(lp12551
sg19
(lp12552
sg22
(lp12553
sg25
I0
sba(iArchitecture
Entity
p12554
(dp12555
g11
(lp12556
sg14
S'com.google.common.collect.HashBiMap'
p12557
sg16
(lp12558
sg19
(lp12559
sg22
(lp12560
sg25
I0
sba(iArchitecture
Entity
p12561
(dp12562
g11
(lp12563
sg14
S'com.google.common.collect.HashMultimap'
p12564
sg16
(lp12565
sg19
(lp12566
sg22
(lp12567
sg25
I0
sba(iArchitecture
Entity
p12568
(dp12569
g11
(lp12570
sg14
S'com.google.common.collect.HashMultiset_CustomFieldSerializer'
p12571
sg16
(lp12572
sg19
(lp12573
sg22
(lp12574
sg25
I0
sba(iArchitecture
Entity
p12575
(dp12576
g11
(lp12577
sg14
S'com.google.common.collect.ImmutableBiMap'
p12578
sg16
(lp12579
sg19
(lp12580
sg22
(lp12581
sg25
I0
sba(iArchitecture
Entity
p12582
(dp12583
g11
(lp12584
sg14
S'com.google.common.collect.ImmutableBiMap_CustomFieldSerializer'
p12585
sg16
(lp12586
sg19
(lp12587
sg22
(lp12588
sg25
I0
sba(iArchitecture
Entity
p12589
(dp12590
g11
(lp12591
sg14
S'com.google.common.collect.ImmutableClassToInstanceMap'
p12592
sg16
(lp12593
sg19
(lp12594
sg22
(lp12595
sg25
I0
sba(iArchitecture
Entity
p12596
(dp12597
g11
(lp12598
sg14
S'com.google.common.collect.ImmutableEntry_CustomFieldSerializer'
p12599
sg16
(lp12600
sg19
(lp12601
sg22
(lp12602
sg25
I0
sba(iArchitecture
Entity
p12603
(dp12604
g11
(lp12605
sg14
S'com.google.common.collect.ImmutableEnumMap'
p12606
sg16
(lp12607
sg19
(lp12608
sg22
(lp12609
sg25
I0
sba(iArchitecture
Entity
p12610
(dp12611
g11
(lp12612
sg14
S'com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer'
p12613
sg16
(lp12614
sg19
(lp12615
sg22
(lp12616
sg25
I0
sba(iArchitecture
Entity
p12617
(dp12618
g11
(lp12619
sg14
S'com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer'
p12620
sg16
(lp12621
sg19
(lp12622
sg22
(lp12623
sg25
I0
sba(iArchitecture
Entity
p12624
(dp12625
g11
(lp12626
sg14
S'com.google.common.collect.ImmutableListMultimap'
p12627
sg16
(lp12628
sg19
(lp12629
sg22
(lp12630
sg25
I0
sba(iArchitecture
Entity
p12631
(dp12632
g11
(lp12633
sg14
S'com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer'
p12634
sg16
(lp12635
sg19
(lp12636
sg22
(lp12637
sg25
I0
sba(iArchitecture
Entity
p12638
(dp12639
g11
(lp12640
sg14
S'com.google.common.collect.ImmutableList_CustomFieldSerializer'
p12641
sg16
(lp12642
sg19
(lp12643
sg22
(lp12644
sg25
I0
sba(iArchitecture
Entity
p12645
(dp12646
g11
(lp12647
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p12648
sg16
(lp12649
sg19
(lp12650
sg22
(lp12651
sg25
I0
sba(iArchitecture
Entity
p12652
(dp12653
g11
(lp12654
sg14
S'com.google.common.collect.ImmutableMapValues'
p12655
sg16
(lp12656
sg19
(lp12657
sg22
(lp12658
sg25
I0
sba(iArchitecture
Entity
p12659
(dp12660
g11
(lp12661
sg14
S'com.google.common.collect.ImmutableMultimap'
p12662
sg16
(lp12663
sg19
(lp12664
sg22
(lp12665
sg25
I0
sba(iArchitecture
Entity
p12666
(dp12667
g11
(lp12668
sg14
S'com.google.common.collect.ImmutableMultiset_CustomFieldSerializer'
p12669
sg16
(lp12670
sg19
(lp12671
sg22
(lp12672
sg25
I0
sba(iArchitecture
Entity
p12673
(dp12674
g11
(lp12675
sg14
S'com.google.common.collect.ImmutableSetMultimap'
p12676
sg16
(lp12677
sg19
(lp12678
sg22
(lp12679
sg25
I0
sba(iArchitecture
Entity
p12680
(dp12681
g11
(lp12682
sg14
S'com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer'
p12683
sg16
(lp12684
sg19
(lp12685
sg22
(lp12686
sg25
I0
sba(iArchitecture
Entity
p12687
(dp12688
g11
(lp12689
sg14
S'com.google.common.collect.ImmutableSet_CustomFieldSerializer'
p12690
sg16
(lp12691
sg19
(lp12692
sg22
(lp12693
sg25
I0
sba(iArchitecture
Entity
p12694
(dp12695
g11
(lp12696
sg14
S'com.google.common.collect.ImmutableSortedMap'
p12697
sg16
(lp12698
sg19
(lp12699
sg22
(lp12700
sg25
I0
sba(iArchitecture
Entity
p12701
(dp12702
g11
(lp12703
sg14
S'com.google.common.collect.ImmutableSortedMapFauxverideShim'
p12704
sg16
(lp12705
sg19
(lp12706
sg22
(lp12707
sg25
I0
sba(iArchitecture
Entity
p12708
(dp12709
g11
(lp12710
sg14
S'com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer'
p12711
sg16
(lp12712
sg19
(lp12713
sg22
(lp12714
sg25
I0
sba(iArchitecture
Entity
p12715
(dp12716
g11
(lp12717
sg14
S'com.google.common.collect.ImmutableSortedMap_CustomFieldSerializerBase'
p12718
sg16
(lp12719
sg19
(lp12720
sg22
(lp12721
sg25
I0
sba(iArchitecture
Entity
p12722
(dp12723
g11
(lp12724
sg14
S'com.google.common.collect.ImmutableSortedMultisetFauxverideShim'
p12725
sg16
(lp12726
sg19
(lp12727
sg22
(lp12728
sg25
I0
sba(iArchitecture
Entity
p12729
(dp12730
g11
(lp12731
sg14
S'com.google.common.collect.ImmutableSortedSetFauxverideShim'
p12732
sg16
(lp12733
sg19
(lp12734
sg22
(lp12735
sg25
I0
sba(iArchitecture
Entity
p12736
(dp12737
g11
(lp12738
sg14
S'com.google.common.collect.ImmutableSortedSet_CustomFieldSerializer'
p12739
sg16
(lp12740
sg19
(lp12741
sg22
(lp12742
sg25
I0
sba(iArchitecture
Entity
p12743
(dp12744
g11
(lp12745
sg14
S'com.google.common.collect.ImmutableTable'
p12746
sg16
(lp12747
sg19
(lp12748
sg22
(lp12749
sg25
I0
sba(iArchitecture
Entity
p12750
(dp12751
g11
(lp12752
sg14
S'com.google.common.collect.ImmutableTable_CustomFieldSerializerBase'
p12753
sg16
(lp12754
sg19
(lp12755
sg22
(lp12756
sg25
I0
sba(iArchitecture
Entity
p12757
(dp12758
g11
(lp12759
sg14
S'com.google.common.collect.Interner'
p12760
sg16
(lp12761
sg19
(lp12762
sg22
(lp12763
sg25
I0
sba(iArchitecture
Entity
p12764
(dp12765
g11
(lp12766
sg14
S'com.google.common.collect.LegacyComparable'
p12767
sg16
(lp12768
sg19
(lp12769
sg22
(lp12770
sg25
I0
sba(iArchitecture
Entity
p12771
(dp12772
g11
(lp12773
sg14
S'com.google.common.collect.LenientSerializableTester'
p12774
sg16
(lp12775
sg19
(lp12776
sg22
(lp12777
sg25
I0
sba(iArchitecture
Entity
p12778
(dp12779
g11
(lp12780
sg14
S'com.google.common.collect.LexicographicalOrdering_CustomFieldSerializer'
p12781
sg16
(lp12782
sg19
(lp12783
sg22
(lp12784
sg25
I0
sba(iArchitecture
Entity
p12785
(dp12786
g11
(lp12787
sg14
S'com.google.common.collect.LinkedHashMultimap'
p12788
sg16
(lp12789
sg19
(lp12790
sg22
(lp12791
sg25
I0
sba(iArchitecture
Entity
p12792
(dp12793
g11
(lp12794
sg14
S'com.google.common.collect.LinkedHashMultimap_CustomFieldSerializer'
p12795
sg16
(lp12796
sg19
(lp12797
sg22
(lp12798
sg25
I0
sba(iArchitecture
Entity
p12799
(dp12800
g11
(lp12801
sg14
S'com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer'
p12802
sg16
(lp12803
sg19
(lp12804
sg22
(lp12805
sg25
I0
sba(iArchitecture
Entity
p12806
(dp12807
g11
(lp12808
sg14
S'com.google.common.collect.LinkedListMultimap_CustomFieldSerializer'
p12809
sg16
(lp12810
sg19
(lp12811
sg22
(lp12812
sg25
I0
sba(iArchitecture
Entity
p12813
(dp12814
g11
(lp12815
sg14
S'com.google.common.collect.ListMultimap'
p12816
sg16
(lp12817
sg19
(lp12818
sg22
(lp12819
sg25
I0
sba(iArchitecture
Entity
p12820
(dp12821
g11
(lp12822
sg14
S'com.google.common.collect.MapBenchmark'
p12823
sg16
(lp12824
sg19
(lp12825
sg22
(lp12826
sg25
I0
sba(iArchitecture
Entity
p12827
(dp12828
g11
(lp12829
sg14
S'com.google.common.collect.MapConstraints'
p12830
sg16
(lp12831
sg19
(lp12832
sg22
(lp12833
sg25
I0
sba(iArchitecture
Entity
p12834
(dp12835
g11
(lp12836
sg14
S'com.google.common.collect.MapDifference'
p12837
sg16
(lp12838
sg19
(lp12839
sg22
(lp12840
sg25
I0
sba(iArchitecture
Entity
p12841
(dp12842
g11
(lp12843
sg14
S'com.google.common.collect.Maps'
p12844
sg16
(lp12845
sg19
(lp12846
sg22
(lp12847
sg25
I0
sba(iArchitecture
Entity
p12848
(dp12849
g11
(lp12850
sg14
S'com.google.common.collect.Multimap'
p12851
sg16
(lp12852
sg19
(lp12853
sg22
(lp12854
sg25
I0
sba(iArchitecture
Entity
p12855
(dp12856
g11
(lp12857
sg14
S'com.google.common.collect.Multimap_CustomFieldSerializerBase'
p12858
sg16
(lp12859
sg19
(lp12860
sg22
(lp12861
sg25
I0
sba(iArchitecture
Entity
p12862
(dp12863
g11
(lp12864
sg14
S'com.google.common.collect.Multimaps'
p12865
sg16
(lp12866
sg19
(lp12867
sg22
(lp12868
sg25
I0
sba(iArchitecture
Entity
p12869
(dp12870
g11
(lp12871
sg14
S'com.google.common.collect.Multiset_CustomFieldSerializerBase'
p12872
sg16
(lp12873
sg19
(lp12874
sg22
(lp12875
sg25
I0
sba(iArchitecture
Entity
p12876
(dp12877
g11
(lp12878
sg14
S'com.google.common.collect.MutableClassToInstanceMap'
p12879
sg16
(lp12880
sg19
(lp12881
sg22
(lp12882
sg25
I0
sba(iArchitecture
Entity
p12883
(dp12884
g11
(lp12885
sg14
S'com.google.common.collect.MutableClassToInstanceMapTest'
p12886
sg16
(lp12887
sg19
(lp12888
sg22
(lp12889
sg25
I0
sba(iArchitecture
Entity
p12890
(dp12891
g11
(lp12892
sg14
S'com.google.common.collect.NaturalOrdering_CustomFieldSerializer'
p12893
sg16
(lp12894
sg19
(lp12895
sg22
(lp12896
sg25
I0
sba(iArchitecture
Entity
p12897
(dp12898
g11
(lp12899
sg14
S'com.google.common.collect.NullsFirstOrdering_CustomFieldSerializer'
p12900
sg16
(lp12901
sg19
(lp12902
sg22
(lp12903
sg25
I0
sba(iArchitecture
Entity
p12904
(dp12905
g11
(lp12906
sg14
S'com.google.common.collect.NullsLastOrdering_CustomFieldSerializer'
p12907
sg16
(lp12908
sg19
(lp12909
sg22
(lp12910
sg25
I0
sba(iArchitecture
Entity
p12911
(dp12912
g11
(lp12913
V2525
p12914
asg14
S'com.google.common.collect.Ordering'
p12915
sg16
(lp12916
VThe [snapshot Javadoc of Ordering#explicit(java.util.List)](http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/Ordering.html#explicit%28java.util.List%29)  contains the sentnece:\u000a\u000a> The returned comparator throws **an ClassCastException** when it receives an input parameter that isn't among the provided values.\u000a\u000ainstead of\u000a\u000a> The returned comparator throws **a ClassCastException** when it receives an input parameter that isn't among the provided values.\u000a
p12917
asg19
(lp12918
(lp12919
I2
aasg22
(lp12920
VTypo in the javadoc of Ordering's explicit(List<T>) method
p12921
asg25
I0
sba(iArchitecture
Entity
p12922
(dp12923
g11
(lp12924
sg14
S'com.google.common.collect.PackageSanityTests'
p12925
sg16
(lp12926
sg19
(lp12927
sg22
(lp12928
sg25
I0
sba(iArchitecture
Entity
p12929
(dp12930
g11
(lp12931
sg14
S'com.google.common.collect.Platform'
p12932
sg16
(lp12933
sg19
(lp12934
sg22
(lp12935
sg25
I0
sba(iArchitecture
Entity
p12936
(dp12937
g11
(lp12938
sg14
S'com.google.common.collect.Queues'
p12939
sg16
(lp12940
sg19
(lp12941
sg22
(lp12942
sg25
I0
sba(iArchitecture
Entity
p12943
(dp12944
g11
(lp12945
g5166
asg14
S'com.google.common.collect.RangeMap'
p12946
sg16
(lp12947
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p12948
asg19
(lp12949
g5174
asg22
(lp12950
g5176
asg25
I0
sba(iArchitecture
Entity
p12951
(dp12952
g11
(lp12953
g5166
asg14
S'com.google.common.collect.RangeSet'
p12954
sg16
(lp12955
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p12956
asg19
(lp12957
g5174
asg22
(lp12958
g5176
asg25
I0
sba(iArchitecture
Entity
p12959
(dp12960
g11
(lp12961
sg14
S'com.google.common.collect.RegularImmutableAsList_CustomFieldSerializer'
p12962
sg16
(lp12963
sg19
(lp12964
sg22
(lp12965
sg25
I0
sba(iArchitecture
Entity
p12966
(dp12967
g11
(lp12968
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p12969
sg16
(lp12970
sg19
(lp12971
sg22
(lp12972
sg25
I0
sba(iArchitecture
Entity
p12973
(dp12974
g11
(lp12975
sg14
S'com.google.common.collect.RegularImmutableBiMap_CustomFieldSerializer'
p12976
sg16
(lp12977
sg19
(lp12978
sg22
(lp12979
sg25
I0
sba(iArchitecture
Entity
p12980
(dp12981
g11
(lp12982
sg14
S'com.google.common.collect.RegularImmutableList_CustomFieldSerializer'
p12983
sg16
(lp12984
sg19
(lp12985
sg22
(lp12986
sg25
I0
sba(iArchitecture
Entity
p12987
(dp12988
g11
(lp12989
sg14
S'com.google.common.collect.RegularImmutableMap'
p12990
sg16
(lp12991
sg19
(lp12992
sg22
(lp12993
sg25
I0
sba(iArchitecture
Entity
p12994
(dp12995
g11
(lp12996
sg14
S'com.google.common.collect.RegularImmutableMap_CustomFieldSerializer'
p12997
sg16
(lp12998
sg19
(lp12999
sg22
(lp13000
sg25
I0
sba(iArchitecture
Entity
p13001
(dp13002
g11
(lp13003
sg14
S'com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer'
p13004
sg16
(lp13005
sg19
(lp13006
sg22
(lp13007
sg25
I0
sba(iArchitecture
Entity
p13008
(dp13009
g11
(lp13010
sg14
S'com.google.common.collect.RegularImmutableSet'
p13011
sg16
(lp13012
sg19
(lp13013
sg22
(lp13014
sg25
I0
sba(iArchitecture
Entity
p13015
(dp13016
g11
(lp13017
sg14
S'com.google.common.collect.RegularImmutableSet_CustomFieldSerializer'
p13018
sg16
(lp13019
sg19
(lp13020
sg22
(lp13021
sg25
I0
sba(iArchitecture
Entity
p13022
(dp13023
g11
(lp13024
sg14
S'com.google.common.collect.RegularImmutableSortedSet_CustomFieldSerializer'
p13025
sg16
(lp13026
sg19
(lp13027
sg22
(lp13028
sg25
I0
sba(iArchitecture
Entity
p13029
(dp13030
g11
(lp13031
sg14
S'com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer'
p13032
sg16
(lp13033
sg19
(lp13034
sg22
(lp13035
sg25
I0
sba(iArchitecture
Entity
p13036
(dp13037
g11
(lp13038
sg14
S'com.google.common.collect.ReverseOrdering_CustomFieldSerializer'
p13039
sg16
(lp13040
sg19
(lp13041
sg22
(lp13042
sg25
I0
sba(iArchitecture
Entity
p13043
(dp13044
g11
(lp13045
sg14
S'com.google.common.collect.RowSortedTable'
p13046
sg16
(lp13047
sg19
(lp13048
sg22
(lp13049
sg25
I0
sba(iArchitecture
Entity
p13050
(dp13051
g11
(lp13052
sg14
S'com.google.common.collect.SetContainsBenchmark'
p13053
sg16
(lp13054
sg19
(lp13055
sg22
(lp13056
sg25
I0
sba(iArchitecture
Entity
p13057
(dp13058
g11
(lp13059
sg14
S'com.google.common.collect.SetMultimap'
p13060
sg16
(lp13061
sg19
(lp13062
sg22
(lp13063
sg25
I0
sba(iArchitecture
Entity
p13064
(dp13065
g11
(lp13066
sg14
S'com.google.common.collect.Sets'
p13067
sg16
(lp13068
sg19
(lp13069
sg22
(lp13070
sg25
I0
sba(iArchitecture
Entity
p13071
(dp13072
g11
(lp13073
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p13074
sg16
(lp13075
sg19
(lp13076
sg22
(lp13077
sg25
I0
sba(iArchitecture
Entity
p13078
(dp13079
g11
(lp13080
sg14
S'com.google.common.collect.SingletonImmutableBiMap_CustomFieldSerializer'
p13081
sg16
(lp13082
sg19
(lp13083
sg22
(lp13084
sg25
I0
sba(iArchitecture
Entity
p13085
(dp13086
g11
(lp13087
sg14
S'com.google.common.collect.SingletonImmutableList'
p13088
sg16
(lp13089
sg19
(lp13090
sg22
(lp13091
sg25
I0
sba(iArchitecture
Entity
p13092
(dp13093
g11
(lp13094
sg14
S'com.google.common.collect.SingletonImmutableList_CustomFieldSerializer'
p13095
sg16
(lp13096
sg19
(lp13097
sg22
(lp13098
sg25
I0
sba(iArchitecture
Entity
p13099
(dp13100
g11
(lp13101
sg14
S'com.google.common.collect.SingletonImmutableSet_CustomFieldSerializer'
p13102
sg16
(lp13103
sg19
(lp13104
sg22
(lp13105
sg25
I0
sba(iArchitecture
Entity
p13106
(dp13107
g11
(lp13108
sg14
S'com.google.common.collect.SingletonImmutableTable_CustomFieldSerializer'
p13109
sg16
(lp13110
sg19
(lp13111
sg22
(lp13112
sg25
I0
sba(iArchitecture
Entity
p13113
(dp13114
g11
(lp13115
sg14
S'com.google.common.collect.SortedIterable'
p13116
sg16
(lp13117
sg19
(lp13118
sg22
(lp13119
sg25
I0
sba(iArchitecture
Entity
p13120
(dp13121
g11
(lp13122
sg14
S'com.google.common.collect.SortedIterables'
p13123
sg16
(lp13124
sg19
(lp13125
sg22
(lp13126
sg25
I0
sba(iArchitecture
Entity
p13127
(dp13128
g11
(lp13129
sg14
S'com.google.common.collect.SortedIterablesTest'
p13130
sg16
(lp13131
sg19
(lp13132
sg22
(lp13133
sg25
I0
sba(iArchitecture
Entity
p13134
(dp13135
g11
(lp13136
sg14
S'com.google.common.collect.SortedMapDifference'
p13137
sg16
(lp13138
sg19
(lp13139
sg22
(lp13140
sg25
I0
sba(iArchitecture
Entity
p13141
(dp13142
g11
(lp13143
sg14
S'com.google.common.collect.SortedMultiset'
p13144
sg16
(lp13145
sg19
(lp13146
sg22
(lp13147
sg25
I0
sba(iArchitecture
Entity
p13148
(dp13149
g11
(lp13150
sg14
S'com.google.common.collect.SortedMultisetBridge'
p13151
sg16
(lp13152
sg19
(lp13153
sg22
(lp13154
sg25
I0
sba(iArchitecture
Entity
p13155
(dp13156
g11
(lp13157
sg14
S'com.google.common.collect.SortedMultisets'
p13158
sg16
(lp13159
sg19
(lp13160
sg22
(lp13161
sg25
I0
sba(iArchitecture
Entity
p13162
(dp13163
g11
(lp13164
sg14
S'com.google.common.collect.SortedSetMultimap'
p13165
sg16
(lp13166
sg19
(lp13167
sg22
(lp13168
sg25
I0
sba(iArchitecture
Entity
p13169
(dp13170
g11
(lp13171
sg14
S'com.google.common.collect.SparseImmutableTable'
p13172
sg16
(lp13173
sg19
(lp13174
sg22
(lp13175
sg25
I0
sba(iArchitecture
Entity
p13176
(dp13177
g11
(lp13178
sg14
S'com.google.common.collect.SparseImmutableTable_CustomFieldSerializer'
p13179
sg16
(lp13180
sg19
(lp13181
sg22
(lp13182
sg25
I0
sba(iArchitecture
Entity
p13183
(dp13184
g11
(lp13185
sg14
S'com.google.common.collect.SuppressUnderAndroid'
p13186
sg16
(lp13187
sg19
(lp13188
sg22
(lp13189
sg25
I0
sba(iArchitecture
Entity
p13190
(dp13191
g11
(lp13192
sg14
S'com.google.common.collect.Table'
p13193
sg16
(lp13194
sg19
(lp13195
sg22
(lp13196
sg25
I0
sba(iArchitecture
Entity
p13197
(dp13198
g11
(lp13199
sg14
S'com.google.common.collect.Table_CustomFieldSerializerBase'
p13200
sg16
(lp13201
sg19
(lp13202
sg22
(lp13203
sg25
I0
sba(iArchitecture
Entity
p13204
(dp13205
g11
(lp13206
sg14
S'com.google.common.collect.Tables'
p13207
sg16
(lp13208
sg19
(lp13209
sg22
(lp13210
sg25
I0
sba(iArchitecture
Entity
p13211
(dp13212
g11
(lp13213
sg14
S'com.google.common.collect.TreeBasedTable'
p13214
sg16
(lp13215
sg19
(lp13216
sg22
(lp13217
sg25
I0
sba(iArchitecture
Entity
p13218
(dp13219
g11
(lp13220
sg14
S'com.google.common.collect.TreeBasedTable_CustomFieldSerializer'
p13221
sg16
(lp13222
sg19
(lp13223
sg22
(lp13224
sg25
I0
sba(iArchitecture
Entity
p13225
(dp13226
g11
(lp13227
sg14
S'com.google.common.collect.TreeMultimap'
p13228
sg16
(lp13229
sg19
(lp13230
sg22
(lp13231
sg25
I0
sba(iArchitecture
Entity
p13232
(dp13233
g11
(lp13234
sg14
S'com.google.common.collect.TreeMultimap_CustomFieldSerializer'
p13235
sg16
(lp13236
sg19
(lp13237
sg22
(lp13238
sg25
I0
sba(iArchitecture
Entity
p13239
(dp13240
g11
(lp13241
sg14
S'com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer'
p13242
sg16
(lp13243
sg19
(lp13244
sg22
(lp13245
sg25
I0
sba(iArchitecture
Entity
p13246
(dp13247
g11
(lp13248
sg14
S'com.google.common.collect.WellBehavedMap'
p13249
sg16
(lp13250
sg19
(lp13251
sg22
(lp13252
sg25
I0
sba(iArchitecture
Entity
p13253
(dp13254
g11
(lp13255
sg14
S'com.google.common.collect.WellBehavedMapTest'
p13256
sg16
(lp13257
sg19
(lp13258
sg22
(lp13259
sg25
I0
sba(iArchitecture
Entity
p13260
(dp13261
g11
(lp13262
sg14
S'com.google.common.collect.testing.CollectionTestSuiteBuilder'
p13263
sg16
(lp13264
sg19
(lp13265
sg22
(lp13266
sg25
I0
sba(iArchitecture
Entity
p13267
(dp13268
g11
(lp13269
sg14
S'com.google.common.collect.testing.ConcurrentNavigableMapTestSuiteBuilder'
p13270
sg16
(lp13271
sg19
(lp13272
sg22
(lp13273
sg25
I0
sba(iArchitecture
Entity
p13274
(dp13275
g11
(lp13276
sg14
S'com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder'
p13277
sg16
(lp13278
sg19
(lp13279
sg22
(lp13280
sg25
I0
sba(iArchitecture
Entity
p13281
(dp13282
g11
(lp13283
sg14
S'com.google.common.collect.testing.GwtPlatform'
p13284
sg16
(lp13285
sg19
(lp13286
sg22
(lp13287
sg25
I0
sba(iArchitecture
Entity
p13288
(dp13289
g11
(lp13290
sg14
S'com.google.common.collect.testing.MapInterfaceTest'
p13291
sg16
(lp13292
sg19
(lp13293
sg22
(lp13294
sg25
I0
sba(iArchitecture
Entity
p13295
(dp13296
g11
(lp13297
sg14
S'com.google.common.collect.testing.MapTestSuiteBuilder'
p13298
sg16
(lp13299
sg19
(lp13300
sg22
(lp13301
sg25
I0
sba(iArchitecture
Entity
p13302
(dp13303
g11
(lp13304
sg14
S'com.google.common.collect.testing.MinimalSet'
p13305
sg16
(lp13306
sg19
(lp13307
sg22
(lp13308
sg25
I0
sba(iArchitecture
Entity
p13309
(dp13310
g11
(lp13311
sg14
S'com.google.common.collect.testing.MinimalSetTest'
p13312
sg16
(lp13313
sg19
(lp13314
sg22
(lp13315
sg25
I0
sba(iArchitecture
Entity
p13316
(dp13317
g11
(lp13318
sg14
S'com.google.common.collect.testing.OpenJdk6ListTests'
p13319
sg16
(lp13320
sg19
(lp13321
sg22
(lp13322
sg25
I0
sba(iArchitecture
Entity
p13323
(dp13324
g11
(lp13325
sg14
S'com.google.common.collect.testing.OpenJdk6QueueTests'
p13326
sg16
(lp13327
sg19
(lp13328
sg22
(lp13329
sg25
I0
sba(iArchitecture
Entity
p13330
(dp13331
g11
(lp13332
sg14
S'com.google.common.collect.testing.OpenJdk6SetTests'
p13333
sg16
(lp13334
sg19
(lp13335
sg22
(lp13336
sg25
I0
sba(iArchitecture
Entity
p13337
(dp13338
g11
(lp13339
sg14
S'com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder'
p13340
sg16
(lp13341
sg19
(lp13342
sg22
(lp13343
sg25
I0
sba(iArchitecture
Entity
p13344
(dp13345
g11
(lp13346
sg14
S'com.google.common.collect.testing.Platform'
p13347
sg16
(lp13348
sg19
(lp13349
sg22
(lp13350
sg25
I0
sba(iArchitecture
Entity
p13351
(dp13352
g11
(lp13353
sg14
S'com.google.common.collect.testing.ReserializingTestSetGenerator'
p13354
sg16
(lp13355
sg19
(lp13356
sg22
(lp13357
sg25
I0
sba(iArchitecture
Entity
p13358
(dp13359
g11
(lp13360
sg14
S'com.google.common.collect.testing.SortedMapTestSuiteBuilder'
p13361
sg16
(lp13362
sg19
(lp13363
sg22
(lp13364
sg25
I0
sba(iArchitecture
Entity
p13365
(dp13366
g11
(lp13367
sg14
S'com.google.common.collect.testing.SortedSetTestSuiteBuilder'
p13368
sg16
(lp13369
sg19
(lp13370
sg22
(lp13371
sg25
I0
sba(iArchitecture
Entity
p13372
(dp13373
g11
(lp13374
sg14
S'com.google.common.collect.testing.TestCollectionGenerator'
p13375
sg16
(lp13376
sg19
(lp13377
sg22
(lp13378
sg25
I0
sba(iArchitecture
Entity
p13379
(dp13380
g11
(lp13381
V2349
p13382
asg14
S'com.google.common.collect.testing.TestContainerGenerator'
p13383
sg16
(lp13384
VThe [javadoc for TestContainerGenerator.order](https://github.com/google/guava/blob/master/guava-testlib/src/com/google/common/collect/testing/TestContainerGenerator.java#L66) states:\u000a\u000a> This method runs only when CollectionFeature#KNOWN_ORDER is specified when creating the test suite. It should never run when testing containers such as HashSet, which have a non-deterministic iteration order.\u000a\u000aHowever, 74 tests (out of 450) fail with the code below which (as described by the documentation) expects TestContainerGenerator.order not to be called and throws an UnsupportedOperationException for it:\u000a\u000a``` java\u000apublic final class JavaUtilCollectionsTests {\u000a  public static Test suite() {\u000a    TestSuite suite = new TestSuite("HashSet");\u000a    suite.addTest(SetTestSuiteBuilder.<Integer>using(new TestSetGenerator<Integer>() {\u000a      @Override\u000a      public SampleElements<Integer> samples() {\u000a        return new SampleElements<Integer>(-7, 0, Integer.MIN_VALUE, 42, Integer.MAX_VALUE);\u000a      }\u000a\u000a      @Override\u000a      public Integer[] createArray(int length) {\u000a        return new Integer[length];\u000a      }\u000a\u000a      @Override\u000a      public Iterable<Integer> order(List<Integer> insertionOrder) {\u000a        throw new UnsupportedOperationException();\u000a      }\u000a\u000a      @Override\u000a      public Set<Integer> create(Object... elements) {\u000a        List<Integer> values =\u000a            Arrays.stream(elements).map(o -> (Integer) o).collect(Collectors.toList());\u000a        return new HashSet<>(values);\u000a      }\u000a    }).named("HashSet")\u000a        .withFeatures(CollectionSize.ANY, CollectionFeature.GENERAL_PURPOSE,\u000a            CollectionFeature.ALLOWS_NULL_VALUES, CollectionFeature.SERIALIZABLE_INCLUDING_VIEWS)\u000a        .createTestSuite());\u000a    return suite;\u000a  }\u000a}\u000a```\u000a\u000aThe expected result would be for all the tests to pass.\u000a
p13385
asg19
(lp13386
(lp13387
I1
aasg22
(lp13388
VTest suites incorrectly call TestSetGenerator.order
p13389
asg25
I0
sba(iArchitecture
Entity
p13390
(dp13391
g11
(lp13392
sg14
S'com.google.common.collect.testing.TestIteratorGenerator'
p13393
sg16
(lp13394
sg19
(lp13395
sg22
(lp13396
sg25
I0
sba(iArchitecture
Entity
p13397
(dp13398
g11
(lp13399
sg14
S'com.google.common.collect.testing.TestListGenerator'
p13400
sg16
(lp13401
sg19
(lp13402
sg22
(lp13403
sg25
I0
sba(iArchitecture
Entity
p13404
(dp13405
g11
(lp13406
sg14
S'com.google.common.collect.testing.TestMapEntrySetGenerator'
p13407
sg16
(lp13408
sg19
(lp13409
sg22
(lp13410
sg25
I0
sba(iArchitecture
Entity
p13411
(dp13412
g11
(lp13413
sg14
S'com.google.common.collect.testing.TestMapGenerator'
p13414
sg16
(lp13415
sg19
(lp13416
sg22
(lp13417
sg25
I0
sba(iArchitecture
Entity
p13418
(dp13419
g11
(lp13420
sg14
S'com.google.common.collect.testing.TestQueueGenerator'
p13421
sg16
(lp13422
sg19
(lp13423
sg22
(lp13424
sg25
I0
sba(iArchitecture
Entity
p13425
(dp13426
g11
(lp13427
sg14
S'com.google.common.collect.testing.TestSetGenerator'
p13428
sg16
(lp13429
sg19
(lp13430
sg22
(lp13431
sg25
I0
sba(iArchitecture
Entity
p13432
(dp13433
g11
(lp13434
sg14
S'com.google.common.collect.testing.TestSubjectGenerator'
p13435
sg16
(lp13436
sg19
(lp13437
sg22
(lp13438
sg25
I0
sba(iArchitecture
Entity
p13439
(dp13440
g11
(lp13441
sg14
S'com.google.common.collect.testing.WrongType'
p13442
sg16
(lp13443
sg19
(lp13444
sg22
(lp13445
sg25
I0
sba(iArchitecture
Entity
p13446
(dp13447
g11
(lp13448
sg14
S'com.google.common.collect.testing.features.CollectionFeature'
p13449
sg16
(lp13450
sg19
(lp13451
sg22
(lp13452
sg25
I0
sba(iArchitecture
Entity
p13453
(dp13454
g11
(lp13455
sg14
S'com.google.common.collect.testing.features.ConflictingRequirementsException'
p13456
sg16
(lp13457
sg19
(lp13458
sg22
(lp13459
sg25
I0
sba(iArchitecture
Entity
p13460
(dp13461
g11
(lp13462
sg14
S'com.google.common.collect.testing.features.Feature'
p13463
sg16
(lp13464
sg19
(lp13465
sg22
(lp13466
sg25
I0
sba(iArchitecture
Entity
p13467
(dp13468
g11
(lp13469
sg14
S'com.google.common.collect.testing.features.FeatureEnumTest'
p13470
sg16
(lp13471
sg19
(lp13472
sg22
(lp13473
sg25
I0
sba(iArchitecture
Entity
p13474
(dp13475
g11
(lp13476
sg14
S'com.google.common.collect.testing.features.FeatureUtil'
p13477
sg16
(lp13478
sg19
(lp13479
sg22
(lp13480
sg25
I0
sba(iArchitecture
Entity
p13481
(dp13482
g11
(lp13483
sg14
S'com.google.common.collect.testing.features.FeatureUtilTest'
p13484
sg16
(lp13485
sg19
(lp13486
sg22
(lp13487
sg25
I0
sba(iArchitecture
Entity
p13488
(dp13489
g11
(lp13490
sg14
S'com.google.common.collect.testing.features.ListFeature'
p13491
sg16
(lp13492
sg19
(lp13493
sg22
(lp13494
sg25
I0
sba(iArchitecture
Entity
p13495
(dp13496
g11
(lp13497
sg14
S'com.google.common.collect.testing.features.MapFeature'
p13498
sg16
(lp13499
sg19
(lp13500
sg22
(lp13501
sg25
I0
sba(iArchitecture
Entity
p13502
(dp13503
g11
(lp13504
sg14
S'com.google.common.collect.testing.features.SetFeature'
p13505
sg16
(lp13506
sg19
(lp13507
sg22
(lp13508
sg25
I0
sba(iArchitecture
Entity
p13509
(dp13510
g11
(lp13511
sg14
S'com.google.common.collect.testing.features.TesterAnnotation'
p13512
sg16
(lp13513
sg19
(lp13514
sg22
(lp13515
sg25
I0
sba(iArchitecture
Entity
p13516
(dp13517
g11
(lp13518
sg14
S'com.google.common.collect.testing.google.AbstractListMultimapTester'
p13519
sg16
(lp13520
sg19
(lp13521
sg22
(lp13522
sg25
I0
sba(iArchitecture
Entity
p13523
(dp13524
g11
(lp13525
sg14
S'com.google.common.collect.testing.google.AbstractMultimapTester'
p13526
sg16
(lp13527
sg19
(lp13528
sg22
(lp13529
sg25
I0
sba(iArchitecture
Entity
p13530
(dp13531
g11
(lp13532
sg14
S'com.google.common.collect.testing.google.BiMapPutTester'
p13533
sg16
(lp13534
sg19
(lp13535
sg22
(lp13536
sg25
I0
sba(iArchitecture
Entity
p13537
(dp13538
g11
(lp13539
sg14
S'com.google.common.collect.testing.google.BiMapTestSuiteBuilder'
p13540
sg16
(lp13541
sg19
(lp13542
sg22
(lp13543
sg25
I0
sba(iArchitecture
Entity
p13544
(dp13545
g11
(lp13546
sg14
S'com.google.common.collect.testing.google.GoogleHelpers'
p13547
sg16
(lp13548
sg19
(lp13549
sg22
(lp13550
sg25
I0
sba(iArchitecture
Entity
p13551
(dp13552
g11
(lp13553
sg14
S'com.google.common.collect.testing.google.ListMultimapAsMapTester'
p13554
sg16
(lp13555
sg19
(lp13556
sg22
(lp13557
sg25
I0
sba(iArchitecture
Entity
p13558
(dp13559
g11
(lp13560
sg14
S'com.google.common.collect.testing.google.ListMultimapPutAllTester'
p13561
sg16
(lp13562
sg19
(lp13563
sg22
(lp13564
sg25
I0
sba(iArchitecture
Entity
p13565
(dp13566
g11
(lp13567
sg14
S'com.google.common.collect.testing.google.ListMultimapPutTester'
p13568
sg16
(lp13569
sg19
(lp13570
sg22
(lp13571
sg25
I0
sba(iArchitecture
Entity
p13572
(dp13573
g11
(lp13574
sg14
S'com.google.common.collect.testing.google.ListMultimapRemoveTester'
p13575
sg16
(lp13576
sg19
(lp13577
sg22
(lp13578
sg25
I0
sba(iArchitecture
Entity
p13579
(dp13580
g11
(lp13581
sg14
S'com.google.common.collect.testing.google.ListMultimapReplaceValuesTester'
p13582
sg16
(lp13583
sg19
(lp13584
sg22
(lp13585
sg25
I0
sba(iArchitecture
Entity
p13586
(dp13587
g11
(lp13588
sg14
S'com.google.common.collect.testing.google.ListMultimapTestSuiteBuilder'
p13589
sg16
(lp13590
sg19
(lp13591
sg22
(lp13592
sg25
I0
sba(iArchitecture
Entity
p13593
(dp13594
g11
(lp13595
sg14
S'com.google.common.collect.testing.google.MultimapAsMapGetTester'
p13596
sg16
(lp13597
sg19
(lp13598
sg22
(lp13599
sg25
I0
sba(iArchitecture
Entity
p13600
(dp13601
g11
(lp13602
sg14
S'com.google.common.collect.testing.google.MultimapAsMapTester'
p13603
sg16
(lp13604
sg19
(lp13605
sg22
(lp13606
sg25
I0
sba(iArchitecture
Entity
p13607
(dp13608
g11
(lp13609
sg14
S'com.google.common.collect.testing.google.MultimapContainsValueTester'
p13610
sg16
(lp13611
sg19
(lp13612
sg22
(lp13613
sg25
I0
sba(iArchitecture
Entity
p13614
(dp13615
g11
(lp13616
sg14
S'com.google.common.collect.testing.google.MultimapEntriesTester'
p13617
sg16
(lp13618
sg19
(lp13619
sg22
(lp13620
sg25
I0
sba(iArchitecture
Entity
p13621
(dp13622
g11
(lp13623
sg14
S'com.google.common.collect.testing.google.MultimapEqualsTester'
p13624
sg16
(lp13625
sg19
(lp13626
sg22
(lp13627
sg25
I0
sba(iArchitecture
Entity
p13628
(dp13629
g11
(lp13630
sg14
S'com.google.common.collect.testing.google.MultimapFeature'
p13631
sg16
(lp13632
sg19
(lp13633
sg22
(lp13634
sg25
I0
sba(iArchitecture
Entity
p13635
(dp13636
g11
(lp13637
sg14
S'com.google.common.collect.testing.google.MultimapKeySetTester'
p13638
sg16
(lp13639
sg19
(lp13640
sg22
(lp13641
sg25
I0
sba(iArchitecture
Entity
p13642
(dp13643
g11
(lp13644
sg14
S'com.google.common.collect.testing.google.MultimapRemoveAllTester'
p13645
sg16
(lp13646
sg19
(lp13647
sg22
(lp13648
sg25
I0
sba(iArchitecture
Entity
p13649
(dp13650
g11
(lp13651
sg14
S'com.google.common.collect.testing.google.MultimapReplaceValuesTester'
p13652
sg16
(lp13653
sg19
(lp13654
sg22
(lp13655
sg25
I0
sba(iArchitecture
Entity
p13656
(dp13657
g11
(lp13658
sg14
S'com.google.common.collect.testing.google.MultimapTestSuiteBuilder'
p13659
sg16
(lp13660
sg19
(lp13661
sg22
(lp13662
sg25
I0
sba(iArchitecture
Entity
p13663
(dp13664
g11
(lp13665
V2418
p13666
asg14
S'com.google.common.collect.testing.google.MultimapToStringTester'
p13667
sg16
(lp13668
VSee a unit test demonstrating the issue here: https://github.com/gpanther/fastutil-guava-tests/blob/master/src/test/java/net/greypanther/guava/tests/tests/CustomToStringTest.java\u000a\u000aIt shows a HashMap subclass which overrides toString and as a result fails tests, even if CollectionFeature.NON_STANDARD_TOSTRING passed to MapTestSuiteBuilder.\u000a\u000aI believe that methods like https://github.com/google/guava/blob/2cd4d629a2b6f1a462643b248e0972f44c5133b7/guava-testlib/src/com/google/common/collect/testing/testers/MapToStringTester.java#L45 should be marked with `@CollectionFeature.Require(absent = NON_STANDARD_TOSTRING)`.\u000a
p13669
asg19
(lp13670
(lp13671
I1
aasg22
(lp13672
VMap tests assert on .toString even when CollectionFeature.NON_STANDARD_TOSTRING is specified
p13673
asg25
I0
sba(iArchitecture
Entity
p13674
(dp13675
g11
(lp13676
sg14
S'com.google.common.collect.testing.google.MultimapValuesTester'
p13677
sg16
(lp13678
sg19
(lp13679
sg22
(lp13680
sg25
I0
sba(iArchitecture
Entity
p13681
(dp13682
g11
(lp13683
sg14
S'com.google.common.collect.testing.google.MultisetContainsTester'
p13684
sg16
(lp13685
sg19
(lp13686
sg22
(lp13687
sg25
I0
sba(iArchitecture
Entity
p13688
(dp13689
g11
(lp13690
sg14
S'com.google.common.collect.testing.google.MultisetElementSetTester'
p13691
sg16
(lp13692
sg19
(lp13693
sg22
(lp13694
sg25
I0
sba(iArchitecture
Entity
p13695
(dp13696
g11
(lp13697
sg14
S'com.google.common.collect.testing.google.MultisetEqualsTester'
p13698
sg16
(lp13699
sg19
(lp13700
sg22
(lp13701
sg25
I0
sba(iArchitecture
Entity
p13702
(dp13703
g11
(lp13704
sg14
S'com.google.common.collect.testing.google.SetMultimapAsMapTester'
p13705
sg16
(lp13706
sg19
(lp13707
sg22
(lp13708
sg25
I0
sba(iArchitecture
Entity
p13709
(dp13710
g11
(lp13711
sg14
S'com.google.common.collect.testing.google.SetMultimapPutAllTester'
p13712
sg16
(lp13713
sg19
(lp13714
sg22
(lp13715
sg25
I0
sba(iArchitecture
Entity
p13716
(dp13717
g11
(lp13718
sg14
S'com.google.common.collect.testing.google.SetMultimapPutTester'
p13719
sg16
(lp13720
sg19
(lp13721
sg22
(lp13722
sg25
I0
sba(iArchitecture
Entity
p13723
(dp13724
g11
(lp13725
sg14
S'com.google.common.collect.testing.google.SetMultimapReplaceValuesTester'
p13726
sg16
(lp13727
sg19
(lp13728
sg22
(lp13729
sg25
I0
sba(iArchitecture
Entity
p13730
(dp13731
g11
(lp13732
sg14
S'com.google.common.collect.testing.google.SetMultimapTestSuiteBuilder'
p13733
sg16
(lp13734
sg19
(lp13735
sg22
(lp13736
sg25
I0
sba(iArchitecture
Entity
p13737
(dp13738
g11
(lp13739
sg14
S'com.google.common.collect.testing.google.SortedMultisetTestSuiteBuilder'
p13740
sg16
(lp13741
sg19
(lp13742
sg22
(lp13743
sg25
I0
sba(iArchitecture
Entity
p13744
(dp13745
g11
(lp13746
sg14
S'com.google.common.collect.testing.google.SortedSetMultimapAsMapTester'
p13747
sg16
(lp13748
sg19
(lp13749
sg22
(lp13750
sg25
I0
sba(iArchitecture
Entity
p13751
(dp13752
g11
(lp13753
sg14
S'com.google.common.collect.testing.google.SortedSetMultimapTestSuiteBuilder'
p13754
sg16
(lp13755
sg19
(lp13756
sg22
(lp13757
sg25
I0
sba(iArchitecture
Entity
p13758
(dp13759
g11
(lp13760
sg14
S'com.google.common.collect.testing.google.TestBiMapGenerator'
p13761
sg16
(lp13762
sg19
(lp13763
sg22
(lp13764
sg25
I0
sba(iArchitecture
Entity
p13765
(dp13766
g11
(lp13767
sg14
S'com.google.common.collect.testing.google.TestMultimapGenerator'
p13768
sg16
(lp13769
sg19
(lp13770
sg22
(lp13771
sg25
I0
sba(iArchitecture
Entity
p13772
(dp13773
g11
(lp13774
sg14
S'com.google.common.collect.testing.google.UnmodifiableCollectionTests'
p13775
sg16
(lp13776
sg19
(lp13777
sg22
(lp13778
sg25
I0
sba(iArchitecture
Entity
p13779
(dp13780
g11
(lp13781
sg14
S'com.google.common.collect.testing.testers.AbstractSetTester'
p13782
sg16
(lp13783
sg19
(lp13784
sg22
(lp13785
sg25
I0
sba(iArchitecture
Entity
p13786
(dp13787
g11
(lp13788
sg14
S'com.google.common.collect.testing.testers.CollectionClearTester'
p13789
sg16
(lp13790
sg19
(lp13791
sg22
(lp13792
sg25
I0
sba(iArchitecture
Entity
p13793
(dp13794
g11
(lp13795
sg14
S'com.google.common.collect.testing.testers.CollectionCreationTester'
p13796
sg16
(lp13797
sg19
(lp13798
sg22
(lp13799
sg25
I0
sba(iArchitecture
Entity
p13800
(dp13801
g11
(lp13802
sg14
S'com.google.common.collect.testing.testers.CollectionIteratorTester'
p13803
sg16
(lp13804
sg19
(lp13805
sg22
(lp13806
sg25
I0
sba(iArchitecture
Entity
p13807
(dp13808
g11
(lp13809
sg14
S'com.google.common.collect.testing.testers.CollectionSerializationEqualTester'
p13810
sg16
(lp13811
sg19
(lp13812
sg22
(lp13813
sg25
I0
sba(iArchitecture
Entity
p13814
(dp13815
g11
(lp13816
sg14
S'com.google.common.collect.testing.testers.CollectionToStringTester'
p13817
sg16
(lp13818
sg19
(lp13819
sg22
(lp13820
sg25
I0
sba(iArchitecture
Entity
p13821
(dp13822
g11
(lp13823
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapRemoveTester'
p13824
sg16
(lp13825
sg19
(lp13826
sg22
(lp13827
sg25
I0
sba(iArchitecture
Entity
p13828
(dp13829
g11
(lp13830
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapReplaceTester'
p13831
sg16
(lp13832
sg19
(lp13833
sg22
(lp13834
sg25
I0
sba(iArchitecture
Entity
p13835
(dp13836
g11
(lp13837
sg14
S'com.google.common.collect.testing.testers.ListAddTester'
p13838
sg16
(lp13839
sg19
(lp13840
sg22
(lp13841
sg25
I0
sba(iArchitecture
Entity
p13842
(dp13843
g11
(lp13844
sg14
S'com.google.common.collect.testing.testers.ListCreationTester'
p13845
sg16
(lp13846
sg19
(lp13847
sg22
(lp13848
sg25
I0
sba(iArchitecture
Entity
p13849
(dp13850
g11
(lp13851
sg14
S'com.google.common.collect.testing.testers.ListHashCodeTester'
p13852
sg16
(lp13853
sg19
(lp13854
sg22
(lp13855
sg25
I0
sba(iArchitecture
Entity
p13856
(dp13857
g11
(lp13858
sg14
S'com.google.common.collect.testing.testers.ListIndexOfTester'
p13859
sg16
(lp13860
sg19
(lp13861
sg22
(lp13862
sg25
I0
sba(iArchitecture
Entity
p13863
(dp13864
g11
(lp13865
sg14
S'com.google.common.collect.testing.testers.ListLastIndexOfTester'
p13866
sg16
(lp13867
sg19
(lp13868
sg22
(lp13869
sg25
I0
sba(iArchitecture
Entity
p13870
(dp13871
g11
(lp13872
sg14
S'com.google.common.collect.testing.testers.ListListIteratorTester'
p13873
sg16
(lp13874
sg19
(lp13875
sg22
(lp13876
sg25
I0
sba(iArchitecture
Entity
p13877
(dp13878
g11
(lp13879
sg14
S'com.google.common.collect.testing.testers.ListRemoveAllTester'
p13880
sg16
(lp13881
sg19
(lp13882
sg22
(lp13883
sg25
I0
sba(iArchitecture
Entity
p13884
(dp13885
g11
(lp13886
sg14
S'com.google.common.collect.testing.testers.ListRemoveAtIndexTester'
p13887
sg16
(lp13888
sg19
(lp13889
sg22
(lp13890
sg25
I0
sba(iArchitecture
Entity
p13891
(dp13892
g11
(lp13893
sg14
S'com.google.common.collect.testing.testers.ListRetainAllTester'
p13894
sg16
(lp13895
sg19
(lp13896
sg22
(lp13897
sg25
I0
sba(iArchitecture
Entity
p13898
(dp13899
g11
(lp13900
sg14
S'com.google.common.collect.testing.testers.MapClearTester'
p13901
sg16
(lp13902
sg19
(lp13903
sg22
(lp13904
sg25
I0
sba(iArchitecture
Entity
p13905
(dp13906
g11
(lp13907
sg14
S'com.google.common.collect.testing.testers.MapCreationTester'
p13908
sg16
(lp13909
sg19
(lp13910
sg22
(lp13911
sg25
I0
sba(iArchitecture
Entity
p13912
(dp13913
g11
(lp13914
sg14
S'com.google.common.collect.testing.testers.MapEntrySetTester'
p13915
sg16
(lp13916
sg19
(lp13917
sg22
(lp13918
sg25
I0
sba(iArchitecture
Entity
p13919
(dp13920
g11
(lp13921
sg14
S'com.google.common.collect.testing.testers.MapEqualsTester'
p13922
sg16
(lp13923
sg19
(lp13924
sg22
(lp13925
sg25
I0
sba(iArchitecture
Entity
p13926
(dp13927
g11
(lp13928
sg14
S'com.google.common.collect.testing.testers.MapHashCodeTester'
p13929
sg16
(lp13930
sg19
(lp13931
sg22
(lp13932
sg25
I0
sba(iArchitecture
Entity
p13933
(dp13934
g11
(lp13935
sg14
S'com.google.common.collect.testing.testers.MapPutAllTester'
p13936
sg16
(lp13937
sg19
(lp13938
sg22
(lp13939
sg25
I0
sba(iArchitecture
Entity
p13940
(dp13941
g11
(lp13942
g13666
asg14
S'com.google.common.collect.testing.testers.MapToStringTester'
p13943
sg16
(lp13944
VSee a unit test demonstrating the issue here: https://github.com/gpanther/fastutil-guava-tests/blob/master/src/test/java/net/greypanther/guava/tests/tests/CustomToStringTest.java\u000a\u000aIt shows a HashMap subclass which overrides toString and as a result fails tests, even if CollectionFeature.NON_STANDARD_TOSTRING passed to MapTestSuiteBuilder.\u000a\u000aI believe that methods like https://github.com/google/guava/blob/2cd4d629a2b6f1a462643b248e0972f44c5133b7/guava-testlib/src/com/google/common/collect/testing/testers/MapToStringTester.java#L45 should be marked with `@CollectionFeature.Require(absent = NON_STANDARD_TOSTRING)`.\u000a
p13945
asg19
(lp13946
g13671
asg22
(lp13947
g13673
asg25
I0
sba(iArchitecture
Entity
p13948
(dp13949
g11
(lp13950
sg14
S'com.google.common.collect.testing.testers.QueueElementTester'
p13951
sg16
(lp13952
sg19
(lp13953
sg22
(lp13954
sg25
I0
sba(iArchitecture
Entity
p13955
(dp13956
g11
(lp13957
sg14
S'com.google.common.collect.testing.testers.QueuePeekTester'
p13958
sg16
(lp13959
sg19
(lp13960
sg22
(lp13961
sg25
I0
sba(iArchitecture
Entity
p13962
(dp13963
g11
(lp13964
sg14
S'com.google.common.collect.testing.testers.QueuePollTester'
p13965
sg16
(lp13966
sg19
(lp13967
sg22
(lp13968
sg25
I0
sba(iArchitecture
Entity
p13969
(dp13970
g11
(lp13971
sg14
S'com.google.common.collect.testing.testers.QueueRemoveTester'
p13972
sg16
(lp13973
sg19
(lp13974
sg22
(lp13975
sg25
I0
sba(iArchitecture
Entity
p13976
(dp13977
g11
(lp13978
sg14
S'com.google.common.collect.testing.testers.SetAddTester'
p13979
sg16
(lp13980
sg19
(lp13981
sg22
(lp13982
sg25
I0
sba(iArchitecture
Entity
p13983
(dp13984
g11
(lp13985
sg14
S'com.google.common.collect.testing.testers.SetCreationTester'
p13986
sg16
(lp13987
sg19
(lp13988
sg22
(lp13989
sg25
I0
sba(iArchitecture
Entity
p13990
(dp13991
g11
(lp13992
sg14
S'com.google.common.collect.testing.testers.SetHashCodeTester'
p13993
sg16
(lp13994
sg19
(lp13995
sg22
(lp13996
sg25
I0
sba(iArchitecture
Entity
p13997
(dp13998
g11
(lp13999
sg14
S'com.google.common.collect.testing.testers.SortedSetNavigationTester'
p14000
sg16
(lp14001
sg19
(lp14002
sg22
(lp14003
sg25
I0
sba(iArchitecture
Entity
p14004
(dp14005
g11
(lp14006
sg14
S'com.google.common.eventbus.AllowConcurrentEvents'
p14007
sg16
(lp14008
sg19
(lp14009
sg22
(lp14010
sg25
I0
sba(iArchitecture
Entity
p14011
(dp14012
g11
(lp14013
sg14
S'com.google.common.eventbus.PackageSanityTests'
p14014
sg16
(lp14015
sg19
(lp14016
sg22
(lp14017
sg25
I0
sba(iArchitecture
Entity
p14018
(dp14019
g11
(lp14020
sg14
S'com.google.common.eventbus.Subscribe'
p14021
sg16
(lp14022
sg19
(lp14023
sg22
(lp14024
sg25
I0
sba(iArchitecture
Entity
p14025
(dp14026
g11
(lp14027
sg14
S'com.google.common.eventbus.SubscriberExceptionContext'
p14028
sg16
(lp14029
sg19
(lp14030
sg22
(lp14031
sg25
I0
sba(iArchitecture
Entity
p14032
(dp14033
g11
(lp14034
sg14
S'com.google.common.eventbus.SubscriberRegistry'
p14035
sg16
(lp14036
sg19
(lp14037
sg22
(lp14038
sg25
I0
sba(iArchitecture
Entity
p14039
(dp14040
g11
(lp14041
sg14
S'com.google.common.eventbus.package-info'
p14042
sg16
(lp14043
sg19
(lp14044
sg22
(lp14045
sg25
I0
sba(iArchitecture
Entity
p14046
(dp14047
g11
(lp14048
sg14
S'com.google.common.hash.SuppressUnderAndroid'
p14049
sg16
(lp14050
sg19
(lp14051
sg22
(lp14052
sg25
I0
sba(iArchitecture
Entity
p14053
(dp14054
g11
(lp14055
sg14
S'com.google.common.hash.package-info'
p14056
sg16
(lp14057
sg19
(lp14058
sg22
(lp14059
sg25
I0
sba(iArchitecture
Entity
p14060
(dp14061
g11
(lp14062
sg14
S'com.google.common.html.package-info'
p14063
sg16
(lp14064
sg19
(lp14065
sg22
(lp14066
sg25
I0
sba(iArchitecture
Entity
p14067
(dp14068
g11
(lp14069
sg14
S'com.google.common.io.Closer'
p14070
sg16
(lp14071
sg19
(lp14072
sg22
(lp14073
sg25
I0
sba(iArchitecture
Entity
p14074
(dp14075
g11
(lp14076
sg14
S'com.google.common.io.SuppressUnderAndroid'
p14077
sg16
(lp14078
sg19
(lp14079
sg22
(lp14080
sg25
I0
sba(iArchitecture
Entity
p14081
(dp14082
g11
(lp14083
sg14
S'com.google.common.math.DoubleMath'
p14084
sg16
(lp14085
sg19
(lp14086
sg22
(lp14087
sg25
I0
sba(iArchitecture
Entity
p14088
(dp14089
g11
(lp14090
sg14
S'com.google.common.math.StatsBenchmark'
p14091
sg16
(lp14092
sg19
(lp14093
sg22
(lp14094
sg25
I0
sba(iArchitecture
Entity
p14095
(dp14096
g11
(lp14097
sg14
S'com.google.common.math.SuppressUnderAndroid'
p14098
sg16
(lp14099
sg19
(lp14100
sg22
(lp14101
sg25
I0
sba(iArchitecture
Entity
p14102
(dp14103
g11
(lp14104
sg14
S'com.google.common.math.package-info'
p14105
sg16
(lp14106
sg19
(lp14107
sg22
(lp14108
sg25
I0
sba(iArchitecture
Entity
p14109
(dp14110
g11
(lp14111
V2132
p14112
asg14
S'com.google.common.net.MediaType'
p14113
sg16
(lp14114
VMissed several video MimeTypes in MediaType class:\u000a\u000a```\u000avideo/x-flv\u000avideo/3gpp\u000avideo/3gpp2\u000a```\u000a\u000aand some audio types:\u000a\u000a```\u000aaudio/basic\u000aaudio/L24\u000aaudio/aac\u000aaudio/vorbis\u000aaudio/x-ms-wma\u000aaudio/x-ms-wax\u000aaudio/vnd.rn-realaudio\u000aaudio/vnd.wave\u000a```\u000a
p14115
asg19
(lp14116
(lp14117
I5
aasg22
(lp14118
VAdd video MediaTypes
p14119
asg25
I0
sba(iArchitecture
Entity
p14120
(dp14121
g11
(lp14122
sg14
S'com.google.common.primitives.Primitives'
p14123
sg16
(lp14124
sg19
(lp14125
sg22
(lp14126
sg25
I0
sba(iArchitecture
Entity
p14127
(dp14128
g11
(lp14129
sg14
S'com.google.common.primitives.UnsignedLong_CustomFieldSerializer'
p14130
sg16
(lp14131
sg19
(lp14132
sg22
(lp14133
sg25
I0
sba(iArchitecture
Entity
p14134
(dp14135
g11
(lp14136
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMap'
p14137
sg16
(lp14138
sg19
(lp14139
sg22
(lp14140
sg25
I0
sba(iArchitecture
Entity
p14141
(dp14142
g11
(lp14143
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMapTest'
p14144
sg16
(lp14145
sg19
(lp14146
sg22
(lp14147
sg25
I0
sba(iArchitecture
Entity
p14148
(dp14149
g11
(lp14150
sg14
S'com.google.common.reflect.MutableTypeToInstanceMap'
p14151
sg16
(lp14152
sg19
(lp14153
sg22
(lp14154
sg25
I0
sba(iArchitecture
Entity
p14155
(dp14156
g11
(lp14157
sg14
S'com.google.common.reflect.MutableTypeToInstanceMapTest'
p14158
sg16
(lp14159
sg19
(lp14160
sg22
(lp14161
sg25
I0
sba(iArchitecture
Entity
p14162
(dp14163
g11
(lp14164
sg14
S'com.google.common.reflect.ReflectionTest'
p14165
sg16
(lp14166
sg19
(lp14167
sg22
(lp14168
sg25
I0
sba(iArchitecture
Entity
p14169
(dp14170
g11
(lp14171
sg14
S'com.google.common.reflect.SuppressUnderAndroid'
p14172
sg16
(lp14173
sg19
(lp14174
sg22
(lp14175
sg25
I0
sba(iArchitecture
Entity
p14176
(dp14177
g11
(lp14178
sg14
S'com.google.common.reflect.TypeParameter'
p14179
sg16
(lp14180
sg19
(lp14181
sg22
(lp14182
sg25
I0
sba(iArchitecture
Entity
p14183
(dp14184
g11
(lp14185
sg14
S'com.google.common.reflect.TypeResolver'
p14186
sg16
(lp14187
sg19
(lp14188
sg22
(lp14189
sg25
I0
sba(iArchitecture
Entity
p14190
(dp14191
g11
(lp14192
sg14
S'com.google.common.reflect.TypeToInstanceMap'
p14193
sg16
(lp14194
sg19
(lp14195
sg22
(lp14196
sg25
I0
sba(iArchitecture
Entity
p14197
(dp14198
g11
(lp14199
sg14
S'com.google.common.reflect.TypeToken'
p14200
sg16
(lp14201
sg19
(lp14202
sg22
(lp14203
sg25
I0
sba(iArchitecture
Entity
p14204
(dp14205
g11
(lp14206
sg14
S'com.google.common.reflect.TypeVisitor'
p14207
sg16
(lp14208
sg19
(lp14209
sg22
(lp14210
sg25
I0
sba(iArchitecture
Entity
p14211
(dp14212
g11
(lp14213
sg14
S'com.google.common.reflect.TypeVisitorTest'
p14214
sg16
(lp14215
sg19
(lp14216
sg22
(lp14217
sg25
I0
sba(iArchitecture
Entity
p14218
(dp14219
g11
(lp14220
sg14
S'com.google.common.reflect.Types'
p14221
sg16
(lp14222
sg19
(lp14223
sg22
(lp14224
sg25
I0
sba(iArchitecture
Entity
p14225
(dp14226
g11
(lp14227
sg14
S'com.google.common.reflect.TypesTest'
p14228
sg16
(lp14229
sg19
(lp14230
sg22
(lp14231
sg25
I0
sba(iArchitecture
Entity
p14232
(dp14233
g11
(lp14234
sg14
S'com.google.common.reflect.package-info'
p14235
sg16
(lp14236
sg19
(lp14237
sg22
(lp14238
sg25
I0
sba(iArchitecture
Entity
p14239
(dp14240
g11
(lp14241
sg14
S'com.google.common.testing.ArbitraryInstances'
p14242
sg16
(lp14243
sg19
(lp14244
sg22
(lp14245
sg25
I0
sba(iArchitecture
Entity
p14246
(dp14247
g11
(lp14248
sg14
S'com.google.common.testing.DummyProxy'
p14249
sg16
(lp14250
sg19
(lp14251
sg22
(lp14252
sg25
I0
sba(iArchitecture
Entity
p14253
(dp14254
g11
(lp14255
sg14
S'com.google.common.testing.EqualsTester'
p14256
sg16
(lp14257
sg19
(lp14258
sg22
(lp14259
sg25
I0
sba(iArchitecture
Entity
p14260
(dp14261
g11
(lp14262
sg14
S'com.google.common.testing.ForwardingWrapperTester'
p14263
sg16
(lp14264
sg19
(lp14265
sg22
(lp14266
sg25
I0
sba(iArchitecture
Entity
p14267
(dp14268
g11
(lp14269
sg14
S'com.google.common.testing.FreshValueGenerator'
p14270
sg16
(lp14271
sg19
(lp14272
sg22
(lp14273
sg25
I0
sba(iArchitecture
Entity
p14274
(dp14275
g11
(lp14276
g6862
ag6862
asg14
S'com.google.common.testing.NullPointerTester'
p14277
sg16
(lp14278
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1819) created by **ogregoire** on 2014-07-29 at 03:35 PM_\u000a\u000a---\u000a\u000aWhen I call the following, the test case fails (see full test case in attachment).\u000a\u000a&nbsp;&nbsp;new ClassSanityTester().testNulls(MyObject.class);\u000a\u000aI get the following error: No exception thrown for parameter at index 0 from MyObjectTest$MyObject.public boolean MyObjectTest$MyObject.equals(java.lang.Object)[null] for class MyObjectTest$MyObject\u000a\u000aClearly, this indicates that it expects a call to "equals(Object)" to throw a NullPointerException. That method should never throw an exception but rather return true or false. The test seems to skip this assertion and I'm surprised this hasn't been reported earlier. \u000a\u000aPlease make it so ClassSanityTester#testNulls(Class) doesn't fail when equals is behaving correctly (see the test case where testEquals(MyObject.class succeeds).\u000a\u000aOn a side note, the text returned should be adapted as it mentions three times MyObjectTest$MyObject. That's 2 too many, and it renders the whole error message nearly not understandable.\u000a
p14279
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1819) created by **ogregoire** on 2014-07-29 at 03:35 PM_\u000a\u000a---\u000a\u000aWhen I call the following, the test case fails (see full test case in attachment).\u000a\u000a&nbsp;&nbsp;new ClassSanityTester().testNulls(MyObject.class);\u000a\u000aI get the following error: No exception thrown for parameter at index 0 from MyObjectTest$MyObject.public boolean MyObjectTest$MyObject.equals(java.lang.Object)[null] for class MyObjectTest$MyObject\u000a\u000aClearly, this indicates that it expects a call to "equals(Object)" to throw a NullPointerException. That method should never throw an exception but rather return true or false. The test seems to skip this assertion and I'm surprised this hasn't been reported earlier. \u000a\u000aPlease make it so ClassSanityTester#testNulls(Class) doesn't fail when equals is behaving correctly (see the test case where testEquals(MyObject.class succeeds).\u000a\u000aOn a side note, the text returned should be adapted as it mentions three times MyObjectTest$MyObject. That's 2 too many, and it renders the whole error message nearly not understandable.\u000a
p14280
asg19
(lp14281
g6867
ag6867
asg22
(lp14282
g6869
ag6869
asg25
I0
sba(iArchitecture
Entity
p14283
(dp14284
g11
(lp14285
sg14
S'com.google.common.testing.Platform'
p14286
sg16
(lp14287
sg19
(lp14288
sg22
(lp14289
sg25
I0
sba(iArchitecture
Entity
p14290
(dp14291
g11
(lp14292
sg14
S'com.google.common.testing.TearDownStack'
p14293
sg16
(lp14294
sg19
(lp14295
sg22
(lp14296
sg25
I0
sba(iArchitecture
Entity
p14297
(dp14298
g11
(lp14299
sg14
S'com.google.common.testing.package-info'
p14300
sg16
(lp14301
sg19
(lp14302
sg22
(lp14303
sg25
I0
sba(iArchitecture
Entity
p14304
(dp14305
g11
(lp14306
sg14
S'com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest'
p14307
sg16
(lp14308
sg19
(lp14309
sg22
(lp14310
sg25
I0
sba(iArchitecture
Entity
p14311
(dp14312
g11
(lp14313
g6933
ag6933
asg14
S'com.google.common.util.concurrent.AggregateFutureState'
p14314
sg16
(lp14315
VWe already do in `AbstractFuture`.\u000a
p14316
aVWe already do in `AbstractFuture`.\u000a
p14317
asg19
(lp14318
g6939
ag6939
asg22
(lp14319
g6941
ag6941
asg25
I0
sba(iArchitecture
Entity
p14320
(dp14321
g11
(lp14322
sg14
S'com.google.common.util.concurrent.AsyncFunction'
p14323
sg16
(lp14324
sg19
(lp14325
sg22
(lp14326
sg25
I0
sba(iArchitecture
Entity
p14327
(dp14328
g11
(lp14329
sg14
S'com.google.common.util.concurrent.AtomicLongMap'
p14330
sg16
(lp14331
sg19
(lp14332
sg22
(lp14333
sg25
I0
sba(iArchitecture
Entity
p14334
(dp14335
g11
(lp14336
sg14
S'com.google.common.util.concurrent.AtomicLongMapTest'
p14337
sg16
(lp14338
sg19
(lp14339
sg22
(lp14340
sg25
I0
sba(iArchitecture
Entity
p14341
(dp14342
g11
(lp14343
sg14
S'com.google.common.util.concurrent.AtomicLongMapTest_gwt'
p14344
sg16
(lp14345
sg19
(lp14346
sg22
(lp14347
sg25
I0
sba(iArchitecture
Entity
p14348
(dp14349
g11
(lp14350
sg14
S'com.google.common.util.concurrent.Atomics'
p14351
sg16
(lp14352
sg19
(lp14353
sg22
(lp14354
sg25
I0
sba(iArchitecture
Entity
p14355
(dp14356
g11
(lp14357
sg14
S'com.google.common.util.concurrent.Callables'
p14358
sg16
(lp14359
sg19
(lp14360
sg22
(lp14361
sg25
I0
sba(iArchitecture
Entity
p14362
(dp14363
g11
(lp14364
sg14
S'com.google.common.util.concurrent.CallablesTest'
p14365
sg16
(lp14366
sg19
(lp14367
sg22
(lp14368
sg25
I0
sba(iArchitecture
Entity
p14369
(dp14370
g11
(lp14371
sg14
S'com.google.common.util.concurrent.CheckedFuture'
p14372
sg16
(lp14373
sg19
(lp14374
sg22
(lp14375
sg25
I0
sba(iArchitecture
Entity
p14376
(dp14377
g11
(lp14378
sg14
S'com.google.common.util.concurrent.CollectionFuture'
p14379
sg16
(lp14380
sg19
(lp14381
sg22
(lp14382
sg25
I0
sba(iArchitecture
Entity
p14383
(dp14384
g11
(lp14385
sg14
S'com.google.common.util.concurrent.ExecutionList'
p14386
sg16
(lp14387
sg19
(lp14388
sg22
(lp14389
sg25
I0
sba(iArchitecture
Entity
p14390
(dp14391
g11
(lp14392
sg14
S'com.google.common.util.concurrent.FakeTimeLimiter'
p14393
sg16
(lp14394
sg19
(lp14395
sg22
(lp14396
sg25
I0
sba(iArchitecture
Entity
p14397
(dp14398
g11
(lp14399
sg14
S'com.google.common.util.concurrent.ForwardingObjectTester'
p14400
sg16
(lp14401
sg19
(lp14402
sg22
(lp14403
sg25
I0
sba(iArchitecture
Entity
p14404
(dp14405
g11
(lp14406
sg14
S'com.google.common.util.concurrent.FutureCallback'
p14407
sg16
(lp14408
sg19
(lp14409
sg22
(lp14410
sg25
I0
sba(iArchitecture
Entity
p14411
(dp14412
g11
(lp14413
sg14
S'com.google.common.util.concurrent.FutureFallback'
p14414
sg16
(lp14415
sg19
(lp14416
sg22
(lp14417
sg25
I0
sba(iArchitecture
Entity
p14418
(dp14419
g11
(lp14420
sg14
S'com.google.common.util.concurrent.FuturesGetChecked'
p14421
sg16
(lp14422
sg19
(lp14423
sg22
(lp14424
sg25
I0
sba(iArchitecture
Entity
p14425
(dp14426
g11
(lp14427
sg14
S'com.google.common.util.concurrent.FuturesGetCheckedBenchmark'
p14428
sg16
(lp14429
sg19
(lp14430
sg22
(lp14431
sg25
I0
sba(iArchitecture
Entity
p14432
(dp14433
g11
(lp14434
sg14
S'com.google.common.util.concurrent.FuturesGetUncheckedTest'
p14435
sg16
(lp14436
sg19
(lp14437
sg22
(lp14438
sg25
I0
sba(iArchitecture
Entity
p14439
(dp14440
g11
(lp14441
sg14
S'com.google.common.util.concurrent.ListenableFutureTask'
p14442
sg16
(lp14443
sg19
(lp14444
sg22
(lp14445
sg25
I0
sba(iArchitecture
Entity
p14446
(dp14447
g11
(lp14448
sg14
S'com.google.common.util.concurrent.ListenableFutureTester'
p14449
sg16
(lp14450
sg19
(lp14451
sg22
(lp14452
sg25
I0
sba(iArchitecture
Entity
p14453
(dp14454
g11
(lp14455
sg14
S'com.google.common.util.concurrent.ListenableScheduledFuture'
p14456
sg16
(lp14457
sg19
(lp14458
sg22
(lp14459
sg25
I0
sba(iArchitecture
Entity
p14460
(dp14461
g11
(lp14462
sg14
S'com.google.common.util.concurrent.ListeningScheduledExecutorService'
p14463
sg16
(lp14464
sg19
(lp14465
sg22
(lp14466
sg25
I0
sba(iArchitecture
Entity
p14467
(dp14468
g11
(lp14469
sg14
S'com.google.common.util.concurrent.MoreExecutorsDirectExecutorBenchmark'
p14470
sg16
(lp14471
sg19
(lp14472
sg22
(lp14473
sg25
I0
sba(iArchitecture
Entity
p14474
(dp14475
g11
(lp14476
sg14
S'com.google.common.util.concurrent.Platform'
p14477
sg16
(lp14478
sg19
(lp14479
sg22
(lp14480
sg25
I0
sba(iArchitecture
Entity
p14481
(dp14482
g11
(lp14483
sg14
S'com.google.common.util.concurrent.ServiceManagerTest'
p14484
sg16
(lp14485
sg19
(lp14486
sg22
(lp14487
sg25
I0
sba(iArchitecture
Entity
p14488
(dp14489
g11
(lp14490
sg14
S'com.google.common.util.concurrent.ServiceTest'
p14491
sg16
(lp14492
sg19
(lp14493
sg22
(lp14494
sg25
I0
sba(iArchitecture
Entity
p14495
(dp14496
g11
(lp14497
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiter'
p14498
sg16
(lp14499
sg19
(lp14500
sg22
(lp14501
sg25
I0
sba(iArchitecture
Entity
p14502
(dp14503
g11
(lp14504
sg14
S'com.google.common.util.concurrent.SuppressUnderAndroid'
p14505
sg16
(lp14506
sg19
(lp14507
sg22
(lp14508
sg25
I0
sba(iArchitecture
Entity
p14509
(dp14510
g11
(lp14511
sg14
S'com.google.common.util.concurrent.TestModuleEntryPoint'
p14512
sg16
(lp14513
sg19
(lp14514
sg22
(lp14515
sg25
I0
sba(iArchitecture
Entity
p14516
(dp14517
g11
(lp14518
sg14
S'com.google.common.util.concurrent.TestPlatform'
p14519
sg16
(lp14520
sg19
(lp14521
sg22
(lp14522
sg25
I0
sba(iArchitecture
Entity
p14523
(dp14524
g11
(lp14525
sg14
S'com.google.common.util.concurrent.TimeLimiter'
p14526
sg16
(lp14527
sg19
(lp14528
sg22
(lp14529
sg25
I0
sba(iArchitecture
Entity
p14530
(dp14531
g11
(lp14532
sg14
S'com.google.common.util.concurrent.TrustedInputFutureTest_gwt'
p14533
sg16
(lp14534
sg19
(lp14535
sg22
(lp14536
sg25
I0
sba(iArchitecture
Entity
p14537
(dp14538
g11
(lp14539
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTask'
p14540
sg16
(lp14541
sg19
(lp14542
sg22
(lp14543
sg25
I0
sba(iArchitecture
Entity
p14544
(dp14545
g11
(lp14546
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTaskTest'
p14547
sg16
(lp14548
sg19
(lp14549
sg22
(lp14550
sg25
I0
sba(iArchitecture
Entity
p14551
(dp14552
g11
(lp14553
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p14554
sg16
(lp14555
sg19
(lp14556
sg22
(lp14557
sg25
I0
sba(iArchitecture
Entity
p14558
(dp14559
g11
(lp14560
sg14
S'com.google.common.util.concurrent.UntrustedInputFutureTest_gwt'
p14561
sg16
(lp14562
sg19
(lp14563
sg22
(lp14564
sg25
I0
sba(iArchitecture
Entity
p14565
(dp14566
g11
(lp14567
sg14
S'com.google.common.util.concurrent.package-info'
p14568
sg16
(lp14569
sg19
(lp14570
sg22
(lp14571
sg25
I0
sba(iArchitecture
Entity
p14572
(dp14573
g11
(lp14574
sg14
S'com.google.common.util.concurrent.testing.MockFutureListener'
p14575
sg16
(lp14576
sg19
(lp14577
sg22
(lp14578
sg25
I0
sba(iArchitecture
Entity
p14579
(dp14580
g11
(lp14581
sg14
S'com.google.common.util.concurrent.testing.TestingExecutors'
p14582
sg16
(lp14583
sg19
(lp14584
sg22
(lp14585
sg25
I0
sba(iArchitecture
Entity
p14586
(dp14587
g11
(lp14588
sg14
S'com.google.common.xml.TestModuleEntryPoint'
p14589
sg16
(lp14590
sg19
(lp14591
sg22
(lp14592
sg25
I0
sba(iArchitecture
Entity
p14593
(dp14594
g11
(lp14595
sg14
S'com.google.common.xml.XmlEscapersTest_gwt'
p14596
sg16
(lp14597
sg19
(lp14598
sg22
(lp14599
sg25
I0
sba(iArchitecture
Entity
p14600
(dp14601
g11
(lp14602
sg14
S'com.google.common.xml.package-info'
p14603
sg16
(lp14604
sg19
(lp14605
sg22
(lp14606
sg25
I0
sba(iArchitecture
Entity
p14607
(dp14608
g11
(lp14609
sg14
S'java.util.concurrent.Callable'
p14610
sg16
(lp14611
sg19
(lp14612
sg22
(lp14613
sg25
I0
sba(iArchitecture
Entity
p14614
(dp14615
g11
(lp14616
sg14
S'java.util.concurrent.ConcurrentMap'
p14617
sg16
(lp14618
sg19
(lp14619
sg22
(lp14620
sg25
I0
sba(iArchitecture
Entity
p14621
(dp14622
g11
(lp14623
sg14
S'java.util.concurrent.Executor'
p14624
sg16
(lp14625
sg19
(lp14626
sg22
(lp14627
sg25
I0
sba(iArchitecture
Entity
p14628
(dp14629
g11
(lp14630
sg14
S'java.util.concurrent.RunnableFuture'
p14631
sg16
(lp14632
sg19
(lp14633
sg22
(lp14634
sg25
I0
sba(iArchitecture
Entity
p14635
(dp14636
g11
(lp14637
sg14
S'java.util.concurrent.ScheduledFuture'
p14638
sg16
(lp14639
sg19
(lp14640
sg22
(lp14641
sg25
I0
sbasg1017
(lp14642
g12095
ag12102
ag12109
ag12116
ag12123
ag12130
ag12137
ag12144
ag12151
ag12158
ag12165
ag12172
ag12181
ag12190
ag12197
ag12204
ag12211
ag12221
ag12228
ag12235
ag12242
ag12249
ag12256
ag12263
ag12270
ag12277
ag12284
ag12291
ag12298
ag12305
ag12312
ag12319
ag12326
ag12333
ag12340
ag12347
ag12354
ag12361
ag12368
ag12375
ag12382
ag12389
ag12396
ag12403
ag12410
ag12417
ag12424
ag12431
ag12438
ag12445
ag12452
ag12459
ag12466
ag12473
ag12480
ag12487
ag12494
ag12501
ag12508
ag12515
ag12522
ag12529
ag12536
ag12543
ag12550
ag12557
ag12564
ag12571
ag12578
ag12585
ag12592
ag12599
ag12606
ag12613
ag12620
ag12627
ag12634
ag12641
ag12648
ag12655
ag12662
ag12669
ag12676
ag12683
ag12690
ag12697
ag12704
ag12711
ag12718
ag12725
ag12732
ag12739
ag12746
ag12753
ag12760
ag12767
ag12774
ag12781
ag12788
ag12795
ag12802
ag12809
ag12816
ag12823
ag12830
ag12837
ag12844
ag12851
ag12858
ag12865
ag12872
ag12879
ag12886
ag12893
ag12900
ag12907
ag12915
ag12925
ag12932
ag12939
ag12946
ag12954
ag12962
ag12969
ag12976
ag12983
ag12990
ag12997
ag13004
ag13011
ag13018
ag13025
ag13032
ag13039
ag13046
ag13053
ag13060
ag13067
ag13074
ag13081
ag13088
ag13095
ag13102
ag13109
ag13116
ag13123
ag13130
ag13137
ag13144
ag13151
ag13158
ag13165
ag13172
ag13179
ag13186
ag13193
ag13200
ag13207
ag13214
ag13221
ag13228
ag13235
ag13242
ag13249
ag13256
ag13263
ag13270
ag13277
ag13284
ag13291
ag13298
ag13305
ag13312
ag13319
ag13326
ag13333
ag13340
ag13347
ag13354
ag13361
ag13368
ag13375
ag13383
ag13393
ag13400
ag13407
ag13414
ag13421
ag13428
ag13435
ag13442
ag13449
ag13456
ag13463
ag13470
ag13477
ag13484
ag13491
ag13498
ag13505
ag13512
ag13519
ag13526
ag13533
ag13540
ag13547
ag13554
ag13561
ag13568
ag13575
ag13582
ag13589
ag13596
ag13603
ag13610
ag13617
ag13624
ag13631
ag13638
ag13645
ag13652
ag13659
ag13667
ag13677
ag13684
ag13691
ag13698
ag13705
ag13712
ag13719
ag13726
ag13733
ag13740
ag13747
ag13754
ag13761
ag13768
ag13775
ag13782
ag13789
ag13796
ag13803
ag13810
ag13817
ag13824
ag13831
ag13838
ag13845
ag13852
ag13859
ag13866
ag13873
ag13880
ag13887
ag13894
ag13901
ag13908
ag13915
ag13922
ag13929
ag13936
ag13943
ag13951
ag13958
ag13965
ag13972
ag13979
ag13986
ag13993
ag14000
ag14007
ag14014
ag14021
ag14028
ag14035
ag14042
ag14049
ag14056
ag14063
ag14070
ag14077
ag14084
ag14091
ag14098
ag14105
ag14113
ag14123
ag14130
ag14137
ag14144
ag14151
ag14158
ag14165
ag14172
ag14179
ag14186
ag14193
ag14200
ag14207
ag14214
ag14221
ag14228
ag14235
ag14242
ag14249
ag14256
ag14263
ag14270
ag14277
ag14286
ag14293
ag14300
ag14307
ag14314
ag14323
ag14330
ag14337
ag14344
ag14351
ag14358
ag14365
ag14372
ag14379
ag14386
ag14393
ag14400
ag14407
ag14414
ag14421
ag14428
ag14435
ag14442
ag14449
ag14456
ag14463
ag14470
ag14477
ag14484
ag14491
ag14498
ag14505
ag14512
ag14519
ag14526
ag14533
ag14540
ag14547
ag14554
ag14561
ag14568
ag14575
ag14582
ag14589
ag14596
ag14603
ag14610
ag14617
ag14624
ag14631
ag14638
asg25
I0
sg1019
S'sql'
p14643
sbasg3518
g3519
sg1017
(lp14644
sg3521
I00
sg1019
S'v19.0'
p14645
sba(iArchitecture
Architecture
p14646
(dp14647
g3
(lp14648
(iArchitecture
Cluster
p14649
(dp14650
g7
(lp14651
(iArchitecture
Entity
p14652
(dp14653
g11
(lp14654
sg14
S'com.google.common.base.CharMatcher'
p14655
sg16
(lp14656
sg19
(lp14657
sg22
(lp14658
sg25
I0
sba(iArchitecture
Entity
p14659
(dp14660
g11
(lp14661
sg14
S'com.google.common.base.Equivalence'
p14662
sg16
(lp14663
sg19
(lp14664
sg22
(lp14665
sg25
I0
sba(iArchitecture
Entity
p14666
(dp14667
g11
(lp14668
sg14
S'com.google.common.base.Functions'
p14669
sg16
(lp14670
sg19
(lp14671
sg22
(lp14672
sg25
I0
sba(iArchitecture
Entity
p14673
(dp14674
g11
(lp14675
sg14
S'com.google.common.base.JdkPattern'
p14676
sg16
(lp14677
sg19
(lp14678
sg22
(lp14679
sg25
I0
sba(iArchitecture
Entity
p14680
(dp14681
g11
(lp14682
sg14
S'com.google.common.base.PairwiseEquivalence'
p14683
sg16
(lp14684
sg19
(lp14685
sg22
(lp14686
sg25
I0
sba(iArchitecture
Entity
p14687
(dp14688
g11
(lp14689
sg14
S'com.google.common.base.Preconditions'
p14690
sg16
(lp14691
sg19
(lp14692
sg22
(lp14693
sg25
I0
sba(iArchitecture
Entity
p14694
(dp14695
g11
(lp14696
sg14
S'com.google.common.base.Predicates'
p14697
sg16
(lp14698
sg19
(lp14699
sg22
(lp14700
sg25
I0
sba(iArchitecture
Entity
p14701
(dp14702
g11
(lp14703
sg14
S'com.google.common.base.SmallCharMatcher'
p14704
sg16
(lp14705
sg19
(lp14706
sg22
(lp14707
sg25
I0
sba(iArchitecture
Entity
p14708
(dp14709
g11
(lp14710
sg14
S'com.google.common.base.Splitter'
p14711
sg16
(lp14712
sg19
(lp14713
sg22
(lp14714
sg25
I0
sba(iArchitecture
Entity
p14715
(dp14716
g11
(lp14717
sg14
S'com.google.common.base.Strings'
p14718
sg16
(lp14719
sg19
(lp14720
sg22
(lp14721
sg25
I0
sba(iArchitecture
Entity
p14722
(dp14723
g11
(lp14724
sg14
S'com.google.common.cache.CacheBuilderSpec'
p14725
sg16
(lp14726
sg19
(lp14727
sg22
(lp14728
sg25
I0
sba(iArchitecture
Entity
p14729
(dp14730
g11
(lp14731
sg14
S'com.google.common.cache.LocalCache'
p14732
sg16
(lp14733
sg19
(lp14734
sg22
(lp14735
sg25
I0
sba(iArchitecture
Entity
p14736
(dp14737
g11
(lp14738
sg14
S'com.google.common.cache.LongAdder'
p14739
sg16
(lp14740
sg19
(lp14741
sg22
(lp14742
sg25
I0
sba(iArchitecture
Entity
p14743
(dp14744
g11
(lp14745
sg14
S'com.google.common.collect.AbstractIndexedListIterator'
p14746
sg16
(lp14747
sg19
(lp14748
sg22
(lp14749
sg25
I0
sba(iArchitecture
Entity
p14750
(dp14751
g11
(lp14752
sg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p14753
sg16
(lp14754
sg19
(lp14755
sg22
(lp14756
sg25
I0
sba(iArchitecture
Entity
p14757
(dp14758
g11
(lp14759
sg14
S'com.google.common.collect.AbstractMapBasedMultiset'
p14760
sg16
(lp14761
sg19
(lp14762
sg22
(lp14763
sg25
I0
sba(iArchitecture
Entity
p14764
(dp14765
g11
(lp14766
sg14
S'com.google.common.collect.AbstractMultimap'
p14767
sg16
(lp14768
sg19
(lp14769
sg22
(lp14770
sg25
I0
sba(iArchitecture
Entity
p14771
(dp14772
g11
(lp14773
sg14
S'com.google.common.collect.AbstractMultiset'
p14774
sg16
(lp14775
sg19
(lp14776
sg22
(lp14777
sg25
I0
sba(iArchitecture
Entity
p14778
(dp14779
g11
(lp14780
sg14
S'com.google.common.collect.AbstractNavigableMap'
p14781
sg16
(lp14782
sg19
(lp14783
sg22
(lp14784
sg25
I0
sba(iArchitecture
Entity
p14785
(dp14786
g11
(lp14787
sg14
S'com.google.common.collect.AbstractRangeSet'
p14788
sg16
(lp14789
sg19
(lp14790
sg22
(lp14791
sg25
I0
sba(iArchitecture
Entity
p14792
(dp14793
g11
(lp14794
sg14
S'com.google.common.collect.AbstractTable'
p14795
sg16
(lp14796
sg19
(lp14797
sg22
(lp14798
sg25
I0
sba(iArchitecture
Entity
p14799
(dp14800
g11
(lp14801
sg14
S'com.google.common.collect.CartesianList'
p14802
sg16
(lp14803
sg19
(lp14804
sg22
(lp14805
sg25
I0
sba(iArchitecture
Entity
p14806
(dp14807
g11
(lp14808
sg14
S'com.google.common.collect.Collections2'
p14809
sg16
(lp14810
sg19
(lp14811
sg22
(lp14812
sg25
I0
sba(iArchitecture
Entity
p14813
(dp14814
g11
(lp14815
sg14
S'com.google.common.collect.ComparisonChain'
p14816
sg16
(lp14817
sg19
(lp14818
sg22
(lp14819
sg25
I0
sba(iArchitecture
Entity
p14820
(dp14821
g11
(lp14822
sg14
S'com.google.common.collect.CompoundOrdering'
p14823
sg16
(lp14824
sg19
(lp14825
sg22
(lp14826
sg25
I0
sba(iArchitecture
Entity
p14827
(dp14828
g11
(lp14829
sg14
S'com.google.common.collect.ConcurrentHashMultiset'
p14830
sg16
(lp14831
sg19
(lp14832
sg22
(lp14833
sg25
I0
sba(iArchitecture
Entity
p14834
(dp14835
g11
(lp14836
sg14
S'com.google.common.collect.ContiguousSet'
p14837
sg16
(lp14838
sg19
(lp14839
sg22
(lp14840
sg25
I0
sba(iArchitecture
Entity
p14841
(dp14842
g11
(lp14843
sg14
S'com.google.common.collect.Count'
p14844
sg16
(lp14845
sg19
(lp14846
sg22
(lp14847
sg25
I0
sba(iArchitecture
Entity
p14848
(dp14849
g11
(lp14850
sg14
S'com.google.common.collect.DenseImmutableTable'
p14851
sg16
(lp14852
sg19
(lp14853
sg22
(lp14854
sg25
I0
sba(iArchitecture
Entity
p14855
(dp14856
g11
(lp14857
sg14
S'com.google.common.collect.DescendingImmutableSortedMultiset'
p14858
sg16
(lp14859
sg19
(lp14860
sg22
(lp14861
sg25
I0
sba(iArchitecture
Entity
p14862
(dp14863
g11
(lp14864
sg14
S'com.google.common.collect.DescendingImmutableSortedSet'
p14865
sg16
(lp14866
sg19
(lp14867
sg22
(lp14868
sg25
I0
sba(iArchitecture
Entity
p14869
(dp14870
g11
(lp14871
sg14
S'com.google.common.collect.DescendingMultiset'
p14872
sg16
(lp14873
sg19
(lp14874
sg22
(lp14875
sg25
I0
sba(iArchitecture
Entity
p14876
(dp14877
g11
(lp14878
sg14
S'com.google.common.collect.EmptyContiguousSet'
p14879
sg16
(lp14880
sg19
(lp14881
sg22
(lp14882
sg25
I0
sba(iArchitecture
Entity
p14883
(dp14884
g11
(lp14885
sg14
S'com.google.common.collect.EvictingQueue'
p14886
sg16
(lp14887
sg19
(lp14888
sg22
(lp14889
sg25
I0
sba(iArchitecture
Entity
p14890
(dp14891
g11
(lp14892
sg14
S'com.google.common.collect.ExplicitOrdering'
p14893
sg16
(lp14894
sg19
(lp14895
sg22
(lp14896
sg25
I0
sba(iArchitecture
Entity
p14897
(dp14898
g11
(lp14899
sg14
S'com.google.common.collect.FilteredEntryMultimap'
p14900
sg16
(lp14901
sg19
(lp14902
sg22
(lp14903
sg25
I0
sba(iArchitecture
Entity
p14904
(dp14905
g11
(lp14906
sg14
S'com.google.common.collect.ForwardingMultimap'
p14907
sg16
(lp14908
sg19
(lp14909
sg22
(lp14910
sg25
I0
sba(iArchitecture
Entity
p14911
(dp14912
g11
(lp14913
sg14
S'com.google.common.collect.ForwardingTable'
p14914
sg16
(lp14915
sg19
(lp14916
sg22
(lp14917
sg25
I0
sba(iArchitecture
Entity
p14918
(dp14919
g11
(lp14920
sg14
S'com.google.common.collect.GeneralRange'
p14921
sg16
(lp14922
sg19
(lp14923
sg22
(lp14924
sg25
I0
sba(iArchitecture
Entity
p14925
(dp14926
g11
(lp14927
sg14
S'com.google.common.collect.HashBiMap'
p14928
sg16
(lp14929
sg19
(lp14930
sg22
(lp14931
sg25
I0
sba(iArchitecture
Entity
p14932
(dp14933
g11
(lp14934
sg14
S'com.google.common.collect.Hashing'
p14935
sg16
(lp14936
sg19
(lp14937
sg22
(lp14938
sg25
I0
sba(iArchitecture
Entity
p14939
(dp14940
g11
(lp14941
sg14
S'com.google.common.collect.ImmutableList'
p14942
sg16
(lp14943
sg19
(lp14944
sg22
(lp14945
sg25
I0
sba(iArchitecture
Entity
p14946
(dp14947
g11
(lp14948
sg14
S'com.google.common.collect.ImmutableMap'
p14949
sg16
(lp14950
sg19
(lp14951
sg22
(lp14952
sg25
I0
sba(iArchitecture
Entity
p14953
(dp14954
g11
(lp14955
sg14
S'com.google.common.collect.ImmutableMultiset'
p14956
sg16
(lp14957
sg19
(lp14958
sg22
(lp14959
sg25
I0
sba(iArchitecture
Entity
p14960
(dp14961
g11
(lp14962
sg14
S'com.google.common.collect.ImmutableRangeMap'
p14963
sg16
(lp14964
sg19
(lp14965
sg22
(lp14966
sg25
I0
sba(iArchitecture
Entity
p14967
(dp14968
g11
(lp14969
sg14
S'com.google.common.collect.ImmutableRangeSet'
p14970
sg16
(lp14971
sg19
(lp14972
sg22
(lp14973
sg25
I0
sba(iArchitecture
Entity
p14974
(dp14975
g11
(lp14976
sg14
S'com.google.common.collect.ImmutableSet'
p14977
sg16
(lp14978
sg19
(lp14979
sg22
(lp14980
sg25
I0
sba(iArchitecture
Entity
p14981
(dp14982
g11
(lp14983
sg14
S'com.google.common.collect.ImmutableSortedMultiset'
p14984
sg16
(lp14985
sg19
(lp14986
sg22
(lp14987
sg25
I0
sba(iArchitecture
Entity
p14988
(dp14989
g11
(lp14990
sg14
S'com.google.common.collect.ImmutableSortedSet'
p14991
sg16
(lp14992
sg19
(lp14993
sg22
(lp14994
sg25
I0
sba(iArchitecture
Entity
p14995
(dp14996
g11
(lp14997
sg14
S'com.google.common.collect.Iterables'
p14998
sg16
(lp14999
sg19
(lp15000
sg22
(lp15001
sg25
I0
sba(iArchitecture
Entity
p15002
(dp15003
g11
(lp15004
sg14
S'com.google.common.collect.Iterators'
p15005
sg16
(lp15006
sg19
(lp15007
sg22
(lp15008
sg25
I0
sba(iArchitecture
Entity
p15009
(dp15010
g11
(lp15011
sg14
S'com.google.common.collect.LexicographicalOrdering'
p15012
sg16
(lp15013
sg19
(lp15014
sg22
(lp15015
sg25
I0
sba(iArchitecture
Entity
p15016
(dp15017
g11
(lp15018
sg14
S'com.google.common.collect.LinkedListMultimap'
p15019
sg16
(lp15020
sg19
(lp15021
sg22
(lp15022
sg25
I0
sba(iArchitecture
Entity
p15023
(dp15024
g11
(lp15025
sg14
S'com.google.common.collect.Lists'
p15026
sg16
(lp15027
sg19
(lp15028
sg22
(lp15029
sg25
I0
sba(iArchitecture
Entity
p15030
(dp15031
g11
(lp15032
sg14
S'com.google.common.collect.MapMakerInternalMap'
p15033
sg16
(lp15034
sg19
(lp15035
sg22
(lp15036
sg25
I0
sba(iArchitecture
Entity
p15037
(dp15038
g11
(lp15039
V2658
p15040
ag15040
ag15040
asg14
S'com.google.common.collect.MinMaxPriorityQueue'
p15041
sg16
(lp15042
VA MinMaxPriorityQueue fails at removing the correct object after a series of operations. See output and code below.\u000a\u000a> [5.6, 6.0, 5.7, 5.9]\u000aTry to remove 5.7 :\u000a[5.6, 6.0, 5.7]\u000a\u000aObtained from :\u000a\u000a> MinMaxPriorityQueue<Double> values = MinMaxPriorityQueue.create();\u000a			values.add(6.2);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.1);\u000a			values.pollLast();\u000a			values.add(5.7);\u000a			values.pollFirst();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.0);\u000a			values.remove(6.2);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.add(5.7);\u000a			values.pollLast();\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.remove(6.3);\u000a			values.add(5.8);\u000a			values.remove(5.8);\u000a			values.add(6.4);\u000a			values.remove(6.0);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(6.3);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.pollLast();\u000a			values.add(5.4);\u000a			values.remove(5.4);\u000a			values.add(5.7);\u000a			values.remove(6.1);\u000a			values.add(5.6);\u000a			values.add(5.4);\u000a			values.pollLast();\u000a			values.remove(5.5);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.6);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.remove(5.8);\u000a			values.add(5.6);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(5.7);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.remove(5.7);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.9);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.remove(6.1);\u000a			values.add(6.0);\u000a			values.add(6.0);\u000a			values.pollLast();\u000a			values.remove(6.0);\u000a			values.add(5.9);\u000a			values.remove(6.0);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			System.out.println(values);\u000a			System.out.println("Try to remove 5.7 :");\u000a			values.remove(5.7);\u000a			System.out.println(values);
p15043
aVA MinMaxPriorityQueue fails at removing the correct object after a series of operations. See output and code below.\u000a\u000a> [5.6, 6.0, 5.7, 5.9]\u000aTry to remove 5.7 :\u000a[5.6, 6.0, 5.7]\u000a\u000aObtained from :\u000a\u000a> MinMaxPriorityQueue<Double> values = MinMaxPriorityQueue.create();\u000a			values.add(6.2);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.1);\u000a			values.pollLast();\u000a			values.add(5.7);\u000a			values.pollFirst();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.0);\u000a			values.remove(6.2);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.add(5.7);\u000a			values.pollLast();\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.remove(6.3);\u000a			values.add(5.8);\u000a			values.remove(5.8);\u000a			values.add(6.4);\u000a			values.remove(6.0);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(6.3);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.pollLast();\u000a			values.add(5.4);\u000a			values.remove(5.4);\u000a			values.add(5.7);\u000a			values.remove(6.1);\u000a			values.add(5.6);\u000a			values.add(5.4);\u000a			values.pollLast();\u000a			values.remove(5.5);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.6);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.remove(5.8);\u000a			values.add(5.6);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(5.7);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.remove(5.7);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.9);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.remove(6.1);\u000a			values.add(6.0);\u000a			values.add(6.0);\u000a			values.pollLast();\u000a			values.remove(6.0);\u000a			values.add(5.9);\u000a			values.remove(6.0);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			System.out.println(values);\u000a			System.out.println("Try to remove 5.7 :");\u000a			values.remove(5.7);\u000a			System.out.println(values);
p15044
aVA MinMaxPriorityQueue fails at removing the correct object after a series of operations. See output and code below.\u000a\u000a> [5.6, 6.0, 5.7, 5.9]\u000aTry to remove 5.7 :\u000a[5.6, 6.0, 5.7]\u000a\u000aObtained from :\u000a\u000a> MinMaxPriorityQueue<Double> values = MinMaxPriorityQueue.create();\u000a			values.add(6.2);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.1);\u000a			values.pollLast();\u000a			values.add(5.7);\u000a			values.pollFirst();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.0);\u000a			values.remove(6.2);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.add(5.7);\u000a			values.pollLast();\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.remove(6.3);\u000a			values.add(5.8);\u000a			values.remove(5.8);\u000a			values.add(6.4);\u000a			values.remove(6.0);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(6.3);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.pollLast();\u000a			values.add(5.4);\u000a			values.remove(5.4);\u000a			values.add(5.7);\u000a			values.remove(6.1);\u000a			values.add(5.6);\u000a			values.add(5.4);\u000a			values.pollLast();\u000a			values.remove(5.5);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.6);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.remove(5.8);\u000a			values.add(5.6);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(5.7);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.remove(5.7);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.9);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.remove(6.1);\u000a			values.add(6.0);\u000a			values.add(6.0);\u000a			values.pollLast();\u000a			values.remove(6.0);\u000a			values.add(5.9);\u000a			values.remove(6.0);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			System.out.println(values);\u000a			System.out.println("Try to remove 5.7 :");\u000a			values.remove(5.7);\u000a			System.out.println(values);
p15045
asg19
(lp15046
(lp15047
I1
aag15047
ag15047
asg22
(lp15048
Vremove() in MinMaxPriorityQueue<Double> not removing the correct object
p15049
ag15049
ag15049
asg25
I0
sba(iArchitecture
Entity
p15050
(dp15051
g11
(lp15052
sg14
S'com.google.common.collect.Multisets'
p15053
sg16
(lp15054
sg19
(lp15055
sg22
(lp15056
sg25
I0
sba(iArchitecture
Entity
p15057
(dp15058
g11
(lp15059
sg14
S'com.google.common.collect.MultitransformedIterator'
p15060
sg16
(lp15061
sg19
(lp15062
sg22
(lp15063
sg25
I0
sba(iArchitecture
Entity
p15064
(dp15065
g11
(lp15066
sg14
S'com.google.common.collect.NullsFirstOrdering'
p15067
sg16
(lp15068
sg19
(lp15069
sg22
(lp15070
sg25
I0
sba(iArchitecture
Entity
p15071
(dp15072
g11
(lp15073
sg14
S'com.google.common.collect.NullsLastOrdering'
p15074
sg16
(lp15075
sg19
(lp15076
sg22
(lp15077
sg25
I0
sba(iArchitecture
Entity
p15078
(dp15079
g11
(lp15080
sg14
S'com.google.common.collect.ObjectArrays'
p15081
sg16
(lp15082
sg19
(lp15083
sg22
(lp15084
sg25
I0
sba(iArchitecture
Entity
p15085
(dp15086
g11
(lp15087
sg14
S'com.google.common.collect.Range'
p15088
sg16
(lp15089
sg19
(lp15090
sg22
(lp15091
sg25
I0
sba(iArchitecture
Entity
p15092
(dp15093
g11
(lp15094
sg14
S'com.google.common.collect.RegularContiguousSet'
p15095
sg16
(lp15096
sg19
(lp15097
sg22
(lp15098
sg25
I0
sba(iArchitecture
Entity
p15099
(dp15100
g11
(lp15101
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p15102
sg16
(lp15103
sg19
(lp15104
sg22
(lp15105
sg25
I0
sba(iArchitecture
Entity
p15106
(dp15107
g11
(lp15108
sg14
S'com.google.common.collect.RegularImmutableList'
p15109
sg16
(lp15110
sg19
(lp15111
sg22
(lp15112
sg25
I0
sba(iArchitecture
Entity
p15113
(dp15114
g11
(lp15115
sg14
S'com.google.common.collect.RegularImmutableMultiset'
p15116
sg16
(lp15117
sg19
(lp15118
sg22
(lp15119
sg25
I0
sba(iArchitecture
Entity
p15120
(dp15121
g11
(lp15122
sg14
S'com.google.common.collect.RegularImmutableSet'
p15123
sg16
(lp15124
sg19
(lp15125
sg22
(lp15126
sg25
I0
sba(iArchitecture
Entity
p15127
(dp15128
g11
(lp15129
sg14
S'com.google.common.collect.RegularImmutableSortedMultiset'
p15130
sg16
(lp15131
sg19
(lp15132
sg22
(lp15133
sg25
I0
sba(iArchitecture
Entity
p15134
(dp15135
g11
(lp15136
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p15137
sg16
(lp15138
sg19
(lp15139
sg22
(lp15140
sg25
I0
sba(iArchitecture
Entity
p15141
(dp15142
g11
(lp15143
sg14
S'com.google.common.collect.RegularImmutableTable'
p15144
sg16
(lp15145
sg19
(lp15146
sg22
(lp15147
sg25
I0
sba(iArchitecture
Entity
p15148
(dp15149
g11
(lp15150
sg14
S'com.google.common.collect.ReverseOrdering'
p15151
sg16
(lp15152
sg19
(lp15153
sg22
(lp15154
sg25
I0
sba(iArchitecture
Entity
p15155
(dp15156
g11
(lp15157
sg14
S'com.google.common.collect.Sets'
p15158
sg16
(lp15159
sg19
(lp15160
sg22
(lp15161
sg25
I0
sba(iArchitecture
Entity
p15162
(dp15163
g11
(lp15164
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p15165
sg16
(lp15166
sg19
(lp15167
sg22
(lp15168
sg25
I0
sba(iArchitecture
Entity
p15169
(dp15170
g11
(lp15171
sg14
S'com.google.common.collect.SingletonImmutableList'
p15172
sg16
(lp15173
sg19
(lp15174
sg22
(lp15175
sg25
I0
sba(iArchitecture
Entity
p15176
(dp15177
g11
(lp15178
sg14
S'com.google.common.collect.SingletonImmutableSet'
p15179
sg16
(lp15180
sg19
(lp15181
sg22
(lp15182
sg25
I0
sba(iArchitecture
Entity
p15183
(dp15184
g11
(lp15185
sg14
S'com.google.common.collect.StandardTable'
p15186
sg16
(lp15187
sg19
(lp15188
sg22
(lp15189
sg25
I0
sba(iArchitecture
Entity
p15190
(dp15191
g11
(lp15192
sg14
S'com.google.common.collect.Synchronized'
p15193
sg16
(lp15194
sg19
(lp15195
sg22
(lp15196
sg25
I0
sba(iArchitecture
Entity
p15197
(dp15198
g11
(lp15199
sg14
S'com.google.common.collect.TopKSelector'
p15200
sg16
(lp15201
sg19
(lp15202
sg22
(lp15203
sg25
I0
sba(iArchitecture
Entity
p15204
(dp15205
g11
(lp15206
sg14
S'com.google.common.collect.TransformedListIterator'
p15207
sg16
(lp15208
sg19
(lp15209
sg22
(lp15210
sg25
I0
sba(iArchitecture
Entity
p15211
(dp15212
g11
(lp15213
sg14
S'com.google.common.collect.TreeMultiset'
p15214
sg16
(lp15215
sg19
(lp15216
sg22
(lp15217
sg25
I0
sba(iArchitecture
Entity
p15218
(dp15219
g11
(lp15220
sg14
S'com.google.common.collect.TreeRangeMap'
p15221
sg16
(lp15222
sg19
(lp15223
sg22
(lp15224
sg25
I0
sba(iArchitecture
Entity
p15225
(dp15226
g11
(lp15227
sg14
S'com.google.common.collect.TreeRangeSet'
p15228
sg16
(lp15229
sg19
(lp15230
sg22
(lp15231
sg25
I0
sba(iArchitecture
Entity
p15232
(dp15233
g11
(lp15234
sg14
S'com.google.common.escape.CharEscaper'
p15235
sg16
(lp15236
sg19
(lp15237
sg22
(lp15238
sg25
I0
sba(iArchitecture
Entity
p15239
(dp15240
g11
(lp15241
sg14
S'com.google.common.escape.CharEscaperBuilder'
p15242
sg16
(lp15243
sg19
(lp15244
sg22
(lp15245
sg25
I0
sba(iArchitecture
Entity
p15246
(dp15247
g11
(lp15248
sg14
S'com.google.common.escape.UnicodeEscaper'
p15249
sg16
(lp15250
sg19
(lp15251
sg22
(lp15252
sg25
I0
sba(iArchitecture
Entity
p15253
(dp15254
g11
(lp15255
sg14
S'com.google.common.eventbus.Subscriber'
p15256
sg16
(lp15257
sg19
(lp15258
sg22
(lp15259
sg25
I0
sba(iArchitecture
Entity
p15260
(dp15261
g11
(lp15262
sg14
S'com.google.common.graph.AbstractDirectedNetworkConnections'
p15263
sg16
(lp15264
sg19
(lp15265
sg22
(lp15266
sg25
I0
sba(iArchitecture
Entity
p15267
(dp15268
g11
(lp15269
sg14
S'com.google.common.graph.AbstractGraph'
p15270
sg16
(lp15271
sg19
(lp15272
sg22
(lp15273
sg25
I0
sba(iArchitecture
Entity
p15274
(dp15275
g11
(lp15276
sg14
S'com.google.common.graph.AbstractNetwork'
p15277
sg16
(lp15278
sg19
(lp15279
sg22
(lp15280
sg25
I0
sba(iArchitecture
Entity
p15281
(dp15282
g11
(lp15283
sg14
S'com.google.common.graph.AbstractUndirectedNetworkConnections'
p15284
sg16
(lp15285
sg19
(lp15286
sg22
(lp15287
sg25
I0
sba(iArchitecture
Entity
p15288
(dp15289
g11
(lp15290
sg14
S'com.google.common.graph.DirectedGraphConnections'
p15291
sg16
(lp15292
sg19
(lp15293
sg22
(lp15294
sg25
I0
sba(iArchitecture
Entity
p15295
(dp15296
g11
(lp15297
sg14
S'com.google.common.graph.EndpointPair'
p15298
sg16
(lp15299
sg19
(lp15300
sg22
(lp15301
sg25
I0
sba(iArchitecture
Entity
p15302
(dp15303
g11
(lp15304
sg14
S'com.google.common.graph.ForwardingGraph'
p15305
sg16
(lp15306
sg19
(lp15307
sg22
(lp15308
sg25
I0
sba(iArchitecture
Entity
p15309
(dp15310
g11
(lp15311
sg14
S'com.google.common.hash.AbstractCompositeHashFunction'
p15312
sg16
(lp15313
sg19
(lp15314
sg22
(lp15315
sg25
I0
sba(iArchitecture
Entity
p15316
(dp15317
g11
(lp15318
sg14
S'com.google.common.hash.BloomFilterStrategies'
p15319
sg16
(lp15320
sg19
(lp15321
sg22
(lp15322
sg25
I0
sba(iArchitecture
Entity
p15323
(dp15324
g11
(lp15325
sg14
S'com.google.common.hash.ChecksumHashFunction'
p15326
sg16
(lp15327
sg19
(lp15328
sg22
(lp15329
sg25
I0
sba(iArchitecture
Entity
p15330
(dp15331
g11
(lp15332
sg14
S'com.google.common.hash.Crc32cHashFunction'
p15333
sg16
(lp15334
sg19
(lp15335
sg22
(lp15336
sg25
I0
sba(iArchitecture
Entity
p15337
(dp15338
g11
(lp15339
sg14
S'com.google.common.hash.FarmHashFingerprint64'
p15340
sg16
(lp15341
sg19
(lp15342
sg22
(lp15343
sg25
I0
sba(iArchitecture
Entity
p15344
(dp15345
g11
(lp15346
sg14
S'com.google.common.hash.HashCode'
p15347
sg16
(lp15348
sg19
(lp15349
sg22
(lp15350
sg25
I0
sba(iArchitecture
Entity
p15351
(dp15352
g11
(lp15353
sg14
S'com.google.common.hash.LittleEndianByteArray'
p15354
sg16
(lp15355
sg19
(lp15356
sg22
(lp15357
sg25
I0
sba(iArchitecture
Entity
p15358
(dp15359
g11
(lp15360
sg14
S'com.google.common.hash.MacHashFunction'
p15361
sg16
(lp15362
sg19
(lp15363
sg22
(lp15364
sg25
I0
sba(iArchitecture
Entity
p15365
(dp15366
g11
(lp15367
sg14
S'com.google.common.hash.Murmur3_128HashFunction'
p15368
sg16
(lp15369
sg19
(lp15370
sg22
(lp15371
sg25
I0
sba(iArchitecture
Entity
p15372
(dp15373
g11
(lp15374
sg14
S'com.google.common.hash.Murmur3_32HashFunction'
p15375
sg16
(lp15376
sg19
(lp15377
sg22
(lp15378
sg25
I0
sba(iArchitecture
Entity
p15379
(dp15380
g11
(lp15381
sg14
S'com.google.common.hash.SipHashFunction'
p15382
sg16
(lp15383
sg19
(lp15384
sg22
(lp15385
sg25
I0
sba(iArchitecture
Entity
p15386
(dp15387
g11
(lp15388
sg14
S'com.google.common.io.BaseEncoding'
p15389
sg16
(lp15390
sg19
(lp15391
sg22
(lp15392
sg25
I0
sba(iArchitecture
Entity
p15393
(dp15394
g11
(lp15395
sg14
S'com.google.common.io.ByteArrayDataOutput'
p15396
sg16
(lp15397
sg19
(lp15398
sg22
(lp15399
sg25
I0
sba(iArchitecture
Entity
p15400
(dp15401
g11
(lp15402
sg14
S'com.google.common.io.CharSequenceReader'
p15403
sg16
(lp15404
sg19
(lp15405
sg22
(lp15406
sg25
I0
sba(iArchitecture
Entity
p15407
(dp15408
g11
(lp15409
sg14
S'com.google.common.io.MultiReader'
p15410
sg16
(lp15411
sg19
(lp15412
sg22
(lp15413
sg25
I0
sba(iArchitecture
Entity
p15414
(dp15415
g11
(lp15416
sg14
S'com.google.common.math.BigIntegerMath'
p15417
sg16
(lp15418
sg19
(lp15419
sg22
(lp15420
sg25
I0
sba(iArchitecture
Entity
p15421
(dp15422
g11
(lp15423
sg14
S'com.google.common.math.IntMath'
p15424
sg16
(lp15425
sg19
(lp15426
sg22
(lp15427
sg25
I0
sba(iArchitecture
Entity
p15428
(dp15429
g11
(lp15430
sg14
S'com.google.common.math.LinearTransformation'
p15431
sg16
(lp15432
sg19
(lp15433
sg22
(lp15434
sg25
I0
sba(iArchitecture
Entity
p15435
(dp15436
g11
(lp15437
sg14
S'com.google.common.math.LongMath'
p15438
sg16
(lp15439
sg19
(lp15440
sg22
(lp15441
sg25
I0
sba(iArchitecture
Entity
p15442
(dp15443
g11
(lp15444
sg14
S'com.google.common.math.Quantiles'
p15445
sg16
(lp15446
sg19
(lp15447
sg22
(lp15448
sg25
I0
sba(iArchitecture
Entity
p15449
(dp15450
g11
(lp15451
sg14
S'com.google.common.net.PercentEscaper'
p15452
sg16
(lp15453
sg19
(lp15454
sg22
(lp15455
sg25
I0
sba(iArchitecture
Entity
p15456
(dp15457
g11
(lp15458
sg14
S'com.google.common.primitives.Booleans'
p15459
sg16
(lp15460
sg19
(lp15461
sg22
(lp15462
sg25
I0
sba(iArchitecture
Entity
p15463
(dp15464
g11
(lp15465
sg14
S'com.google.common.primitives.Bytes'
p15466
sg16
(lp15467
sg19
(lp15468
sg22
(lp15469
sg25
I0
sba(iArchitecture
Entity
p15470
(dp15471
g11
(lp15472
sg14
S'com.google.common.primitives.Chars'
p15473
sg16
(lp15474
sg19
(lp15475
sg22
(lp15476
sg25
I0
sba(iArchitecture
Entity
p15477
(dp15478
g11
(lp15479
sg14
S'com.google.common.primitives.Doubles'
p15480
sg16
(lp15481
sg19
(lp15482
sg22
(lp15483
sg25
I0
sba(iArchitecture
Entity
p15484
(dp15485
g11
(lp15486
sg14
S'com.google.common.primitives.Floats'
p15487
sg16
(lp15488
sg19
(lp15489
sg22
(lp15490
sg25
I0
sba(iArchitecture
Entity
p15491
(dp15492
g11
(lp15493
sg14
S'com.google.common.primitives.Ints'
p15494
sg16
(lp15495
sg19
(lp15496
sg22
(lp15497
sg25
I0
sba(iArchitecture
Entity
p15498
(dp15499
g11
(lp15500
sg14
S'com.google.common.primitives.Longs'
p15501
sg16
(lp15502
sg19
(lp15503
sg22
(lp15504
sg25
I0
sba(iArchitecture
Entity
p15505
(dp15506
g11
(lp15507
sg14
S'com.google.common.primitives.Shorts'
p15508
sg16
(lp15509
sg19
(lp15510
sg22
(lp15511
sg25
I0
sba(iArchitecture
Entity
p15512
(dp15513
g11
(lp15514
sg14
S'com.google.common.primitives.SignedBytes'
p15515
sg16
(lp15516
sg19
(lp15517
sg22
(lp15518
sg25
I0
sba(iArchitecture
Entity
p15519
(dp15520
g11
(lp15521
sg14
S'com.google.common.primitives.UnsignedBytes'
p15522
sg16
(lp15523
sg19
(lp15524
sg22
(lp15525
sg25
I0
sba(iArchitecture
Entity
p15526
(dp15527
g11
(lp15528
sg14
S'com.google.common.primitives.UnsignedInteger'
p15529
sg16
(lp15530
sg19
(lp15531
sg22
(lp15532
sg25
I0
sba(iArchitecture
Entity
p15533
(dp15534
g11
(lp15535
sg14
S'com.google.common.primitives.UnsignedInts'
p15536
sg16
(lp15537
sg19
(lp15538
sg22
(lp15539
sg25
I0
sba(iArchitecture
Entity
p15540
(dp15541
g11
(lp15542
sg14
S'com.google.common.primitives.UnsignedLong'
p15543
sg16
(lp15544
sg19
(lp15545
sg22
(lp15546
sg25
I0
sba(iArchitecture
Entity
p15547
(dp15548
g11
(lp15549
sg14
S'com.google.common.primitives.UnsignedLongs'
p15550
sg16
(lp15551
sg19
(lp15552
sg22
(lp15553
sg25
I0
sba(iArchitecture
Entity
p15554
(dp15555
g11
(lp15556
sg14
S'com.google.common.reflect.Element'
p15557
sg16
(lp15558
sg19
(lp15559
sg22
(lp15560
sg25
I0
sba(iArchitecture
Entity
p15561
(dp15562
g11
(lp15563
sg14
S'com.google.common.reflect.Invokable'
p15564
sg16
(lp15565
sg19
(lp15566
sg22
(lp15567
sg25
I0
sba(iArchitecture
Entity
p15568
(dp15569
g11
(lp15570
sg14
S'com.google.common.reflect.Parameter'
p15571
sg16
(lp15572
sg19
(lp15573
sg22
(lp15574
sg25
I0
sba(iArchitecture
Entity
p15575
(dp15576
g11
(lp15577
sg14
S'com.google.common.util.concurrent.AbstractIdleService'
p15578
sg16
(lp15579
sg19
(lp15580
sg22
(lp15581
sg25
I0
sba(iArchitecture
Entity
p15582
(dp15583
g11
(lp15584
sg14
S'com.google.common.util.concurrent.AtomicDouble'
p15585
sg16
(lp15586
sg19
(lp15587
sg22
(lp15588
sg25
I0
sba(iArchitecture
Entity
p15589
(dp15590
g11
(lp15591
sg14
S'com.google.common.util.concurrent.AtomicDoubleArray'
p15592
sg16
(lp15593
sg19
(lp15594
sg22
(lp15595
sg25
I0
sba(iArchitecture
Entity
p15596
(dp15597
g11
(lp15598
sg14
S'com.google.common.util.concurrent.CombinedFuture'
p15599
sg16
(lp15600
sg19
(lp15601
sg22
(lp15602
sg25
I0
sba(iArchitecture
Entity
p15603
(dp15604
g11
(lp15605
sg14
S'com.google.common.util.concurrent.Monitor'
p15606
sg16
(lp15607
sg19
(lp15608
sg22
(lp15609
sg25
I0
sba(iArchitecture
Entity
p15610
(dp15611
g11
(lp15612
sg14
S'com.google.common.util.concurrent.Striped'
p15613
sg16
(lp15614
sg19
(lp15615
sg22
(lp15616
sg25
I0
sbasg1017
(lp15617
g14655
ag14662
ag14669
ag14676
ag14683
ag14690
ag14697
ag14704
ag14711
ag14718
ag14725
ag14732
ag14739
ag14746
ag14753
ag14760
ag14767
ag14774
ag14781
ag14788
ag14795
ag14802
ag14809
ag14816
ag14823
ag14830
ag14837
ag14844
ag14851
ag14858
ag14865
ag14872
ag14879
ag14886
ag14893
ag14900
ag14907
ag14914
ag14921
ag14928
ag14935
ag14942
ag14949
ag14956
ag14963
ag14970
ag14977
ag14984
ag14991
ag14998
ag15005
ag15012
ag15019
ag15026
ag15033
ag15041
ag15053
ag15060
ag15067
ag15074
ag15081
ag15088
ag15095
ag15102
ag15109
ag15116
ag15123
ag15130
ag15137
ag15144
ag15151
ag15158
ag15165
ag15172
ag15179
ag15186
ag15193
ag15200
ag15207
ag15214
ag15221
ag15228
ag15235
ag15242
ag15249
ag15256
ag15263
ag15270
ag15277
ag15284
ag15291
ag15298
ag15305
ag15312
ag15319
ag15326
ag15333
ag15340
ag15347
ag15354
ag15361
ag15368
ag15375
ag15382
ag15389
ag15396
ag15403
ag15410
ag15417
ag15424
ag15431
ag15438
ag15445
ag15452
ag15459
ag15466
ag15473
ag15480
ag15487
ag15494
ag15501
ag15508
ag15515
ag15522
ag15529
ag15536
ag15543
ag15550
ag15557
ag15564
ag15571
ag15578
ag15585
ag15592
ag15599
ag15606
ag15613
asg25
I0
sg1019
S'graphics'
p15618
sba(iArchitecture
Cluster
p15619
(dp15620
g7
(lp15621
(iArchitecture
Entity
p15622
(dp15623
g11
(lp15624
sg14
S'com.google.common.base.Ascii'
p15625
sg16
(lp15626
sg19
(lp15627
sg22
(lp15628
sg25
I0
sba(iArchitecture
Entity
p15629
(dp15630
g11
(lp15631
sg14
S'com.google.common.base.CaseFormat'
p15632
sg16
(lp15633
sg19
(lp15634
sg22
(lp15635
sg25
I0
sba(iArchitecture
Entity
p15636
(dp15637
g11
(lp15638
sg14
S'com.google.common.base.Charsets'
p15639
sg16
(lp15640
sg19
(lp15641
sg22
(lp15642
sg25
I0
sba(iArchitecture
Entity
p15643
(dp15644
g11
(lp15645
sg14
S'com.google.common.base.FunctionalEquivalence'
p15646
sg16
(lp15647
sg19
(lp15648
sg22
(lp15649
sg25
I0
sba(iArchitecture
Entity
p15650
(dp15651
g11
(lp15652
sg14
S'com.google.common.base.MoreObjects'
p15653
sg16
(lp15654
sg19
(lp15655
sg22
(lp15656
sg25
I0
sba(iArchitecture
Entity
p15657
(dp15658
g11
(lp15659
sg14
S'com.google.common.base.Objects'
p15660
sg16
(lp15661
sg19
(lp15662
sg22
(lp15663
sg25
I0
sba(iArchitecture
Entity
p15664
(dp15665
g11
(lp15666
sg14
S'com.google.common.base.Utf8'
p15667
sg16
(lp15668
sg19
(lp15669
sg22
(lp15670
sg25
I0
sba(iArchitecture
Entity
p15671
(dp15672
g11
(lp15673
sg14
S'com.google.common.collect.AllEqualOrdering'
p15674
sg16
(lp15675
sg19
(lp15676
sg22
(lp15677
sg25
I0
sba(iArchitecture
Entity
p15678
(dp15679
g11
(lp15680
sg14
S'com.google.common.collect.ByFunctionOrdering'
p15681
sg16
(lp15682
sg19
(lp15683
sg22
(lp15684
sg25
I0
sba(iArchitecture
Entity
p15685
(dp15686
g11
(lp15687
sg14
S'com.google.common.collect.ComparatorOrdering'
p15688
sg16
(lp15689
sg19
(lp15690
sg22
(lp15691
sg25
I0
sba(iArchitecture
Entity
p15692
(dp15693
g11
(lp15694
sg14
S'com.google.common.collect.FluentIterable'
p15695
sg16
(lp15696
sg19
(lp15697
sg22
(lp15698
sg25
I0
sba(iArchitecture
Entity
p15699
(dp15700
g11
(lp15701
sg14
S'com.google.common.collect.HashMultimap'
p15702
sg16
(lp15703
sg19
(lp15704
sg22
(lp15705
sg25
I0
sba(iArchitecture
Entity
p15706
(dp15707
g11
(lp15708
sg14
S'com.google.common.collect.HashMultiset'
p15709
sg16
(lp15710
sg19
(lp15711
sg22
(lp15712
sg25
I0
sba(iArchitecture
Entity
p15713
(dp15714
g11
(lp15715
sg14
S'com.google.common.collect.ImmutableAsList'
p15716
sg16
(lp15717
sg19
(lp15718
sg22
(lp15719
sg25
I0
sba(iArchitecture
Entity
p15720
(dp15721
g11
(lp15722
sg14
S'com.google.common.collect.ImmutableEntry'
p15723
sg16
(lp15724
sg19
(lp15725
sg22
(lp15726
sg25
I0
sba(iArchitecture
Entity
p15727
(dp15728
g11
(lp15729
sg14
S'com.google.common.collect.ImmutableListMultimap'
p15730
sg16
(lp15731
sg19
(lp15732
sg22
(lp15733
sg25
I0
sba(iArchitecture
Entity
p15734
(dp15735
g11
(lp15736
sg14
S'com.google.common.collect.LinkedHashMultiset'
p15737
sg16
(lp15738
sg19
(lp15739
sg22
(lp15740
sg25
I0
sba(iArchitecture
Entity
p15741
(dp15742
g11
(lp15743
sg14
S'com.google.common.collect.NaturalOrdering'
p15744
sg16
(lp15745
sg19
(lp15746
sg22
(lp15747
sg25
I0
sba(iArchitecture
Entity
p15748
(dp15749
g11
(lp15750
sg14
S'com.google.common.collect.ReverseNaturalOrdering'
p15751
sg16
(lp15752
sg19
(lp15753
sg22
(lp15754
sg25
I0
sba(iArchitecture
Entity
p15755
(dp15756
g11
(lp15757
sg14
S'com.google.common.collect.Serialization'
p15758
sg16
(lp15759
sg19
(lp15760
sg22
(lp15761
sg25
I0
sba(iArchitecture
Entity
p15762
(dp15763
g11
(lp15764
sg14
S'com.google.common.collect.TransformedIterator'
p15765
sg16
(lp15766
sg19
(lp15767
sg22
(lp15768
sg25
I0
sba(iArchitecture
Entity
p15769
(dp15770
g11
(lp15771
sg14
S'com.google.common.collect.UsingToStringOrdering'
p15772
sg16
(lp15773
sg19
(lp15774
sg22
(lp15775
sg25
I0
sba(iArchitecture
Entity
p15776
(dp15777
g11
(lp15778
sg14
S'com.google.common.escape.ArrayBasedCharEscaper'
p15779
sg16
(lp15780
sg19
(lp15781
sg22
(lp15782
sg25
I0
sba(iArchitecture
Entity
p15783
(dp15784
g11
(lp15785
sg14
S'com.google.common.escape.ArrayBasedEscaperMap'
p15786
sg16
(lp15787
sg19
(lp15788
sg22
(lp15789
sg25
I0
sba(iArchitecture
Entity
p15790
(dp15791
g11
(lp15792
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaper'
p15793
sg16
(lp15794
sg19
(lp15795
sg22
(lp15796
sg25
I0
sba(iArchitecture
Entity
p15797
(dp15798
g11
(lp15799
sg14
S'com.google.common.escape.Escaper'
p15800
sg16
(lp15801
sg19
(lp15802
sg22
(lp15803
sg25
I0
sba(iArchitecture
Entity
p15804
(dp15805
g11
(lp15806
sg14
S'com.google.common.escape.Escapers'
p15807
sg16
(lp15808
sg19
(lp15809
sg22
(lp15810
sg25
I0
sba(iArchitecture
Entity
p15811
(dp15812
g11
(lp15813
sg14
S'com.google.common.escape.Platform'
p15814
sg16
(lp15815
sg19
(lp15816
sg22
(lp15817
sg25
I0
sba(iArchitecture
Entity
p15818
(dp15819
g11
(lp15820
sg14
S'com.google.common.eventbus.DeadEvent'
p15821
sg16
(lp15822
sg19
(lp15823
sg22
(lp15824
sg25
I0
sba(iArchitecture
Entity
p15825
(dp15826
g11
(lp15827
sg14
S'com.google.common.graph.GraphConstants'
p15828
sg16
(lp15829
sg19
(lp15830
sg22
(lp15831
sg25
I0
sba(iArchitecture
Entity
p15832
(dp15833
g11
(lp15834
sg14
S'com.google.common.graph.ImmutableGraph'
p15835
sg16
(lp15836
sg19
(lp15837
sg22
(lp15838
sg25
I0
sba(iArchitecture
Entity
p15839
(dp15840
g11
(lp15841
sg14
S'com.google.common.graph.ImmutableValueGraph'
p15842
sg16
(lp15843
sg19
(lp15844
sg22
(lp15845
sg25
I0
sba(iArchitecture
Entity
p15846
(dp15847
g11
(lp15848
sg14
S'com.google.common.hash.AbstractByteHasher'
p15849
sg16
(lp15850
sg19
(lp15851
sg22
(lp15852
sg25
I0
sba(iArchitecture
Entity
p15853
(dp15854
g11
(lp15855
sg14
S'com.google.common.hash.AbstractHasher'
p15856
sg16
(lp15857
sg19
(lp15858
sg22
(lp15859
sg25
I0
sba(iArchitecture
Entity
p15860
(dp15861
g11
(lp15862
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunction'
p15863
sg16
(lp15864
sg19
(lp15865
sg22
(lp15866
sg25
I0
sba(iArchitecture
Entity
p15867
(dp15868
g11
(lp15869
sg14
S'com.google.common.hash.AbstractStreamingHashFunction'
p15870
sg16
(lp15871
sg19
(lp15872
sg22
(lp15873
sg25
I0
sba(iArchitecture
Entity
p15874
(dp15875
g11
(lp15876
sg14
S'com.google.common.hash.BloomFilter'
p15877
sg16
(lp15878
sg19
(lp15879
sg22
(lp15880
sg25
I0
sba(iArchitecture
Entity
p15881
(dp15882
g11
(lp15883
sg14
S'com.google.common.hash.Funnels'
p15884
sg16
(lp15885
sg19
(lp15886
sg22
(lp15887
sg25
I0
sba(iArchitecture
Entity
p15888
(dp15889
g11
(lp15890
sg14
S'com.google.common.hash.HashFunction'
p15891
sg16
(lp15892
sg19
(lp15893
sg22
(lp15894
sg25
I0
sba(iArchitecture
Entity
p15895
(dp15896
g11
(lp15897
sg14
S'com.google.common.hash.Hasher'
p15898
sg16
(lp15899
sg19
(lp15900
sg22
(lp15901
sg25
I0
sba(iArchitecture
Entity
p15902
(dp15903
g11
(lp15904
sg14
S'com.google.common.hash.HashingInputStream'
p15905
sg16
(lp15906
sg19
(lp15907
sg22
(lp15908
sg25
I0
sba(iArchitecture
Entity
p15909
(dp15910
g11
(lp15911
sg14
S'com.google.common.hash.HashingOutputStream'
p15912
sg16
(lp15913
sg19
(lp15914
sg22
(lp15915
sg25
I0
sba(iArchitecture
Entity
p15916
(dp15917
g11
(lp15918
sg14
S'com.google.common.hash.MessageDigestHashFunction'
p15919
sg16
(lp15920
sg19
(lp15921
sg22
(lp15922
sg25
I0
sba(iArchitecture
Entity
p15923
(dp15924
g11
(lp15925
sg14
S'com.google.common.hash.PrimitiveSink'
p15926
sg16
(lp15927
sg19
(lp15928
sg22
(lp15929
sg25
I0
sba(iArchitecture
Entity
p15930
(dp15931
g11
(lp15932
sg14
S'com.google.common.io.AppendableWriter'
p15933
sg16
(lp15934
sg19
(lp15935
sg22
(lp15936
sg25
I0
sba(iArchitecture
Entity
p15937
(dp15938
g11
(lp15939
sg14
S'com.google.common.io.ByteArrayDataInput'
p15940
sg16
(lp15941
sg19
(lp15942
sg22
(lp15943
sg25
I0
sba(iArchitecture
Entity
p15944
(dp15945
g11
(lp15946
sg14
S'com.google.common.io.ByteProcessor'
p15947
sg16
(lp15948
sg19
(lp15949
sg22
(lp15950
sg25
I0
sba(iArchitecture
Entity
p15951
(dp15952
g11
(lp15953
V2693
p15954
asg14
S'com.google.common.io.ByteSink'
p15955
sg16
(lp15956
VJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15957
asg19
(lp15958
(lp15959
I5
aasg22
(lp15960
VAdd Stream<String> lines() to CharSource
p15961
asg25
I0
sba(iArchitecture
Entity
p15962
(dp15963
g11
(lp15964
V2843
p15965
ag15965
ag15954
asg14
S'com.google.common.io.ByteSource'
p15966
sg16
(lp15967
VThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15968
aVThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15969
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15970
asg19
(lp15971
(lp15972
I0
aag15972
ag15959
asg22
(lp15973
VOptimize {Byte,Char}Source.isEmpty() for known-non-empty sources
p15974
ag15974
ag15961
asg25
I0
sba(iArchitecture
Entity
p15975
(dp15976
g11
(lp15977
sg14
S'com.google.common.io.ByteStreams'
p15978
sg16
(lp15979
sg19
(lp15980
sg22
(lp15981
sg25
I0
sba(iArchitecture
Entity
p15982
(dp15983
g11
(lp15984
g15954
asg14
S'com.google.common.io.CharSink'
p15985
sg16
(lp15986
VJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15987
asg19
(lp15988
g15959
asg22
(lp15989
g15961
asg25
I0
sba(iArchitecture
Entity
p15990
(dp15991
g11
(lp15992
g15965
ag15965
ag15954
ag15954
ag15954
asg14
S'com.google.common.io.CharSource'
p15993
sg16
(lp15994
VThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15995
aVThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15996
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15997
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15998
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15999
asg19
(lp16000
g15972
ag15972
ag15959
ag15959
ag15959
asg22
(lp16001
g15974
ag15974
ag15961
ag15961
ag15961
asg25
I0
sba(iArchitecture
Entity
p16002
(dp16003
g11
(lp16004
sg14
S'com.google.common.io.CharStreams'
p16005
sg16
(lp16006
sg19
(lp16007
sg22
(lp16008
sg25
I0
sba(iArchitecture
Entity
p16009
(dp16010
g11
(lp16011
sg14
S'com.google.common.io.Closeables'
p16012
sg16
(lp16013
sg19
(lp16014
sg22
(lp16015
sg25
I0
sba(iArchitecture
Entity
p16016
(dp16017
g11
(lp16018
sg14
S'com.google.common.io.CountingInputStream'
p16019
sg16
(lp16020
sg19
(lp16021
sg22
(lp16022
sg25
I0
sba(iArchitecture
Entity
p16023
(dp16024
g11
(lp16025
sg14
S'com.google.common.io.CountingOutputStream'
p16026
sg16
(lp16027
sg19
(lp16028
sg22
(lp16029
sg25
I0
sba(iArchitecture
Entity
p16030
(dp16031
g11
(lp16032
sg14
S'com.google.common.io.FileBackedOutputStream'
p16033
sg16
(lp16034
sg19
(lp16035
sg22
(lp16036
sg25
I0
sba(iArchitecture
Entity
p16037
(dp16038
g11
(lp16039
sg14
S'com.google.common.io.FileWriteMode'
p16040
sg16
(lp16041
sg19
(lp16042
sg22
(lp16043
sg25
I0
sba(iArchitecture
Entity
p16044
(dp16045
g11
(lp16046
sg14
S'com.google.common.io.Files'
p16047
sg16
(lp16048
sg19
(lp16049
sg22
(lp16050
sg25
I0
sba(iArchitecture
Entity
p16051
(dp16052
g11
(lp16053
sg14
S'com.google.common.io.Flushables'
p16054
sg16
(lp16055
sg19
(lp16056
sg22
(lp16057
sg25
I0
sba(iArchitecture
Entity
p16058
(dp16059
g11
(lp16060
sg14
S'com.google.common.io.LineBuffer'
p16061
sg16
(lp16062
sg19
(lp16063
sg22
(lp16064
sg25
I0
sba(iArchitecture
Entity
p16065
(dp16066
g11
(lp16067
sg14
S'com.google.common.io.LineProcessor'
p16068
sg16
(lp16069
sg19
(lp16070
sg22
(lp16071
sg25
I0
sba(iArchitecture
Entity
p16072
(dp16073
g11
(lp16074
sg14
S'com.google.common.io.LineReader'
p16075
sg16
(lp16076
sg19
(lp16077
sg22
(lp16078
sg25
I0
sba(iArchitecture
Entity
p16079
(dp16080
g11
(lp16081
sg14
S'com.google.common.io.LittleEndianDataInputStream'
p16082
sg16
(lp16083
sg19
(lp16084
sg22
(lp16085
sg25
I0
sba(iArchitecture
Entity
p16086
(dp16087
g11
(lp16088
sg14
S'com.google.common.io.LittleEndianDataOutputStream'
p16089
sg16
(lp16090
sg19
(lp16091
sg22
(lp16092
sg25
I0
sba(iArchitecture
Entity
p16093
(dp16094
g11
(lp16095
V2996
p16096
ag16096
ag16096
ag16096
asg14
S'com.google.common.io.MultiInputStream'
p16097
sg16
(lp16098
VUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16099
aVUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16100
aVUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16101
aVUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16102
asg19
(lp16103
(lp16104
I7
aag16104
ag16104
ag16104
asg22
(lp16105
VMultiInputStream produces stack overflow
p16106
ag16106
ag16106
ag16106
asg25
I0
sba(iArchitecture
Entity
p16107
(dp16108
g11
(lp16109
sg14
S'com.google.common.io.PatternFilenameFilter'
p16110
sg16
(lp16111
sg19
(lp16112
sg22
(lp16113
sg25
I0
sba(iArchitecture
Entity
p16114
(dp16115
g11
(lp16116
sg14
S'com.google.common.io.ReaderInputStream'
p16117
sg16
(lp16118
sg19
(lp16119
sg22
(lp16120
sg25
I0
sba(iArchitecture
Entity
p16121
(dp16122
g11
(lp16123
sg14
S'com.google.common.io.package-info'
p16124
sg16
(lp16125
sg19
(lp16126
sg22
(lp16127
sg25
I0
sba(iArchitecture
Entity
p16128
(dp16129
g11
(lp16130
sg14
S'com.google.common.math.PairedStats'
p16131
sg16
(lp16132
sg19
(lp16133
sg22
(lp16134
sg25
I0
sba(iArchitecture
Entity
p16135
(dp16136
g11
(lp16137
sg14
S'com.google.common.util.concurrent.AbstractCatchingFuture'
p16138
sg16
(lp16139
sg19
(lp16140
sg22
(lp16141
sg25
I0
sba(iArchitecture
Entity
p16142
(dp16143
g11
(lp16144
sg14
S'com.google.common.util.concurrent.AbstractTransformFuture'
p16145
sg16
(lp16146
sg19
(lp16147
sg22
(lp16148
sg25
I0
sba(iArchitecture
Entity
p16149
(dp16150
g11
(lp16151
sg14
S'com.google.common.util.concurrent.Futures'
p16152
sg16
(lp16153
sg19
(lp16154
sg22
(lp16155
sg25
I0
sba(iArchitecture
Entity
p16156
(dp16157
g11
(lp16158
sg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlers'
p16159
sg16
(lp16160
sg19
(lp16161
sg22
(lp16162
sg25
I0
sba(iArchitecture
Entity
p16163
(dp16164
g11
(lp16165
sg14
S'com.google.common.xml.XmlEscapers'
p16166
sg16
(lp16167
sg19
(lp16168
sg22
(lp16169
sg25
I0
sbasg1017
(lp16170
g15625
ag15632
ag15639
ag15646
ag15653
ag15660
ag15667
ag15674
ag15681
ag15688
ag15695
ag15702
ag15709
ag15716
ag15723
ag15730
ag15737
ag15744
ag15751
ag15758
ag15765
ag15772
ag15779
ag15786
ag15793
ag15800
ag15807
ag15814
ag15821
ag15828
ag15835
ag15842
ag15849
ag15856
ag15863
ag15870
ag15877
ag15884
ag15891
ag15898
ag15905
ag15912
ag15919
ag15926
ag15933
ag15940
ag15947
ag15955
ag15966
ag15978
ag15985
ag15993
ag16005
ag16012
ag16019
ag16026
ag16033
ag16040
ag16047
ag16054
ag16061
ag16068
ag16075
ag16082
ag16089
ag16097
ag16110
ag16117
ag16124
ag16131
ag16138
ag16145
ag16152
ag16159
ag16166
asg25
I0
sg1019
S'io'
p16171
sba(iArchitecture
Cluster
p16172
(dp16173
g7
(lp16174
(iArchitecture
Entity
p16175
(dp16176
g11
(lp16177
sg14
S'com.google.common.base.AbstractIterator'
p16178
sg16
(lp16179
sg19
(lp16180
sg22
(lp16181
sg25
I0
sba(iArchitecture
Entity
p16182
(dp16183
g11
(lp16184
sg14
S'com.google.common.base.CommonPattern'
p16185
sg16
(lp16186
sg19
(lp16187
sg22
(lp16188
sg25
I0
sba(iArchitecture
Entity
p16189
(dp16190
g11
(lp16191
sg14
S'com.google.common.base.Converter'
p16192
sg16
(lp16193
sg19
(lp16194
sg22
(lp16195
sg25
I0
sba(iArchitecture
Entity
p16196
(dp16197
g11
(lp16198
sg14
S'com.google.common.base.ExtraObjectsMethodsForWeb'
p16199
sg16
(lp16200
sg19
(lp16201
sg22
(lp16202
sg25
I0
sba(iArchitecture
Entity
p16203
(dp16204
g11
(lp16205
sg14
S'com.google.common.base.FinalizablePhantomReference'
p16206
sg16
(lp16207
sg19
(lp16208
sg22
(lp16209
sg25
I0
sba(iArchitecture
Entity
p16210
(dp16211
g11
(lp16212
sg14
S'com.google.common.base.FinalizableReferenceQueue'
p16213
sg16
(lp16214
sg19
(lp16215
sg22
(lp16216
sg25
I0
sba(iArchitecture
Entity
p16217
(dp16218
g11
(lp16219
sg14
S'com.google.common.base.FinalizableSoftReference'
p16220
sg16
(lp16221
sg19
(lp16222
sg22
(lp16223
sg25
I0
sba(iArchitecture
Entity
p16224
(dp16225
g11
(lp16226
sg14
S'com.google.common.base.FinalizableWeakReference'
p16227
sg16
(lp16228
sg19
(lp16229
sg22
(lp16230
sg25
I0
sba(iArchitecture
Entity
p16231
(dp16232
g11
(lp16233
sg14
S'com.google.common.base.Joiner'
p16234
sg16
(lp16235
sg19
(lp16236
sg22
(lp16237
sg25
I0
sba(iArchitecture
Entity
p16238
(dp16239
g11
(lp16240
sg14
S'com.google.common.base.PatternCompiler'
p16241
sg16
(lp16242
sg19
(lp16243
sg22
(lp16244
sg25
I0
sba(iArchitecture
Entity
p16245
(dp16246
g11
(lp16247
V2866
p16248
ag16248
ag16248
ag16248
ag16248
asg14
S'com.google.common.base.Throwables'
p16249
sg16
(lp16250
VException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16251
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16252
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16253
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16254
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16255
asg19
(lp16256
(lp16257
I0
aag16257
ag16257
ag16257
ag16257
asg22
(lp16258
VMake Throwables.getCausalChain and Throwables.getRootCause cyclic reference safe
p16259
ag16259
ag16259
ag16259
ag16259
asg25
I0
sba(iArchitecture
Entity
p16260
(dp16261
g11
(lp16262
sg14
S'com.google.common.base.Ticker'
p16263
sg16
(lp16264
sg19
(lp16265
sg22
(lp16266
sg25
I0
sba(iArchitecture
Entity
p16267
(dp16268
g11
(lp16269
sg14
S'com.google.common.base.Verify'
p16270
sg16
(lp16271
sg19
(lp16272
sg22
(lp16273
sg25
I0
sba(iArchitecture
Entity
p16274
(dp16275
g11
(lp16276
sg14
S'com.google.common.base.VerifyException'
p16277
sg16
(lp16278
sg19
(lp16279
sg22
(lp16280
sg25
I0
sba(iArchitecture
Entity
p16281
(dp16282
g11
(lp16283
sg14
S'com.google.common.base.package-info'
p16284
sg16
(lp16285
sg19
(lp16286
sg22
(lp16287
sg25
I0
sba(iArchitecture
Entity
p16288
(dp16289
g11
(lp16290
sg14
S'com.google.common.cache.AbstractCache'
p16291
sg16
(lp16292
sg19
(lp16293
sg22
(lp16294
sg25
I0
sba(iArchitecture
Entity
p16295
(dp16296
g11
(lp16297
sg14
S'com.google.common.cache.AbstractLoadingCache'
p16298
sg16
(lp16299
sg19
(lp16300
sg22
(lp16301
sg25
I0
sba(iArchitecture
Entity
p16302
(dp16303
g11
(lp16304
sg14
S'com.google.common.cache.CacheBuilder'
p16305
sg16
(lp16306
sg19
(lp16307
sg22
(lp16308
sg25
I0
sba(iArchitecture
Entity
p16309
(dp16310
g11
(lp16311
sg14
S'com.google.common.cache.CacheLoader'
p16312
sg16
(lp16313
sg19
(lp16314
sg22
(lp16315
sg25
I0
sba(iArchitecture
Entity
p16316
(dp16317
g11
(lp16318
sg14
S'com.google.common.cache.CacheStats'
p16319
sg16
(lp16320
sg19
(lp16321
sg22
(lp16322
sg25
I0
sba(iArchitecture
Entity
p16323
(dp16324
g11
(lp16325
sg14
S'com.google.common.cache.ForwardingCache'
p16326
sg16
(lp16327
sg19
(lp16328
sg22
(lp16329
sg25
I0
sba(iArchitecture
Entity
p16330
(dp16331
g11
(lp16332
sg14
S'com.google.common.cache.ForwardingLoadingCache'
p16333
sg16
(lp16334
sg19
(lp16335
sg22
(lp16336
sg25
I0
sba(iArchitecture
Entity
p16337
(dp16338
g11
(lp16339
sg14
S'com.google.common.cache.LoadingCache'
p16340
sg16
(lp16341
sg19
(lp16342
sg22
(lp16343
sg25
I0
sba(iArchitecture
Entity
p16344
(dp16345
g11
(lp16346
sg14
S'com.google.common.cache.LongAddables'
p16347
sg16
(lp16348
sg19
(lp16349
sg22
(lp16350
sg25
I0
sba(iArchitecture
Entity
p16351
(dp16352
g11
(lp16353
sg14
S'com.google.common.cache.RemovalCause'
p16354
sg16
(lp16355
sg19
(lp16356
sg22
(lp16357
sg25
I0
sba(iArchitecture
Entity
p16358
(dp16359
g11
(lp16360
sg14
S'com.google.common.cache.RemovalListeners'
p16361
sg16
(lp16362
sg19
(lp16363
sg22
(lp16364
sg25
I0
sba(iArchitecture
Entity
p16365
(dp16366
g11
(lp16367
sg14
S'com.google.common.cache.Striped64'
p16368
sg16
(lp16369
sg19
(lp16370
sg22
(lp16371
sg25
I0
sba(iArchitecture
Entity
p16372
(dp16373
g11
(lp16374
sg14
S'com.google.common.cache.Weigher'
p16375
sg16
(lp16376
sg19
(lp16377
sg22
(lp16378
sg25
I0
sba(iArchitecture
Entity
p16379
(dp16380
g11
(lp16381
sg14
S'com.google.common.cache.package-info'
p16382
sg16
(lp16383
sg19
(lp16384
sg22
(lp16385
sg25
I0
sba(iArchitecture
Entity
p16386
(dp16387
g11
(lp16388
sg14
S'com.google.common.collect.AbstractIterator'
p16389
sg16
(lp16390
sg19
(lp16391
sg22
(lp16392
sg25
I0
sba(iArchitecture
Entity
p16393
(dp16394
g11
(lp16395
sg14
S'com.google.common.collect.AbstractMapEntry'
p16396
sg16
(lp16397
sg19
(lp16398
sg22
(lp16399
sg25
I0
sba(iArchitecture
Entity
p16400
(dp16401
g11
(lp16402
sg14
S'com.google.common.collect.AbstractSortedMultiset'
p16403
sg16
(lp16404
sg19
(lp16405
sg22
(lp16406
sg25
I0
sba(iArchitecture
Entity
p16407
(dp16408
g11
(lp16409
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p16410
sg16
(lp16411
sg19
(lp16412
sg22
(lp16413
sg25
I0
sba(iArchitecture
Entity
p16414
(dp16415
g11
(lp16416
sg14
S'com.google.common.collect.CollectPreconditions'
p16417
sg16
(lp16418
sg19
(lp16419
sg22
(lp16420
sg25
I0
sba(iArchitecture
Entity
p16421
(dp16422
g11
(lp16423
sg14
S'com.google.common.collect.Constraint'
p16424
sg16
(lp16425
sg19
(lp16426
sg22
(lp16427
sg25
I0
sba(iArchitecture
Entity
p16428
(dp16429
g11
(lp16430
sg14
S'com.google.common.collect.Constraints'
p16431
sg16
(lp16432
sg19
(lp16433
sg22
(lp16434
sg25
I0
sba(iArchitecture
Entity
p16435
(dp16436
g11
(lp16437
sg14
S'com.google.common.collect.Cut'
p16438
sg16
(lp16439
sg19
(lp16440
sg22
(lp16441
sg25
I0
sba(iArchitecture
Entity
p16442
(dp16443
g11
(lp16444
sg14
S'com.google.common.collect.DiscreteDomain'
p16445
sg16
(lp16446
sg19
(lp16447
sg22
(lp16448
sg25
I0
sba(iArchitecture
Entity
p16449
(dp16450
g11
(lp16451
sg14
S'com.google.common.collect.FilteredKeyListMultimap'
p16452
sg16
(lp16453
sg19
(lp16454
sg22
(lp16455
sg25
I0
sba(iArchitecture
Entity
p16456
(dp16457
g11
(lp16458
sg14
S'com.google.common.collect.FilteredSetMultimap'
p16459
sg16
(lp16460
sg19
(lp16461
sg22
(lp16462
sg25
I0
sba(iArchitecture
Entity
p16463
(dp16464
g11
(lp16465
sg14
S'com.google.common.collect.ForwardingBlockingDeque'
p16466
sg16
(lp16467
sg19
(lp16468
sg22
(lp16469
sg25
I0
sba(iArchitecture
Entity
p16470
(dp16471
g11
(lp16472
sg14
S'com.google.common.collect.ForwardingCollection'
p16473
sg16
(lp16474
sg19
(lp16475
sg22
(lp16476
sg25
I0
sba(iArchitecture
Entity
p16477
(dp16478
g11
(lp16479
sg14
S'com.google.common.collect.ForwardingConcurrentMap'
p16480
sg16
(lp16481
sg19
(lp16482
sg22
(lp16483
sg25
I0
sba(iArchitecture
Entity
p16484
(dp16485
g11
(lp16486
sg14
S'com.google.common.collect.ForwardingDeque'
p16487
sg16
(lp16488
sg19
(lp16489
sg22
(lp16490
sg25
I0
sba(iArchitecture
Entity
p16491
(dp16492
g11
(lp16493
sg14
S'com.google.common.collect.ForwardingImmutableList'
p16494
sg16
(lp16495
sg19
(lp16496
sg22
(lp16497
sg25
I0
sba(iArchitecture
Entity
p16498
(dp16499
g11
(lp16500
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p16501
sg16
(lp16502
sg19
(lp16503
sg22
(lp16504
sg25
I0
sba(iArchitecture
Entity
p16505
(dp16506
g11
(lp16507
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p16508
sg16
(lp16509
sg19
(lp16510
sg22
(lp16511
sg25
I0
sba(iArchitecture
Entity
p16512
(dp16513
g11
(lp16514
sg14
S'com.google.common.collect.ForwardingIterator'
p16515
sg16
(lp16516
sg19
(lp16517
sg22
(lp16518
sg25
I0
sba(iArchitecture
Entity
p16519
(dp16520
g11
(lp16521
sg14
S'com.google.common.collect.ForwardingListIterator'
p16522
sg16
(lp16523
sg19
(lp16524
sg22
(lp16525
sg25
I0
sba(iArchitecture
Entity
p16526
(dp16527
g11
(lp16528
sg14
S'com.google.common.collect.ForwardingListMultimap'
p16529
sg16
(lp16530
sg19
(lp16531
sg22
(lp16532
sg25
I0
sba(iArchitecture
Entity
p16533
(dp16534
g11
(lp16535
sg14
S'com.google.common.collect.ForwardingMap'
p16536
sg16
(lp16537
sg19
(lp16538
sg22
(lp16539
sg25
I0
sba(iArchitecture
Entity
p16540
(dp16541
g11
(lp16542
sg14
S'com.google.common.collect.ForwardingMapEntry'
p16543
sg16
(lp16544
sg19
(lp16545
sg22
(lp16546
sg25
I0
sba(iArchitecture
Entity
p16547
(dp16548
g11
(lp16549
sg14
S'com.google.common.collect.ForwardingMultiset'
p16550
sg16
(lp16551
sg19
(lp16552
sg22
(lp16553
sg25
I0
sba(iArchitecture
Entity
p16554
(dp16555
g11
(lp16556
sg14
S'com.google.common.collect.ForwardingNavigableMap'
p16557
sg16
(lp16558
sg19
(lp16559
sg22
(lp16560
sg25
I0
sba(iArchitecture
Entity
p16561
(dp16562
g11
(lp16563
sg14
S'com.google.common.collect.ForwardingNavigableSet'
p16564
sg16
(lp16565
sg19
(lp16566
sg22
(lp16567
sg25
I0
sba(iArchitecture
Entity
p16568
(dp16569
g11
(lp16570
sg14
S'com.google.common.collect.ForwardingObject'
p16571
sg16
(lp16572
sg19
(lp16573
sg22
(lp16574
sg25
I0
sba(iArchitecture
Entity
p16575
(dp16576
g11
(lp16577
sg14
S'com.google.common.collect.ForwardingQueue'
p16578
sg16
(lp16579
sg19
(lp16580
sg22
(lp16581
sg25
I0
sba(iArchitecture
Entity
p16582
(dp16583
g11
(lp16584
sg14
S'com.google.common.collect.ForwardingSet'
p16585
sg16
(lp16586
sg19
(lp16587
sg22
(lp16588
sg25
I0
sba(iArchitecture
Entity
p16589
(dp16590
g11
(lp16591
sg14
S'com.google.common.collect.ForwardingSortedMap'
p16592
sg16
(lp16593
sg19
(lp16594
sg22
(lp16595
sg25
I0
sba(iArchitecture
Entity
p16596
(dp16597
g11
(lp16598
sg14
S'com.google.common.collect.ForwardingSortedMultiset'
p16599
sg16
(lp16600
sg19
(lp16601
sg22
(lp16602
sg25
I0
sba(iArchitecture
Entity
p16603
(dp16604
g11
(lp16605
sg14
S'com.google.common.collect.ForwardingSortedSet'
p16606
sg16
(lp16607
sg19
(lp16608
sg22
(lp16609
sg25
I0
sba(iArchitecture
Entity
p16610
(dp16611
g11
(lp16612
sg14
S'com.google.common.collect.GwtTransient'
p16613
sg16
(lp16614
sg19
(lp16615
sg22
(lp16616
sg25
I0
sba(iArchitecture
Entity
p16617
(dp16618
g11
(lp16619
sg14
S'com.google.common.collect.ImmutableCollection'
p16620
sg16
(lp16621
sg19
(lp16622
sg22
(lp16623
sg25
I0
sba(iArchitecture
Entity
p16624
(dp16625
g11
(lp16626
sg14
S'com.google.common.collect.ImmutableEnumMap'
p16627
sg16
(lp16628
sg19
(lp16629
sg22
(lp16630
sg25
I0
sba(iArchitecture
Entity
p16631
(dp16632
g11
(lp16633
sg14
S'com.google.common.collect.ImmutableEnumSet'
p16634
sg16
(lp16635
sg19
(lp16636
sg22
(lp16637
sg25
I0
sba(iArchitecture
Entity
p16638
(dp16639
g11
(lp16640
sg14
S'com.google.common.collect.ImmutableMapEntry'
p16641
sg16
(lp16642
sg19
(lp16643
sg22
(lp16644
sg25
I0
sba(iArchitecture
Entity
p16645
(dp16646
g11
(lp16647
sg14
S'com.google.common.collect.ImmutableMapEntrySet'
p16648
sg16
(lp16649
sg19
(lp16650
sg22
(lp16651
sg25
I0
sba(iArchitecture
Entity
p16652
(dp16653
g11
(lp16654
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p16655
sg16
(lp16656
sg19
(lp16657
sg22
(lp16658
sg25
I0
sba(iArchitecture
Entity
p16659
(dp16660
g11
(lp16661
sg14
S'com.google.common.collect.Interners'
p16662
sg16
(lp16663
sg19
(lp16664
sg22
(lp16665
sg25
I0
sba(iArchitecture
Entity
p16666
(dp16667
g11
(lp16668
sg14
S'com.google.common.collect.MapConstraint'
p16669
sg16
(lp16670
sg19
(lp16671
sg22
(lp16672
sg25
I0
sba(iArchitecture
Entity
p16673
(dp16674
g11
(lp16675
sg14
S'com.google.common.collect.MapMaker'
p16676
sg16
(lp16677
sg19
(lp16678
sg22
(lp16679
sg25
I0
sba(iArchitecture
Entity
p16680
(dp16681
g11
(lp16682
sg14
S'com.google.common.collect.MultimapBuilder'
p16683
sg16
(lp16684
sg19
(lp16685
sg22
(lp16686
sg25
I0
sba(iArchitecture
Entity
p16687
(dp16688
g11
(lp16689
sg14
S'com.google.common.collect.Multiset'
p16690
sg16
(lp16691
sg19
(lp16692
sg22
(lp16693
sg25
I0
sba(iArchitecture
Entity
p16694
(dp16695
g11
(lp16696
sg14
S'com.google.common.collect.PeekingIterator'
p16697
sg16
(lp16698
sg19
(lp16699
sg22
(lp16700
sg25
I0
sba(iArchitecture
Entity
p16701
(dp16702
g11
(lp16703
sg14
S'com.google.common.collect.RegularImmutableAsList'
p16704
sg16
(lp16705
sg19
(lp16706
sg22
(lp16707
sg25
I0
sba(iArchitecture
Entity
p16708
(dp16709
g11
(lp16710
sg14
S'com.google.common.collect.SingletonImmutableTable'
p16711
sg16
(lp16712
sg19
(lp16713
sg22
(lp16714
sg25
I0
sba(iArchitecture
Entity
p16715
(dp16716
g11
(lp16717
sg14
S'com.google.common.collect.SortedLists'
p16718
sg16
(lp16719
sg19
(lp16720
sg22
(lp16721
sg25
I0
sba(iArchitecture
Entity
p16722
(dp16723
g11
(lp16724
sg14
S'com.google.common.collect.SortedMultiset'
p16725
sg16
(lp16726
sg19
(lp16727
sg22
(lp16728
sg25
I0
sba(iArchitecture
Entity
p16729
(dp16730
g11
(lp16731
sg14
S'com.google.common.collect.StandardRowSortedTable'
p16732
sg16
(lp16733
sg19
(lp16734
sg22
(lp16735
sg25
I0
sba(iArchitecture
Entity
p16736
(dp16737
g11
(lp16738
sg14
S'com.google.common.collect.TreeTraverser'
p16739
sg16
(lp16740
sg19
(lp16741
sg22
(lp16742
sg25
I0
sba(iArchitecture
Entity
p16743
(dp16744
g11
(lp16745
sg14
S'com.google.common.collect.UnmodifiableIterator'
p16746
sg16
(lp16747
sg19
(lp16748
sg22
(lp16749
sg25
I0
sba(iArchitecture
Entity
p16750
(dp16751
g11
(lp16752
sg14
S'com.google.common.collect.UnmodifiableListIterator'
p16753
sg16
(lp16754
sg19
(lp16755
sg22
(lp16756
sg25
I0
sba(iArchitecture
Entity
p16757
(dp16758
g11
(lp16759
sg14
S'com.google.common.collect.UnmodifiableSortedMultiset'
p16760
sg16
(lp16761
sg19
(lp16762
sg22
(lp16763
sg25
I0
sba(iArchitecture
Entity
p16764
(dp16765
g11
(lp16766
sg14
S'com.google.common.collect.package-info'
p16767
sg16
(lp16768
sg19
(lp16769
sg22
(lp16770
sg25
I0
sba(iArchitecture
Entity
p16771
(dp16772
g11
(lp16773
sg14
S'com.google.common.escape.package-info'
p16774
sg16
(lp16775
sg19
(lp16776
sg22
(lp16777
sg25
I0
sba(iArchitecture
Entity
p16778
(dp16779
g11
(lp16780
sg14
S'com.google.common.eventbus.AsyncEventBus'
p16781
sg16
(lp16782
sg19
(lp16783
sg22
(lp16784
sg25
I0
sba(iArchitecture
Entity
p16785
(dp16786
g11
(lp16787
sg14
S'com.google.common.eventbus.EventBus'
p16788
sg16
(lp16789
sg19
(lp16790
sg22
(lp16791
sg25
I0
sba(iArchitecture
Entity
p16792
(dp16793
g11
(lp16794
sg14
S'com.google.common.graph.AbstractValueGraph'
p16795
sg16
(lp16796
sg19
(lp16797
sg22
(lp16798
sg25
I0
sba(iArchitecture
Entity
p16799
(dp16800
g11
(lp16801
sg14
S'com.google.common.graph.ConfigurableMutableGraph'
p16802
sg16
(lp16803
sg19
(lp16804
sg22
(lp16805
sg25
I0
sba(iArchitecture
Entity
p16806
(dp16807
g11
(lp16808
sg14
S'com.google.common.graph.ConfigurableMutableNetwork'
p16809
sg16
(lp16810
sg19
(lp16811
sg22
(lp16812
sg25
I0
sba(iArchitecture
Entity
p16813
(dp16814
g11
(lp16815
sg14
S'com.google.common.graph.ConfigurableMutableValueGraph'
p16816
sg16
(lp16817
sg19
(lp16818
sg22
(lp16819
sg25
I0
sba(iArchitecture
Entity
p16820
(dp16821
g11
(lp16822
sg14
S'com.google.common.graph.ConfigurableNetwork'
p16823
sg16
(lp16824
sg19
(lp16825
sg22
(lp16826
sg25
I0
sba(iArchitecture
Entity
p16827
(dp16828
g11
(lp16829
sg14
S'com.google.common.graph.EdgesConnecting'
p16830
sg16
(lp16831
sg19
(lp16832
sg22
(lp16833
sg25
I0
sba(iArchitecture
Entity
p16834
(dp16835
g11
(lp16836
sg14
S'com.google.common.graph.Graph'
p16837
sg16
(lp16838
sg19
(lp16839
sg22
(lp16840
sg25
I0
sba(iArchitecture
Entity
p16841
(dp16842
g11
(lp16843
sg14
S'com.google.common.graph.GraphBuilder'
p16844
sg16
(lp16845
sg19
(lp16846
sg22
(lp16847
sg25
I0
sba(iArchitecture
Entity
p16848
(dp16849
g11
(lp16850
sg14
S'com.google.common.graph.Graphs'
p16851
sg16
(lp16852
sg19
(lp16853
sg22
(lp16854
sg25
I0
sba(iArchitecture
Entity
p16855
(dp16856
g11
(lp16857
sg14
S'com.google.common.graph.ImmutableNetwork'
p16858
sg16
(lp16859
sg19
(lp16860
sg22
(lp16861
sg25
I0
sba(iArchitecture
Entity
p16862
(dp16863
g11
(lp16864
sg14
S'com.google.common.graph.MultiEdgesConnecting'
p16865
sg16
(lp16866
sg19
(lp16867
sg22
(lp16868
sg25
I0
sba(iArchitecture
Entity
p16869
(dp16870
g11
(lp16871
sg14
S'com.google.common.graph.MutableGraph'
p16872
sg16
(lp16873
sg19
(lp16874
sg22
(lp16875
sg25
I0
sba(iArchitecture
Entity
p16876
(dp16877
g11
(lp16878
sg14
S'com.google.common.graph.MutableNetwork'
p16879
sg16
(lp16880
sg19
(lp16881
sg22
(lp16882
sg25
I0
sba(iArchitecture
Entity
p16883
(dp16884
g11
(lp16885
sg14
S'com.google.common.graph.MutableValueGraph'
p16886
sg16
(lp16887
sg19
(lp16888
sg22
(lp16889
sg25
I0
sba(iArchitecture
Entity
p16890
(dp16891
g11
(lp16892
sg14
S'com.google.common.graph.Network'
p16893
sg16
(lp16894
sg19
(lp16895
sg22
(lp16896
sg25
I0
sba(iArchitecture
Entity
p16897
(dp16898
g11
(lp16899
sg14
S'com.google.common.graph.NetworkBuilder'
p16900
sg16
(lp16901
sg19
(lp16902
sg22
(lp16903
sg25
I0
sba(iArchitecture
Entity
p16904
(dp16905
g11
(lp16906
sg14
S'com.google.common.graph.ValueGraph'
p16907
sg16
(lp16908
sg19
(lp16909
sg22
(lp16910
sg25
I0
sba(iArchitecture
Entity
p16911
(dp16912
g11
(lp16913
sg14
S'com.google.common.graph.ValueGraphBuilder'
p16914
sg16
(lp16915
sg19
(lp16916
sg22
(lp16917
sg25
I0
sba(iArchitecture
Entity
p16918
(dp16919
g11
(lp16920
sg14
S'com.google.common.hash.Hashing'
p16921
sg16
(lp16922
sg19
(lp16923
sg22
(lp16924
sg25
I0
sba(iArchitecture
Entity
p16925
(dp16926
g11
(lp16927
sg14
S'com.google.common.html.HtmlEscapers'
p16928
sg16
(lp16929
sg19
(lp16930
sg22
(lp16931
sg25
I0
sba(iArchitecture
Entity
p16932
(dp16933
g11
(lp16934
sg14
S'com.google.common.io.Resources'
p16935
sg16
(lp16936
sg19
(lp16937
sg22
(lp16938
sg25
I0
sba(iArchitecture
Entity
p16939
(dp16940
g11
(lp16941
sg14
S'com.google.common.math.DoubleUtils'
p16942
sg16
(lp16943
sg19
(lp16944
sg22
(lp16945
sg25
I0
sba(iArchitecture
Entity
p16946
(dp16947
g11
(lp16948
sg14
S'com.google.common.math.MathPreconditions'
p16949
sg16
(lp16950
sg19
(lp16951
sg22
(lp16952
sg25
I0
sba(iArchitecture
Entity
p16953
(dp16954
g11
(lp16955
sg14
S'com.google.common.net.HostAndPort'
p16956
sg16
(lp16957
sg19
(lp16958
sg22
(lp16959
sg25
I0
sba(iArchitecture
Entity
p16960
(dp16961
g11
(lp16962
sg14
S'com.google.common.net.HostSpecifier'
p16963
sg16
(lp16964
sg19
(lp16965
sg22
(lp16966
sg25
I0
sba(iArchitecture
Entity
p16967
(dp16968
g11
(lp16969
sg14
S'com.google.common.net.HttpHeaders'
p16970
sg16
(lp16971
sg19
(lp16972
sg22
(lp16973
sg25
I0
sba(iArchitecture
Entity
p16974
(dp16975
g11
(lp16976
sg14
S'com.google.common.net.InetAddresses'
p16977
sg16
(lp16978
sg19
(lp16979
sg22
(lp16980
sg25
I0
sba(iArchitecture
Entity
p16981
(dp16982
g11
(lp16983
sg14
S'com.google.common.net.InternetDomainName'
p16984
sg16
(lp16985
sg19
(lp16986
sg22
(lp16987
sg25
I0
sba(iArchitecture
Entity
p16988
(dp16989
g11
(lp16990
sg14
S'com.google.common.net.UrlEscapers'
p16991
sg16
(lp16992
sg19
(lp16993
sg22
(lp16994
sg25
I0
sba(iArchitecture
Entity
p16995
(dp16996
g11
(lp16997
sg14
S'com.google.common.net.package-info'
p16998
sg16
(lp16999
sg19
(lp17000
sg22
(lp17001
sg25
I0
sba(iArchitecture
Entity
p17002
(dp17003
g11
(lp17004
sg14
S'com.google.common.primitives.ParseRequest'
p17005
sg16
(lp17006
sg19
(lp17007
sg22
(lp17008
sg25
I0
sba(iArchitecture
Entity
p17009
(dp17010
g11
(lp17011
sg14
S'com.google.common.primitives.package-info'
p17012
sg16
(lp17013
sg19
(lp17014
sg22
(lp17015
sg25
I0
sba(iArchitecture
Entity
p17016
(dp17017
g11
(lp17018
sg14
S'com.google.common.reflect.AbstractInvocationHandler'
p17019
sg16
(lp17020
sg19
(lp17021
sg22
(lp17022
sg25
I0
sba(iArchitecture
Entity
p17023
(dp17024
g11
(lp17025
sg14
S'com.google.common.reflect.ClassPath'
p17026
sg16
(lp17027
sg19
(lp17028
sg22
(lp17029
sg25
I0
sba(iArchitecture
Entity
p17030
(dp17031
g11
(lp17032
sg14
S'com.google.common.reflect.Reflection'
p17033
sg16
(lp17034
sg19
(lp17035
sg22
(lp17036
sg25
I0
sba(iArchitecture
Entity
p17037
(dp17038
g11
(lp17039
sg14
S'com.google.common.reflect.TypeCapture'
p17040
sg16
(lp17041
sg19
(lp17042
sg22
(lp17043
sg25
I0
sba(iArchitecture
Entity
p17044
(dp17045
g11
(lp17046
sg14
S'com.google.common.util.concurrent.AbstractCheckedFuture'
p17047
sg16
(lp17048
sg19
(lp17049
sg22
(lp17050
sg25
I0
sba(iArchitecture
Entity
p17051
(dp17052
g11
(lp17053
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadService'
p17054
sg16
(lp17055
sg19
(lp17056
sg22
(lp17057
sg25
I0
sba(iArchitecture
Entity
p17058
(dp17059
g11
(lp17060
sg14
S'com.google.common.util.concurrent.AbstractFuture'
p17061
sg16
(lp17062
sg19
(lp17063
sg22
(lp17064
sg25
I0
sba(iArchitecture
Entity
p17065
(dp17066
g11
(lp17067
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorService'
p17068
sg16
(lp17069
sg19
(lp17070
sg22
(lp17071
sg25
I0
sba(iArchitecture
Entity
p17072
(dp17073
g11
(lp17074
sg14
S'com.google.common.util.concurrent.AbstractScheduledService'
p17075
sg16
(lp17076
sg19
(lp17077
sg22
(lp17078
sg25
I0
sba(iArchitecture
Entity
p17079
(dp17080
g11
(lp17081
sg14
S'com.google.common.util.concurrent.AbstractService'
p17082
sg16
(lp17083
sg19
(lp17084
sg22
(lp17085
sg25
I0
sba(iArchitecture
Entity
p17086
(dp17087
g11
(lp17088
sg14
S'com.google.common.util.concurrent.AggregateFuture'
p17089
sg16
(lp17090
sg19
(lp17091
sg22
(lp17092
sg25
I0
sba(iArchitecture
Entity
p17093
(dp17094
g11
(lp17095
sg14
S'com.google.common.util.concurrent.AggregateFutureState'
p17096
sg16
(lp17097
sg19
(lp17098
sg22
(lp17099
sg25
I0
sba(iArchitecture
Entity
p17100
(dp17101
g11
(lp17102
sg14
S'com.google.common.util.concurrent.Callables'
p17103
sg16
(lp17104
sg19
(lp17105
sg22
(lp17106
sg25
I0
sba(iArchitecture
Entity
p17107
(dp17108
g11
(lp17109
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactory'
p17110
sg16
(lp17111
sg19
(lp17112
sg22
(lp17113
sg25
I0
sba(iArchitecture
Entity
p17114
(dp17115
g11
(lp17116
sg14
S'com.google.common.util.concurrent.ExecutionError'
p17117
sg16
(lp17118
sg19
(lp17119
sg22
(lp17120
sg25
I0
sba(iArchitecture
Entity
p17121
(dp17122
g11
(lp17123
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueue'
p17124
sg16
(lp17125
sg19
(lp17126
sg22
(lp17127
sg25
I0
sba(iArchitecture
Entity
p17128
(dp17129
g11
(lp17130
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFuture'
p17131
sg16
(lp17132
sg19
(lp17133
sg22
(lp17134
sg25
I0
sba(iArchitecture
Entity
p17135
(dp17136
g11
(lp17137
sg14
S'com.google.common.util.concurrent.ForwardingExecutorService'
p17138
sg16
(lp17139
sg19
(lp17140
sg22
(lp17141
sg25
I0
sba(iArchitecture
Entity
p17142
(dp17143
g11
(lp17144
sg14
S'com.google.common.util.concurrent.ForwardingFuture'
p17145
sg16
(lp17146
sg19
(lp17147
sg22
(lp17148
sg25
I0
sba(iArchitecture
Entity
p17149
(dp17150
g11
(lp17151
sg14
S'com.google.common.util.concurrent.ForwardingListenableFuture'
p17152
sg16
(lp17153
sg19
(lp17154
sg22
(lp17155
sg25
I0
sba(iArchitecture
Entity
p17156
(dp17157
g11
(lp17158
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorService'
p17159
sg16
(lp17160
sg19
(lp17161
sg22
(lp17162
sg25
I0
sba(iArchitecture
Entity
p17163
(dp17164
g11
(lp17165
sg14
S'com.google.common.util.concurrent.GwtFuturesCatchingSpecialization'
p17166
sg16
(lp17167
sg19
(lp17168
sg22
(lp17169
sg25
I0
sba(iArchitecture
Entity
p17170
(dp17171
g11
(lp17172
sg14
S'com.google.common.util.concurrent.InterruptibleTask'
p17173
sg16
(lp17174
sg19
(lp17175
sg22
(lp17176
sg25
I0
sba(iArchitecture
Entity
p17177
(dp17178
g11
(lp17179
sg14
S'com.google.common.util.concurrent.JdkFutureAdapters'
p17180
sg16
(lp17181
sg19
(lp17182
sg22
(lp17183
sg25
I0
sba(iArchitecture
Entity
p17184
(dp17185
g11
(lp17186
sg14
S'com.google.common.util.concurrent.ListenableFuture'
p17187
sg16
(lp17188
sg19
(lp17189
sg22
(lp17190
sg25
I0
sba(iArchitecture
Entity
p17191
(dp17192
g11
(lp17193
sg14
S'com.google.common.util.concurrent.ListenerCallQueue'
p17194
sg16
(lp17195
sg19
(lp17196
sg22
(lp17197
sg25
I0
sba(iArchitecture
Entity
p17198
(dp17199
g11
(lp17200
sg14
S'com.google.common.util.concurrent.ListeningExecutorService'
p17201
sg16
(lp17202
sg19
(lp17203
sg22
(lp17204
sg25
I0
sba(iArchitecture
Entity
p17205
(dp17206
g11
(lp17207
sg14
S'com.google.common.util.concurrent.MoreExecutors'
p17208
sg16
(lp17209
sg19
(lp17210
sg22
(lp17211
sg25
I0
sba(iArchitecture
Entity
p17212
(dp17213
g11
(lp17214
sg14
S'com.google.common.util.concurrent.RateLimiter'
p17215
sg16
(lp17216
sg19
(lp17217
sg22
(lp17218
sg25
I0
sba(iArchitecture
Entity
p17219
(dp17220
g11
(lp17221
sg14
S'com.google.common.util.concurrent.Runnables'
p17222
sg16
(lp17223
sg19
(lp17224
sg22
(lp17225
sg25
I0
sba(iArchitecture
Entity
p17226
(dp17227
g11
(lp17228
sg14
S'com.google.common.util.concurrent.SerializingExecutor'
p17229
sg16
(lp17230
sg19
(lp17231
sg22
(lp17232
sg25
I0
sba(iArchitecture
Entity
p17233
(dp17234
g11
(lp17235
sg14
S'com.google.common.util.concurrent.Service'
p17236
sg16
(lp17237
sg19
(lp17238
sg22
(lp17239
sg25
I0
sba(iArchitecture
Entity
p17240
(dp17241
g11
(lp17242
sg14
S'com.google.common.util.concurrent.ServiceManager'
p17243
sg16
(lp17244
sg19
(lp17245
sg22
(lp17246
sg25
I0
sba(iArchitecture
Entity
p17247
(dp17248
g11
(lp17249
sg14
S'com.google.common.util.concurrent.SmoothRateLimiter'
p17250
sg16
(lp17251
sg19
(lp17252
sg22
(lp17253
sg25
I0
sba(iArchitecture
Entity
p17254
(dp17255
g11
(lp17256
sg14
S'com.google.common.util.concurrent.ThreadFactoryBuilder'
p17257
sg16
(lp17258
sg19
(lp17259
sg22
(lp17260
sg25
I0
sba(iArchitecture
Entity
p17261
(dp17262
g11
(lp17263
sg14
S'com.google.common.util.concurrent.UncheckedExecutionException'
p17264
sg16
(lp17265
sg19
(lp17266
sg22
(lp17267
sg25
I0
sba(iArchitecture
Entity
p17268
(dp17269
g11
(lp17270
sg14
S'com.google.common.util.concurrent.UncheckedTimeoutException'
p17271
sg16
(lp17272
sg19
(lp17273
sg22
(lp17274
sg25
I0
sba(iArchitecture
Entity
p17275
(dp17276
g11
(lp17277
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p17278
sg16
(lp17279
sg19
(lp17280
sg22
(lp17281
sg25
I0
sba(iArchitecture
Entity
p17282
(dp17283
g11
(lp17284
sg14
S'com.google.common.util.concurrent.WrappingExecutorService'
p17285
sg16
(lp17286
sg19
(lp17287
sg22
(lp17288
sg25
I0
sba(iArchitecture
Entity
p17289
(dp17290
g11
(lp17291
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorService'
p17292
sg16
(lp17293
sg19
(lp17294
sg22
(lp17295
sg25
I0
sba(iArchitecture
Entity
p17296
(dp17297
g11
(lp17298
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixPatterns'
p17299
sg16
(lp17300
sg19
(lp17301
sg22
(lp17302
sg25
I0
sba(iArchitecture
Entity
p17303
(dp17304
g11
(lp17305
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixType'
p17306
sg16
(lp17307
sg19
(lp17308
sg22
(lp17309
sg25
I0
sba(iArchitecture
Entity
p17310
(dp17311
g11
(lp17312
sg14
S'com.google.thirdparty.publicsuffix.TrieParser'
p17313
sg16
(lp17314
sg19
(lp17315
sg22
(lp17316
sg25
I0
sbasg1017
(lp17317
g16178
ag16185
ag16192
ag16199
ag16206
ag16213
ag16220
ag16227
ag16234
ag16241
ag16249
ag16263
ag16270
ag16277
ag16284
ag16291
ag16298
ag16305
ag16312
ag16319
ag16326
ag16333
ag16340
ag16347
ag16354
ag16361
ag16368
ag16375
ag16382
ag16389
ag16396
ag16403
ag16410
ag16417
ag16424
ag16431
ag16438
ag16445
ag16452
ag16459
ag16466
ag16473
ag16480
ag16487
ag16494
ag16501
ag16508
ag16515
ag16522
ag16529
ag16536
ag16543
ag16550
ag16557
ag16564
ag16571
ag16578
ag16585
ag16592
ag16599
ag16606
ag16613
ag16620
ag16627
ag16634
ag16641
ag16648
ag16655
ag16662
ag16669
ag16676
ag16683
ag16690
ag16697
ag16704
ag16711
ag16718
ag16725
ag16732
ag16739
ag16746
ag16753
ag16760
ag16767
ag16774
ag16781
ag16788
ag16795
ag16802
ag16809
ag16816
ag16823
ag16830
ag16837
ag16844
ag16851
ag16858
ag16865
ag16872
ag16879
ag16886
ag16893
ag16900
ag16907
ag16914
ag16921
ag16928
ag16935
ag16942
ag16949
ag16956
ag16963
ag16970
ag16977
ag16984
ag16991
ag16998
ag17005
ag17012
ag17019
ag17026
ag17033
ag17040
ag17047
ag17054
ag17061
ag17068
ag17075
ag17082
ag17089
ag17096
ag17103
ag17110
ag17117
ag17124
ag17131
ag17138
ag17145
ag17152
ag17159
ag17166
ag17173
ag17180
ag17187
ag17194
ag17201
ag17208
ag17215
ag17222
ag17229
ag17236
ag17243
ag17250
ag17257
ag17264
ag17271
ag17278
ag17285
ag17292
ag17299
ag17306
ag17313
asg25
I0
sg1019
S'networking'
p17318
sba(iArchitecture
Cluster
p17319
(dp17320
g7
(lp17321
(iArchitecture
Entity
p17322
(dp17323
g11
(lp17324
sg14
S'com.google.common.annotations.VisibleForTesting'
p17325
sg16
(lp17326
sg19
(lp17327
sg22
(lp17328
sg25
I0
sba(iArchitecture
Entity
p17329
(dp17330
g11
(lp17331
sg14
S'com.google.common.base.CommonMatcher'
p17332
sg16
(lp17333
sg19
(lp17334
sg22
(lp17335
sg25
I0
sba(iArchitecture
Entity
p17336
(dp17337
g11
(lp17338
sg14
S'com.google.common.base.FinalizableReference'
p17339
sg16
(lp17340
sg19
(lp17341
sg22
(lp17342
sg25
I0
sba(iArchitecture
Entity
p17343
(dp17344
g11
(lp17345
sg14
S'com.google.common.cache.LongAddable'
p17346
sg16
(lp17347
sg19
(lp17348
sg22
(lp17349
sg25
I0
sba(iArchitecture
Entity
p17350
(dp17351
g11
(lp17352
sg14
S'com.google.common.collect.ArrayListMultimap'
p17353
sg16
(lp17354
sg19
(lp17355
sg22
(lp17356
sg25
I0
sba(iArchitecture
Entity
p17357
(dp17358
g11
(lp17359
sg14
S'com.google.common.collect.ComputationException'
p17360
sg16
(lp17361
sg19
(lp17362
sg22
(lp17363
sg25
I0
sba(iArchitecture
Entity
p17364
(dp17365
g11
(lp17366
sg14
S'com.google.common.collect.FilteredMultimapValues'
p17367
sg16
(lp17368
sg19
(lp17369
sg22
(lp17370
sg25
I0
sba(iArchitecture
Entity
p17371
(dp17372
g11
(lp17373
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p17374
sg16
(lp17375
sg19
(lp17376
sg22
(lp17377
sg25
I0
sba(iArchitecture
Entity
p17378
(dp17379
g11
(lp17380
sg14
S'com.google.common.collect.ForwardingList'
p17381
sg16
(lp17382
sg19
(lp17383
sg22
(lp17384
sg25
I0
sba(iArchitecture
Entity
p17385
(dp17386
g11
(lp17387
sg14
S'com.google.common.eventbus.Dispatcher'
p17388
sg16
(lp17389
sg19
(lp17390
sg22
(lp17391
sg25
I0
sba(iArchitecture
Entity
p17392
(dp17393
g11
(lp17394
sg14
S'com.google.common.eventbus.SubscriberExceptionHandler'
p17395
sg16
(lp17396
sg19
(lp17397
sg22
(lp17398
sg25
I0
sba(iArchitecture
Entity
p17399
(dp17400
g11
(lp17401
sg14
S'com.google.common.graph.EndpointPairIterator'
p17402
sg16
(lp17403
sg19
(lp17404
sg22
(lp17405
sg25
I0
sba(iArchitecture
Entity
p17406
(dp17407
g11
(lp17408
sg14
S'com.google.common.hash.Funnel'
p17409
sg16
(lp17410
sg19
(lp17411
sg22
(lp17412
sg25
I0
sba(iArchitecture
Entity
p17413
(dp17414
g11
(lp17415
sg14
S'com.google.common.util.concurrent.SettableFuture'
p17416
sg16
(lp17417
sg19
(lp17418
sg22
(lp17419
sg25
I0
sbasg1017
(lp17420
g17325
ag17332
ag17339
ag17346
ag17353
ag17360
ag17367
ag17374
ag17381
ag17388
ag17395
ag17402
ag17409
ag17416
asg25
I0
sg1019
S'no_match'
p17421
sba(iArchitecture
Cluster
p17422
(dp17423
g7
(lp17424
(iArchitecture
Entity
p17425
(dp17426
g11
(lp17427
sg14
S'com.google.common.annotations.Beta'
p17428
sg16
(lp17429
sg19
(lp17430
sg22
(lp17431
sg25
I0
sba(iArchitecture
Entity
p17432
(dp17433
g11
(lp17434
sg14
S'com.google.common.annotations.GwtCompatible'
p17435
sg16
(lp17436
sg19
(lp17437
sg22
(lp17438
sg25
I0
sba(iArchitecture
Entity
p17439
(dp17440
g11
(lp17441
sg14
S'com.google.common.annotations.GwtIncompatible'
p17442
sg16
(lp17443
sg19
(lp17444
sg22
(lp17445
sg25
I0
sba(iArchitecture
Entity
p17446
(dp17447
g11
(lp17448
sg14
S'com.google.common.annotations.package-info'
p17449
sg16
(lp17450
sg19
(lp17451
sg22
(lp17452
sg25
I0
sba(iArchitecture
Entity
p17453
(dp17454
g11
(lp17455
sg14
S'com.google.common.base.Absent'
p17456
sg16
(lp17457
sg19
(lp17458
sg22
(lp17459
sg25
I0
sba(iArchitecture
Entity
p17460
(dp17461
g11
(lp17462
sg14
S'com.google.common.base.Defaults'
p17463
sg16
(lp17464
sg19
(lp17465
sg22
(lp17466
sg25
I0
sba(iArchitecture
Entity
p17467
(dp17468
g11
(lp17469
sg14
S'com.google.common.base.Enums'
p17470
sg16
(lp17471
sg19
(lp17472
sg22
(lp17473
sg25
I0
sba(iArchitecture
Entity
p17474
(dp17475
g11
(lp17476
sg14
S'com.google.common.base.Function'
p17477
sg16
(lp17478
sg19
(lp17479
sg22
(lp17480
sg25
I0
sba(iArchitecture
Entity
p17481
(dp17482
g11
(lp17483
sg14
S'com.google.common.base.Optional'
p17484
sg16
(lp17485
sg19
(lp17486
sg22
(lp17487
sg25
I0
sba(iArchitecture
Entity
p17488
(dp17489
g11
(lp17490
sg14
S'com.google.common.base.Platform'
p17491
sg16
(lp17492
sg19
(lp17493
sg22
(lp17494
sg25
I0
sba(iArchitecture
Entity
p17495
(dp17496
g11
(lp17497
sg14
S'com.google.common.base.Predicate'
p17498
sg16
(lp17499
sg19
(lp17500
sg22
(lp17501
sg25
I0
sba(iArchitecture
Entity
p17502
(dp17503
g11
(lp17504
sg14
S'com.google.common.base.Present'
p17505
sg16
(lp17506
sg19
(lp17507
sg22
(lp17508
sg25
I0
sba(iArchitecture
Entity
p17509
(dp17510
g11
(lp17511
sg14
S'com.google.common.base.StandardSystemProperty'
p17512
sg16
(lp17513
sg19
(lp17514
sg22
(lp17515
sg25
I0
sba(iArchitecture
Entity
p17516
(dp17517
g11
(lp17518
sg14
S'com.google.common.base.Stopwatch'
p17519
sg16
(lp17520
sg19
(lp17521
sg22
(lp17522
sg25
I0
sba(iArchitecture
Entity
p17523
(dp17524
g11
(lp17525
sg14
S'com.google.common.base.Supplier'
p17526
sg16
(lp17527
sg19
(lp17528
sg22
(lp17529
sg25
I0
sba(iArchitecture
Entity
p17530
(dp17531
g11
(lp17532
sg14
S'com.google.common.base.Suppliers'
p17533
sg16
(lp17534
sg19
(lp17535
sg22
(lp17536
sg25
I0
sba(iArchitecture
Entity
p17537
(dp17538
g11
(lp17539
sg14
S'com.google.common.base.internal.Finalizer'
p17540
sg16
(lp17541
sg19
(lp17542
sg22
(lp17543
sg25
I0
sba(iArchitecture
Entity
p17544
(dp17545
g11
(lp17546
sg14
S'com.google.common.cache.Cache'
p17547
sg16
(lp17548
sg19
(lp17549
sg22
(lp17550
sg25
I0
sba(iArchitecture
Entity
p17551
(dp17552
g11
(lp17553
sg14
S'com.google.common.cache.RemovalListener'
p17554
sg16
(lp17555
sg19
(lp17556
sg22
(lp17557
sg25
I0
sba(iArchitecture
Entity
p17558
(dp17559
g11
(lp17560
sg14
S'com.google.common.cache.RemovalNotification'
p17561
sg16
(lp17562
sg19
(lp17563
sg22
(lp17564
sg25
I0
sba(iArchitecture
Entity
p17565
(dp17566
g11
(lp17567
sg14
S'com.google.common.collect.AbstractBiMap'
p17568
sg16
(lp17569
sg19
(lp17570
sg22
(lp17571
sg25
I0
sba(iArchitecture
Entity
p17572
(dp17573
g11
(lp17574
sg14
S'com.google.common.collect.AbstractListMultimap'
p17575
sg16
(lp17576
sg19
(lp17577
sg22
(lp17578
sg25
I0
sba(iArchitecture
Entity
p17579
(dp17580
g11
(lp17581
sg14
S'com.google.common.collect.AbstractSequentialIterator'
p17582
sg16
(lp17583
sg19
(lp17584
sg22
(lp17585
sg25
I0
sba(iArchitecture
Entity
p17586
(dp17587
g11
(lp17588
sg14
S'com.google.common.collect.AbstractSetMultimap'
p17589
sg16
(lp17590
sg19
(lp17591
sg22
(lp17592
sg25
I0
sba(iArchitecture
Entity
p17593
(dp17594
g11
(lp17595
sg14
S'com.google.common.collect.AbstractSortedKeySortedSetMultimap'
p17596
sg16
(lp17597
sg19
(lp17598
sg22
(lp17599
sg25
I0
sba(iArchitecture
Entity
p17600
(dp17601
g11
(lp17602
sg14
S'com.google.common.collect.AbstractSortedSetMultimap'
p17603
sg16
(lp17604
sg19
(lp17605
sg22
(lp17606
sg25
I0
sba(iArchitecture
Entity
p17607
(dp17608
g11
(lp17609
sg14
S'com.google.common.collect.ArrayTable'
p17610
sg16
(lp17611
sg19
(lp17612
sg22
(lp17613
sg25
I0
sba(iArchitecture
Entity
p17614
(dp17615
g11
(lp17616
sg14
S'com.google.common.collect.BiMap'
p17617
sg16
(lp17618
sg19
(lp17619
sg22
(lp17620
sg25
I0
sba(iArchitecture
Entity
p17621
(dp17622
g11
(lp17623
sg14
S'com.google.common.collect.BoundType'
p17624
sg16
(lp17625
sg19
(lp17626
sg22
(lp17627
sg25
I0
sba(iArchitecture
Entity
p17628
(dp17629
g11
(lp17630
sg14
S'com.google.common.collect.ClassToInstanceMap'
p17631
sg16
(lp17632
sg19
(lp17633
sg22
(lp17634
sg25
I0
sba(iArchitecture
Entity
p17635
(dp17636
g11
(lp17637
sg14
S'com.google.common.collect.ConsumingQueueIterator'
p17638
sg16
(lp17639
sg19
(lp17640
sg22
(lp17641
sg25
I0
sba(iArchitecture
Entity
p17642
(dp17643
g11
(lp17644
sg14
S'com.google.common.collect.EmptyImmutableListMultimap'
p17645
sg16
(lp17646
sg19
(lp17647
sg22
(lp17648
sg25
I0
sba(iArchitecture
Entity
p17649
(dp17650
g11
(lp17651
sg14
S'com.google.common.collect.EmptyImmutableSetMultimap'
p17652
sg16
(lp17653
sg19
(lp17654
sg22
(lp17655
sg25
I0
sba(iArchitecture
Entity
p17656
(dp17657
g11
(lp17658
sg14
S'com.google.common.collect.EnumBiMap'
p17659
sg16
(lp17660
sg19
(lp17661
sg22
(lp17662
sg25
I0
sba(iArchitecture
Entity
p17663
(dp17664
g11
(lp17665
sg14
S'com.google.common.collect.EnumHashBiMap'
p17666
sg16
(lp17667
sg19
(lp17668
sg22
(lp17669
sg25
I0
sba(iArchitecture
Entity
p17670
(dp17671
g11
(lp17672
sg14
S'com.google.common.collect.EnumMultiset'
p17673
sg16
(lp17674
sg19
(lp17675
sg22
(lp17676
sg25
I0
sba(iArchitecture
Entity
p17677
(dp17678
g11
(lp17679
sg14
S'com.google.common.collect.FilteredEntrySetMultimap'
p17680
sg16
(lp17681
sg19
(lp17682
sg22
(lp17683
sg25
I0
sba(iArchitecture
Entity
p17684
(dp17685
g11
(lp17686
sg14
S'com.google.common.collect.FilteredKeyMultimap'
p17687
sg16
(lp17688
sg19
(lp17689
sg22
(lp17690
sg25
I0
sba(iArchitecture
Entity
p17691
(dp17692
g11
(lp17693
sg14
S'com.google.common.collect.FilteredKeySetMultimap'
p17694
sg16
(lp17695
sg19
(lp17696
sg22
(lp17697
sg25
I0
sba(iArchitecture
Entity
p17698
(dp17699
g11
(lp17700
sg14
S'com.google.common.collect.FilteredMultimap'
p17701
sg16
(lp17702
sg19
(lp17703
sg22
(lp17704
sg25
I0
sba(iArchitecture
Entity
p17705
(dp17706
g11
(lp17707
sg14
S'com.google.common.collect.ForwardingSetMultimap'
p17708
sg16
(lp17709
sg19
(lp17710
sg22
(lp17711
sg25
I0
sba(iArchitecture
Entity
p17712
(dp17713
g11
(lp17714
sg14
S'com.google.common.collect.ForwardingSortedSetMultimap'
p17715
sg16
(lp17716
sg19
(lp17717
sg22
(lp17718
sg25
I0
sba(iArchitecture
Entity
p17719
(dp17720
g11
(lp17721
sg14
S'com.google.common.collect.HashBasedTable'
p17722
sg16
(lp17723
sg19
(lp17724
sg22
(lp17725
sg25
I0
sba(iArchitecture
Entity
p17726
(dp17727
g11
(lp17728
sg14
S'com.google.common.collect.ImmutableBiMap'
p17729
sg16
(lp17730
sg19
(lp17731
sg22
(lp17732
sg25
I0
sba(iArchitecture
Entity
p17733
(dp17734
g11
(lp17735
sg14
S'com.google.common.collect.ImmutableClassToInstanceMap'
p17736
sg16
(lp17737
sg19
(lp17738
sg22
(lp17739
sg25
I0
sba(iArchitecture
Entity
p17740
(dp17741
g11
(lp17742
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p17743
sg16
(lp17744
sg19
(lp17745
sg22
(lp17746
sg25
I0
sba(iArchitecture
Entity
p17747
(dp17748
g11
(lp17749
sg14
S'com.google.common.collect.ImmutableMapValues'
p17750
sg16
(lp17751
sg19
(lp17752
sg22
(lp17753
sg25
I0
sba(iArchitecture
Entity
p17754
(dp17755
g11
(lp17756
sg14
S'com.google.common.collect.ImmutableMultimap'
p17757
sg16
(lp17758
sg19
(lp17759
sg22
(lp17760
sg25
I0
sba(iArchitecture
Entity
p17761
(dp17762
g11
(lp17763
sg14
S'com.google.common.collect.ImmutableSetMultimap'
p17764
sg16
(lp17765
sg19
(lp17766
sg22
(lp17767
sg25
I0
sba(iArchitecture
Entity
p17768
(dp17769
g11
(lp17770
sg14
S'com.google.common.collect.ImmutableSortedMap'
p17771
sg16
(lp17772
sg19
(lp17773
sg22
(lp17774
sg25
I0
sba(iArchitecture
Entity
p17775
(dp17776
g11
(lp17777
sg14
S'com.google.common.collect.ImmutableSortedMapFauxverideShim'
p17778
sg16
(lp17779
sg19
(lp17780
sg22
(lp17781
sg25
I0
sba(iArchitecture
Entity
p17782
(dp17783
g11
(lp17784
sg14
S'com.google.common.collect.ImmutableSortedMultisetFauxverideShim'
p17785
sg16
(lp17786
sg19
(lp17787
sg22
(lp17788
sg25
I0
sba(iArchitecture
Entity
p17789
(dp17790
g11
(lp17791
sg14
S'com.google.common.collect.ImmutableSortedSetFauxverideShim'
p17792
sg16
(lp17793
sg19
(lp17794
sg22
(lp17795
sg25
I0
sba(iArchitecture
Entity
p17796
(dp17797
g11
(lp17798
sg14
S'com.google.common.collect.ImmutableTable'
p17799
sg16
(lp17800
sg19
(lp17801
sg22
(lp17802
sg25
I0
sba(iArchitecture
Entity
p17803
(dp17804
g11
(lp17805
sg14
S'com.google.common.collect.Interner'
p17806
sg16
(lp17807
sg19
(lp17808
sg22
(lp17809
sg25
I0
sba(iArchitecture
Entity
p17810
(dp17811
g11
(lp17812
sg14
S'com.google.common.collect.LinkedHashMultimap'
p17813
sg16
(lp17814
sg19
(lp17815
sg22
(lp17816
sg25
I0
sba(iArchitecture
Entity
p17817
(dp17818
g11
(lp17819
sg14
S'com.google.common.collect.ListMultimap'
p17820
sg16
(lp17821
sg19
(lp17822
sg22
(lp17823
sg25
I0
sba(iArchitecture
Entity
p17824
(dp17825
g11
(lp17826
sg14
S'com.google.common.collect.MapConstraints'
p17827
sg16
(lp17828
sg19
(lp17829
sg22
(lp17830
sg25
I0
sba(iArchitecture
Entity
p17831
(dp17832
g11
(lp17833
sg14
S'com.google.common.collect.MapDifference'
p17834
sg16
(lp17835
sg19
(lp17836
sg22
(lp17837
sg25
I0
sba(iArchitecture
Entity
p17838
(dp17839
g11
(lp17840
sg14
S'com.google.common.collect.Maps'
p17841
sg16
(lp17842
sg19
(lp17843
sg22
(lp17844
sg25
I0
sba(iArchitecture
Entity
p17845
(dp17846
g11
(lp17847
sg14
S'com.google.common.collect.Multimap'
p17848
sg16
(lp17849
sg19
(lp17850
sg22
(lp17851
sg25
I0
sba(iArchitecture
Entity
p17852
(dp17853
g11
(lp17854
sg14
S'com.google.common.collect.Multimaps'
p17855
sg16
(lp17856
sg19
(lp17857
sg22
(lp17858
sg25
I0
sba(iArchitecture
Entity
p17859
(dp17860
g11
(lp17861
sg14
S'com.google.common.collect.MutableClassToInstanceMap'
p17862
sg16
(lp17863
sg19
(lp17864
sg22
(lp17865
sg25
I0
sba(iArchitecture
Entity
p17866
(dp17867
g11
(lp17868
sg14
S'com.google.common.collect.Ordering'
p17869
sg16
(lp17870
sg19
(lp17871
sg22
(lp17872
sg25
I0
sba(iArchitecture
Entity
p17873
(dp17874
g11
(lp17875
sg14
S'com.google.common.collect.Platform'
p17876
sg16
(lp17877
sg19
(lp17878
sg22
(lp17879
sg25
I0
sba(iArchitecture
Entity
p17880
(dp17881
g11
(lp17882
sg14
S'com.google.common.collect.Queues'
p17883
sg16
(lp17884
sg19
(lp17885
sg22
(lp17886
sg25
I0
sba(iArchitecture
Entity
p17887
(dp17888
g11
(lp17889
sg14
S'com.google.common.collect.RangeMap'
p17890
sg16
(lp17891
sg19
(lp17892
sg22
(lp17893
sg25
I0
sba(iArchitecture
Entity
p17894
(dp17895
g11
(lp17896
sg14
S'com.google.common.collect.RangeSet'
p17897
sg16
(lp17898
sg19
(lp17899
sg22
(lp17900
sg25
I0
sba(iArchitecture
Entity
p17901
(dp17902
g11
(lp17903
sg14
S'com.google.common.collect.RegularImmutableMap'
p17904
sg16
(lp17905
sg19
(lp17906
sg22
(lp17907
sg25
I0
sba(iArchitecture
Entity
p17908
(dp17909
g11
(lp17910
sg14
S'com.google.common.collect.RowSortedTable'
p17911
sg16
(lp17912
sg19
(lp17913
sg22
(lp17914
sg25
I0
sba(iArchitecture
Entity
p17915
(dp17916
g11
(lp17917
sg14
S'com.google.common.collect.SetMultimap'
p17918
sg16
(lp17919
sg19
(lp17920
sg22
(lp17921
sg25
I0
sba(iArchitecture
Entity
p17922
(dp17923
g11
(lp17924
sg14
S'com.google.common.collect.SortedIterable'
p17925
sg16
(lp17926
sg19
(lp17927
sg22
(lp17928
sg25
I0
sba(iArchitecture
Entity
p17929
(dp17930
g11
(lp17931
sg14
S'com.google.common.collect.SortedIterables'
p17932
sg16
(lp17933
sg19
(lp17934
sg22
(lp17935
sg25
I0
sba(iArchitecture
Entity
p17936
(dp17937
g11
(lp17938
sg14
S'com.google.common.collect.SortedMapDifference'
p17939
sg16
(lp17940
sg19
(lp17941
sg22
(lp17942
sg25
I0
sba(iArchitecture
Entity
p17943
(dp17944
g11
(lp17945
sg14
S'com.google.common.collect.SortedMultisetBridge'
p17946
sg16
(lp17947
sg19
(lp17948
sg22
(lp17949
sg25
I0
sba(iArchitecture
Entity
p17950
(dp17951
g11
(lp17952
sg14
S'com.google.common.collect.SortedMultisets'
p17953
sg16
(lp17954
sg19
(lp17955
sg22
(lp17956
sg25
I0
sba(iArchitecture
Entity
p17957
(dp17958
g11
(lp17959
sg14
S'com.google.common.collect.SortedSetMultimap'
p17960
sg16
(lp17961
sg19
(lp17962
sg22
(lp17963
sg25
I0
sba(iArchitecture
Entity
p17964
(dp17965
g11
(lp17966
sg14
S'com.google.common.collect.SparseImmutableTable'
p17967
sg16
(lp17968
sg19
(lp17969
sg22
(lp17970
sg25
I0
sba(iArchitecture
Entity
p17971
(dp17972
g11
(lp17973
sg14
S'com.google.common.collect.Table'
p17974
sg16
(lp17975
sg19
(lp17976
sg22
(lp17977
sg25
I0
sba(iArchitecture
Entity
p17978
(dp17979
g11
(lp17980
sg14
S'com.google.common.collect.Tables'
p17981
sg16
(lp17982
sg19
(lp17983
sg22
(lp17984
sg25
I0
sba(iArchitecture
Entity
p17985
(dp17986
g11
(lp17987
sg14
S'com.google.common.collect.TreeBasedTable'
p17988
sg16
(lp17989
sg19
(lp17990
sg22
(lp17991
sg25
I0
sba(iArchitecture
Entity
p17992
(dp17993
g11
(lp17994
sg14
S'com.google.common.collect.TreeMultimap'
p17995
sg16
(lp17996
sg19
(lp17997
sg22
(lp17998
sg25
I0
sba(iArchitecture
Entity
p17999
(dp18000
g11
(lp18001
sg14
S'com.google.common.collect.WellBehavedMap'
p18002
sg16
(lp18003
sg19
(lp18004
sg22
(lp18005
sg25
I0
sba(iArchitecture
Entity
p18006
(dp18007
g11
(lp18008
sg14
S'com.google.common.eventbus.AllowConcurrentEvents'
p18009
sg16
(lp18010
sg19
(lp18011
sg22
(lp18012
sg25
I0
sba(iArchitecture
Entity
p18013
(dp18014
g11
(lp18015
sg14
S'com.google.common.eventbus.Subscribe'
p18016
sg16
(lp18017
sg19
(lp18018
sg22
(lp18019
sg25
I0
sba(iArchitecture
Entity
p18020
(dp18021
g11
(lp18022
sg14
S'com.google.common.eventbus.SubscriberExceptionContext'
p18023
sg16
(lp18024
sg19
(lp18025
sg22
(lp18026
sg25
I0
sba(iArchitecture
Entity
p18027
(dp18028
g11
(lp18029
sg14
S'com.google.common.eventbus.SubscriberRegistry'
p18030
sg16
(lp18031
sg19
(lp18032
sg22
(lp18033
sg25
I0
sba(iArchitecture
Entity
p18034
(dp18035
g11
(lp18036
sg14
S'com.google.common.eventbus.package-info'
p18037
sg16
(lp18038
sg19
(lp18039
sg22
(lp18040
sg25
I0
sba(iArchitecture
Entity
p18041
(dp18042
g11
(lp18043
sg14
S'com.google.common.graph.AbstractGraphBuilder'
p18044
sg16
(lp18045
sg19
(lp18046
sg22
(lp18047
sg25
I0
sba(iArchitecture
Entity
p18048
(dp18049
g11
(lp18050
sg14
S'com.google.common.graph.ConfigurableValueGraph'
p18051
sg16
(lp18052
sg19
(lp18053
sg22
(lp18054
sg25
I0
sba(iArchitecture
Entity
p18055
(dp18056
g11
(lp18057
sg14
S'com.google.common.graph.DirectedMultiNetworkConnections'
p18058
sg16
(lp18059
sg19
(lp18060
sg22
(lp18061
sg25
I0
sba(iArchitecture
Entity
p18062
(dp18063
g11
(lp18064
sg14
S'com.google.common.graph.DirectedNetworkConnections'
p18065
sg16
(lp18066
sg19
(lp18067
sg22
(lp18068
sg25
I0
sba(iArchitecture
Entity
p18069
(dp18070
g11
(lp18071
sg14
S'com.google.common.graph.ElementOrder'
p18072
sg16
(lp18073
sg19
(lp18074
sg22
(lp18075
sg25
I0
sba(iArchitecture
Entity
p18076
(dp18077
g11
(lp18078
sg14
S'com.google.common.graph.GraphConnections'
p18079
sg16
(lp18080
sg19
(lp18081
sg22
(lp18082
sg25
I0
sba(iArchitecture
Entity
p18083
(dp18084
g11
(lp18085
sg14
S'com.google.common.graph.MapIteratorCache'
p18086
sg16
(lp18087
sg19
(lp18088
sg22
(lp18089
sg25
I0
sba(iArchitecture
Entity
p18090
(dp18091
g11
(lp18092
sg14
S'com.google.common.graph.MapRetrievalCache'
p18093
sg16
(lp18094
sg19
(lp18095
sg22
(lp18096
sg25
I0
sba(iArchitecture
Entity
p18097
(dp18098
g11
(lp18099
sg14
S'com.google.common.graph.NetworkConnections'
p18100
sg16
(lp18101
sg19
(lp18102
sg22
(lp18103
sg25
I0
sba(iArchitecture
Entity
p18104
(dp18105
g11
(lp18106
sg14
S'com.google.common.graph.UndirectedGraphConnections'
p18107
sg16
(lp18108
sg19
(lp18109
sg22
(lp18110
sg25
I0
sba(iArchitecture
Entity
p18111
(dp18112
g11
(lp18113
sg14
S'com.google.common.graph.UndirectedMultiNetworkConnections'
p18114
sg16
(lp18115
sg19
(lp18116
sg22
(lp18117
sg25
I0
sba(iArchitecture
Entity
p18118
(dp18119
g11
(lp18120
sg14
S'com.google.common.graph.UndirectedNetworkConnections'
p18121
sg16
(lp18122
sg19
(lp18123
sg22
(lp18124
sg25
I0
sba(iArchitecture
Entity
p18125
(dp18126
g11
(lp18127
sg14
S'com.google.common.graph.package-info'
p18128
sg16
(lp18129
sg19
(lp18130
sg22
(lp18131
sg25
I0
sba(iArchitecture
Entity
p18132
(dp18133
g11
(lp18134
sg14
S'com.google.common.hash.package-info'
p18135
sg16
(lp18136
sg19
(lp18137
sg22
(lp18138
sg25
I0
sba(iArchitecture
Entity
p18139
(dp18140
g11
(lp18141
sg14
S'com.google.common.html.package-info'
p18142
sg16
(lp18143
sg19
(lp18144
sg22
(lp18145
sg25
I0
sba(iArchitecture
Entity
p18146
(dp18147
g11
(lp18148
sg14
S'com.google.common.io.Closer'
p18149
sg16
(lp18150
sg19
(lp18151
sg22
(lp18152
sg25
I0
sba(iArchitecture
Entity
p18153
(dp18154
g11
(lp18155
sg14
S'com.google.common.math.DoubleMath'
p18156
sg16
(lp18157
sg19
(lp18158
sg22
(lp18159
sg25
I0
sba(iArchitecture
Entity
p18160
(dp18161
g11
(lp18162
sg14
S'com.google.common.math.PairedStatsAccumulator'
p18163
sg16
(lp18164
sg19
(lp18165
sg22
(lp18166
sg25
I0
sba(iArchitecture
Entity
p18167
(dp18168
g11
(lp18169
sg14
S'com.google.common.math.Stats'
p18170
sg16
(lp18171
sg19
(lp18172
sg22
(lp18173
sg25
I0
sba(iArchitecture
Entity
p18174
(dp18175
g11
(lp18176
sg14
S'com.google.common.math.StatsAccumulator'
p18177
sg16
(lp18178
sg19
(lp18179
sg22
(lp18180
sg25
I0
sba(iArchitecture
Entity
p18181
(dp18182
g11
(lp18183
sg14
S'com.google.common.math.package-info'
p18184
sg16
(lp18185
sg19
(lp18186
sg22
(lp18187
sg25
I0
sba(iArchitecture
Entity
p18188
(dp18189
g11
(lp18190
sg14
S'com.google.common.net.MediaType'
p18191
sg16
(lp18192
sg19
(lp18193
sg22
(lp18194
sg25
I0
sba(iArchitecture
Entity
p18195
(dp18196
g11
(lp18197
sg14
S'com.google.common.primitives.Primitives'
p18198
sg16
(lp18199
sg19
(lp18200
sg22
(lp18201
sg25
I0
sba(iArchitecture
Entity
p18202
(dp18203
g11
(lp18204
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMap'
p18205
sg16
(lp18206
sg19
(lp18207
sg22
(lp18208
sg25
I0
sba(iArchitecture
Entity
p18209
(dp18210
g11
(lp18211
sg14
S'com.google.common.reflect.MutableTypeToInstanceMap'
p18212
sg16
(lp18213
sg19
(lp18214
sg22
(lp18215
sg25
I0
sba(iArchitecture
Entity
p18216
(dp18217
g11
(lp18218
sg14
S'com.google.common.reflect.TypeParameter'
p18219
sg16
(lp18220
sg19
(lp18221
sg22
(lp18222
sg25
I0
sba(iArchitecture
Entity
p18223
(dp18224
g11
(lp18225
sg14
S'com.google.common.reflect.TypeResolver'
p18226
sg16
(lp18227
sg19
(lp18228
sg22
(lp18229
sg25
I0
sba(iArchitecture
Entity
p18230
(dp18231
g11
(lp18232
sg14
S'com.google.common.reflect.TypeToInstanceMap'
p18233
sg16
(lp18234
sg19
(lp18235
sg22
(lp18236
sg25
I0
sba(iArchitecture
Entity
p18237
(dp18238
g11
(lp18239
sg14
S'com.google.common.reflect.TypeToken'
p18240
sg16
(lp18241
sg19
(lp18242
sg22
(lp18243
sg25
I0
sba(iArchitecture
Entity
p18244
(dp18245
g11
(lp18246
sg14
S'com.google.common.reflect.TypeVisitor'
p18247
sg16
(lp18248
sg19
(lp18249
sg22
(lp18250
sg25
I0
sba(iArchitecture
Entity
p18251
(dp18252
g11
(lp18253
sg14
S'com.google.common.reflect.Types'
p18254
sg16
(lp18255
sg19
(lp18256
sg22
(lp18257
sg25
I0
sba(iArchitecture
Entity
p18258
(dp18259
g11
(lp18260
sg14
S'com.google.common.reflect.package-info'
p18261
sg16
(lp18262
sg19
(lp18263
sg22
(lp18264
sg25
I0
sba(iArchitecture
Entity
p18265
(dp18266
g11
(lp18267
sg14
S'com.google.common.util.concurrent.AsyncCallable'
p18268
sg16
(lp18269
sg19
(lp18270
sg22
(lp18271
sg25
I0
sba(iArchitecture
Entity
p18272
(dp18273
g11
(lp18274
sg14
S'com.google.common.util.concurrent.AsyncFunction'
p18275
sg16
(lp18276
sg19
(lp18277
sg22
(lp18278
sg25
I0
sba(iArchitecture
Entity
p18279
(dp18280
g11
(lp18281
sg14
S'com.google.common.util.concurrent.AtomicLongMap'
p18282
sg16
(lp18283
sg19
(lp18284
sg22
(lp18285
sg25
I0
sba(iArchitecture
Entity
p18286
(dp18287
g11
(lp18288
sg14
S'com.google.common.util.concurrent.Atomics'
p18289
sg16
(lp18290
sg19
(lp18291
sg22
(lp18292
sg25
I0
sba(iArchitecture
Entity
p18293
(dp18294
g11
(lp18295
sg14
S'com.google.common.util.concurrent.CheckedFuture'
p18296
sg16
(lp18297
sg19
(lp18298
sg22
(lp18299
sg25
I0
sba(iArchitecture
Entity
p18300
(dp18301
g11
(lp18302
sg14
S'com.google.common.util.concurrent.CollectionFuture'
p18303
sg16
(lp18304
sg19
(lp18305
sg22
(lp18306
sg25
I0
sba(iArchitecture
Entity
p18307
(dp18308
g11
(lp18309
sg14
S'com.google.common.util.concurrent.ExecutionList'
p18310
sg16
(lp18311
sg19
(lp18312
sg22
(lp18313
sg25
I0
sba(iArchitecture
Entity
p18314
(dp18315
g11
(lp18316
sg14
S'com.google.common.util.concurrent.FakeTimeLimiter'
p18317
sg16
(lp18318
sg19
(lp18319
sg22
(lp18320
sg25
I0
sba(iArchitecture
Entity
p18321
(dp18322
g11
(lp18323
sg14
S'com.google.common.util.concurrent.FutureCallback'
p18324
sg16
(lp18325
sg19
(lp18326
sg22
(lp18327
sg25
I0
sba(iArchitecture
Entity
p18328
(dp18329
g11
(lp18330
sg14
S'com.google.common.util.concurrent.FuturesGetChecked'
p18331
sg16
(lp18332
sg19
(lp18333
sg22
(lp18334
sg25
I0
sba(iArchitecture
Entity
p18335
(dp18336
g11
(lp18337
sg14
S'com.google.common.util.concurrent.ImmediateFuture'
p18338
sg16
(lp18339
sg19
(lp18340
sg22
(lp18341
sg25
I0
sba(iArchitecture
Entity
p18342
(dp18343
g11
(lp18344
sg14
S'com.google.common.util.concurrent.ListenableFutureTask'
p18345
sg16
(lp18346
sg19
(lp18347
sg22
(lp18348
sg25
I0
sba(iArchitecture
Entity
p18349
(dp18350
g11
(lp18351
sg14
S'com.google.common.util.concurrent.ListenableScheduledFuture'
p18352
sg16
(lp18353
sg19
(lp18354
sg22
(lp18355
sg25
I0
sba(iArchitecture
Entity
p18356
(dp18357
g11
(lp18358
sg14
S'com.google.common.util.concurrent.ListeningScheduledExecutorService'
p18359
sg16
(lp18360
sg19
(lp18361
sg22
(lp18362
sg25
I0
sba(iArchitecture
Entity
p18363
(dp18364
g11
(lp18365
sg14
S'com.google.common.util.concurrent.Partially'
p18366
sg16
(lp18367
sg19
(lp18368
sg22
(lp18369
sg25
I0
sba(iArchitecture
Entity
p18370
(dp18371
g11
(lp18372
sg14
S'com.google.common.util.concurrent.Platform'
p18373
sg16
(lp18374
sg19
(lp18375
sg22
(lp18376
sg25
I0
sba(iArchitecture
Entity
p18377
(dp18378
g11
(lp18379
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiter'
p18380
sg16
(lp18381
sg19
(lp18382
sg22
(lp18383
sg25
I0
sba(iArchitecture
Entity
p18384
(dp18385
g11
(lp18386
sg14
S'com.google.common.util.concurrent.TimeLimiter'
p18387
sg16
(lp18388
sg19
(lp18389
sg22
(lp18390
sg25
I0
sba(iArchitecture
Entity
p18391
(dp18392
g11
(lp18393
sg14
S'com.google.common.util.concurrent.TimeoutFuture'
p18394
sg16
(lp18395
sg19
(lp18396
sg22
(lp18397
sg25
I0
sba(iArchitecture
Entity
p18398
(dp18399
g11
(lp18400
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTask'
p18401
sg16
(lp18402
sg19
(lp18403
sg22
(lp18404
sg25
I0
sba(iArchitecture
Entity
p18405
(dp18406
g11
(lp18407
sg14
S'com.google.common.util.concurrent.package-info'
p18408
sg16
(lp18409
sg19
(lp18410
sg22
(lp18411
sg25
I0
sba(iArchitecture
Entity
p18412
(dp18413
g11
(lp18414
sg14
S'com.google.common.xml.package-info'
p18415
sg16
(lp18416
sg19
(lp18417
sg22
(lp18418
sg25
I0
sbasg1017
(lp18419
g17428
ag17435
ag17442
ag17449
ag17456
ag17463
ag17470
ag17477
ag17484
ag17491
ag17498
ag17505
ag17512
ag17519
ag17526
ag17533
ag17540
ag17547
ag17554
ag17561
ag17568
ag17575
ag17582
ag17589
ag17596
ag17603
ag17610
ag17617
ag17624
ag17631
ag17638
ag17645
ag17652
ag17659
ag17666
ag17673
ag17680
ag17687
ag17694
ag17701
ag17708
ag17715
ag17722
ag17729
ag17736
ag17743
ag17750
ag17757
ag17764
ag17771
ag17778
ag17785
ag17792
ag17799
ag17806
ag17813
ag17820
ag17827
ag17834
ag17841
ag17848
ag17855
ag17862
ag17869
ag17876
ag17883
ag17890
ag17897
ag17904
ag17911
ag17918
ag17925
ag17932
ag17939
ag17946
ag17953
ag17960
ag17967
ag17974
ag17981
ag17988
ag17995
ag18002
ag18009
ag18016
ag18023
ag18030
ag18037
ag18044
ag18051
ag18058
ag18065
ag18072
ag18079
ag18086
ag18093
ag18100
ag18107
ag18114
ag18121
ag18128
ag18135
ag18142
ag18149
ag18156
ag18163
ag18170
ag18177
ag18184
ag18191
ag18198
ag18205
ag18212
ag18219
ag18226
ag18233
ag18240
ag18247
ag18254
ag18261
ag18268
ag18275
ag18282
ag18289
ag18296
ag18303
ag18310
ag18317
ag18324
ag18331
ag18338
ag18345
ag18352
ag18359
ag18366
ag18373
ag18380
ag18387
ag18394
ag18401
ag18408
ag18415
asg25
I0
sg1019
S'sql'
p18420
sbasg3518
g3519
sg1017
(lp18421
sg3521
I00
sg1019
S'20.0'
p18422
sba.