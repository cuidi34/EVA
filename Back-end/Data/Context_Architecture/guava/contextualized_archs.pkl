(lp0
(iArchitecture
Architecture
p1
(dp2
S'clusters'
p3
(lp4
(iArchitecture
Cluster
p5
(dp6
S'entities'
p7
(lp8
(iArchitecture
Entity
p9
(dp10
S'issue_ids'
p11
(lp12
V339
p13
asS'name'
p14
S'com.google.common.base.CharMatcher'
p15
sS'descs'
p16
(lp17
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p18
asS'labels'
p19
(lp20
(lp21
I1
aasS'titles'
p22
(lp23
VConcurrency bug in AbstractMultimap
p24
asS'change'
p25
I0
sba(iArchitecture
Entity
p26
(dp27
g11
(lp28
g13
asg14
S'com.google.common.base.Equivalence'
p29
sg16
(lp30
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p31
asg19
(lp32
g21
asg22
(lp33
g24
asg25
I0
sba(iArchitecture
Entity
p34
(dp35
g11
(lp36
sg14
S'com.google.common.base.Functions'
p37
sg16
(lp38
sg19
(lp39
sg22
(lp40
sg25
I0
sba(iArchitecture
Entity
p41
(dp42
g11
(lp43
sg14
S'com.google.common.base.PairwiseEquivalence'
p44
sg16
(lp45
sg19
(lp46
sg22
(lp47
sg25
I0
sba(iArchitecture
Entity
p48
(dp49
g11
(lp50
sg14
S'com.google.common.base.Preconditions'
p51
sg16
(lp52
sg19
(lp53
sg22
(lp54
sg25
I0
sba(iArchitecture
Entity
p55
(dp56
g11
(lp57
sg14
S'com.google.common.base.Predicates'
p58
sg16
(lp59
sg19
(lp60
sg22
(lp61
sg25
I0
sba(iArchitecture
Entity
p62
(dp63
g11
(lp64
sg14
S'com.google.common.base.SmallCharMatcher'
p65
sg16
(lp66
sg19
(lp67
sg22
(lp68
sg25
I0
sba(iArchitecture
Entity
p69
(dp70
g11
(lp71
sg14
S'com.google.common.base.Splitter'
p72
sg16
(lp73
sg19
(lp74
sg22
(lp75
sg25
I0
sba(iArchitecture
Entity
p76
(dp77
g11
(lp78
sg14
S'com.google.common.base.Strings'
p79
sg16
(lp80
sg19
(lp81
sg22
(lp82
sg25
I0
sba(iArchitecture
Entity
p83
(dp84
g11
(lp85
V1567
p86
asg14
S'com.google.common.cache.CacheBuilderSpec'
p87
sg16
(lp88
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p89
asg19
(lp90
(lp91
I1
aasg22
(lp92
VRunning tests in a non-US locale might fail
p93
asg25
I0
sba(iArchitecture
Entity
p94
(dp95
g11
(lp96
V2108
p97
aV2101
p98
asg14
S'com.google.common.cache.LocalCache'
p99
sg16
(lp100
VMy multithreaded thrashing tests failed with Guava due to `size()` returning a negative value. The size is used for verifying that the `toArray()` methods are threadsafe (this was a common bug until JDK6 rewrote AbstractCollection's to be tolerant to races). The lines in question are,\u000a\u000a``` java\u000a(cache, key) -> cache.asMap().keySet().toArray(new Object[cache.asMap().size()]),\u000a(cache, key) -> cache.asMap().values().toArray(new Object[cache.asMap().size()]),\u000a(cache, key) -> cache.asMap().entrySet().toArray(new Entry[cache.asMap().size()]),\u000a```\u000a\u000aThis results in a `NegativeArraySizeException` unless worked around using `Math.max(0, cache.asMap().size())` which is now done in the guava fixture. I'm not sure why this occurs, and only happened after tweaking some JVM args. Regardless this failure was reproducible and is simple to fix.\u000a\u000a```\u000ajava.lang.NegativeArraySizeException\u000aat com.github.benmanes.caffeine.cache.MultiThreadedTest.lambda$new$280(MultiThreadedTest.java:142)\u000aat com.github.benmanes.caffeine.cache.MultiThreadedTest$$Lambda$29/584234975.accept(Unknown Source)\u000aat com.github.benmanes.caffeine.testing.Threads$Thrasher.run(Threads.java:149)\u000aat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\u000aat com.github.benmanes.caffeine.testing.ConcurrentTestHarness.lambda$timeTasks$344(ConcurrentTestHarness.java:100)\u000aat com.github.benmanes.caffeine.testing.ConcurrentTestHarness$$Lambda$61/1027825150.run(Unknown Source)\u000aat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\u000aat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\u000aat java.lang.Thread.run(Thread.java:745)\u000a```\u000a
p101
aVWhen the cache is being cleared, either through `Cache.invalidateAll()` or `asMap().clear()`, the removal cause is always `EXPLICIT`. However the map may contain expired or GC'd entries that would be removed on the next maintenance cycle. The removal cause should indicate the actual state of the entry, not merely the action that triggered the eventual removal.\u000a\u000aDue to weak and soft references the key or value may be null. A listener should only expect to receive a null key or value if the cause is `COLLECTED`, as indicated by `RemovalNotification`:\u000a\u000a> The key and/or value may be null if they were already garbage collected.\u000a\u000aTherefore a listener might decide to inspect the properties without a null guard, leading to an NPE.\u000a\u000a``` java\u000a@Test\u000apublic void clear_expireAfterAccess() {\u000a  FakeTicker ticker = new FakeTicker();\u000a  RemovalListener<Integer, Integer> listener = Mockito.mock(RemovalListener.class);\u000a  ArgumentCaptor<RemovalNotification<Integer, Integer>> captor =\u000a      ArgumentCaptor.forClass(RemovalNotification.class);\u000a  Cache<Integer, Integer> cache = CacheBuilder.newBuilder()\u000a      .expireAfterAccess(1, TimeUnit.MINUTES)\u000a      .removalListener(listener)\u000a      .ticker(ticker)\u000a      .build();\u000a  cache.put(1, 1);\u000a  ticker.advance(10, TimeUnit.MINUTES);\u000a  cache.invalidateAll();\u000a\u000a  verify(listener).onRemoval(captor.capture());\u000a  assertThat(captor.getValue().getCause(), is(RemovalCause.EXPIRED));\u000a}\u000a```\u000a\u000aThe fix is to change `LocalCache$Segment#clear()` to inspect the key, value, and expiration status when determining the cause. \u000a\u000aUnfortunately this race condition is more widespread due to `enqueueNotification` not being tolerant to a garbage collection nulling out the key/value. Prior to constructing the notification, the method must take a strong reference to the key and value, check if either was collected, and if so publish a `COLLECTED` instead of the caller's cause.\u000a
p102
asg19
(lp103
(lp104
I1
aa(lp105
I1
aasg22
(lp106
VCache.asMap().size() may return a negative value
p107
aVWrong RemovalCause published on cache.invaldateAll()
p108
asg25
I0
sba(iArchitecture
Entity
p109
(dp110
g11
(lp111
sg14
S'com.google.common.cache.LongAdder'
p112
sg16
(lp113
sg19
(lp114
sg22
(lp115
sg25
I0
sba(iArchitecture
Entity
p116
(dp117
g11
(lp118
sg14
S'com.google.common.collect.AbstractIndexedListIterator'
p119
sg16
(lp120
sg19
(lp121
sg22
(lp122
sg25
I0
sba(iArchitecture
Entity
p123
(dp124
g11
(lp125
g13
asg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p126
sg16
(lp127
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p128
asg19
(lp129
g21
asg22
(lp130
g24
asg25
I0
sba(iArchitecture
Entity
p131
(dp132
g11
(lp133
g13
asg14
S'com.google.common.collect.AbstractMapBasedMultiset'
p134
sg16
(lp135
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p136
asg19
(lp137
g21
asg22
(lp138
g24
asg25
I0
sba(iArchitecture
Entity
p139
(dp140
g11
(lp141
sg14
S'com.google.common.collect.AbstractMultimap'
p142
sg16
(lp143
sg19
(lp144
sg22
(lp145
sg25
I0
sba(iArchitecture
Entity
p146
(dp147
g11
(lp148
sg14
S'com.google.common.collect.AbstractMultiset'
p149
sg16
(lp150
sg19
(lp151
sg22
(lp152
sg25
I0
sba(iArchitecture
Entity
p153
(dp154
g11
(lp155
sg14
S'com.google.common.collect.AbstractNavigableMap'
p156
sg16
(lp157
sg19
(lp158
sg22
(lp159
sg25
I0
sba(iArchitecture
Entity
p160
(dp161
g11
(lp162
sg14
S'com.google.common.collect.AbstractRangeSet'
p163
sg16
(lp164
sg19
(lp165
sg22
(lp166
sg25
I0
sba(iArchitecture
Entity
p167
(dp168
g11
(lp169
sg14
S'com.google.common.collect.AbstractTable'
p170
sg16
(lp171
sg19
(lp172
sg22
(lp173
sg25
I0
sba(iArchitecture
Entity
p174
(dp175
g11
(lp176
sg14
S'com.google.common.collect.CartesianList'
p177
sg16
(lp178
sg19
(lp179
sg22
(lp180
sg25
I0
sba(iArchitecture
Entity
p181
(dp182
g11
(lp183
sg14
S'com.google.common.collect.Collections2'
p184
sg16
(lp185
sg19
(lp186
sg22
(lp187
sg25
I0
sba(iArchitecture
Entity
p188
(dp189
g11
(lp190
sg14
S'com.google.common.collect.ComparisonChain'
p191
sg16
(lp192
sg19
(lp193
sg22
(lp194
sg25
I0
sba(iArchitecture
Entity
p195
(dp196
g11
(lp197
sg14
S'com.google.common.collect.CompoundOrdering'
p198
sg16
(lp199
sg19
(lp200
sg22
(lp201
sg25
I0
sba(iArchitecture
Entity
p202
(dp203
g11
(lp204
g13
asg14
S'com.google.common.collect.ComputingConcurrentHashMap'
p205
sg16
(lp206
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p207
asg19
(lp208
g21
asg22
(lp209
g24
asg25
I0
sba(iArchitecture
Entity
p210
(dp211
g11
(lp212
sg14
S'com.google.common.collect.ConcurrentHashMultiset'
p213
sg16
(lp214
sg19
(lp215
sg22
(lp216
sg25
I0
sba(iArchitecture
Entity
p217
(dp218
g11
(lp219
V2196
p220
asg14
S'com.google.common.collect.ContiguousSet'
p221
sg16
(lp222
VLet a < x < b:\u000a- [x].intersection([x]) should return [x], returns [],\u000a- [x].intersection([a..b]) should return [x], returns [],\u000a- [a..b].intersection([x]) should return [x], returns [],\u000a- [a..x].intersection([x..b]) should return [x], returns [].\u000a\u000aI'll create a PR in a minute.\u000a
p223
asg19
(lp224
(lp225
I1
aasg22
(lp226
VContiguousSet.intersection doesn't handle singleton results.
p227
asg25
I0
sba(iArchitecture
Entity
p228
(dp229
g11
(lp230
sg14
S'com.google.common.collect.Count'
p231
sg16
(lp232
sg19
(lp233
sg22
(lp234
sg25
I0
sba(iArchitecture
Entity
p235
(dp236
g11
(lp237
sg14
S'com.google.common.collect.DenseImmutableTable'
p238
sg16
(lp239
sg19
(lp240
sg22
(lp241
sg25
I0
sba(iArchitecture
Entity
p242
(dp243
g11
(lp244
sg14
S'com.google.common.collect.DescendingImmutableSortedMultiset'
p245
sg16
(lp246
sg19
(lp247
sg22
(lp248
sg25
I0
sba(iArchitecture
Entity
p249
(dp250
g11
(lp251
sg14
S'com.google.common.collect.DescendingImmutableSortedSet'
p252
sg16
(lp253
sg19
(lp254
sg22
(lp255
sg25
I0
sba(iArchitecture
Entity
p256
(dp257
g11
(lp258
sg14
S'com.google.common.collect.DescendingMultiset'
p259
sg16
(lp260
sg19
(lp261
sg22
(lp262
sg25
I0
sba(iArchitecture
Entity
p263
(dp264
g11
(lp265
sg14
S'com.google.common.collect.EmptyContiguousSet'
p266
sg16
(lp267
sg19
(lp268
sg22
(lp269
sg25
I0
sba(iArchitecture
Entity
p270
(dp271
g11
(lp272
sg14
S'com.google.common.collect.EmptyImmutableBiMap'
p273
sg16
(lp274
sg19
(lp275
sg22
(lp276
sg25
I0
sba(iArchitecture
Entity
p277
(dp278
g11
(lp279
g13
asg14
S'com.google.common.collect.EmptyImmutableSet'
p280
sg16
(lp281
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p282
asg19
(lp283
g21
asg22
(lp284
g24
asg25
I0
sba(iArchitecture
Entity
p285
(dp286
g11
(lp287
sg14
S'com.google.common.collect.EmptyImmutableSortedMap'
p288
sg16
(lp289
sg19
(lp290
sg22
(lp291
sg25
I0
sba(iArchitecture
Entity
p292
(dp293
g11
(lp294
sg14
S'com.google.common.collect.EmptyImmutableSortedMultiset'
p295
sg16
(lp296
sg19
(lp297
sg22
(lp298
sg25
I0
sba(iArchitecture
Entity
p299
(dp300
g11
(lp301
sg14
S'com.google.common.collect.EmptyImmutableSortedSet'
p302
sg16
(lp303
sg19
(lp304
sg22
(lp305
sg25
I0
sba(iArchitecture
Entity
p306
(dp307
g11
(lp308
sg14
S'com.google.common.collect.ExplicitOrdering'
p309
sg16
(lp310
sg19
(lp311
sg22
(lp312
sg25
I0
sba(iArchitecture
Entity
p313
(dp314
g11
(lp315
sg14
S'com.google.common.collect.FilteredEntryMultimap'
p316
sg16
(lp317
sg19
(lp318
sg22
(lp319
sg25
I0
sba(iArchitecture
Entity
p320
(dp321
g11
(lp322
V1963
p323
ag323
asg14
S'com.google.common.collect.FluentIterable'
p324
sg16
(lp325
VWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p326
aVWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p327
asg19
(lp328
(lp329
I0
aag329
asg22
(lp330
VDe-@Beta Maps.asMap and toMap
p331
ag331
asg25
I0
sba(iArchitecture
Entity
p332
(dp333
g11
(lp334
sg14
S'com.google.common.collect.ForwardingBlockingDeque'
p335
sg16
(lp336
sg19
(lp337
sg22
(lp338
sg25
I0
sba(iArchitecture
Entity
p339
(dp340
g11
(lp341
sg14
S'com.google.common.collect.ForwardingDeque'
p342
sg16
(lp343
sg19
(lp344
sg22
(lp345
sg25
I0
sba(iArchitecture
Entity
p346
(dp347
g11
(lp348
sg14
S'com.google.common.collect.ForwardingList'
p349
sg16
(lp350
sg19
(lp351
sg22
(lp352
sg25
I0
sba(iArchitecture
Entity
p353
(dp354
g11
(lp355
sg14
S'com.google.common.collect.ForwardingMultimap'
p356
sg16
(lp357
sg19
(lp358
sg22
(lp359
sg25
I0
sba(iArchitecture
Entity
p360
(dp361
g11
(lp362
sg14
S'com.google.common.collect.ForwardingTable'
p363
sg16
(lp364
sg19
(lp365
sg22
(lp366
sg25
I0
sba(iArchitecture
Entity
p367
(dp368
g11
(lp369
sg14
S'com.google.common.collect.GeneralRange'
p370
sg16
(lp371
sg19
(lp372
sg22
(lp373
sg25
I0
sba(iArchitecture
Entity
p374
(dp375
g11
(lp376
sg14
S'com.google.common.collect.HashBiMap'
p377
sg16
(lp378
sg19
(lp379
sg22
(lp380
sg25
I0
sba(iArchitecture
Entity
p381
(dp382
g11
(lp383
sg14
S'com.google.common.collect.Hashing'
p384
sg16
(lp385
sg19
(lp386
sg22
(lp387
sg25
I0
sba(iArchitecture
Entity
p388
(dp389
g11
(lp390
sg14
S'com.google.common.collect.ImmutableCollection'
p391
sg16
(lp392
sg19
(lp393
sg22
(lp394
sg25
I0
sba(iArchitecture
Entity
p395
(dp396
g11
(lp397
g13
aV1977
p398
asg14
S'com.google.common.collect.ImmutableList'
p399
sg16
(lp400
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p401
aVImmutableList contains following code since version 15.0\u000a\u000a private static final ImmutableList<Object> EMPTY =\u000a      new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);\u000a
p402
asg19
(lp403
g21
a(lp404
I1
aasg22
(lp405
g24
aVPossible deadlock in ImmutableList 
p406
asg25
I0
sba(iArchitecture
Entity
p407
(dp408
g11
(lp409
sg14
S'com.google.common.collect.ImmutableMultimap'
p410
sg16
(lp411
sg19
(lp412
sg22
(lp413
sg25
I0
sba(iArchitecture
Entity
p414
(dp415
g11
(lp416
sg14
S'com.google.common.collect.ImmutableMultiset'
p417
sg16
(lp418
sg19
(lp419
sg22
(lp420
sg25
I0
sba(iArchitecture
Entity
p421
(dp422
g11
(lp423
sg14
S'com.google.common.collect.ImmutableRangeMap'
p424
sg16
(lp425
sg19
(lp426
sg22
(lp427
sg25
I0
sba(iArchitecture
Entity
p428
(dp429
g11
(lp430
sg14
S'com.google.common.collect.ImmutableRangeSet'
p431
sg16
(lp432
sg19
(lp433
sg22
(lp434
sg25
I0
sba(iArchitecture
Entity
p435
(dp436
g11
(lp437
sg14
S'com.google.common.collect.ImmutableSet'
p438
sg16
(lp439
sg19
(lp440
sg22
(lp441
sg25
I0
sba(iArchitecture
Entity
p442
(dp443
g11
(lp444
sg14
S'com.google.common.collect.ImmutableSortedMultiset'
p445
sg16
(lp446
sg19
(lp447
sg22
(lp448
sg25
I0
sba(iArchitecture
Entity
p449
(dp450
g11
(lp451
g13
asg14
S'com.google.common.collect.ImmutableSortedSet'
p452
sg16
(lp453
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p454
asg19
(lp455
g21
asg22
(lp456
g24
asg25
I0
sba(iArchitecture
Entity
p457
(dp458
g11
(lp459
V1596
p460
ag460
ag460
aV1543
p461
ag461
aV1558
p462
ag462
aV2008
p463
ag463
asg14
S'com.google.common.collect.Iterables'
p464
sg16
(lp465
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1596) created by **jens.von...@numberfour.eu** on 2013-11-29 at 03:56 PM_\u000a\u000a---\u000a\u000aThe List interface does not state that it must allow duplicate elements, it is only stated as the typical case:\u000a\u000a"Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements e1 and e2 such that e1.equals(e2), and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare." (java.util.List, JavaDoc).\u000a\u000aWhen a list prohibits duplicates, \u000acom.google.common.collect.Iterables.removeIfFromRandomAccessList(List&lt;T>, Predicate<? super T>) \u000aleads to exceptions, because an element temporarily may be contained muiltple times in the list. \u000aThis is true in particular for EMF's org.eclipse.emf.common.util.AbstractEList&lt;E>, which does not allow duplicates.\u000a\u000aSince allowing of duplicates is not a hard constraint of the List interface, I would consider this a bug. In particular since this specialized method is called from com.google.common.collect.Iterables.removeIf(Iterable&lt;T>, Predicate<? super T>), so the client has little control over what's going to happen.\u000a
p466
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1596) created by **jens.von...@numberfour.eu** on 2013-11-29 at 03:56 PM_\u000a\u000a---\u000a\u000aThe List interface does not state that it must allow duplicate elements, it is only stated as the typical case:\u000a\u000a"Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements e1 and e2 such that e1.equals(e2), and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare." (java.util.List, JavaDoc).\u000a\u000aWhen a list prohibits duplicates, \u000acom.google.common.collect.Iterables.removeIfFromRandomAccessList(List&lt;T>, Predicate<? super T>) \u000aleads to exceptions, because an element temporarily may be contained muiltple times in the list. \u000aThis is true in particular for EMF's org.eclipse.emf.common.util.AbstractEList&lt;E>, which does not allow duplicates.\u000a\u000aSince allowing of duplicates is not a hard constraint of the List interface, I would consider this a bug. In particular since this specialized method is called from com.google.common.collect.Iterables.removeIf(Iterable&lt;T>, Predicate<? super T>), so the client has little control over what's going to happen.\u000a
p467
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1596) created by **jens.von...@numberfour.eu** on 2013-11-29 at 03:56 PM_\u000a\u000a---\u000a\u000aThe List interface does not state that it must allow duplicate elements, it is only stated as the typical case:\u000a\u000a"Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements e1 and e2 such that e1.equals(e2), and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare." (java.util.List, JavaDoc).\u000a\u000aWhen a list prohibits duplicates, \u000acom.google.common.collect.Iterables.removeIfFromRandomAccessList(List&lt;T>, Predicate<? super T>) \u000aleads to exceptions, because an element temporarily may be contained muiltple times in the list. \u000aThis is true in particular for EMF's org.eclipse.emf.common.util.AbstractEList&lt;E>, which does not allow duplicates.\u000a\u000aSince allowing of duplicates is not a hard constraint of the List interface, I would consider this a bug. In particular since this specialized method is called from com.google.common.collect.Iterables.removeIf(Iterable&lt;T>, Predicate<? super T>), so the client has little control over what's going to happen.\u000a
p468
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1543) created by **bedla.czech** on 2013-09-25 at 11:58 AM_\u000a\u000a---\u000a\u000aHi,\u000a\u000aI have found strange behaviour of Iterables.removeIf method. When I remove items from iterable by frequency and having them nearby, every found duplicate item is removed even the last one. At a bottom you can find test snippets. There is difference between use of ArrayList and LinkedList.\u000a\u000aNote: I know that I should use Set for this kind of situations, but imagine that you do not have String list but list full of legacy uneditable s*it classes. Problem is inside Iterables.removeIfFromRandomAccessList method.\u000a\u000a<code language="java">\u000a&nbsp;&nbsp;&nbsp;&nbsp;@\ufeffTest\u000a&nbsp;&nbsp;&nbsp;&nbsp;public void testOk() throws Exception {\u000a\u000a```\u000a    final List<String> list = Lists.newArrayList("a", "b", "a");\u000a\u000a    System.out.println(list); // [a, b, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [b, a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testWrong() throws Exception {\u000a\u000a    final List<String> list = Lists.newArrayList("a", "a", "a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [] should be [a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testOkWithLinkedList() throws Exception {\u000a\u000a    final List<String> list = Lists.newLinkedList();\u000a    list.add("a");\u000a    list.add("a");\u000a    list.add("a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [a]\u000a\u000a}\u000a```\u000a\u000a</code>\u000a
p469
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1543) created by **bedla.czech** on 2013-09-25 at 11:58 AM_\u000a\u000a---\u000a\u000aHi,\u000a\u000aI have found strange behaviour of Iterables.removeIf method. When I remove items from iterable by frequency and having them nearby, every found duplicate item is removed even the last one. At a bottom you can find test snippets. There is difference between use of ArrayList and LinkedList.\u000a\u000aNote: I know that I should use Set for this kind of situations, but imagine that you do not have String list but list full of legacy uneditable s*it classes. Problem is inside Iterables.removeIfFromRandomAccessList method.\u000a\u000a<code language="java">\u000a&nbsp;&nbsp;&nbsp;&nbsp;@\ufeffTest\u000a&nbsp;&nbsp;&nbsp;&nbsp;public void testOk() throws Exception {\u000a\u000a```\u000a    final List<String> list = Lists.newArrayList("a", "b", "a");\u000a\u000a    System.out.println(list); // [a, b, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [b, a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testWrong() throws Exception {\u000a\u000a    final List<String> list = Lists.newArrayList("a", "a", "a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [] should be [a]\u000a\u000a}\u000a\u000a@Test\u000apublic void testOkWithLinkedList() throws Exception {\u000a\u000a    final List<String> list = Lists.newLinkedList();\u000a    list.add("a");\u000a    list.add("a");\u000a    list.add("a");\u000a\u000a    System.out.println(list); // [a, a, a]\u000a    Iterables.removeIf(list, new Predicate<String>() {\u000a        @Override\u000a        public boolean apply(String input) {\u000a            return Iterables.frequency(list, input) >= 2;\u000a        }\u000a    });\u000a    System.out.println(list); // [a]\u000a\u000a}\u000a```\u000a\u000a</code>\u000a
p470
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1558) created by **Maaartinus** on 2013-10-19 at 04:37 PM_\u000a\u000a---\u000a\u000aIn case the iterable shrinks in the meantime, the result of the class-accepting version of `Iterables.toArray`&nbsp;may contain nulls at its end.\u000a\u000aThe documentation says "return a newly-allocated array into which all the elements of the iterable have been copied", which actually doesn't prevent this. However, nobody expects `Iterables.toArray(a_not_null_allowing_set, some_class)`&nbsp;to contain several nulls.\u000a\u000aIn case you don't want to fix it, the documentation should state this very explicitly. Note that the other overload works fine.\u000a\u000aThe fix is trivial, just pass an empty array in place of the presized one. The only cost is the allocation of the empty array. A test is attached.\u000a
p471
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1558) created by **Maaartinus** on 2013-10-19 at 04:37 PM_\u000a\u000a---\u000a\u000aIn case the iterable shrinks in the meantime, the result of the class-accepting version of `Iterables.toArray`&nbsp;may contain nulls at its end.\u000a\u000aThe documentation says "return a newly-allocated array into which all the elements of the iterable have been copied", which actually doesn't prevent this. However, nobody expects `Iterables.toArray(a_not_null_allowing_set, some_class)`&nbsp;to contain several nulls.\u000a\u000aIn case you don't want to fix it, the documentation should state this very explicitly. Note that the other overload works fine.\u000a\u000aThe fix is trivial, just pass an empty array in place of the presized one. The only cost is the allocation of the empty array. A test is attached.\u000a
p472
aVI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p473
aVI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p474
asg19
(lp475
(lp476
I1
aag476
ag476
a(lp477
I2
aag477
a(lp478
I1
aag478
a(lp479
I1
aag479
asg22
(lp480
VIterables.removeIfFromRandomAccessList(..) not working with Lists prohibiting duplicates
p481
ag481
ag481
aVIterables.removeIf wrong items removed when ArrayList is used
p482
ag482
aVIterables.toArray broken in case of concurrent modifications
p483
ag483
aVIterators.concat is not gc friendly
p484
ag484
asg25
I0
sba(iArchitecture
Entity
p485
(dp486
g11
(lp487
g463
ag463
asg14
S'com.google.common.collect.Iterators'
p488
sg16
(lp489
VI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p490
aVI ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\u000a\u000a(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\u000a\u000aHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\u000a
p491
asg19
(lp492
g479
ag479
asg22
(lp493
g484
ag484
asg25
I0
sba(iArchitecture
Entity
p494
(dp495
g11
(lp496
sg14
S'com.google.common.collect.LexicographicalOrdering'
p497
sg16
(lp498
sg19
(lp499
sg22
(lp500
sg25
I0
sba(iArchitecture
Entity
p501
(dp502
g11
(lp503
sg14
S'com.google.common.collect.LinkedListMultimap'
p504
sg16
(lp505
sg19
(lp506
sg22
(lp507
sg25
I0
sba(iArchitecture
Entity
p508
(dp509
g11
(lp510
sg14
S'com.google.common.collect.Lists'
p511
sg16
(lp512
sg19
(lp513
sg22
(lp514
sg25
I0
sba(iArchitecture
Entity
p515
(dp516
g11
(lp517
sg14
S'com.google.common.collect.MapMakerInternalMap'
p518
sg16
(lp519
sg19
(lp520
sg22
(lp521
sg25
I0
sba(iArchitecture
Entity
p522
(dp523
g11
(lp524
g13
asg14
S'com.google.common.collect.MinMaxPriorityQueue'
p525
sg16
(lp526
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p527
asg19
(lp528
g21
asg22
(lp529
g24
asg25
I0
sba(iArchitecture
Entity
p530
(dp531
g11
(lp532
sg14
S'com.google.common.collect.Multisets'
p533
sg16
(lp534
sg19
(lp535
sg22
(lp536
sg25
I0
sba(iArchitecture
Entity
p537
(dp538
g11
(lp539
sg14
S'com.google.common.collect.NullsFirstOrdering'
p540
sg16
(lp541
sg19
(lp542
sg22
(lp543
sg25
I0
sba(iArchitecture
Entity
p544
(dp545
g11
(lp546
sg14
S'com.google.common.collect.NullsLastOrdering'
p547
sg16
(lp548
sg19
(lp549
sg22
(lp550
sg25
I0
sba(iArchitecture
Entity
p551
(dp552
g11
(lp553
sg14
S'com.google.common.collect.ObjectArrays'
p554
sg16
(lp555
sg19
(lp556
sg22
(lp557
sg25
I0
sba(iArchitecture
Entity
p558
(dp559
g11
(lp560
V1342
p561
ag561
ag561
asg14
S'com.google.common.collect.Ordering'
p562
sg16
(lp563
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1342) created by **kevinb@google.com** on 2013-03-15 at 05:18 PM_\u000a\u000a---\u000a\u000aIt's very hard to figure out what Ordering.natural().nullsFirst().reverse().lexicographical().reverse().nullsLast() means.\u000a\u000aWe can make it a lot easier for the user by walking through how we read and interpret a few salient examples.\u000a
p564
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1342) created by **kevinb@google.com** on 2013-03-15 at 05:18 PM_\u000a\u000a---\u000a\u000aIt's very hard to figure out what Ordering.natural().nullsFirst().reverse().lexicographical().reverse().nullsLast() means.\u000a\u000aWe can make it a lot easier for the user by walking through how we read and interpret a few salient examples.\u000a
p565
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1342) created by **kevinb@google.com** on 2013-03-15 at 05:18 PM_\u000a\u000a---\u000a\u000aIt's very hard to figure out what Ordering.natural().nullsFirst().reverse().lexicographical().reverse().nullsLast() means.\u000a\u000aWe can make it a lot easier for the user by walking through how we read and interpret a few salient examples.\u000a
p566
asg19
(lp567
(lp568
I2
aag568
ag568
asg22
(lp569
VAdd docs to Ordering to give guidance how to parse and understand long chains of calls
p570
ag570
ag570
asg25
I0
sba(iArchitecture
Entity
p571
(dp572
g11
(lp573
sg14
S'com.google.common.collect.Range'
p574
sg16
(lp575
sg19
(lp576
sg22
(lp577
sg25
I0
sba(iArchitecture
Entity
p578
(dp579
g11
(lp580
g220
asg14
S'com.google.common.collect.RegularContiguousSet'
p581
sg16
(lp582
VLet a < x < b:\u000a- [x].intersection([x]) should return [x], returns [],\u000a- [x].intersection([a..b]) should return [x], returns [],\u000a- [a..b].intersection([x]) should return [x], returns [],\u000a- [a..x].intersection([x..b]) should return [x], returns [].\u000a\u000aI'll create a PR in a minute.\u000a
p583
asg19
(lp584
g225
asg22
(lp585
g227
asg25
I0
sba(iArchitecture
Entity
p586
(dp587
g11
(lp588
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p589
sg16
(lp590
sg19
(lp591
sg22
(lp592
sg25
I0
sba(iArchitecture
Entity
p593
(dp594
g11
(lp595
g398
asg14
S'com.google.common.collect.RegularImmutableList'
p596
sg16
(lp597
VImmutableList contains following code since version 15.0\u000a\u000a private static final ImmutableList<Object> EMPTY =\u000a      new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);\u000a
p598
asg19
(lp599
g404
asg22
(lp600
g406
asg25
I0
sba(iArchitecture
Entity
p601
(dp602
g11
(lp603
sg14
S'com.google.common.collect.RegularImmutableMultiset'
p604
sg16
(lp605
sg19
(lp606
sg22
(lp607
sg25
I0
sba(iArchitecture
Entity
p608
(dp609
g11
(lp610
sg14
S'com.google.common.collect.RegularImmutableSet'
p611
sg16
(lp612
sg19
(lp613
sg22
(lp614
sg25
I0
sba(iArchitecture
Entity
p615
(dp616
g11
(lp617
sg14
S'com.google.common.collect.RegularImmutableSortedMap'
p618
sg16
(lp619
sg19
(lp620
sg22
(lp621
sg25
I0
sba(iArchitecture
Entity
p622
(dp623
g11
(lp624
sg14
S'com.google.common.collect.RegularImmutableSortedMultiset'
p625
sg16
(lp626
sg19
(lp627
sg22
(lp628
sg25
I0
sba(iArchitecture
Entity
p629
(dp630
g11
(lp631
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p632
sg16
(lp633
sg19
(lp634
sg22
(lp635
sg25
I0
sba(iArchitecture
Entity
p636
(dp637
g11
(lp638
sg14
S'com.google.common.collect.RegularImmutableTable'
p639
sg16
(lp640
sg19
(lp641
sg22
(lp642
sg25
I0
sba(iArchitecture
Entity
p643
(dp644
g11
(lp645
sg14
S'com.google.common.collect.ReverseOrdering'
p646
sg16
(lp647
sg19
(lp648
sg22
(lp649
sg25
I0
sba(iArchitecture
Entity
p650
(dp651
g11
(lp652
sg14
S'com.google.common.collect.SingletonImmutableList'
p653
sg16
(lp654
sg19
(lp655
sg22
(lp656
sg25
I0
sba(iArchitecture
Entity
p657
(dp658
g11
(lp659
sg14
S'com.google.common.collect.SingletonImmutableSet'
p660
sg16
(lp661
sg19
(lp662
sg22
(lp663
sg25
I0
sba(iArchitecture
Entity
p664
(dp665
g11
(lp666
sg14
S'com.google.common.collect.StandardTable'
p667
sg16
(lp668
sg19
(lp669
sg22
(lp670
sg25
I0
sba(iArchitecture
Entity
p671
(dp672
g11
(lp673
sg14
S'com.google.common.collect.Synchronized'
p674
sg16
(lp675
sg19
(lp676
sg22
(lp677
sg25
I0
sba(iArchitecture
Entity
p678
(dp679
g11
(lp680
sg14
S'com.google.common.collect.TransformedListIterator'
p681
sg16
(lp682
sg19
(lp683
sg22
(lp684
sg25
I0
sba(iArchitecture
Entity
p685
(dp686
g11
(lp687
sg14
S'com.google.common.collect.TreeMultiset'
p688
sg16
(lp689
sg19
(lp690
sg22
(lp691
sg25
I0
sba(iArchitecture
Entity
p692
(dp693
g11
(lp694
g13
asg14
S'com.google.common.collect.TreeRangeMap'
p695
sg16
(lp696
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p697
asg19
(lp698
g21
asg22
(lp699
g24
asg25
I0
sba(iArchitecture
Entity
p700
(dp701
g11
(lp702
sg14
S'com.google.common.collect.TreeRangeSet'
p703
sg16
(lp704
sg19
(lp705
sg22
(lp706
sg25
I0
sba(iArchitecture
Entity
p707
(dp708
g11
(lp709
sg14
S'com.google.common.escape.CharEscaper'
p710
sg16
(lp711
sg19
(lp712
sg22
(lp713
sg25
I0
sba(iArchitecture
Entity
p714
(dp715
g11
(lp716
sg14
S'com.google.common.escape.CharEscaperBuilder'
p717
sg16
(lp718
sg19
(lp719
sg22
(lp720
sg25
I0
sba(iArchitecture
Entity
p721
(dp722
g11
(lp723
g13
asg14
S'com.google.common.escape.UnicodeEscaper'
p724
sg16
(lp725
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p726
asg19
(lp727
g21
asg22
(lp728
g24
asg25
I0
sba(iArchitecture
Entity
p729
(dp730
g11
(lp731
sg14
S'com.google.common.eventbus.EventSubscriber'
p732
sg16
(lp733
sg19
(lp734
sg22
(lp735
sg25
I0
sba(iArchitecture
Entity
p736
(dp737
g11
(lp738
sg14
S'com.google.common.hash.AbstractCompositeHashFunction'
p739
sg16
(lp740
sg19
(lp741
sg22
(lp742
sg25
I0
sba(iArchitecture
Entity
p743
(dp744
g11
(lp745
sg14
S'com.google.common.hash.BloomFilterStrategies'
p746
sg16
(lp747
sg19
(lp748
sg22
(lp749
sg25
I0
sba(iArchitecture
Entity
p750
(dp751
g11
(lp752
sg14
S'com.google.common.hash.ChecksumHashFunction'
p753
sg16
(lp754
sg19
(lp755
sg22
(lp756
sg25
I0
sba(iArchitecture
Entity
p757
(dp758
g11
(lp759
sg14
S'com.google.common.hash.Crc32cHashFunction'
p760
sg16
(lp761
sg19
(lp762
sg22
(lp763
sg25
I0
sba(iArchitecture
Entity
p764
(dp765
g11
(lp766
sg14
S'com.google.common.hash.HashCode'
p767
sg16
(lp768
sg19
(lp769
sg22
(lp770
sg25
I0
sba(iArchitecture
Entity
p771
(dp772
g11
(lp773
g86
asg14
S'com.google.common.hash.Hashing'
p774
sg16
(lp775
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p776
asg19
(lp777
g91
asg22
(lp778
g93
asg25
I0
sba(iArchitecture
Entity
p779
(dp780
g11
(lp781
sg14
S'com.google.common.hash.Murmur3_128HashFunction'
p782
sg16
(lp783
sg19
(lp784
sg22
(lp785
sg25
I0
sba(iArchitecture
Entity
p786
(dp787
g11
(lp788
sg14
S'com.google.common.hash.Murmur3_32HashFunction'
p789
sg16
(lp790
sg19
(lp791
sg22
(lp792
sg25
I0
sba(iArchitecture
Entity
p793
(dp794
g11
(lp795
sg14
S'com.google.common.hash.SipHashFunction'
p796
sg16
(lp797
sg19
(lp798
sg22
(lp799
sg25
I0
sba(iArchitecture
Entity
p800
(dp801
g11
(lp802
sg14
S'com.google.common.io.ByteArrayDataOutput'
p803
sg16
(lp804
sg19
(lp805
sg22
(lp806
sg25
I0
sba(iArchitecture
Entity
p807
(dp808
g11
(lp809
sg14
S'com.google.common.io.CharSequenceReader'
p810
sg16
(lp811
sg19
(lp812
sg22
(lp813
sg25
I0
sba(iArchitecture
Entity
p814
(dp815
g11
(lp816
sg14
S'com.google.common.io.MultiReader'
p817
sg16
(lp818
sg19
(lp819
sg22
(lp820
sg25
I0
sba(iArchitecture
Entity
p821
(dp822
g11
(lp823
sg14
S'com.google.common.math.BigIntegerMath'
p824
sg16
(lp825
sg19
(lp826
sg22
(lp827
sg25
I0
sba(iArchitecture
Entity
p828
(dp829
g11
(lp830
sg14
S'com.google.common.math.DoubleMath'
p831
sg16
(lp832
sg19
(lp833
sg22
(lp834
sg25
I0
sba(iArchitecture
Entity
p835
(dp836
g11
(lp837
sg14
S'com.google.common.math.IntMath'
p838
sg16
(lp839
sg19
(lp840
sg22
(lp841
sg25
I0
sba(iArchitecture
Entity
p842
(dp843
g11
(lp844
sg14
S'com.google.common.net.PercentEscaper'
p845
sg16
(lp846
sg19
(lp847
sg22
(lp848
sg25
I0
sba(iArchitecture
Entity
p849
(dp850
g11
(lp851
sg14
S'com.google.common.primitives.Booleans'
p852
sg16
(lp853
sg19
(lp854
sg22
(lp855
sg25
I0
sba(iArchitecture
Entity
p856
(dp857
g11
(lp858
sg14
S'com.google.common.primitives.Bytes'
p859
sg16
(lp860
sg19
(lp861
sg22
(lp862
sg25
I0
sba(iArchitecture
Entity
p863
(dp864
g11
(lp865
g86
asg14
S'com.google.common.primitives.Chars'
p866
sg16
(lp867
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p868
asg19
(lp869
g91
asg22
(lp870
g93
asg25
I0
sba(iArchitecture
Entity
p871
(dp872
g11
(lp873
g13
ag13
asg14
S'com.google.common.primitives.Doubles'
p874
sg16
(lp875
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p876
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p877
asg19
(lp878
g21
ag21
asg22
(lp879
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p880
(dp881
g11
(lp882
g13
ag13
asg14
S'com.google.common.primitives.Floats'
p883
sg16
(lp884
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p885
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p886
asg19
(lp887
g21
ag21
asg22
(lp888
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p889
(dp890
g11
(lp891
g13
ag13
asg14
S'com.google.common.primitives.Ints'
p892
sg16
(lp893
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p894
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p895
asg19
(lp896
g21
ag21
asg22
(lp897
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p898
(dp899
g11
(lp900
g13
asg14
S'com.google.common.primitives.Longs'
p901
sg16
(lp902
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p903
asg19
(lp904
g21
asg22
(lp905
g24
asg25
I0
sba(iArchitecture
Entity
p906
(dp907
g11
(lp908
g13
ag13
asg14
S'com.google.common.primitives.Shorts'
p909
sg16
(lp910
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p911
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p912
asg19
(lp913
g21
ag21
asg22
(lp914
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p915
(dp916
g11
(lp917
sg14
S'com.google.common.primitives.SignedBytes'
p918
sg16
(lp919
sg19
(lp920
sg22
(lp921
sg25
I0
sba(iArchitecture
Entity
p922
(dp923
g11
(lp924
sg14
S'com.google.common.primitives.UnsignedBytes'
p925
sg16
(lp926
sg19
(lp927
sg22
(lp928
sg25
I0
sba(iArchitecture
Entity
p929
(dp930
g11
(lp931
sg14
S'com.google.common.primitives.UnsignedInteger'
p932
sg16
(lp933
sg19
(lp934
sg22
(lp935
sg25
I0
sba(iArchitecture
Entity
p936
(dp937
g11
(lp938
sg14
S'com.google.common.primitives.UnsignedInts'
p939
sg16
(lp940
sg19
(lp941
sg22
(lp942
sg25
I0
sba(iArchitecture
Entity
p943
(dp944
g11
(lp945
sg14
S'com.google.common.primitives.UnsignedLong'
p946
sg16
(lp947
sg19
(lp948
sg22
(lp949
sg25
I0
sba(iArchitecture
Entity
p950
(dp951
g11
(lp952
sg14
S'com.google.common.primitives.UnsignedLongs'
p953
sg16
(lp954
sg19
(lp955
sg22
(lp956
sg25
I0
sba(iArchitecture
Entity
p957
(dp958
g11
(lp959
g13
asg14
S'com.google.common.reflect.Element'
p960
sg16
(lp961
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p962
asg19
(lp963
g21
asg22
(lp964
g24
asg25
I0
sba(iArchitecture
Entity
p965
(dp966
g11
(lp967
g13
asg14
S'com.google.common.reflect.Invokable'
p968
sg16
(lp969
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p970
asg19
(lp971
g21
asg22
(lp972
g24
asg25
I0
sba(iArchitecture
Entity
p973
(dp974
g11
(lp975
g13
asg14
S'com.google.common.reflect.Parameter'
p976
sg16
(lp977
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p978
asg19
(lp979
g21
asg22
(lp980
g24
asg25
I0
sba(iArchitecture
Entity
p981
(dp982
g11
(lp983
sg14
S'com.google.common.util.concurrent.AbstractIdleService'
p984
sg16
(lp985
sg19
(lp986
sg22
(lp987
sg25
I0
sba(iArchitecture
Entity
p988
(dp989
g11
(lp990
sg14
S'com.google.common.util.concurrent.AtomicDouble'
p991
sg16
(lp992
sg19
(lp993
sg22
(lp994
sg25
I0
sba(iArchitecture
Entity
p995
(dp996
g11
(lp997
sg14
S'com.google.common.util.concurrent.AtomicDoubleArray'
p998
sg16
(lp999
sg19
(lp1000
sg22
(lp1001
sg25
I0
sba(iArchitecture
Entity
p1002
(dp1003
g11
(lp1004
g13
asg14
S'com.google.common.util.concurrent.Monitor'
p1005
sg16
(lp1006
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1007
asg19
(lp1008
g21
asg22
(lp1009
g24
asg25
I0
sba(iArchitecture
Entity
p1010
(dp1011
g11
(lp1012
sg14
S'com.google.common.util.concurrent.Striped'
p1013
sg16
(lp1014
sg19
(lp1015
sg22
(lp1016
sg25
I0
sbasS'classes'
p1017
(lp1018
g15
ag29
ag37
ag44
ag51
ag58
ag65
ag72
ag79
ag87
ag99
ag112
ag119
ag126
ag134
ag142
ag149
ag156
ag163
ag170
ag177
ag184
ag191
ag198
ag205
ag213
ag221
ag231
ag238
ag245
ag252
ag259
ag266
ag273
ag280
ag288
ag295
ag302
ag309
ag316
ag324
ag335
ag342
ag349
ag356
ag363
ag370
ag377
ag384
ag391
ag399
ag410
ag417
ag424
ag431
ag438
ag445
ag452
ag464
ag488
ag497
ag504
ag511
ag518
ag525
ag533
ag540
ag547
ag554
ag562
ag574
ag581
ag589
ag596
ag604
ag611
ag618
ag625
ag632
ag639
ag646
ag653
ag660
ag667
ag674
ag681
ag688
ag695
ag703
ag710
ag717
ag724
ag732
ag739
ag746
ag753
ag760
ag767
ag774
ag782
ag789
ag796
ag803
ag810
ag817
ag824
ag831
ag838
ag845
ag852
ag859
ag866
ag874
ag883
ag892
ag901
ag909
ag918
ag925
ag932
ag939
ag946
ag953
ag960
ag968
ag976
ag984
ag991
ag998
ag1005
ag1013
asg25
I0
sS'label'
p1019
S'graphics'
p1020
sba(iArchitecture
Cluster
p1021
(dp1022
g7
(lp1023
(iArchitecture
Entity
p1024
(dp1025
g11
(lp1026
sg14
S'com.google.common.base.Ascii'
p1027
sg16
(lp1028
sg19
(lp1029
sg22
(lp1030
sg25
I0
sba(iArchitecture
Entity
p1031
(dp1032
g11
(lp1033
sg14
S'com.google.common.base.CaseFormat'
p1034
sg16
(lp1035
sg19
(lp1036
sg22
(lp1037
sg25
I0
sba(iArchitecture
Entity
p1038
(dp1039
g11
(lp1040
sg14
S'com.google.common.base.Charsets'
p1041
sg16
(lp1042
sg19
(lp1043
sg22
(lp1044
sg25
I0
sba(iArchitecture
Entity
p1045
(dp1046
g11
(lp1047
sg14
S'com.google.common.base.FunctionalEquivalence'
p1048
sg16
(lp1049
sg19
(lp1050
sg22
(lp1051
sg25
I0
sba(iArchitecture
Entity
p1052
(dp1053
g11
(lp1054
V1125
p1055
asg14
S'com.google.common.base.MoreObjects'
p1056
sg16
(lp1057
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1125) created by **adrianshum** on 2012-08-29 at 03:06 AM_\u000a\u000a---\u000a\u000aCurrently there is no handling for arrays in helpers in Objects, e.g. toStringHelper and Object.equal.\u000a\u000aThat means, I cannot do\u000aObjects.toStringHelper(getClass())\u000a&nbsp;&nbsp;&nbsp;&nbsp;.add("foo", this.foo)\u000a&nbsp;&nbsp;&nbsp;&nbsp;.add("anArray", this.anArray)\u000a&nbsp;&nbsp;&nbsp;&nbsp;.toString();\u000a\u000a(I know I can change it to add("anArray", Arrays.toString(this.anArray)) but it looks bad)\u000a\u000aSame for Objects.equal, when I am overriding equals(), I cannot do:\u000areturn Objects.equal("foo", other.foo) \u000a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&& Objects.equals("anArray", other.anArray);\u000a\u000aI believe adding corresponding overloads should not be difficult, and it makes the API much easier to use.\u000a
p1058
asg19
(lp1059
(lp1060
I0
aasg22
(lp1061
VArray handling in Objects#toStringHelper
p1062
asg25
I0
sba(iArchitecture
Entity
p1063
(dp1064
g11
(lp1065
sg14
S'com.google.common.base.Objects'
p1066
sg16
(lp1067
sg19
(lp1068
sg22
(lp1069
sg25
I0
sba(iArchitecture
Entity
p1070
(dp1071
g11
(lp1072
sg14
S'com.google.common.base.Utf8'
p1073
sg16
(lp1074
sg19
(lp1075
sg22
(lp1076
sg25
I0
sba(iArchitecture
Entity
p1077
(dp1078
g11
(lp1079
g13
asg14
S'com.google.common.collect.AllEqualOrdering'
p1080
sg16
(lp1081
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1082
asg19
(lp1083
g21
asg22
(lp1084
g24
asg25
I0
sba(iArchitecture
Entity
p1085
(dp1086
g11
(lp1087
sg14
S'com.google.common.collect.ArrayListMultimap'
p1088
sg16
(lp1089
sg19
(lp1090
sg22
(lp1091
sg25
I0
sba(iArchitecture
Entity
p1092
(dp1093
g11
(lp1094
sg14
S'com.google.common.collect.ByFunctionOrdering'
p1095
sg16
(lp1096
sg19
(lp1097
sg22
(lp1098
sg25
I0
sba(iArchitecture
Entity
p1099
(dp1100
g11
(lp1101
sg14
S'com.google.common.collect.ComparatorOrdering'
p1102
sg16
(lp1103
sg19
(lp1104
sg22
(lp1105
sg25
I0
sba(iArchitecture
Entity
p1106
(dp1107
g11
(lp1108
sg14
S'com.google.common.collect.HashMultimap'
p1109
sg16
(lp1110
sg19
(lp1111
sg22
(lp1112
sg25
I0
sba(iArchitecture
Entity
p1113
(dp1114
g11
(lp1115
sg14
S'com.google.common.collect.HashMultiset'
p1116
sg16
(lp1117
sg19
(lp1118
sg22
(lp1119
sg25
I0
sba(iArchitecture
Entity
p1120
(dp1121
g11
(lp1122
g13
asg14
S'com.google.common.collect.ImmutableAsList'
p1123
sg16
(lp1124
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1125
asg19
(lp1126
g21
asg22
(lp1127
g24
asg25
I0
sba(iArchitecture
Entity
p1128
(dp1129
g11
(lp1130
sg14
S'com.google.common.collect.ImmutableEntry'
p1131
sg16
(lp1132
sg19
(lp1133
sg22
(lp1134
sg25
I0
sba(iArchitecture
Entity
p1135
(dp1136
g11
(lp1137
sg14
S'com.google.common.collect.ImmutableListMultimap'
p1138
sg16
(lp1139
sg19
(lp1140
sg22
(lp1141
sg25
I0
sba(iArchitecture
Entity
p1142
(dp1143
g11
(lp1144
sg14
S'com.google.common.collect.LinkedHashMultiset'
p1145
sg16
(lp1146
sg19
(lp1147
sg22
(lp1148
sg25
I0
sba(iArchitecture
Entity
p1149
(dp1150
g11
(lp1151
g13
aV1451
p1152
asg14
S'com.google.common.collect.NaturalOrdering'
p1153
sg16
(lp1154
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1155
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1451) created by **drothmaler** on 2013-06-18 at 01:46 PM_\u000a\u000a---\u000a\u000aI think it would be good to extend the NaturalOrdering and ReverseNaturalOrdering implementations, to hold instances of their nullsFirst() and nullsLast() versions too.\u000aThis is because things like Ordering.natural().nullsFirst() are frequently used and currently there will be created a NullsFirstOrdering/NullsLastOrdering instance each time, you access it. \u000a\u000aIn many cases this will not be a problem, but if you use it inside a compareTo or compare method (e.g. in combination with the ComparisonChain as suggested in Issue 500 & Issue 556), it really makes a difference whether you use a share instance, or not.\u000a
p1156
asg19
(lp1157
g21
a(lp1158
I3
aasg22
(lp1159
g24
aVUse Singleton instances for nullable natural Orderings
p1160
asg25
I0
sba(iArchitecture
Entity
p1161
(dp1162
g11
(lp1163
g13
asg14
S'com.google.common.collect.ReverseNaturalOrdering'
p1164
sg16
(lp1165
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1166
asg19
(lp1167
g21
asg22
(lp1168
g24
asg25
I0
sba(iArchitecture
Entity
p1169
(dp1170
g11
(lp1171
sg14
S'com.google.common.collect.Serialization'
p1172
sg16
(lp1173
sg19
(lp1174
sg22
(lp1175
sg25
I0
sba(iArchitecture
Entity
p1176
(dp1177
g11
(lp1178
sg14
S'com.google.common.collect.TransformedIterator'
p1179
sg16
(lp1180
sg19
(lp1181
sg22
(lp1182
sg25
I0
sba(iArchitecture
Entity
p1183
(dp1184
g11
(lp1185
sg14
S'com.google.common.collect.UnmodifiableIterator'
p1186
sg16
(lp1187
sg19
(lp1188
sg22
(lp1189
sg25
I0
sba(iArchitecture
Entity
p1190
(dp1191
g11
(lp1192
g13
asg14
S'com.google.common.collect.UsingToStringOrdering'
p1193
sg16
(lp1194
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1195
asg19
(lp1196
g21
asg22
(lp1197
g24
asg25
I0
sba(iArchitecture
Entity
p1198
(dp1199
g11
(lp1200
sg14
S'com.google.common.escape.ArrayBasedCharEscaper'
p1201
sg16
(lp1202
sg19
(lp1203
sg22
(lp1204
sg25
I0
sba(iArchitecture
Entity
p1205
(dp1206
g11
(lp1207
sg14
S'com.google.common.escape.ArrayBasedEscaperMap'
p1208
sg16
(lp1209
sg19
(lp1210
sg22
(lp1211
sg25
I0
sba(iArchitecture
Entity
p1212
(dp1213
g11
(lp1214
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaper'
p1215
sg16
(lp1216
sg19
(lp1217
sg22
(lp1218
sg25
I0
sba(iArchitecture
Entity
p1219
(dp1220
g11
(lp1221
sg14
S'com.google.common.escape.Escaper'
p1222
sg16
(lp1223
sg19
(lp1224
sg22
(lp1225
sg25
I0
sba(iArchitecture
Entity
p1226
(dp1227
g11
(lp1228
sg14
S'com.google.common.escape.Escapers'
p1229
sg16
(lp1230
sg19
(lp1231
sg22
(lp1232
sg25
I0
sba(iArchitecture
Entity
p1233
(dp1234
g11
(lp1235
sg14
S'com.google.common.escape.Platform'
p1236
sg16
(lp1237
sg19
(lp1238
sg22
(lp1239
sg25
I0
sba(iArchitecture
Entity
p1240
(dp1241
g11
(lp1242
sg14
S'com.google.common.hash.AbstractByteHasher'
p1243
sg16
(lp1244
sg19
(lp1245
sg22
(lp1246
sg25
I0
sba(iArchitecture
Entity
p1247
(dp1248
g11
(lp1249
sg14
S'com.google.common.hash.AbstractHasher'
p1250
sg16
(lp1251
sg19
(lp1252
sg22
(lp1253
sg25
I0
sba(iArchitecture
Entity
p1254
(dp1255
g11
(lp1256
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunction'
p1257
sg16
(lp1258
sg19
(lp1259
sg22
(lp1260
sg25
I0
sba(iArchitecture
Entity
p1261
(dp1262
g11
(lp1263
sg14
S'com.google.common.hash.AbstractStreamingHashFunction'
p1264
sg16
(lp1265
sg19
(lp1266
sg22
(lp1267
sg25
I0
sba(iArchitecture
Entity
p1268
(dp1269
g11
(lp1270
sg14
S'com.google.common.hash.BloomFilter'
p1271
sg16
(lp1272
sg19
(lp1273
sg22
(lp1274
sg25
I0
sba(iArchitecture
Entity
p1275
(dp1276
g11
(lp1277
sg14
S'com.google.common.hash.Funnels'
p1278
sg16
(lp1279
sg19
(lp1280
sg22
(lp1281
sg25
I0
sba(iArchitecture
Entity
p1282
(dp1283
g11
(lp1284
sg14
S'com.google.common.hash.HashFunction'
p1285
sg16
(lp1286
sg19
(lp1287
sg22
(lp1288
sg25
I0
sba(iArchitecture
Entity
p1289
(dp1290
g11
(lp1291
sg14
S'com.google.common.hash.Hasher'
p1292
sg16
(lp1293
sg19
(lp1294
sg22
(lp1295
sg25
I0
sba(iArchitecture
Entity
p1296
(dp1297
g11
(lp1298
sg14
S'com.google.common.hash.HashingInputStream'
p1299
sg16
(lp1300
sg19
(lp1301
sg22
(lp1302
sg25
I0
sba(iArchitecture
Entity
p1303
(dp1304
g11
(lp1305
sg14
S'com.google.common.hash.HashingOutputStream'
p1306
sg16
(lp1307
sg19
(lp1308
sg22
(lp1309
sg25
I0
sba(iArchitecture
Entity
p1310
(dp1311
g11
(lp1312
sg14
S'com.google.common.hash.MessageDigestHashFunction'
p1313
sg16
(lp1314
sg19
(lp1315
sg22
(lp1316
sg25
I0
sba(iArchitecture
Entity
p1317
(dp1318
g11
(lp1319
sg14
S'com.google.common.hash.PrimitiveSink'
p1320
sg16
(lp1321
sg19
(lp1322
sg22
(lp1323
sg25
I0
sba(iArchitecture
Entity
p1324
(dp1325
g11
(lp1326
sg14
S'com.google.common.io.AppendableWriter'
p1327
sg16
(lp1328
sg19
(lp1329
sg22
(lp1330
sg25
I0
sba(iArchitecture
Entity
p1331
(dp1332
g11
(lp1333
V1947
p1334
ag1334
ag1334
ag1334
ag1334
asg14
S'com.google.common.io.BaseEncoding'
p1335
sg16
(lp1336
VWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1337
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1338
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1339
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1340
aVWhen decoding Base64/32/16 data an exception is thrown if an invalid character is found:\u000a\u000aBaseEncoding.java:501:\u000a\u000a``` java\u000a    int decode(char ch) throws IOException {\u000a      if (ch > Ascii.MAX || decodabet[ch] == -1) {\u000a        throw new DecodingException("Unrecognized character: " + ch);\u000a      }\u000a      return decodabet[ch];\u000a    }\u000a```\u000a\u000aThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\u000a
p1341
asg19
(lp1342
(lp1343
I0
aag1343
ag1343
ag1343
ag1343
asg22
(lp1344
VImprove invalid character exceptions from BaseEncoding
p1345
ag1345
ag1345
ag1345
ag1345
asg25
I0
sba(iArchitecture
Entity
p1346
(dp1347
g11
(lp1348
sg14
S'com.google.common.io.ByteArrayDataInput'
p1349
sg16
(lp1350
sg19
(lp1351
sg22
(lp1352
sg25
I0
sba(iArchitecture
Entity
p1353
(dp1354
g11
(lp1355
sg14
S'com.google.common.io.ByteProcessor'
p1356
sg16
(lp1357
sg19
(lp1358
sg22
(lp1359
sg25
I0
sba(iArchitecture
Entity
p1360
(dp1361
g11
(lp1362
sg14
S'com.google.common.io.ByteSink'
p1363
sg16
(lp1364
sg19
(lp1365
sg22
(lp1366
sg25
I0
sba(iArchitecture
Entity
p1367
(dp1368
g11
(lp1369
V2127
p1370
ag1370
asg14
S'com.google.common.io.ByteSource'
p1371
sg16
(lp1372
VAn algorithm similar to `java.lang.Math.addExact()` should be used to compute `offset + length`  and fallback to `Integer.MAX_VALUE` or `Long.MAX_VALUE` in case of overflow. \u000aThere is 3 occurrences of this possibly overflowing addition in `ByteSource.java`.\u000a\u000aI found this bug because I regularly slice bytesources with a length equals to Long.MAX_VALUE.\u000a
p1373
aVAn algorithm similar to `java.lang.Math.addExact()` should be used to compute `offset + length`  and fallback to `Integer.MAX_VALUE` or `Long.MAX_VALUE` in case of overflow. \u000aThere is 3 occurrences of this possibly overflowing addition in `ByteSource.java`.\u000a\u000aI found this bug because I regularly slice bytesources with a length equals to Long.MAX_VALUE.\u000a
p1374
asg19
(lp1375
(lp1376
I1
aag1376
asg22
(lp1377
V19rc1 regression in sliced bytesource: offset + length may overflow for large length values
p1378
ag1378
asg25
I0
sba(iArchitecture
Entity
p1379
(dp1380
g11
(lp1381
sg14
S'com.google.common.io.ByteStreams'
p1382
sg16
(lp1383
sg19
(lp1384
sg22
(lp1385
sg25
I0
sba(iArchitecture
Entity
p1386
(dp1387
g11
(lp1388
sg14
S'com.google.common.io.CharSink'
p1389
sg16
(lp1390
sg19
(lp1391
sg22
(lp1392
sg25
I0
sba(iArchitecture
Entity
p1393
(dp1394
g11
(lp1395
sg14
S'com.google.common.io.CharSource'
p1396
sg16
(lp1397
sg19
(lp1398
sg22
(lp1399
sg25
I0
sba(iArchitecture
Entity
p1400
(dp1401
g11
(lp1402
sg14
S'com.google.common.io.CharStreams'
p1403
sg16
(lp1404
sg19
(lp1405
sg22
(lp1406
sg25
I0
sba(iArchitecture
Entity
p1407
(dp1408
g11
(lp1409
sg14
S'com.google.common.io.Closeables'
p1410
sg16
(lp1411
sg19
(lp1412
sg22
(lp1413
sg25
I0
sba(iArchitecture
Entity
p1414
(dp1415
g11
(lp1416
sg14
S'com.google.common.io.CountingInputStream'
p1417
sg16
(lp1418
sg19
(lp1419
sg22
(lp1420
sg25
I0
sba(iArchitecture
Entity
p1421
(dp1422
g11
(lp1423
sg14
S'com.google.common.io.CountingOutputStream'
p1424
sg16
(lp1425
sg19
(lp1426
sg22
(lp1427
sg25
I0
sba(iArchitecture
Entity
p1428
(dp1429
g11
(lp1430
sg14
S'com.google.common.io.FileBackedOutputStream'
p1431
sg16
(lp1432
sg19
(lp1433
sg22
(lp1434
sg25
I0
sba(iArchitecture
Entity
p1435
(dp1436
g11
(lp1437
sg14
S'com.google.common.io.FileWriteMode'
p1438
sg16
(lp1439
sg19
(lp1440
sg22
(lp1441
sg25
I0
sba(iArchitecture
Entity
p1442
(dp1443
g11
(lp1444
sg14
S'com.google.common.io.Files'
p1445
sg16
(lp1446
sg19
(lp1447
sg22
(lp1448
sg25
I0
sba(iArchitecture
Entity
p1449
(dp1450
g11
(lp1451
sg14
S'com.google.common.io.Flushables'
p1452
sg16
(lp1453
sg19
(lp1454
sg22
(lp1455
sg25
I0
sba(iArchitecture
Entity
p1456
(dp1457
g11
(lp1458
sg14
S'com.google.common.io.GwtWorkarounds'
p1459
sg16
(lp1460
sg19
(lp1461
sg22
(lp1462
sg25
I0
sba(iArchitecture
Entity
p1463
(dp1464
g11
(lp1465
sg14
S'com.google.common.io.LineBuffer'
p1466
sg16
(lp1467
sg19
(lp1468
sg22
(lp1469
sg25
I0
sba(iArchitecture
Entity
p1470
(dp1471
g11
(lp1472
sg14
S'com.google.common.io.LineProcessor'
p1473
sg16
(lp1474
sg19
(lp1475
sg22
(lp1476
sg25
I0
sba(iArchitecture
Entity
p1477
(dp1478
g11
(lp1479
sg14
S'com.google.common.io.LineReader'
p1480
sg16
(lp1481
sg19
(lp1482
sg22
(lp1483
sg25
I0
sba(iArchitecture
Entity
p1484
(dp1485
g11
(lp1486
sg14
S'com.google.common.io.LittleEndianDataInputStream'
p1487
sg16
(lp1488
sg19
(lp1489
sg22
(lp1490
sg25
I0
sba(iArchitecture
Entity
p1491
(dp1492
g11
(lp1493
sg14
S'com.google.common.io.LittleEndianDataOutputStream'
p1494
sg16
(lp1495
sg19
(lp1496
sg22
(lp1497
sg25
I0
sba(iArchitecture
Entity
p1498
(dp1499
g11
(lp1500
sg14
S'com.google.common.io.MultiInputStream'
p1501
sg16
(lp1502
sg19
(lp1503
sg22
(lp1504
sg25
I0
sba(iArchitecture
Entity
p1505
(dp1506
g11
(lp1507
sg14
S'com.google.common.io.OutputSupplier'
p1508
sg16
(lp1509
sg19
(lp1510
sg22
(lp1511
sg25
I0
sba(iArchitecture
Entity
p1512
(dp1513
g11
(lp1514
sg14
S'com.google.common.io.PatternFilenameFilter'
p1515
sg16
(lp1516
sg19
(lp1517
sg22
(lp1518
sg25
I0
sba(iArchitecture
Entity
p1519
(dp1520
g11
(lp1521
sg14
S'com.google.common.io.package-info'
p1522
sg16
(lp1523
sg19
(lp1524
sg22
(lp1525
sg25
I0
sba(iArchitecture
Entity
p1526
(dp1527
g11
(lp1528
sg14
S'com.google.common.util.concurrent.AsyncFunction'
p1529
sg16
(lp1530
sg19
(lp1531
sg22
(lp1532
sg25
I0
sba(iArchitecture
Entity
p1533
(dp1534
g11
(lp1535
sg14
S'com.google.common.util.concurrent.Futures'
p1536
sg16
(lp1537
sg19
(lp1538
sg22
(lp1539
sg25
I0
sba(iArchitecture
Entity
p1540
(dp1541
g11
(lp1542
g86
asg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlers'
p1543
sg16
(lp1544
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p1545
asg19
(lp1546
g91
asg22
(lp1547
g93
asg25
I0
sba(iArchitecture
Entity
p1548
(dp1549
g11
(lp1550
sg14
S'com.google.common.xml.XmlEscapers'
p1551
sg16
(lp1552
sg19
(lp1553
sg22
(lp1554
sg25
I0
sba(iArchitecture
Entity
p1555
(dp1556
g11
(lp1557
sg14
S'com.google.thirdparty.publicsuffix.TrieParser'
p1558
sg16
(lp1559
sg19
(lp1560
sg22
(lp1561
sg25
I0
sbasg1017
(lp1562
g1027
ag1034
ag1041
ag1048
ag1056
ag1066
ag1073
ag1080
ag1088
ag1095
ag1102
ag1109
ag1116
ag1123
ag1131
ag1138
ag1145
ag1153
ag1164
ag1172
ag1179
ag1186
ag1193
ag1201
ag1208
ag1215
ag1222
ag1229
ag1236
ag1243
ag1250
ag1257
ag1264
ag1271
ag1278
ag1285
ag1292
ag1299
ag1306
ag1313
ag1320
ag1327
ag1335
ag1349
ag1356
ag1363
ag1371
ag1382
ag1389
ag1396
ag1403
ag1410
ag1417
ag1424
ag1431
ag1438
ag1445
ag1452
ag1459
ag1466
ag1473
ag1480
ag1487
ag1494
ag1501
ag1508
ag1515
ag1522
ag1529
ag1536
ag1543
ag1551
ag1558
asg25
I0
sg1019
S'io'
p1563
sba(iArchitecture
Cluster
p1564
(dp1565
g7
(lp1566
(iArchitecture
Entity
p1567
(dp1568
g11
(lp1569
sg14
S'com.google.common.base.AbstractIterator'
p1570
sg16
(lp1571
sg19
(lp1572
sg22
(lp1573
sg25
I0
sba(iArchitecture
Entity
p1574
(dp1575
g11
(lp1576
g13
asg14
S'com.google.common.base.Converter'
p1577
sg16
(lp1578
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1579
asg19
(lp1580
g21
asg22
(lp1581
g24
asg25
I0
sba(iArchitecture
Entity
p1582
(dp1583
g11
(lp1584
sg14
S'com.google.common.base.FinalizableReferenceQueue'
p1585
sg16
(lp1586
sg19
(lp1587
sg22
(lp1588
sg25
I0
sba(iArchitecture
Entity
p1589
(dp1590
g11
(lp1591
sg14
S'com.google.common.base.Joiner'
p1592
sg16
(lp1593
sg19
(lp1594
sg22
(lp1595
sg25
I0
sba(iArchitecture
Entity
p1596
(dp1597
g11
(lp1598
sg14
S'com.google.common.base.Throwables'
p1599
sg16
(lp1600
sg19
(lp1601
sg22
(lp1602
sg25
I0
sba(iArchitecture
Entity
p1603
(dp1604
g11
(lp1605
sg14
S'com.google.common.base.Ticker'
p1606
sg16
(lp1607
sg19
(lp1608
sg22
(lp1609
sg25
I0
sba(iArchitecture
Entity
p1610
(dp1611
g11
(lp1612
sg14
S'com.google.common.base.Verify'
p1613
sg16
(lp1614
sg19
(lp1615
sg22
(lp1616
sg25
I0
sba(iArchitecture
Entity
p1617
(dp1618
g11
(lp1619
sg14
S'com.google.common.base.VerifyException'
p1620
sg16
(lp1621
sg19
(lp1622
sg22
(lp1623
sg25
I0
sba(iArchitecture
Entity
p1624
(dp1625
g11
(lp1626
sg14
S'com.google.common.base.package-info'
p1627
sg16
(lp1628
sg19
(lp1629
sg22
(lp1630
sg25
I0
sba(iArchitecture
Entity
p1631
(dp1632
g11
(lp1633
sg14
S'com.google.common.cache.AbstractCache'
p1634
sg16
(lp1635
sg19
(lp1636
sg22
(lp1637
sg25
I0
sba(iArchitecture
Entity
p1638
(dp1639
g11
(lp1640
sg14
S'com.google.common.cache.AbstractLoadingCache'
p1641
sg16
(lp1642
sg19
(lp1643
sg22
(lp1644
sg25
I0
sba(iArchitecture
Entity
p1645
(dp1646
g11
(lp1647
g86
asg14
S'com.google.common.cache.CacheBuilder'
p1648
sg16
(lp1649
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p1650
asg19
(lp1651
g91
asg22
(lp1652
g93
asg25
I0
sba(iArchitecture
Entity
p1653
(dp1654
g11
(lp1655
sg14
S'com.google.common.cache.CacheLoader'
p1656
sg16
(lp1657
sg19
(lp1658
sg22
(lp1659
sg25
I0
sba(iArchitecture
Entity
p1660
(dp1661
g11
(lp1662
sg14
S'com.google.common.cache.CacheStats'
p1663
sg16
(lp1664
sg19
(lp1665
sg22
(lp1666
sg25
I0
sba(iArchitecture
Entity
p1667
(dp1668
g11
(lp1669
sg14
S'com.google.common.cache.ForwardingCache'
p1670
sg16
(lp1671
sg19
(lp1672
sg22
(lp1673
sg25
I0
sba(iArchitecture
Entity
p1674
(dp1675
g11
(lp1676
sg14
S'com.google.common.cache.ForwardingLoadingCache'
p1677
sg16
(lp1678
sg19
(lp1679
sg22
(lp1680
sg25
I0
sba(iArchitecture
Entity
p1681
(dp1682
g11
(lp1683
sg14
S'com.google.common.cache.LoadingCache'
p1684
sg16
(lp1685
sg19
(lp1686
sg22
(lp1687
sg25
I0
sba(iArchitecture
Entity
p1688
(dp1689
g11
(lp1690
sg14
S'com.google.common.cache.LongAddables'
p1691
sg16
(lp1692
sg19
(lp1693
sg22
(lp1694
sg25
I0
sba(iArchitecture
Entity
p1695
(dp1696
g11
(lp1697
sg14
S'com.google.common.cache.RemovalCause'
p1698
sg16
(lp1699
sg19
(lp1700
sg22
(lp1701
sg25
I0
sba(iArchitecture
Entity
p1702
(dp1703
g11
(lp1704
sg14
S'com.google.common.cache.RemovalListener'
p1705
sg16
(lp1706
sg19
(lp1707
sg22
(lp1708
sg25
I0
sba(iArchitecture
Entity
p1709
(dp1710
g11
(lp1711
sg14
S'com.google.common.cache.RemovalListeners'
p1712
sg16
(lp1713
sg19
(lp1714
sg22
(lp1715
sg25
I0
sba(iArchitecture
Entity
p1716
(dp1717
g11
(lp1718
sg14
S'com.google.common.cache.RemovalNotification'
p1719
sg16
(lp1720
sg19
(lp1721
sg22
(lp1722
sg25
I0
sba(iArchitecture
Entity
p1723
(dp1724
g11
(lp1725
sg14
S'com.google.common.cache.Striped64'
p1726
sg16
(lp1727
sg19
(lp1728
sg22
(lp1729
sg25
I0
sba(iArchitecture
Entity
p1730
(dp1731
g11
(lp1732
sg14
S'com.google.common.cache.Weigher'
p1733
sg16
(lp1734
sg19
(lp1735
sg22
(lp1736
sg25
I0
sba(iArchitecture
Entity
p1737
(dp1738
g11
(lp1739
sg14
S'com.google.common.cache.package-info'
p1740
sg16
(lp1741
sg19
(lp1742
sg22
(lp1743
sg25
I0
sba(iArchitecture
Entity
p1744
(dp1745
g11
(lp1746
sg14
S'com.google.common.collect.AbstractIterator'
p1747
sg16
(lp1748
sg19
(lp1749
sg22
(lp1750
sg25
I0
sba(iArchitecture
Entity
p1751
(dp1752
g11
(lp1753
sg14
S'com.google.common.collect.AbstractMapEntry'
p1754
sg16
(lp1755
sg19
(lp1756
sg22
(lp1757
sg25
I0
sba(iArchitecture
Entity
p1758
(dp1759
g11
(lp1760
sg14
S'com.google.common.collect.AbstractSortedMultiset'
p1761
sg16
(lp1762
sg19
(lp1763
sg22
(lp1764
sg25
I0
sba(iArchitecture
Entity
p1765
(dp1766
g11
(lp1767
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p1768
sg16
(lp1769
sg19
(lp1770
sg22
(lp1771
sg25
I0
sba(iArchitecture
Entity
p1772
(dp1773
g11
(lp1774
sg14
S'com.google.common.collect.CollectPreconditions'
p1775
sg16
(lp1776
sg19
(lp1777
sg22
(lp1778
sg25
I0
sba(iArchitecture
Entity
p1779
(dp1780
g11
(lp1781
sg14
S'com.google.common.collect.Constraint'
p1782
sg16
(lp1783
sg19
(lp1784
sg22
(lp1785
sg25
I0
sba(iArchitecture
Entity
p1786
(dp1787
g11
(lp1788
sg14
S'com.google.common.collect.Constraints'
p1789
sg16
(lp1790
sg19
(lp1791
sg22
(lp1792
sg25
I0
sba(iArchitecture
Entity
p1793
(dp1794
g11
(lp1795
g13
asg14
S'com.google.common.collect.Cut'
p1796
sg16
(lp1797
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1798
asg19
(lp1799
g21
asg22
(lp1800
g24
asg25
I0
sba(iArchitecture
Entity
p1801
(dp1802
g11
(lp1803
g13
asg14
S'com.google.common.collect.DiscreteDomain'
p1804
sg16
(lp1805
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p1806
asg19
(lp1807
g21
asg22
(lp1808
g24
asg25
I0
sba(iArchitecture
Entity
p1809
(dp1810
g11
(lp1811
sg14
S'com.google.common.collect.FilteredKeyListMultimap'
p1812
sg16
(lp1813
sg19
(lp1814
sg22
(lp1815
sg25
I0
sba(iArchitecture
Entity
p1816
(dp1817
g11
(lp1818
sg14
S'com.google.common.collect.FilteredSetMultimap'
p1819
sg16
(lp1820
sg19
(lp1821
sg22
(lp1822
sg25
I0
sba(iArchitecture
Entity
p1823
(dp1824
g11
(lp1825
sg14
S'com.google.common.collect.ForwardingCollection'
p1826
sg16
(lp1827
sg19
(lp1828
sg22
(lp1829
sg25
I0
sba(iArchitecture
Entity
p1830
(dp1831
g11
(lp1832
sg14
S'com.google.common.collect.ForwardingConcurrentMap'
p1833
sg16
(lp1834
sg19
(lp1835
sg22
(lp1836
sg25
I0
sba(iArchitecture
Entity
p1837
(dp1838
g11
(lp1839
sg14
S'com.google.common.collect.ForwardingImmutableList'
p1840
sg16
(lp1841
sg19
(lp1842
sg22
(lp1843
sg25
I0
sba(iArchitecture
Entity
p1844
(dp1845
g11
(lp1846
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p1847
sg16
(lp1848
sg19
(lp1849
sg22
(lp1850
sg25
I0
sba(iArchitecture
Entity
p1851
(dp1852
g11
(lp1853
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p1854
sg16
(lp1855
sg19
(lp1856
sg22
(lp1857
sg25
I0
sba(iArchitecture
Entity
p1858
(dp1859
g11
(lp1860
sg14
S'com.google.common.collect.ForwardingIterator'
p1861
sg16
(lp1862
sg19
(lp1863
sg22
(lp1864
sg25
I0
sba(iArchitecture
Entity
p1865
(dp1866
g11
(lp1867
sg14
S'com.google.common.collect.ForwardingListIterator'
p1868
sg16
(lp1869
sg19
(lp1870
sg22
(lp1871
sg25
I0
sba(iArchitecture
Entity
p1872
(dp1873
g11
(lp1874
sg14
S'com.google.common.collect.ForwardingListMultimap'
p1875
sg16
(lp1876
sg19
(lp1877
sg22
(lp1878
sg25
I0
sba(iArchitecture
Entity
p1879
(dp1880
g11
(lp1881
sg14
S'com.google.common.collect.ForwardingMap'
p1882
sg16
(lp1883
sg19
(lp1884
sg22
(lp1885
sg25
I0
sba(iArchitecture
Entity
p1886
(dp1887
g11
(lp1888
sg14
S'com.google.common.collect.ForwardingMapEntry'
p1889
sg16
(lp1890
sg19
(lp1891
sg22
(lp1892
sg25
I0
sba(iArchitecture
Entity
p1893
(dp1894
g11
(lp1895
sg14
S'com.google.common.collect.ForwardingMultiset'
p1896
sg16
(lp1897
sg19
(lp1898
sg22
(lp1899
sg25
I0
sba(iArchitecture
Entity
p1900
(dp1901
g11
(lp1902
sg14
S'com.google.common.collect.ForwardingNavigableMap'
p1903
sg16
(lp1904
sg19
(lp1905
sg22
(lp1906
sg25
I0
sba(iArchitecture
Entity
p1907
(dp1908
g11
(lp1909
sg14
S'com.google.common.collect.ForwardingNavigableSet'
p1910
sg16
(lp1911
sg19
(lp1912
sg22
(lp1913
sg25
I0
sba(iArchitecture
Entity
p1914
(dp1915
g11
(lp1916
sg14
S'com.google.common.collect.ForwardingObject'
p1917
sg16
(lp1918
sg19
(lp1919
sg22
(lp1920
sg25
I0
sba(iArchitecture
Entity
p1921
(dp1922
g11
(lp1923
sg14
S'com.google.common.collect.ForwardingQueue'
p1924
sg16
(lp1925
sg19
(lp1926
sg22
(lp1927
sg25
I0
sba(iArchitecture
Entity
p1928
(dp1929
g11
(lp1930
sg14
S'com.google.common.collect.ForwardingSet'
p1931
sg16
(lp1932
sg19
(lp1933
sg22
(lp1934
sg25
I0
sba(iArchitecture
Entity
p1935
(dp1936
g11
(lp1937
sg14
S'com.google.common.collect.ForwardingSortedMap'
p1938
sg16
(lp1939
sg19
(lp1940
sg22
(lp1941
sg25
I0
sba(iArchitecture
Entity
p1942
(dp1943
g11
(lp1944
sg14
S'com.google.common.collect.ForwardingSortedMultiset'
p1945
sg16
(lp1946
sg19
(lp1947
sg22
(lp1948
sg25
I0
sba(iArchitecture
Entity
p1949
(dp1950
g11
(lp1951
sg14
S'com.google.common.collect.ForwardingSortedSet'
p1952
sg16
(lp1953
sg19
(lp1954
sg22
(lp1955
sg25
I0
sba(iArchitecture
Entity
p1956
(dp1957
g11
(lp1958
sg14
S'com.google.common.collect.GenericMapMaker'
p1959
sg16
(lp1960
sg19
(lp1961
sg22
(lp1962
sg25
I0
sba(iArchitecture
Entity
p1963
(dp1964
g11
(lp1965
sg14
S'com.google.common.collect.GwtTransient'
p1966
sg16
(lp1967
sg19
(lp1968
sg22
(lp1969
sg25
I0
sba(iArchitecture
Entity
p1970
(dp1971
g11
(lp1972
sg14
S'com.google.common.collect.ImmutableEnumMap'
p1973
sg16
(lp1974
sg19
(lp1975
sg22
(lp1976
sg25
I0
sba(iArchitecture
Entity
p1977
(dp1978
g11
(lp1979
sg14
S'com.google.common.collect.ImmutableEnumSet'
p1980
sg16
(lp1981
sg19
(lp1982
sg22
(lp1983
sg25
I0
sba(iArchitecture
Entity
p1984
(dp1985
g11
(lp1986
sg14
S'com.google.common.collect.ImmutableMapEntry'
p1987
sg16
(lp1988
sg19
(lp1989
sg22
(lp1990
sg25
I0
sba(iArchitecture
Entity
p1991
(dp1992
g11
(lp1993
sg14
S'com.google.common.collect.ImmutableMapEntrySet'
p1994
sg16
(lp1995
sg19
(lp1996
sg22
(lp1997
sg25
I0
sba(iArchitecture
Entity
p1998
(dp1999
g11
(lp2000
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p2001
sg16
(lp2002
sg19
(lp2003
sg22
(lp2004
sg25
I0
sba(iArchitecture
Entity
p2005
(dp2006
g11
(lp2007
sg14
S'com.google.common.collect.Interners'
p2008
sg16
(lp2009
sg19
(lp2010
sg22
(lp2011
sg25
I0
sba(iArchitecture
Entity
p2012
(dp2013
g11
(lp2014
V1885
p2015
asg14
S'com.google.common.collect.MapMaker'
p2016
sg16
(lp2017
VMapMaker javadoc advertises "on-demand computation of values for keys not already present" but this doesn't appear to actually be possible.\u000a
p2018
asg19
(lp2019
(lp2020
I2
aasg22
(lp2021
VJavadoc error in MapMaker
p2022
asg25
I0
sba(iArchitecture
Entity
p2023
(dp2024
g11
(lp2025
sg14
S'com.google.common.collect.MultimapBuilder'
p2026
sg16
(lp2027
sg19
(lp2028
sg22
(lp2029
sg25
I0
sba(iArchitecture
Entity
p2030
(dp2031
g11
(lp2032
sg14
S'com.google.common.collect.Multiset'
p2033
sg16
(lp2034
sg19
(lp2035
sg22
(lp2036
sg25
I0
sba(iArchitecture
Entity
p2037
(dp2038
g11
(lp2039
sg14
S'com.google.common.collect.PeekingIterator'
p2040
sg16
(lp2041
sg19
(lp2042
sg22
(lp2043
sg25
I0
sba(iArchitecture
Entity
p2044
(dp2045
g11
(lp2046
sg14
S'com.google.common.collect.RegularImmutableAsList'
p2047
sg16
(lp2048
sg19
(lp2049
sg22
(lp2050
sg25
I0
sba(iArchitecture
Entity
p2051
(dp2052
g11
(lp2053
sg14
S'com.google.common.collect.SingletonImmutableTable'
p2054
sg16
(lp2055
sg19
(lp2056
sg22
(lp2057
sg25
I0
sba(iArchitecture
Entity
p2058
(dp2059
g11
(lp2060
sg14
S'com.google.common.collect.SortedLists'
p2061
sg16
(lp2062
sg19
(lp2063
sg22
(lp2064
sg25
I0
sba(iArchitecture
Entity
p2065
(dp2066
g11
(lp2067
sg14
S'com.google.common.collect.SortedMultiset'
p2068
sg16
(lp2069
sg19
(lp2070
sg22
(lp2071
sg25
I0
sba(iArchitecture
Entity
p2072
(dp2073
g11
(lp2074
sg14
S'com.google.common.collect.StandardRowSortedTable'
p2075
sg16
(lp2076
sg19
(lp2077
sg22
(lp2078
sg25
I0
sba(iArchitecture
Entity
p2079
(dp2080
g11
(lp2081
sg14
S'com.google.common.collect.TreeTraverser'
p2082
sg16
(lp2083
sg19
(lp2084
sg22
(lp2085
sg25
I0
sba(iArchitecture
Entity
p2086
(dp2087
g11
(lp2088
sg14
S'com.google.common.collect.UnmodifiableListIterator'
p2089
sg16
(lp2090
sg19
(lp2091
sg22
(lp2092
sg25
I0
sba(iArchitecture
Entity
p2093
(dp2094
g11
(lp2095
sg14
S'com.google.common.collect.UnmodifiableSortedMultiset'
p2096
sg16
(lp2097
sg19
(lp2098
sg22
(lp2099
sg25
I0
sba(iArchitecture
Entity
p2100
(dp2101
g11
(lp2102
sg14
S'com.google.common.collect.package-info'
p2103
sg16
(lp2104
sg19
(lp2105
sg22
(lp2106
sg25
I0
sba(iArchitecture
Entity
p2107
(dp2108
g11
(lp2109
sg14
S'com.google.common.escape.package-info'
p2110
sg16
(lp2111
sg19
(lp2112
sg22
(lp2113
sg25
I0
sba(iArchitecture
Entity
p2114
(dp2115
g11
(lp2116
sg14
S'com.google.common.eventbus.AsyncEventBus'
p2117
sg16
(lp2118
sg19
(lp2119
sg22
(lp2120
sg25
I0
sba(iArchitecture
Entity
p2121
(dp2122
g11
(lp2123
g86
asg14
S'com.google.common.eventbus.EventBus'
p2124
sg16
(lp2125
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2126
asg19
(lp2127
g91
asg22
(lp2128
g93
asg25
I0
sba(iArchitecture
Entity
p2129
(dp2130
g11
(lp2131
sg14
S'com.google.common.html.HtmlEscapers'
p2132
sg16
(lp2133
sg19
(lp2134
sg22
(lp2135
sg25
I0
sba(iArchitecture
Entity
p2136
(dp2137
g11
(lp2138
sg14
S'com.google.common.io.Resources'
p2139
sg16
(lp2140
sg19
(lp2141
sg22
(lp2142
sg25
I0
sba(iArchitecture
Entity
p2143
(dp2144
g11
(lp2145
sg14
S'com.google.common.math.DoubleUtils'
p2146
sg16
(lp2147
sg19
(lp2148
sg22
(lp2149
sg25
I0
sba(iArchitecture
Entity
p2150
(dp2151
g11
(lp2152
sg14
S'com.google.common.math.LongMath'
p2153
sg16
(lp2154
sg19
(lp2155
sg22
(lp2156
sg25
I0
sba(iArchitecture
Entity
p2157
(dp2158
g11
(lp2159
sg14
S'com.google.common.math.MathPreconditions'
p2160
sg16
(lp2161
sg19
(lp2162
sg22
(lp2163
sg25
I0
sba(iArchitecture
Entity
p2164
(dp2165
g11
(lp2166
sg14
S'com.google.common.net.HostAndPort'
p2167
sg16
(lp2168
sg19
(lp2169
sg22
(lp2170
sg25
I0
sba(iArchitecture
Entity
p2171
(dp2172
g11
(lp2173
sg14
S'com.google.common.net.HostSpecifier'
p2174
sg16
(lp2175
sg19
(lp2176
sg22
(lp2177
sg25
I0
sba(iArchitecture
Entity
p2178
(dp2179
g11
(lp2180
sg14
S'com.google.common.net.HttpHeaders'
p2181
sg16
(lp2182
sg19
(lp2183
sg22
(lp2184
sg25
I0
sba(iArchitecture
Entity
p2185
(dp2186
g11
(lp2187
g86
asg14
S'com.google.common.net.InetAddresses'
p2188
sg16
(lp2189
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2190
asg19
(lp2191
g91
asg22
(lp2192
g93
asg25
I0
sba(iArchitecture
Entity
p2193
(dp2194
g11
(lp2195
sg14
S'com.google.common.net.InternetDomainName'
p2196
sg16
(lp2197
sg19
(lp2198
sg22
(lp2199
sg25
I0
sba(iArchitecture
Entity
p2200
(dp2201
g11
(lp2202
sg14
S'com.google.common.net.UrlEscapers'
p2203
sg16
(lp2204
sg19
(lp2205
sg22
(lp2206
sg25
I0
sba(iArchitecture
Entity
p2207
(dp2208
g11
(lp2209
sg14
S'com.google.common.net.package-info'
p2210
sg16
(lp2211
sg19
(lp2212
sg22
(lp2213
sg25
I0
sba(iArchitecture
Entity
p2214
(dp2215
g11
(lp2216
sg14
S'com.google.common.primitives.ParseRequest'
p2217
sg16
(lp2218
sg19
(lp2219
sg22
(lp2220
sg25
I0
sba(iArchitecture
Entity
p2221
(dp2222
g11
(lp2223
sg14
S'com.google.common.primitives.package-info'
p2224
sg16
(lp2225
sg19
(lp2226
sg22
(lp2227
sg25
I0
sba(iArchitecture
Entity
p2228
(dp2229
g11
(lp2230
sg14
S'com.google.common.reflect.AbstractInvocationHandler'
p2231
sg16
(lp2232
sg19
(lp2233
sg22
(lp2234
sg25
I0
sba(iArchitecture
Entity
p2235
(dp2236
g11
(lp2237
sg14
S'com.google.common.reflect.ClassPath'
p2238
sg16
(lp2239
sg19
(lp2240
sg22
(lp2241
sg25
I0
sba(iArchitecture
Entity
p2242
(dp2243
g11
(lp2244
sg14
S'com.google.common.reflect.Reflection'
p2245
sg16
(lp2246
sg19
(lp2247
sg22
(lp2248
sg25
I0
sba(iArchitecture
Entity
p2249
(dp2250
g11
(lp2251
sg14
S'com.google.common.reflect.TypeCapture'
p2252
sg16
(lp2253
sg19
(lp2254
sg22
(lp2255
sg25
I0
sba(iArchitecture
Entity
p2256
(dp2257
g11
(lp2258
sg14
S'com.google.common.util.concurrent.AbstractCheckedFuture'
p2259
sg16
(lp2260
sg19
(lp2261
sg22
(lp2262
sg25
I0
sba(iArchitecture
Entity
p2263
(dp2264
g11
(lp2265
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadService'
p2266
sg16
(lp2267
sg19
(lp2268
sg22
(lp2269
sg25
I0
sba(iArchitecture
Entity
p2270
(dp2271
g11
(lp2272
g13
asg14
S'com.google.common.util.concurrent.AbstractFuture'
p2273
sg16
(lp2274
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2275
asg19
(lp2276
g21
asg22
(lp2277
g24
asg25
I0
sba(iArchitecture
Entity
p2278
(dp2279
g11
(lp2280
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorService'
p2281
sg16
(lp2282
sg19
(lp2283
sg22
(lp2284
sg25
I0
sba(iArchitecture
Entity
p2285
(dp2286
g11
(lp2287
V2072
p2288
ag2288
asg14
S'com.google.common.util.concurrent.AbstractScheduledService'
p2289
sg16
(lp2290
V(Source attached below which demonstrates the issue).\u000aI have an implementation of an AbstractScheduledService which overrides the scheduler() method and creates and returns a CustomScheduler.  This CustomScheduler's getNextSchedule() method sleeps for a period of time (which makes the deadlock more predicable) and then either returns a Schedule, or if the Service\u2019s state is STOPPING it throws an exception.  \u000aThe problem arises when it throws an exception.  After throwing the exception the service never actually terminates, and the shutDown() method is never called.  After a brief investigation, it looks as though there is a deadlock between notifyFailed() and stopAsync() in AbstractService class.  notifyFailed() (called from the catch block of reschedule() method in one of AbstractScheduledService inner classes) tries to enter the monitor field but is blocked as the monitor is currently held by stopAsync(), and stopAsync() hasn\u2019t released the monitor yet as it is blocked when calling this.doStop() (in case 3 of switch stmt).  The doStop() called is the impl in AbstractScheduledService, and this gets blocked on the first line waiting for this.runningTask.cancel(false) to return.\u000a\u000aI haven\u2019t had time to download the source code and build things myself to investigate it further, but hopefully there is enough here to go on.  Below is some source code which demonstrates the problem, and the log output showing that the service\u2019s shutDown() method is not called and the service and JVM hasn\u2019t terminated yet.\u000a\u000a``` java\u000apublic class Main {\u000a    public static void main(String[] args) throws Exception {\u000a        Service service = new ScheduledServiceWithCustomBlockingScheduler(5000);\u000a        new ServiceStateMonitor().monitorServiceStateWithServiceListener(service);\u000a        System.out.println("starting service");\u000a        service.startAsync();\u000a        Thread.sleep(6000); // wait just enough time for 2nd call of getNextSchedule() to start\u000a        System.out.println("Stopping service");\u000a        service.stopAsync();\u000a        System.out.println("Bye");\u000a      }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ScheduledServiceWithCustomBlockingScheduler extends AbstractScheduledService {\u000a    private long blockTime;\u000a\u000a    public ScheduledServiceWithCustomBlockingScheduler(final long blockTime) {\u000a        this.blockTime = blockTime;\u000a    }\u000a\u000a    @Override\u000a    protected void runOneIteration() throws Exception {\u000a        System.out.println("runOneIteration()");\u000a    }\u000a\u000a    @Override\u000a    protected Scheduler scheduler() {\u000a        return new CustomScheduler() {\u000a            @Override\u000a            protected Schedule getNextSchedule() throws Exception {\u000a                System.out.println("getNextSchedule()...");\u000a                Thread.sleep(blockTime);\u000a                if (state() == State.STOPPING) {\u000a                    System.out.println("getNextSchedule() - not running anymore so don't return scheduler");\u000a                    throw new Exception("not running anymore so don't return scheduler");\u000a                }\u000a                System.out.println("...getNextSchedule()");\u000a                return new Schedule(0, TimeUnit.NANOSECONDS);\u000a            }\u000a        };\u000a    }\u000a\u000a    @Override\u000a    protected void startUp() throws Exception {\u000a        System.out.println("startUp()");\u000a    }\u000a\u000a    @Override\u000a    protected void shutDown() throws Exception {\u000a        System.out.println("shutDown()");\u000a    }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ServiceStateMonitor {\u000a    public void monitorServiceStateWithServiceListener(final Service serviceToMonitor) {\u000a        serviceToMonitor.addListener(new PrintOutNewStateServiceListener(), MoreExecutors.directExecutor());\u000a    }\u000a\u000a    private class PrintOutNewStateServiceListener extends Service.Listener {\u000a        @Override\u000a        public void starting() {\u000a            System.out.println("SERVICE LISTENER : Starting");\u000a        }\u000a\u000a        @Override\u000a        public void running() {\u000a            System.out.println("SERVICE LISTENER : Running");\u000a        }\u000a\u000a        @Override\u000a        public void stopping(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Stopping");\u000a        }\u000a\u000a        @Override\u000a        public void terminated(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Terminated");\u000a        }\u000a\u000a        @Override\u000a        public void failed(final Service.State from, final Throwable failure) {\u000a            System.out.println("SERVICE LISTENER : Failed");\u000a        }\u000a    }\u000a}\u000a```\u000a\u000aThe Standard Ouput from running the main()\u000a\u000a```\u000astarting service\u000aSERVICE LISTENER : Starting\u000astartUp()\u000agetNextSchedule()...\u000a...getNextSchedule()\u000aSERVICE LISTENER : Running\u000arunOneIteration()\u000agetNextSchedule()...\u000aStopping service\u000agetNextSchedule() - not running anymore so don't return scheduler\u000a```\u000a\u000anotice that there is no "shutDown()" or "Bye" output line.\u000a
p2291
aV(Source attached below which demonstrates the issue).\u000aI have an implementation of an AbstractScheduledService which overrides the scheduler() method and creates and returns a CustomScheduler.  This CustomScheduler's getNextSchedule() method sleeps for a period of time (which makes the deadlock more predicable) and then either returns a Schedule, or if the Service\u2019s state is STOPPING it throws an exception.  \u000aThe problem arises when it throws an exception.  After throwing the exception the service never actually terminates, and the shutDown() method is never called.  After a brief investigation, it looks as though there is a deadlock between notifyFailed() and stopAsync() in AbstractService class.  notifyFailed() (called from the catch block of reschedule() method in one of AbstractScheduledService inner classes) tries to enter the monitor field but is blocked as the monitor is currently held by stopAsync(), and stopAsync() hasn\u2019t released the monitor yet as it is blocked when calling this.doStop() (in case 3 of switch stmt).  The doStop() called is the impl in AbstractScheduledService, and this gets blocked on the first line waiting for this.runningTask.cancel(false) to return.\u000a\u000aI haven\u2019t had time to download the source code and build things myself to investigate it further, but hopefully there is enough here to go on.  Below is some source code which demonstrates the problem, and the log output showing that the service\u2019s shutDown() method is not called and the service and JVM hasn\u2019t terminated yet.\u000a\u000a``` java\u000apublic class Main {\u000a    public static void main(String[] args) throws Exception {\u000a        Service service = new ScheduledServiceWithCustomBlockingScheduler(5000);\u000a        new ServiceStateMonitor().monitorServiceStateWithServiceListener(service);\u000a        System.out.println("starting service");\u000a        service.startAsync();\u000a        Thread.sleep(6000); // wait just enough time for 2nd call of getNextSchedule() to start\u000a        System.out.println("Stopping service");\u000a        service.stopAsync();\u000a        System.out.println("Bye");\u000a      }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ScheduledServiceWithCustomBlockingScheduler extends AbstractScheduledService {\u000a    private long blockTime;\u000a\u000a    public ScheduledServiceWithCustomBlockingScheduler(final long blockTime) {\u000a        this.blockTime = blockTime;\u000a    }\u000a\u000a    @Override\u000a    protected void runOneIteration() throws Exception {\u000a        System.out.println("runOneIteration()");\u000a    }\u000a\u000a    @Override\u000a    protected Scheduler scheduler() {\u000a        return new CustomScheduler() {\u000a            @Override\u000a            protected Schedule getNextSchedule() throws Exception {\u000a                System.out.println("getNextSchedule()...");\u000a                Thread.sleep(blockTime);\u000a                if (state() == State.STOPPING) {\u000a                    System.out.println("getNextSchedule() - not running anymore so don't return scheduler");\u000a                    throw new Exception("not running anymore so don't return scheduler");\u000a                }\u000a                System.out.println("...getNextSchedule()");\u000a                return new Schedule(0, TimeUnit.NANOSECONDS);\u000a            }\u000a        };\u000a    }\u000a\u000a    @Override\u000a    protected void startUp() throws Exception {\u000a        System.out.println("startUp()");\u000a    }\u000a\u000a    @Override\u000a    protected void shutDown() throws Exception {\u000a        System.out.println("shutDown()");\u000a    }\u000a}\u000a```\u000a\u000a``` java\u000apublic class ServiceStateMonitor {\u000a    public void monitorServiceStateWithServiceListener(final Service serviceToMonitor) {\u000a        serviceToMonitor.addListener(new PrintOutNewStateServiceListener(), MoreExecutors.directExecutor());\u000a    }\u000a\u000a    private class PrintOutNewStateServiceListener extends Service.Listener {\u000a        @Override\u000a        public void starting() {\u000a            System.out.println("SERVICE LISTENER : Starting");\u000a        }\u000a\u000a        @Override\u000a        public void running() {\u000a            System.out.println("SERVICE LISTENER : Running");\u000a        }\u000a\u000a        @Override\u000a        public void stopping(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Stopping");\u000a        }\u000a\u000a        @Override\u000a        public void terminated(final Service.State from) {\u000a            System.out.println("SERVICE LISTENER : Terminated");\u000a        }\u000a\u000a        @Override\u000a        public void failed(final Service.State from, final Throwable failure) {\u000a            System.out.println("SERVICE LISTENER : Failed");\u000a        }\u000a    }\u000a}\u000a```\u000a\u000aThe Standard Ouput from running the main()\u000a\u000a```\u000astarting service\u000aSERVICE LISTENER : Starting\u000astartUp()\u000agetNextSchedule()...\u000a...getNextSchedule()\u000aSERVICE LISTENER : Running\u000arunOneIteration()\u000agetNextSchedule()...\u000aStopping service\u000agetNextSchedule() - not running anymore so don't return scheduler\u000a```\u000a\u000anotice that there is no "shutDown()" or "Bye" output line.\u000a
p2292
asg19
(lp2293
(lp2294
I1
aag2294
asg22
(lp2295
VDeadlock when stopping an AbstractScheduledService and Exception thrown from CustomScheduler.getNextSchedule()
p2296
ag2296
asg25
I0
sba(iArchitecture
Entity
p2297
(dp2298
g11
(lp2299
sg14
S'com.google.common.util.concurrent.AbstractService'
p2300
sg16
(lp2301
sg19
(lp2302
sg22
(lp2303
sg25
I0
sba(iArchitecture
Entity
p2304
(dp2305
g11
(lp2306
sg14
S'com.google.common.util.concurrent.Callables'
p2307
sg16
(lp2308
sg19
(lp2309
sg22
(lp2310
sg25
I0
sba(iArchitecture
Entity
p2311
(dp2312
g11
(lp2313
g13
ag13
asg14
S'com.google.common.util.concurrent.CycleDetectingLockFactory'
p2314
sg16
(lp2315
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2316
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2317
asg19
(lp2318
g21
ag21
asg22
(lp2319
g24
ag24
asg25
I0
sba(iArchitecture
Entity
p2320
(dp2321
g11
(lp2322
sg14
S'com.google.common.util.concurrent.ExecutionError'
p2323
sg16
(lp2324
sg19
(lp2325
sg22
(lp2326
sg25
I0
sba(iArchitecture
Entity
p2327
(dp2328
g11
(lp2329
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueue'
p2330
sg16
(lp2331
sg19
(lp2332
sg22
(lp2333
sg25
I0
sba(iArchitecture
Entity
p2334
(dp2335
g11
(lp2336
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFuture'
p2337
sg16
(lp2338
sg19
(lp2339
sg22
(lp2340
sg25
I0
sba(iArchitecture
Entity
p2341
(dp2342
g11
(lp2343
sg14
S'com.google.common.util.concurrent.ForwardingExecutorService'
p2344
sg16
(lp2345
sg19
(lp2346
sg22
(lp2347
sg25
I0
sba(iArchitecture
Entity
p2348
(dp2349
g11
(lp2350
sg14
S'com.google.common.util.concurrent.ForwardingFuture'
p2351
sg16
(lp2352
sg19
(lp2353
sg22
(lp2354
sg25
I0
sba(iArchitecture
Entity
p2355
(dp2356
g11
(lp2357
sg14
S'com.google.common.util.concurrent.ForwardingListenableFuture'
p2358
sg16
(lp2359
sg19
(lp2360
sg22
(lp2361
sg25
I0
sba(iArchitecture
Entity
p2362
(dp2363
g11
(lp2364
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorService'
p2365
sg16
(lp2366
sg19
(lp2367
sg22
(lp2368
sg25
I0
sba(iArchitecture
Entity
p2369
(dp2370
g11
(lp2371
sg14
S'com.google.common.util.concurrent.JdkFutureAdapters'
p2372
sg16
(lp2373
sg19
(lp2374
sg22
(lp2375
sg25
I0
sba(iArchitecture
Entity
p2376
(dp2377
g11
(lp2378
sg14
S'com.google.common.util.concurrent.ListenerCallQueue'
p2379
sg16
(lp2380
sg19
(lp2381
sg22
(lp2382
sg25
I0
sba(iArchitecture
Entity
p2383
(dp2384
g11
(lp2385
sg14
S'com.google.common.util.concurrent.ListeningExecutorService'
p2386
sg16
(lp2387
sg19
(lp2388
sg22
(lp2389
sg25
I0
sba(iArchitecture
Entity
p2390
(dp2391
g11
(lp2392
g86
ag86
asg14
S'com.google.common.util.concurrent.RateLimiter'
p2393
sg16
(lp2394
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2395
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2396
asg19
(lp2397
g91
ag91
asg22
(lp2398
g93
ag93
asg25
I0
sba(iArchitecture
Entity
p2399
(dp2400
g11
(lp2401
sg14
S'com.google.common.util.concurrent.Runnables'
p2402
sg16
(lp2403
sg19
(lp2404
sg22
(lp2405
sg25
I0
sba(iArchitecture
Entity
p2406
(dp2407
g11
(lp2408
g86
asg14
S'com.google.common.util.concurrent.Service'
p2409
sg16
(lp2410
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2411
asg19
(lp2412
g91
asg22
(lp2413
g93
asg25
I0
sba(iArchitecture
Entity
p2414
(dp2415
g11
(lp2416
sg14
S'com.google.common.util.concurrent.ServiceManager'
p2417
sg16
(lp2418
sg19
(lp2419
sg22
(lp2420
sg25
I0
sba(iArchitecture
Entity
p2421
(dp2422
g11
(lp2423
g86
ag86
asg14
S'com.google.common.util.concurrent.ThreadFactoryBuilder'
p2424
sg16
(lp2425
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2426
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2427
asg19
(lp2428
g91
ag91
asg22
(lp2429
g93
ag93
asg25
I0
sba(iArchitecture
Entity
p2430
(dp2431
g11
(lp2432
sg14
S'com.google.common.util.concurrent.UncheckedExecutionException'
p2433
sg16
(lp2434
sg19
(lp2435
sg22
(lp2436
sg25
I0
sba(iArchitecture
Entity
p2437
(dp2438
g11
(lp2439
sg14
S'com.google.common.util.concurrent.UncheckedTimeoutException'
p2440
sg16
(lp2441
sg19
(lp2442
sg22
(lp2443
sg25
I0
sba(iArchitecture
Entity
p2444
(dp2445
g11
(lp2446
sg14
S'com.google.common.util.concurrent.WrappingExecutorService'
p2447
sg16
(lp2448
sg19
(lp2449
sg22
(lp2450
sg25
I0
sba(iArchitecture
Entity
p2451
(dp2452
g11
(lp2453
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorService'
p2454
sg16
(lp2455
sg19
(lp2456
sg22
(lp2457
sg25
I0
sba(iArchitecture
Entity
p2458
(dp2459
g11
(lp2460
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixPatterns'
p2461
sg16
(lp2462
sg19
(lp2463
sg22
(lp2464
sg25
I0
sba(iArchitecture
Entity
p2465
(dp2466
g11
(lp2467
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixType'
p2468
sg16
(lp2469
sg19
(lp2470
sg22
(lp2471
sg25
I0
sbasg1017
(lp2472
g1570
ag1577
ag1585
ag1592
ag1599
ag1606
ag1613
ag1620
ag1627
ag1634
ag1641
ag1648
ag1656
ag1663
ag1670
ag1677
ag1684
ag1691
ag1698
ag1705
ag1712
ag1719
ag1726
ag1733
ag1740
ag1747
ag1754
ag1761
ag1768
ag1775
ag1782
ag1789
ag1796
ag1804
ag1812
ag1819
ag1826
ag1833
ag1840
ag1847
ag1854
ag1861
ag1868
ag1875
ag1882
ag1889
ag1896
ag1903
ag1910
ag1917
ag1924
ag1931
ag1938
ag1945
ag1952
ag1959
ag1966
ag1973
ag1980
ag1987
ag1994
ag2001
ag2008
ag2016
ag2026
ag2033
ag2040
ag2047
ag2054
ag2061
ag2068
ag2075
ag2082
ag2089
ag2096
ag2103
ag2110
ag2117
ag2124
ag2132
ag2139
ag2146
ag2153
ag2160
ag2167
ag2174
ag2181
ag2188
ag2196
ag2203
ag2210
ag2217
ag2224
ag2231
ag2238
ag2245
ag2252
ag2259
ag2266
ag2273
ag2281
ag2289
ag2300
ag2307
ag2314
ag2323
ag2330
ag2337
ag2344
ag2351
ag2358
ag2365
ag2372
ag2379
ag2386
ag2393
ag2402
ag2409
ag2417
ag2424
ag2433
ag2440
ag2447
ag2454
ag2461
ag2468
asg25
I0
sg1019
S'networking'
p2473
sba(iArchitecture
Cluster
p2474
(dp2475
g7
(lp2476
(iArchitecture
Entity
p2477
(dp2478
g11
(lp2479
sg14
S'com.google.common.annotations.VisibleForTesting'
p2480
sg16
(lp2481
sg19
(lp2482
sg22
(lp2483
sg25
I0
sba(iArchitecture
Entity
p2484
(dp2485
g11
(lp2486
sg14
S'com.google.common.base.Enums'
p2487
sg16
(lp2488
sg19
(lp2489
sg22
(lp2490
sg25
I0
sba(iArchitecture
Entity
p2491
(dp2492
g11
(lp2493
sg14
S'com.google.common.base.FinalizablePhantomReference'
p2494
sg16
(lp2495
sg19
(lp2496
sg22
(lp2497
sg25
I0
sba(iArchitecture
Entity
p2498
(dp2499
g11
(lp2500
sg14
S'com.google.common.base.FinalizableReference'
p2501
sg16
(lp2502
sg19
(lp2503
sg22
(lp2504
sg25
I0
sba(iArchitecture
Entity
p2505
(dp2506
g11
(lp2507
sg14
S'com.google.common.base.FinalizableSoftReference'
p2508
sg16
(lp2509
sg19
(lp2510
sg22
(lp2511
sg25
I0
sba(iArchitecture
Entity
p2512
(dp2513
g11
(lp2514
sg14
S'com.google.common.base.FinalizableWeakReference'
p2515
sg16
(lp2516
sg19
(lp2517
sg22
(lp2518
sg25
I0
sba(iArchitecture
Entity
p2519
(dp2520
g11
(lp2521
sg14
S'com.google.common.cache.LongAddable'
p2522
sg16
(lp2523
sg19
(lp2524
sg22
(lp2525
sg25
I0
sba(iArchitecture
Entity
p2526
(dp2527
g11
(lp2528
sg14
S'com.google.common.collect.ComputationException'
p2529
sg16
(lp2530
sg19
(lp2531
sg22
(lp2532
sg25
I0
sba(iArchitecture
Entity
p2533
(dp2534
g11
(lp2535
sg14
S'com.google.common.collect.EvictingQueue'
p2536
sg16
(lp2537
sg19
(lp2538
sg22
(lp2539
sg25
I0
sba(iArchitecture
Entity
p2540
(dp2541
g11
(lp2542
sg14
S'com.google.common.collect.FilteredMultimapValues'
p2543
sg16
(lp2544
sg19
(lp2545
sg22
(lp2546
sg25
I0
sba(iArchitecture
Entity
p2547
(dp2548
g11
(lp2549
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p2550
sg16
(lp2551
sg19
(lp2552
sg22
(lp2553
sg25
I0
sba(iArchitecture
Entity
p2554
(dp2555
g11
(lp2556
sg14
S'com.google.common.collect.RegularImmutableMap'
p2557
sg16
(lp2558
sg19
(lp2559
sg22
(lp2560
sg25
I0
sba(iArchitecture
Entity
p2561
(dp2562
g11
(lp2563
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p2564
sg16
(lp2565
sg19
(lp2566
sg22
(lp2567
sg25
I0
sba(iArchitecture
Entity
p2568
(dp2569
g11
(lp2570
sg14
S'com.google.common.eventbus.SubscriberExceptionHandler'
p2571
sg16
(lp2572
sg19
(lp2573
sg22
(lp2574
sg25
I0
sba(iArchitecture
Entity
p2575
(dp2576
g11
(lp2577
sg14
S'com.google.common.hash.Funnel'
p2578
sg16
(lp2579
sg19
(lp2580
sg22
(lp2581
sg25
I0
sba(iArchitecture
Entity
p2582
(dp2583
g11
(lp2584
sg14
S'com.google.common.io.InputSupplier'
p2585
sg16
(lp2586
sg19
(lp2587
sg22
(lp2588
sg25
I0
sba(iArchitecture
Entity
p2589
(dp2590
g11
(lp2591
sg14
S'com.google.common.util.concurrent.SmoothRateLimiter'
p2592
sg16
(lp2593
sg19
(lp2594
sg22
(lp2595
sg25
I0
sba(iArchitecture
Entity
p2596
(dp2597
g11
(lp2598
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p2599
sg16
(lp2600
sg19
(lp2601
sg22
(lp2602
sg25
I0
sbasg1017
(lp2603
g2480
ag2487
ag2494
ag2501
ag2508
ag2515
ag2522
ag2529
ag2536
ag2543
ag2550
ag2557
ag2564
ag2571
ag2578
ag2585
ag2592
ag2599
asg25
I0
sg1019
S'no_match'
p2604
sba(iArchitecture
Cluster
p2605
(dp2606
g7
(lp2607
(iArchitecture
Entity
p2608
(dp2609
g11
(lp2610
sg14
S'com.google.common.annotations.Beta'
p2611
sg16
(lp2612
sg19
(lp2613
sg22
(lp2614
sg25
I0
sba(iArchitecture
Entity
p2615
(dp2616
g11
(lp2617
sg14
S'com.google.common.annotations.GwtCompatible'
p2618
sg16
(lp2619
sg19
(lp2620
sg22
(lp2621
sg25
I0
sba(iArchitecture
Entity
p2622
(dp2623
g11
(lp2624
sg14
S'com.google.common.annotations.GwtIncompatible'
p2625
sg16
(lp2626
sg19
(lp2627
sg22
(lp2628
sg25
I0
sba(iArchitecture
Entity
p2629
(dp2630
g11
(lp2631
sg14
S'com.google.common.annotations.package-info'
p2632
sg16
(lp2633
sg19
(lp2634
sg22
(lp2635
sg25
I0
sba(iArchitecture
Entity
p2636
(dp2637
g11
(lp2638
g13
aV2037
p2639
asg14
S'com.google.common.base.Absent'
p2640
sg16
(lp2641
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2642
aVUncorrect hashCode() implementation at com.google.common.base.Absent and com.google.common.base.Present - for example if hashCode() of reference at Present return 0 then it hashCode() equal Absent.\u000a\u000aexample: Optional.absent() has same hash code as Optional.of(0.0) or Optional.of(0)\u000a
p2643
asg19
(lp2644
g21
a(lp2645
I0
aasg22
(lp2646
g24
aVOptional.hashCode()
p2647
asg25
I0
sba(iArchitecture
Entity
p2648
(dp2649
g11
(lp2650
sg14
S'com.google.common.base.Defaults'
p2651
sg16
(lp2652
sg19
(lp2653
sg22
(lp2654
sg25
I0
sba(iArchitecture
Entity
p2655
(dp2656
g11
(lp2657
sg14
S'com.google.common.base.Function'
p2658
sg16
(lp2659
sg19
(lp2660
sg22
(lp2661
sg25
I0
sba(iArchitecture
Entity
p2662
(dp2663
g11
(lp2664
g2639
ag2639
asg14
S'com.google.common.base.Optional'
p2665
sg16
(lp2666
VUncorrect hashCode() implementation at com.google.common.base.Absent and com.google.common.base.Present - for example if hashCode() of reference at Present return 0 then it hashCode() equal Absent.\u000a\u000aexample: Optional.absent() has same hash code as Optional.of(0.0) or Optional.of(0)\u000a
p2667
aVUncorrect hashCode() implementation at com.google.common.base.Absent and com.google.common.base.Present - for example if hashCode() of reference at Present return 0 then it hashCode() equal Absent.\u000a\u000aexample: Optional.absent() has same hash code as Optional.of(0.0) or Optional.of(0)\u000a
p2668
asg19
(lp2669
g2645
ag2645
asg22
(lp2670
g2647
ag2647
asg25
I0
sba(iArchitecture
Entity
p2671
(dp2672
g11
(lp2673
sg14
S'com.google.common.base.Platform'
p2674
sg16
(lp2675
sg19
(lp2676
sg22
(lp2677
sg25
I0
sba(iArchitecture
Entity
p2678
(dp2679
g11
(lp2680
sg14
S'com.google.common.base.Predicate'
p2681
sg16
(lp2682
sg19
(lp2683
sg22
(lp2684
sg25
I0
sba(iArchitecture
Entity
p2685
(dp2686
g11
(lp2687
sg14
S'com.google.common.base.Present'
p2688
sg16
(lp2689
sg19
(lp2690
sg22
(lp2691
sg25
I0
sba(iArchitecture
Entity
p2692
(dp2693
g11
(lp2694
sg14
S'com.google.common.base.StandardSystemProperty'
p2695
sg16
(lp2696
sg19
(lp2697
sg22
(lp2698
sg25
I0
sba(iArchitecture
Entity
p2699
(dp2700
g11
(lp2701
V2039
p2702
ag2702
ag2702
ag86
aV1312
p2703
ag2703
asg14
S'com.google.common.base.Stopwatch'
p2704
sg16
(lp2705
VHello, I was reading through the set of tests at https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/base/StopwatchTest.java , and I noticed there are two tests that appear to do the same thing - testElapsed_millis() and testElapsedMillis(). Is this expected? Could one test perhaps be an old test under a different naming convention? From the history it looks like they were added independently.\u000a\u000aThe contribution guide recommends creating an issue as the first step, so I thought I would ask.\u000a\u000aGitHub suggests that both functions are only called from guava-gwt/test/com/google/common/base/StopwatchTest_gwt.java . Would it be appropriate to create a pull request to remove one of the tests? (Or of course, feel free to simply remove one yourself if the workflow is easier; I just wanted to ask)\u000a\u000aCheers!\u000a
p2706
aVHello, I was reading through the set of tests at https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/base/StopwatchTest.java , and I noticed there are two tests that appear to do the same thing - testElapsed_millis() and testElapsedMillis(). Is this expected? Could one test perhaps be an old test under a different naming convention? From the history it looks like they were added independently.\u000a\u000aThe contribution guide recommends creating an issue as the first step, so I thought I would ask.\u000a\u000aGitHub suggests that both functions are only called from guava-gwt/test/com/google/common/base/StopwatchTest_gwt.java . Would it be appropriate to create a pull request to remove one of the tests? (Or of course, feel free to simply remove one yourself if the workflow is easier; I just wanted to ask)\u000a\u000aCheers!\u000a
p2707
aVHello, I was reading through the set of tests at https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/base/StopwatchTest.java , and I noticed there are two tests that appear to do the same thing - testElapsed_millis() and testElapsedMillis(). Is this expected? Could one test perhaps be an old test under a different naming convention? From the history it looks like they were added independently.\u000a\u000aThe contribution guide recommends creating an issue as the first step, so I thought I would ask.\u000a\u000aGitHub suggests that both functions are only called from guava-gwt/test/com/google/common/base/StopwatchTest_gwt.java . Would it be appropriate to create a pull request to remove one of the tests? (Or of course, feel free to simply remove one yourself if the workflow is easier; I just wanted to ask)\u000a\u000aCheers!\u000a
p2708
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2709
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1312) created by **vgal...@tennaxia.com** on 2013-02-28 at 01:05 PM_\u000a\u000a---\u000a\u000aHello,\u000a\u000aIt would be great if Stopwatch could be promoted in next release.\u000a\u000aThank you\u000a\u000avictor\u000a
p2710
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1312) created by **vgal...@tennaxia.com** on 2013-02-28 at 01:05 PM_\u000a\u000a---\u000a\u000aHello,\u000a\u000aIt would be great if Stopwatch could be promoted in next release.\u000a\u000aThank you\u000a\u000avictor\u000a
p2711
asg19
(lp2712
(lp2713
I6
aag2713
ag2713
ag91
a(lp2714
I7
aag2714
asg22
(lp2715
VPossible duplicate tests? - testElapsed_millis() and testElapsedMillis()
p2716
ag2716
ag2716
ag93
aVDe-@Beta Stopwatch
p2717
ag2717
asg25
I0
sba(iArchitecture
Entity
p2718
(dp2719
g11
(lp2720
sg14
S'com.google.common.base.Supplier'
p2721
sg16
(lp2722
sg19
(lp2723
sg22
(lp2724
sg25
I0
sba(iArchitecture
Entity
p2725
(dp2726
g11
(lp2727
sg14
S'com.google.common.base.Suppliers'
p2728
sg16
(lp2729
sg19
(lp2730
sg22
(lp2731
sg25
I0
sba(iArchitecture
Entity
p2732
(dp2733
g11
(lp2734
sg14
S'com.google.common.base.internal.Finalizer'
p2735
sg16
(lp2736
sg19
(lp2737
sg22
(lp2738
sg25
I0
sba(iArchitecture
Entity
p2739
(dp2740
g11
(lp2741
g13
ag13
aV2178
p2742
ag86
ag98
asg14
S'com.google.common.cache.Cache'
p2743
sg16
(lp2744
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2745
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2746
aVAs a novice of using Cache I think its statistic activation should be documented in the API of stats().\u000a\u000aFirst: recordStats() is to be isssued.\u000aSecond: stats() can not be instantiated because it is a factory for a final statistic.\u000a
p2747
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1567) created by **sebastian.davids** on 2013-11-04 at 06:57 AM_\u000a\u000a---\u000a\u000aFailed tests: \u000a&nbsp;&nbsp;testToString(com.google.common.base.StopwatchTest): null expected:&lt;0[.]000 ns> but was:&lt;0[,]000 ns>\u000a&nbsp;&nbsp;testSimple(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.20, R0.]20]> but was:<[R0[,00, R0,20, R0,]20]>\u000a&nbsp;&nbsp;testSimpleWithWait(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, U0.20, R0.00, R0.]20]> but was:<[R0[,00, U0,20, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testOneSecondBurst(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U1[.00, U1.00, R0.00, R0.00, R0.00, R0.00, R0.]20]> but was:<[U1[,00, U1,00, R0,00, R0,00, R0,00, R0,00, R0,]20]>\u000a&nbsp;&nbsp;testWarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U4.00, R0.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U0.50, U2.00, R0.00, R0.50, R0.50, R0.50, R0.50, R0.50, R0.50, R0.]50]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U4,00, R0,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U0,50, U2,00, R0,00, R0,50, R0,50, R0,50, R0,50, R0,50, R0,50, R0,]50]>\u000a&nbsp;&nbsp;testWarmUpAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.38, R1.13, R0.88, R0.63, R0.50, R0.50, R0.50, U4.50, R0.00, R1.38, R1.13, R0.88, R0.34, R0.28, R0.25, R0.25, U4.25, R0.00, R0.72, R0.66, R0.59, R0.53, R0.47, R0.41, R0.34, R0.28, R0.25, R0.]25]> but was:<[R0[,00, R1,38, R1,13, R0,88, R0,63, R0,50, R0,50, R0,50, U4,50, R0,00, R1,38, R1,13, R0,88, R0,34, R0,28, R0,25, R0,25, U4,25, R0,00, R0,72, R0,66, R0,59, R0,53, R0,47, R0,41, R0,34, R0,28, R0,25, R0,]25]>\u000a&nbsp;&nbsp;testBursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[U10[.00, R0.00, R1.00, R1.00, U3.00, R0.00, R3.]00]> but was:<[U10[,00, R0,00, R1,00, R1,00, U3,00, R0,00, R3,]00]>\u000a&nbsp;&nbsp;testBurstyAndUpdate(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R0.50, R1.00, R2.]00]> but was:<[R0[,00, R1,00, R1,00, R0,50, R1,00, R2,]00]>\u000a&nbsp;&nbsp;testTimeWrapping(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R1.]00]> but was:<[R0[,00, R1,00, R1,00, R1,]00]>\u000a&nbsp;&nbsp;testSimpleWeights(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R1.00, R1.00, R2.00, R4.00, R8.]00]> but was:<[R0[,00, R1,00, R1,00, R2,00, R4,00, R8,]00]>\u000a&nbsp;&nbsp;testInfinity_Bursty(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a&nbsp;&nbsp;testInfinity_WarmUp(com.google.common.util.concurrent.RateLimiterTest): null expected:<[R0[.00, R0.00, R0.]00]> but was:<[R0[,00, R0,00, R0,]00]>\u000a\u000a@@\u000a\u000aInstead of:\u000a\u000aString.format("%.4g %s", value, abbreviate(unit));\u000a\u000ayou might want to use:\u000a\u000aString.format(Locale.ROOT, "%.4g %s", value, abbreviate(unit));\u000a\u000a@@\u000a\u000aYou might want to check the entire codebase for usages of String.format without an explicit Locale.\u000a
p2748
aVWhen the cache is being cleared, either through `Cache.invalidateAll()` or `asMap().clear()`, the removal cause is always `EXPLICIT`. However the map may contain expired or GC'd entries that would be removed on the next maintenance cycle. The removal cause should indicate the actual state of the entry, not merely the action that triggered the eventual removal.\u000a\u000aDue to weak and soft references the key or value may be null. A listener should only expect to receive a null key or value if the cause is `COLLECTED`, as indicated by `RemovalNotification`:\u000a\u000a> The key and/or value may be null if they were already garbage collected.\u000a\u000aTherefore a listener might decide to inspect the properties without a null guard, leading to an NPE.\u000a\u000a``` java\u000a@Test\u000apublic void clear_expireAfterAccess() {\u000a  FakeTicker ticker = new FakeTicker();\u000a  RemovalListener<Integer, Integer> listener = Mockito.mock(RemovalListener.class);\u000a  ArgumentCaptor<RemovalNotification<Integer, Integer>> captor =\u000a      ArgumentCaptor.forClass(RemovalNotification.class);\u000a  Cache<Integer, Integer> cache = CacheBuilder.newBuilder()\u000a      .expireAfterAccess(1, TimeUnit.MINUTES)\u000a      .removalListener(listener)\u000a      .ticker(ticker)\u000a      .build();\u000a  cache.put(1, 1);\u000a  ticker.advance(10, TimeUnit.MINUTES);\u000a  cache.invalidateAll();\u000a\u000a  verify(listener).onRemoval(captor.capture());\u000a  assertThat(captor.getValue().getCause(), is(RemovalCause.EXPIRED));\u000a}\u000a```\u000a\u000aThe fix is to change `LocalCache$Segment#clear()` to inspect the key, value, and expiration status when determining the cause. \u000a\u000aUnfortunately this race condition is more widespread due to `enqueueNotification` not being tolerant to a garbage collection nulling out the key/value. Prior to constructing the notification, the method must take a strong reference to the key and value, check if either was collected, and if so publish a `COLLECTED` instead of the caller's cause.\u000a
p2749
asg19
(lp2750
g21
ag21
a(lp2751
I2
aag91
ag105
asg22
(lp2752
g24
ag24
aVCache.stats usage should be documented better
p2753
ag93
ag108
asg25
I0
sba(iArchitecture
Entity
p2754
(dp2755
g11
(lp2756
sg14
S'com.google.common.collect.AbstractBiMap'
p2757
sg16
(lp2758
sg19
(lp2759
sg22
(lp2760
sg25
I0
sba(iArchitecture
Entity
p2761
(dp2762
g11
(lp2763
sg14
S'com.google.common.collect.AbstractListMultimap'
p2764
sg16
(lp2765
sg19
(lp2766
sg22
(lp2767
sg25
I0
sba(iArchitecture
Entity
p2768
(dp2769
g11
(lp2770
sg14
S'com.google.common.collect.AbstractSequentialIterator'
p2771
sg16
(lp2772
sg19
(lp2773
sg22
(lp2774
sg25
I0
sba(iArchitecture
Entity
p2775
(dp2776
g11
(lp2777
sg14
S'com.google.common.collect.AbstractSetMultimap'
p2778
sg16
(lp2779
sg19
(lp2780
sg22
(lp2781
sg25
I0
sba(iArchitecture
Entity
p2782
(dp2783
g11
(lp2784
sg14
S'com.google.common.collect.AbstractSortedKeySortedSetMultimap'
p2785
sg16
(lp2786
sg19
(lp2787
sg22
(lp2788
sg25
I0
sba(iArchitecture
Entity
p2789
(dp2790
g11
(lp2791
sg14
S'com.google.common.collect.AbstractSortedSetMultimap'
p2792
sg16
(lp2793
sg19
(lp2794
sg22
(lp2795
sg25
I0
sba(iArchitecture
Entity
p2796
(dp2797
g11
(lp2798
sg14
S'com.google.common.collect.ArrayTable'
p2799
sg16
(lp2800
sg19
(lp2801
sg22
(lp2802
sg25
I0
sba(iArchitecture
Entity
p2803
(dp2804
g11
(lp2805
sg14
S'com.google.common.collect.BiMap'
p2806
sg16
(lp2807
sg19
(lp2808
sg22
(lp2809
sg25
I0
sba(iArchitecture
Entity
p2810
(dp2811
g11
(lp2812
sg14
S'com.google.common.collect.BoundType'
p2813
sg16
(lp2814
sg19
(lp2815
sg22
(lp2816
sg25
I0
sba(iArchitecture
Entity
p2817
(dp2818
g11
(lp2819
sg14
S'com.google.common.collect.ClassToInstanceMap'
p2820
sg16
(lp2821
sg19
(lp2822
sg22
(lp2823
sg25
I0
sba(iArchitecture
Entity
p2824
(dp2825
g11
(lp2826
g13
asg14
S'com.google.common.collect.EmptyImmutableListMultimap'
p2827
sg16
(lp2828
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2829
asg19
(lp2830
g21
asg22
(lp2831
g24
asg25
I0
sba(iArchitecture
Entity
p2832
(dp2833
g11
(lp2834
g13
asg14
S'com.google.common.collect.EmptyImmutableSetMultimap'
p2835
sg16
(lp2836
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=339) created by **marsh.yeoman** on 2010-03-12 at 04:43 PM_\u000a\u000a---\u000a\u000aMultiple concurrent reads of HashMultimap result in null pointer exception.\u000a\u000aUsing Google collections version 1.0\u000a\u000aProblem\u000acom.google.common.collect.AbstractMultimap.AsMap.entrySet()\u000acan return null when called by multiple threads.\u000a\u000a1311    @\ufeffOverride public Set&lt;Map.Entry&lt;K, Collection&lt;V>>> entrySet() {\u000a1312      Set&lt;Map.Entry&lt;K, Collection&lt;V>>> result = entrySet;\u000a1313      return (entrySet == null) ? entrySet = new AsMapEntries() : result;\u000a1314    }\u000a1. thread 1 executes line 1312\u000a2. thread 2 executes 1312 and 1313\u000a3. thread 1 executes 1313.\u000a\u000aThread 1 will return null.\u000a\u000aFix by\u000a1313      return (result == null) ? entrySet = new AsMapEntries() : result;\u000a
p2837
asg19
(lp2838
g21
asg22
(lp2839
g24
asg25
I0
sba(iArchitecture
Entity
p2840
(dp2841
g11
(lp2842
sg14
S'com.google.common.collect.EnumBiMap'
p2843
sg16
(lp2844
sg19
(lp2845
sg22
(lp2846
sg25
I0
sba(iArchitecture
Entity
p2847
(dp2848
g11
(lp2849
sg14
S'com.google.common.collect.EnumHashBiMap'
p2850
sg16
(lp2851
sg19
(lp2852
sg22
(lp2853
sg25
I0
sba(iArchitecture
Entity
p2854
(dp2855
g11
(lp2856
sg14
S'com.google.common.collect.EnumMultiset'
p2857
sg16
(lp2858
sg19
(lp2859
sg22
(lp2860
sg25
I0
sba(iArchitecture
Entity
p2861
(dp2862
g11
(lp2863
sg14
S'com.google.common.collect.FilteredEntrySetMultimap'
p2864
sg16
(lp2865
sg19
(lp2866
sg22
(lp2867
sg25
I0
sba(iArchitecture
Entity
p2868
(dp2869
g11
(lp2870
sg14
S'com.google.common.collect.FilteredKeyMultimap'
p2871
sg16
(lp2872
sg19
(lp2873
sg22
(lp2874
sg25
I0
sba(iArchitecture
Entity
p2875
(dp2876
g11
(lp2877
sg14
S'com.google.common.collect.FilteredKeySetMultimap'
p2878
sg16
(lp2879
sg19
(lp2880
sg22
(lp2881
sg25
I0
sba(iArchitecture
Entity
p2882
(dp2883
g11
(lp2884
sg14
S'com.google.common.collect.FilteredMultimap'
p2885
sg16
(lp2886
sg19
(lp2887
sg22
(lp2888
sg25
I0
sba(iArchitecture
Entity
p2889
(dp2890
g11
(lp2891
sg14
S'com.google.common.collect.ForwardingSetMultimap'
p2892
sg16
(lp2893
sg19
(lp2894
sg22
(lp2895
sg25
I0
sba(iArchitecture
Entity
p2896
(dp2897
g11
(lp2898
sg14
S'com.google.common.collect.ForwardingSortedSetMultimap'
p2899
sg16
(lp2900
sg19
(lp2901
sg22
(lp2902
sg25
I0
sba(iArchitecture
Entity
p2903
(dp2904
g11
(lp2905
sg14
S'com.google.common.collect.HashBasedTable'
p2906
sg16
(lp2907
sg19
(lp2908
sg22
(lp2909
sg25
I0
sba(iArchitecture
Entity
p2910
(dp2911
g11
(lp2912
sg14
S'com.google.common.collect.ImmutableBiMap'
p2913
sg16
(lp2914
sg19
(lp2915
sg22
(lp2916
sg25
I0
sba(iArchitecture
Entity
p2917
(dp2918
g11
(lp2919
sg14
S'com.google.common.collect.ImmutableClassToInstanceMap'
p2920
sg16
(lp2921
sg19
(lp2922
sg22
(lp2923
sg25
I0
sba(iArchitecture
Entity
p2924
(dp2925
g11
(lp2926
V2082
p2927
asg14
S'com.google.common.collect.ImmutableMap'
p2928
sg16
(lp2929
VI'm a [Spoon](https://github.com/INRIA/spoon) contributor, an open source project to analyse and transform Java source code. This project have a dependency to [JDT](https://eclipse.org/jdt/) to compile target source code. Recently, I tried to analyse Guava with Spoon but JDT can't compile our project.\u000a\u000aWhat is the problem?\u000a\u000aIn [`ImmutableMap`](https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableMap.java) class, we have these methods:\u000a\u000a``` java\u000a// If the map is an EnumMap, it must have key type K for some <K extends Enum<K>>.\u000a@SuppressWarnings({"unchecked", "rawtypes"})\u000aprivate static <K, V> ImmutableMap<K, V> copyOfEnumMapUnsafe(Map<? extends K, ? extends V> map) {\u000a    return copyOfEnumMap((EnumMap) map);\u000a}\u000a\u000aprivate static <K extends Enum<K>, V> ImmutableMap<K, V> copyOfEnumMap(EnumMap<K, ? extends V> original) {\u000a    EnumMap<K, V> copy = new EnumMap<K, V>(original);\u000a    for (Map.Entry<?, ?> entry : copy.entrySet()) {\u000a        checkEntryNotNull(entry.getKey(), entry.getValue());\u000a    }\u000a    return ImmutableEnumMap.asImmutable(copy);\u000a}\u000a```\u000a\u000aThis code is valid but there is an error from JDT:\u000a\u000a> Type mismatch: cannot convert from `<Enum<Enum<K>>>` to `<K>`\u000a\u000aBefore the creation of this issue, I reported the bug in the bugtracker of JDT (issue [here](https://bugs.eclipse.org/bugs/show_bug.cgi?id=469404)). In 2 words, the conclusion was that: "Yes, JDT don't support this usage of Java but there is a better practice". This better practice is explained [here](https://bugs.eclipse.org/bugs/show_bug.cgi?id=469404#c3):\u000a\u000a``` java\u000aprivate static <K extends Enum<K>> ImmutableMap<K, V> copyOfEnumMap(EnumMap<K, ? extends V> original) {\u000a    return copyOfEnumMap((EnumMap<K,?>) map);\u000a}\u000a```\u000a\u000aI tried some tricky solutions but, unfortunately, this solution can't be applied in your project. So I come to notify you that your project can't be compiled by JDT.\u000a
p2930
asg19
(lp2931
(lp2932
asg22
(lp2933
VGuava can't be compiled by JDT
p2934
asg25
I0
sba(iArchitecture
Entity
p2935
(dp2936
g11
(lp2937
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p2938
sg16
(lp2939
sg19
(lp2940
sg22
(lp2941
sg25
I0
sba(iArchitecture
Entity
p2942
(dp2943
g11
(lp2944
sg14
S'com.google.common.collect.ImmutableMapValues'
p2945
sg16
(lp2946
sg19
(lp2947
sg22
(lp2948
sg25
I0
sba(iArchitecture
Entity
p2949
(dp2950
g11
(lp2951
sg14
S'com.google.common.collect.ImmutableSetMultimap'
p2952
sg16
(lp2953
sg19
(lp2954
sg22
(lp2955
sg25
I0
sba(iArchitecture
Entity
p2956
(dp2957
g11
(lp2958
sg14
S'com.google.common.collect.ImmutableSortedMap'
p2959
sg16
(lp2960
sg19
(lp2961
sg22
(lp2962
sg25
I0
sba(iArchitecture
Entity
p2963
(dp2964
g11
(lp2965
sg14
S'com.google.common.collect.ImmutableSortedMapFauxverideShim'
p2966
sg16
(lp2967
sg19
(lp2968
sg22
(lp2969
sg25
I0
sba(iArchitecture
Entity
p2970
(dp2971
g11
(lp2972
sg14
S'com.google.common.collect.ImmutableSortedMultisetFauxverideShim'
p2973
sg16
(lp2974
sg19
(lp2975
sg22
(lp2976
sg25
I0
sba(iArchitecture
Entity
p2977
(dp2978
g11
(lp2979
sg14
S'com.google.common.collect.ImmutableSortedSetFauxverideShim'
p2980
sg16
(lp2981
sg19
(lp2982
sg22
(lp2983
sg25
I0
sba(iArchitecture
Entity
p2984
(dp2985
g11
(lp2986
sg14
S'com.google.common.collect.ImmutableTable'
p2987
sg16
(lp2988
sg19
(lp2989
sg22
(lp2990
sg25
I0
sba(iArchitecture
Entity
p2991
(dp2992
g11
(lp2993
sg14
S'com.google.common.collect.Interner'
p2994
sg16
(lp2995
sg19
(lp2996
sg22
(lp2997
sg25
I0
sba(iArchitecture
Entity
p2998
(dp2999
g11
(lp3000
sg14
S'com.google.common.collect.LinkedHashMultimap'
p3001
sg16
(lp3002
sg19
(lp3003
sg22
(lp3004
sg25
I0
sba(iArchitecture
Entity
p3005
(dp3006
g11
(lp3007
sg14
S'com.google.common.collect.ListMultimap'
p3008
sg16
(lp3009
sg19
(lp3010
sg22
(lp3011
sg25
I0
sba(iArchitecture
Entity
p3012
(dp3013
g11
(lp3014
sg14
S'com.google.common.collect.MapConstraint'
p3015
sg16
(lp3016
sg19
(lp3017
sg22
(lp3018
sg25
I0
sba(iArchitecture
Entity
p3019
(dp3020
g11
(lp3021
sg14
S'com.google.common.collect.MapConstraints'
p3022
sg16
(lp3023
sg19
(lp3024
sg22
(lp3025
sg25
I0
sba(iArchitecture
Entity
p3026
(dp3027
g11
(lp3028
sg14
S'com.google.common.collect.MapDifference'
p3029
sg16
(lp3030
sg19
(lp3031
sg22
(lp3032
sg25
I0
sba(iArchitecture
Entity
p3033
(dp3034
g11
(lp3035
g323
ag323
asg14
S'com.google.common.collect.Maps'
p3036
sg16
(lp3037
VWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p3038
aVWould be keen to use these in non-`@Beta`. Are there any plans?\u000a
p3039
asg19
(lp3040
g329
ag329
asg22
(lp3041
g331
ag331
asg25
I0
sba(iArchitecture
Entity
p3042
(dp3043
g11
(lp3044
sg14
S'com.google.common.collect.Multimap'
p3045
sg16
(lp3046
sg19
(lp3047
sg22
(lp3048
sg25
I0
sba(iArchitecture
Entity
p3049
(dp3050
g11
(lp3051
sg14
S'com.google.common.collect.Multimaps'
p3052
sg16
(lp3053
sg19
(lp3054
sg22
(lp3055
sg25
I0
sba(iArchitecture
Entity
p3056
(dp3057
g11
(lp3058
V1437
p3059
ag3059
asg14
S'com.google.common.collect.MutableClassToInstanceMap'
p3060
sg16
(lp3061
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1437) created by **mike.rumpf** on 2013-05-31 at 06:11 AM_\u000a\u000a---\u000a\u000aMutableClassToInstanceMap defines a serialVersionUID but itself does not implement Serializable. This is inconsistent to other guava collection types.\u000a
p3062
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1437) created by **mike.rumpf** on 2013-05-31 at 06:11 AM_\u000a\u000a---\u000a\u000aMutableClassToInstanceMap defines a serialVersionUID but itself does not implement Serializable. This is inconsistent to other guava collection types.\u000a
p3063
asg19
(lp3064
(lp3065
I0
aag3065
asg22
(lp3066
VMutableClassToInstanceMap should implement Serializable
p3067
ag3067
asg25
I0
sba(iArchitecture
Entity
p3068
(dp3069
g11
(lp3070
V1328
p3071
asg14
S'com.google.common.collect.Platform'
p3072
sg16
(lp3073
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1328) created by **gokhanoner** on 2013-03-11 at 03:23 PM_\u000a\u000a---\u000a\u000aHi,\u000a\u000aprivate static final ImmutableSet&lt;String> ISLEM_EB_FIELDS = ImmutableSet.of("ISLBLG");\u000a\u000aFor above desc, a singletonImmutableSet is created. When I try\u000a\u000aISLEM_EB_FIELDS.toArray(new String[0])\u000a\u000aon V13.0.1, ist OK but in v14, it throw class not found exception for\u000a\u000acom.google.common.collect.GwtPlatform.java\u000a\u000aI tried it on a GWT application.\u000a
p3074
asg19
(lp3075
(lp3076
I1
aasg22
(lp3077
VImmutableSet.toArray issue on singletonImmutableSet for v14
p3078
asg25
I0
sba(iArchitecture
Entity
p3079
(dp3080
g11
(lp3081
sg14
S'com.google.common.collect.Queues'
p3082
sg16
(lp3083
sg19
(lp3084
sg22
(lp3085
sg25
I0
sba(iArchitecture
Entity
p3086
(dp3087
g11
(lp3088
sg14
S'com.google.common.collect.RangeMap'
p3089
sg16
(lp3090
sg19
(lp3091
sg22
(lp3092
sg25
I0
sba(iArchitecture
Entity
p3093
(dp3094
g11
(lp3095
sg14
S'com.google.common.collect.RangeSet'
p3096
sg16
(lp3097
sg19
(lp3098
sg22
(lp3099
sg25
I0
sba(iArchitecture
Entity
p3100
(dp3101
g11
(lp3102
sg14
S'com.google.common.collect.RowSortedTable'
p3103
sg16
(lp3104
sg19
(lp3105
sg22
(lp3106
sg25
I0
sba(iArchitecture
Entity
p3107
(dp3108
g11
(lp3109
sg14
S'com.google.common.collect.SetMultimap'
p3110
sg16
(lp3111
sg19
(lp3112
sg22
(lp3113
sg25
I0
sba(iArchitecture
Entity
p3114
(dp3115
g11
(lp3116
V1001
p3117
ag3117
asg14
S'com.google.common.collect.Sets'
p3118
sg16
(lp3119
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1001) created by **kevinb@google.com** on 2012-05-11 at 04:32 PM_\u000a\u000a---\u000a\u000aNow that Guava requires JDK 6, we can probably reimplement Sets.newSetFromMap as a pass-through to Collections.newSetFromMap(), and deprecate it.  However,\u000a\u000a(a) no sense doing that until after the backport is worked out, and\u000a\u000a(b) I don't think we can do the usual "schedule for deletion in 18 months" thing. For the time being, I think we need to ensure that the relationship between guava and guava5 is that of a purely compatible superset. Otherwise libraries that build against guava5 in order to be available to their JDK 5 users may break when used by JDK 6 users (who use guava instead of guava5).\u000a\u000aNot sure for which other libraries we might have a similar situation.\u000a
p3120
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1001) created by **kevinb@google.com** on 2012-05-11 at 04:32 PM_\u000a\u000a---\u000a\u000aNow that Guava requires JDK 6, we can probably reimplement Sets.newSetFromMap as a pass-through to Collections.newSetFromMap(), and deprecate it.  However,\u000a\u000a(a) no sense doing that until after the backport is worked out, and\u000a\u000a(b) I don't think we can do the usual "schedule for deletion in 18 months" thing. For the time being, I think we need to ensure that the relationship between guava and guava5 is that of a purely compatible superset. Otherwise libraries that build against guava5 in order to be available to their JDK 5 users may break when used by JDK 6 users (who use guava instead of guava5).\u000a\u000aNot sure for which other libraries we might have a similar situation.\u000a
p3121
asg19
(lp3122
(lp3123
I0
aag3123
asg22
(lp3124
VReimplement and deprecate Sets.newSetFromMap (but no removing it)
p3125
ag3125
asg25
I0
sba(iArchitecture
Entity
p3126
(dp3127
g11
(lp3128
sg14
S'com.google.common.collect.SortedIterable'
p3129
sg16
(lp3130
sg19
(lp3131
sg22
(lp3132
sg25
I0
sba(iArchitecture
Entity
p3133
(dp3134
g11
(lp3135
sg14
S'com.google.common.collect.SortedIterables'
p3136
sg16
(lp3137
sg19
(lp3138
sg22
(lp3139
sg25
I0
sba(iArchitecture
Entity
p3140
(dp3141
g11
(lp3142
sg14
S'com.google.common.collect.SortedMapDifference'
p3143
sg16
(lp3144
sg19
(lp3145
sg22
(lp3146
sg25
I0
sba(iArchitecture
Entity
p3147
(dp3148
g11
(lp3149
sg14
S'com.google.common.collect.SortedMultisetBridge'
p3150
sg16
(lp3151
sg19
(lp3152
sg22
(lp3153
sg25
I0
sba(iArchitecture
Entity
p3154
(dp3155
g11
(lp3156
sg14
S'com.google.common.collect.SortedMultisets'
p3157
sg16
(lp3158
sg19
(lp3159
sg22
(lp3160
sg25
I0
sba(iArchitecture
Entity
p3161
(dp3162
g11
(lp3163
sg14
S'com.google.common.collect.SortedSetMultimap'
p3164
sg16
(lp3165
sg19
(lp3166
sg22
(lp3167
sg25
I0
sba(iArchitecture
Entity
p3168
(dp3169
g11
(lp3170
sg14
S'com.google.common.collect.SparseImmutableTable'
p3171
sg16
(lp3172
sg19
(lp3173
sg22
(lp3174
sg25
I0
sba(iArchitecture
Entity
p3175
(dp3176
g11
(lp3177
sg14
S'com.google.common.collect.Table'
p3178
sg16
(lp3179
sg19
(lp3180
sg22
(lp3181
sg25
I0
sba(iArchitecture
Entity
p3182
(dp3183
g11
(lp3184
sg14
S'com.google.common.collect.Tables'
p3185
sg16
(lp3186
sg19
(lp3187
sg22
(lp3188
sg25
I0
sba(iArchitecture
Entity
p3189
(dp3190
g11
(lp3191
sg14
S'com.google.common.collect.TreeBasedTable'
p3192
sg16
(lp3193
sg19
(lp3194
sg22
(lp3195
sg25
I0
sba(iArchitecture
Entity
p3196
(dp3197
g11
(lp3198
sg14
S'com.google.common.collect.TreeMultimap'
p3199
sg16
(lp3200
sg19
(lp3201
sg22
(lp3202
sg25
I0
sba(iArchitecture
Entity
p3203
(dp3204
g11
(lp3205
sg14
S'com.google.common.collect.WellBehavedMap'
p3206
sg16
(lp3207
sg19
(lp3208
sg22
(lp3209
sg25
I0
sba(iArchitecture
Entity
p3210
(dp3211
g11
(lp3212
sg14
S'com.google.common.eventbus.AllowConcurrentEvents'
p3213
sg16
(lp3214
sg19
(lp3215
sg22
(lp3216
sg25
I0
sba(iArchitecture
Entity
p3217
(dp3218
g11
(lp3219
sg14
S'com.google.common.eventbus.AnnotatedSubscriberFinder'
p3220
sg16
(lp3221
sg19
(lp3222
sg22
(lp3223
sg25
I0
sba(iArchitecture
Entity
p3224
(dp3225
g11
(lp3226
sg14
S'com.google.common.eventbus.DeadEvent'
p3227
sg16
(lp3228
sg19
(lp3229
sg22
(lp3230
sg25
I0
sba(iArchitecture
Entity
p3231
(dp3232
g11
(lp3233
sg14
S'com.google.common.eventbus.Subscribe'
p3234
sg16
(lp3235
sg19
(lp3236
sg22
(lp3237
sg25
I0
sba(iArchitecture
Entity
p3238
(dp3239
g11
(lp3240
sg14
S'com.google.common.eventbus.SubscriberExceptionContext'
p3241
sg16
(lp3242
sg19
(lp3243
sg22
(lp3244
sg25
I0
sba(iArchitecture
Entity
p3245
(dp3246
g11
(lp3247
sg14
S'com.google.common.eventbus.SubscriberFindingStrategy'
p3248
sg16
(lp3249
sg19
(lp3250
sg22
(lp3251
sg25
I0
sba(iArchitecture
Entity
p3252
(dp3253
g11
(lp3254
sg14
S'com.google.common.eventbus.SynchronizedEventSubscriber'
p3255
sg16
(lp3256
sg19
(lp3257
sg22
(lp3258
sg25
I0
sba(iArchitecture
Entity
p3259
(dp3260
g11
(lp3261
sg14
S'com.google.common.eventbus.package-info'
p3262
sg16
(lp3263
sg19
(lp3264
sg22
(lp3265
sg25
I0
sba(iArchitecture
Entity
p3266
(dp3267
g11
(lp3268
sg14
S'com.google.common.hash.package-info'
p3269
sg16
(lp3270
sg19
(lp3271
sg22
(lp3272
sg25
I0
sba(iArchitecture
Entity
p3273
(dp3274
g11
(lp3275
sg14
S'com.google.common.html.package-info'
p3276
sg16
(lp3277
sg19
(lp3278
sg22
(lp3279
sg25
I0
sba(iArchitecture
Entity
p3280
(dp3281
g11
(lp3282
sg14
S'com.google.common.io.Closer'
p3283
sg16
(lp3284
sg19
(lp3285
sg22
(lp3286
sg25
I0
sba(iArchitecture
Entity
p3287
(dp3288
g11
(lp3289
sg14
S'com.google.common.math.package-info'
p3290
sg16
(lp3291
sg19
(lp3292
sg22
(lp3293
sg25
I0
sba(iArchitecture
Entity
p3294
(dp3295
g11
(lp3296
sg14
S'com.google.common.net.MediaType'
p3297
sg16
(lp3298
sg19
(lp3299
sg22
(lp3300
sg25
I0
sba(iArchitecture
Entity
p3301
(dp3302
g11
(lp3303
sg14
S'com.google.common.primitives.Primitives'
p3304
sg16
(lp3305
sg19
(lp3306
sg22
(lp3307
sg25
I0
sba(iArchitecture
Entity
p3308
(dp3309
g11
(lp3310
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMap'
p3311
sg16
(lp3312
sg19
(lp3313
sg22
(lp3314
sg25
I0
sba(iArchitecture
Entity
p3315
(dp3316
g11
(lp3317
sg14
S'com.google.common.reflect.MutableTypeToInstanceMap'
p3318
sg16
(lp3319
sg19
(lp3320
sg22
(lp3321
sg25
I0
sba(iArchitecture
Entity
p3322
(dp3323
g11
(lp3324
sg14
S'com.google.common.reflect.TypeParameter'
p3325
sg16
(lp3326
sg19
(lp3327
sg22
(lp3328
sg25
I0
sba(iArchitecture
Entity
p3329
(dp3330
g11
(lp3331
V2158
p3332
asg14
S'com.google.common.reflect.TypeResolver'
p3333
sg16
(lp3334
VThe visitClass implementation in TypeResolver.populateTypeMappings has the following body:\u000a\u000a```\u000a  @Override void visitClass(Class<?> fromClass) {\u000a    // Can't map from a raw class to anything other than itself.\u000a    // You can't say "assuming String is Integer".\u000a    // And we don't support "assuming String is T"; user has to say "assuming T is String". \u000a    throw new IllegalArgumentException("No type mapping from " + fromClass);\u000a  }\u000a```\u000a\u000aIt would be great if the IllegalArgumentException message reported the type it's trying to convert to, as well as the one its converting from, for easier debugging should this exception be thrown.\u000a
p3335
asg19
(lp3336
(lp3337
I0
aasg22
(lp3338
VTypeVisitor.visitClass in TypeResolver.populateTypeMappings should report the to type as well as the from type
p3339
asg25
I0
sba(iArchitecture
Entity
p3340
(dp3341
g11
(lp3342
sg14
S'com.google.common.reflect.TypeToInstanceMap'
p3343
sg16
(lp3344
sg19
(lp3345
sg22
(lp3346
sg25
I0
sba(iArchitecture
Entity
p3347
(dp3348
g11
(lp3349
sg14
S'com.google.common.reflect.TypeToken'
p3350
sg16
(lp3351
sg19
(lp3352
sg22
(lp3353
sg25
I0
sba(iArchitecture
Entity
p3354
(dp3355
g11
(lp3356
sg14
S'com.google.common.reflect.TypeVisitor'
p3357
sg16
(lp3358
sg19
(lp3359
sg22
(lp3360
sg25
I0
sba(iArchitecture
Entity
p3361
(dp3362
g11
(lp3363
V1738
p3364
asg14
S'com.google.common.reflect.Types'
p3365
sg16
(lp3366
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1738) created by **socram8888** on 2014-04-24 at 10:38 AM_\u000a\u000a---\u000a\u000aApparently Oracle has added a new abstract method to TypeVariable (getAnnotatedBounds) which is not implemented.\u000a
p3367
asg19
(lp3368
(lp3369
I7
aasg22
(lp3370
VUnable to compile on Java 8
p3371
asg25
I0
sba(iArchitecture
Entity
p3372
(dp3373
g11
(lp3374
sg14
S'com.google.common.reflect.package-info'
p3375
sg16
(lp3376
sg19
(lp3377
sg22
(lp3378
sg25
I0
sba(iArchitecture
Entity
p3379
(dp3380
g11
(lp3381
sg14
S'com.google.common.util.concurrent.AsyncSettableFuture'
p3382
sg16
(lp3383
sg19
(lp3384
sg22
(lp3385
sg25
I0
sba(iArchitecture
Entity
p3386
(dp3387
g11
(lp3388
sg14
S'com.google.common.util.concurrent.AtomicLongMap'
p3389
sg16
(lp3390
sg19
(lp3391
sg22
(lp3392
sg25
I0
sba(iArchitecture
Entity
p3393
(dp3394
g11
(lp3395
sg14
S'com.google.common.util.concurrent.Atomics'
p3396
sg16
(lp3397
sg19
(lp3398
sg22
(lp3399
sg25
I0
sba(iArchitecture
Entity
p3400
(dp3401
g11
(lp3402
sg14
S'com.google.common.util.concurrent.CheckedFuture'
p3403
sg16
(lp3404
sg19
(lp3405
sg22
(lp3406
sg25
I0
sba(iArchitecture
Entity
p3407
(dp3408
g11
(lp3409
sg14
S'com.google.common.util.concurrent.ExecutionList'
p3410
sg16
(lp3411
sg19
(lp3412
sg22
(lp3413
sg25
I0
sba(iArchitecture
Entity
p3414
(dp3415
g11
(lp3416
sg14
S'com.google.common.util.concurrent.FakeTimeLimiter'
p3417
sg16
(lp3418
sg19
(lp3419
sg22
(lp3420
sg25
I0
sba(iArchitecture
Entity
p3421
(dp3422
g11
(lp3423
sg14
S'com.google.common.util.concurrent.FutureCallback'
p3424
sg16
(lp3425
sg19
(lp3426
sg22
(lp3427
sg25
I0
sba(iArchitecture
Entity
p3428
(dp3429
g11
(lp3430
sg14
S'com.google.common.util.concurrent.FutureFallback'
p3431
sg16
(lp3432
sg19
(lp3433
sg22
(lp3434
sg25
I0
sba(iArchitecture
Entity
p3435
(dp3436
g11
(lp3437
sg14
S'com.google.common.util.concurrent.ListenableFuture'
p3438
sg16
(lp3439
sg19
(lp3440
sg22
(lp3441
sg25
I0
sba(iArchitecture
Entity
p3442
(dp3443
g11
(lp3444
sg14
S'com.google.common.util.concurrent.ListenableFutureTask'
p3445
sg16
(lp3446
sg19
(lp3447
sg22
(lp3448
sg25
I0
sba(iArchitecture
Entity
p3449
(dp3450
g11
(lp3451
sg14
S'com.google.common.util.concurrent.ListenableScheduledFuture'
p3452
sg16
(lp3453
sg19
(lp3454
sg22
(lp3455
sg25
I0
sba(iArchitecture
Entity
p3456
(dp3457
g11
(lp3458
sg14
S'com.google.common.util.concurrent.ListeningScheduledExecutorService'
p3459
sg16
(lp3460
sg19
(lp3461
sg22
(lp3462
sg25
I0
sba(iArchitecture
Entity
p3463
(dp3464
g11
(lp3465
V2133
p3466
asg14
S'com.google.common.util.concurrent.MoreExecutors'
p3467
sg16
(lp3468
V`MoreExecutors.java:541`\u000a\u000a``` java\u000a    @Override\u000a    public <V> ListenableScheduledFuture<V> schedule(\u000a        Callable<V> callable, long delay, TimeUnit unit) {\u000a      TrustedListenableFutureTask<V> task = TrustedListenableFutureTask.create(callable);\u000a      ScheduledFuture<?> scheduled = delegate.schedule(task, delay, unit);\u000a      return new ListenableScheduledTask<V>(task, scheduled);\u000a    }\u000a```\u000a\u000a`delegate.schedule(Runnable...)` is invoked here instead of the (intended?) `delegate.schedule(Callable<V>...)`. As a result, the `ScheduledListeningDecorator` is unusable for `Callable<?>`.\u000a
p3469
asg19
(lp3470
(lp3471
I2
aasg22
(lp3472
VBUG: ScheduledListeningDecorator schedule(Callable<V>....) delegates to schedule(Runnable
p3473
asg25
I0
sba(iArchitecture
Entity
p3474
(dp3475
g11
(lp3476
sg14
S'com.google.common.util.concurrent.SerializingExecutor'
p3477
sg16
(lp3478
sg19
(lp3479
sg22
(lp3480
sg25
I0
sba(iArchitecture
Entity
p3481
(dp3482
g11
(lp3483
sg14
S'com.google.common.util.concurrent.SettableFuture'
p3484
sg16
(lp3485
sg19
(lp3486
sg22
(lp3487
sg25
I0
sba(iArchitecture
Entity
p3488
(dp3489
g11
(lp3490
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiter'
p3491
sg16
(lp3492
sg19
(lp3493
sg22
(lp3494
sg25
I0
sba(iArchitecture
Entity
p3495
(dp3496
g11
(lp3497
sg14
S'com.google.common.util.concurrent.TimeLimiter'
p3498
sg16
(lp3499
sg19
(lp3500
sg22
(lp3501
sg25
I0
sba(iArchitecture
Entity
p3502
(dp3503
g11
(lp3504
sg14
S'com.google.common.util.concurrent.package-info'
p3505
sg16
(lp3506
sg19
(lp3507
sg22
(lp3508
sg25
I0
sba(iArchitecture
Entity
p3509
(dp3510
g11
(lp3511
sg14
S'com.google.common.xml.package-info'
p3512
sg16
(lp3513
sg19
(lp3514
sg22
(lp3515
sg25
I0
sbasg1017
(lp3516
g2611
ag2618
ag2625
ag2632
ag2640
ag2651
ag2658
ag2665
ag2674
ag2681
ag2688
ag2695
ag2704
ag2721
ag2728
ag2735
ag2743
ag2757
ag2764
ag2771
ag2778
ag2785
ag2792
ag2799
ag2806
ag2813
ag2820
ag2827
ag2835
ag2843
ag2850
ag2857
ag2864
ag2871
ag2878
ag2885
ag2892
ag2899
ag2906
ag2913
ag2920
ag2928
ag2938
ag2945
ag2952
ag2959
ag2966
ag2973
ag2980
ag2987
ag2994
ag3001
ag3008
ag3015
ag3022
ag3029
ag3036
ag3045
ag3052
ag3060
ag3072
ag3082
ag3089
ag3096
ag3103
ag3110
ag3118
ag3129
ag3136
ag3143
ag3150
ag3157
ag3164
ag3171
ag3178
ag3185
ag3192
ag3199
ag3206
ag3213
ag3220
ag3227
ag3234
ag3241
ag3248
ag3255
ag3262
ag3269
ag3276
ag3283
ag3290
ag3297
ag3304
ag3311
ag3318
ag3325
ag3333
ag3343
ag3350
ag3357
ag3365
ag3375
ag3382
ag3389
ag3396
ag3403
ag3410
ag3417
ag3424
ag3431
ag3438
ag3445
ag3452
ag3459
ag3467
ag3477
ag3484
ag3491
ag3498
ag3505
ag3512
asg25
I0
sg1019
S'sql'
p3517
sbasg1019
S'v18.0'
p3518
sba(iArchitecture
Architecture
p3519
(dp3520
g3
(lp3521
(iArchitecture
Cluster
p3522
(dp3523
g7
(lp3524
(iArchitecture
Entity
p3525
(dp3526
g11
(lp3527
sg14
S'com.google.common.base.AbstractIteratorTest'
p3528
sg16
(lp3529
sg19
(lp3530
sg22
(lp3531
sg25
I0
sba(iArchitecture
Entity
p3532
(dp3533
g11
(lp3534
sg14
S'com.google.common.base.AsciiBenchmark'
p3535
sg16
(lp3536
sg19
(lp3537
sg22
(lp3538
sg25
I0
sba(iArchitecture
Entity
p3539
(dp3540
g11
(lp3541
sg14
S'com.google.common.base.CaseFormatTest'
p3542
sg16
(lp3543
sg19
(lp3544
sg22
(lp3545
sg25
I0
sba(iArchitecture
Entity
p3546
(dp3547
g11
(lp3548
V2410
p3549
asg14
S'com.google.common.base.CharMatcher'
p3550
sg16
(lp3551
VThe second sentence of the JavaDoc for `CharMatcher.matchesNoneOf` is not correct: "The default implementation iterates over the sequence, invoking matches(char) for each character, until this returns false or the end is reached."  This should be "until this returns true or the end is reached".  It appears the incorrect line may have been copied from `CharMatcher.matchesAllOf`\u000a\u000aSimilarly, the "returns" section currently says: "true if this matcher matches every character in the sequence, including when the sequence is empty" (same as `matchesAllOf`). It should say something like "true if this matches matches no character in the sequence, including when the sequence is empty".\u000a
p3552
asg19
(lp3553
(lp3554
I2
aasg22
(lp3555
VCharMatcher.matchesNoneOf JavaDoc is incorrect
p3556
asg25
I0
sba(iArchitecture
Entity
p3557
(dp3558
g11
(lp3559
sg14
S'com.google.common.base.CharMatcherBenchmark'
p3560
sg16
(lp3561
sg19
(lp3562
sg22
(lp3563
sg25
I0
sba(iArchitecture
Entity
p3564
(dp3565
g11
(lp3566
sg14
S'com.google.common.base.CharMatcherTest'
p3567
sg16
(lp3568
sg19
(lp3569
sg22
(lp3570
sg25
I0
sba(iArchitecture
Entity
p3571
(dp3572
g11
(lp3573
sg14
S'com.google.common.base.ConverterTest'
p3574
sg16
(lp3575
sg19
(lp3576
sg22
(lp3577
sg25
I0
sba(iArchitecture
Entity
p3578
(dp3579
g11
(lp3580
sg14
S'com.google.common.base.Equivalence'
p3581
sg16
(lp3582
sg19
(lp3583
sg22
(lp3584
sg25
I0
sba(iArchitecture
Entity
p3585
(dp3586
g11
(lp3587
sg14
S'com.google.common.base.EquivalenceTest'
p3588
sg16
(lp3589
sg19
(lp3590
sg22
(lp3591
sg25
I0
sba(iArchitecture
Entity
p3592
(dp3593
g11
(lp3594
sg14
S'com.google.common.base.Functions'
p3595
sg16
(lp3596
sg19
(lp3597
sg22
(lp3598
sg25
I0
sba(iArchitecture
Entity
p3599
(dp3600
g11
(lp3601
sg14
S'com.google.common.base.FunctionsTest'
p3602
sg16
(lp3603
sg19
(lp3604
sg22
(lp3605
sg25
I0
sba(iArchitecture
Entity
p3606
(dp3607
g11
(lp3608
sg14
S'com.google.common.base.JoinerBenchmark'
p3609
sg16
(lp3610
sg19
(lp3611
sg22
(lp3612
sg25
I0
sba(iArchitecture
Entity
p3613
(dp3614
g11
(lp3615
sg14
S'com.google.common.base.JoinerTest'
p3616
sg16
(lp3617
sg19
(lp3618
sg22
(lp3619
sg25
I0
sba(iArchitecture
Entity
p3620
(dp3621
g11
(lp3622
sg14
S'com.google.common.base.LazyStackTraceBenchmark'
p3623
sg16
(lp3624
sg19
(lp3625
sg22
(lp3626
sg25
I0
sba(iArchitecture
Entity
p3627
(dp3628
g11
(lp3629
sg14
S'com.google.common.base.ObjectsBenchmark'
p3630
sg16
(lp3631
sg19
(lp3632
sg22
(lp3633
sg25
I0
sba(iArchitecture
Entity
p3634
(dp3635
g11
(lp3636
sg14
S'com.google.common.base.OptionalTest'
p3637
sg16
(lp3638
sg19
(lp3639
sg22
(lp3640
sg25
I0
sba(iArchitecture
Entity
p3641
(dp3642
g11
(lp3643
sg14
S'com.google.common.base.PairwiseEquivalence'
p3644
sg16
(lp3645
sg19
(lp3646
sg22
(lp3647
sg25
I0
sba(iArchitecture
Entity
p3648
(dp3649
g11
(lp3650
sg14
S'com.google.common.base.Preconditions'
p3651
sg16
(lp3652
sg19
(lp3653
sg22
(lp3654
sg25
I0
sba(iArchitecture
Entity
p3655
(dp3656
g11
(lp3657
sg14
S'com.google.common.base.PreconditionsTest'
p3658
sg16
(lp3659
sg19
(lp3660
sg22
(lp3661
sg25
I0
sba(iArchitecture
Entity
p3662
(dp3663
g11
(lp3664
V1444
p3665
ag3665
asg14
S'com.google.common.base.Predicates'
p3666
sg16
(lp3667
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p3668
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p3669
asg19
(lp3670
(lp3671
I1
aag3671
asg22
(lp3672
VPredicates.assignableFrom is named backward, and its doc is backward, too
p3673
ag3673
asg25
I0
sba(iArchitecture
Entity
p3674
(dp3675
g11
(lp3676
g3665
asg14
S'com.google.common.base.PredicatesTest'
p3677
sg16
(lp3678
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p3679
asg19
(lp3680
g3671
asg22
(lp3681
g3673
asg25
I0
sba(iArchitecture
Entity
p3682
(dp3683
g11
(lp3684
sg14
S'com.google.common.base.SmallCharMatcher'
p3685
sg16
(lp3686
sg19
(lp3687
sg22
(lp3688
sg25
I0
sba(iArchitecture
Entity
p3689
(dp3690
g11
(lp3691
sg14
S'com.google.common.base.Splitter'
p3692
sg16
(lp3693
sg19
(lp3694
sg22
(lp3695
sg25
I0
sba(iArchitecture
Entity
p3696
(dp3697
g11
(lp3698
sg14
S'com.google.common.base.SplitterBenchmark'
p3699
sg16
(lp3700
sg19
(lp3701
sg22
(lp3702
sg25
I0
sba(iArchitecture
Entity
p3703
(dp3704
g11
(lp3705
sg14
S'com.google.common.base.SplitterTest'
p3706
sg16
(lp3707
sg19
(lp3708
sg22
(lp3709
sg25
I0
sba(iArchitecture
Entity
p3710
(dp3711
g11
(lp3712
V2365
p3713
ag3713
asg14
S'com.google.common.base.StopwatchTest'
p3714
sg16
(lp3715
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p3716
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p3717
asg19
(lp3718
(lp3719
I1
aag3719
asg22
(lp3720
VImplement Stopwatch.toString() under GWT
p3721
ag3721
asg25
I0
sba(iArchitecture
Entity
p3722
(dp3723
g11
(lp3724
sg14
S'com.google.common.base.Strings'
p3725
sg16
(lp3726
sg19
(lp3727
sg22
(lp3728
sg25
I0
sba(iArchitecture
Entity
p3729
(dp3730
g11
(lp3731
sg14
S'com.google.common.base.StringsRepeatBenchmark'
p3732
sg16
(lp3733
sg19
(lp3734
sg22
(lp3735
sg25
I0
sba(iArchitecture
Entity
p3736
(dp3737
g11
(lp3738
sg14
S'com.google.common.base.SuppliersTest'
p3739
sg16
(lp3740
sg19
(lp3741
sg22
(lp3742
sg25
I0
sba(iArchitecture
Entity
p3743
(dp3744
g11
(lp3745
V2457
p3746
ag3746
asg14
S'com.google.common.base.ThrowablesTest'
p3747
sg16
(lp3748
V
p3749
ag3749
asg19
(lp3750
(lp3751
I0
aag3751
asg22
(lp3752
VEmulate Throwables in GWT
p3753
ag3753
asg25
I0
sba(iArchitecture
Entity
p3754
(dp3755
g11
(lp3756
sg14
S'com.google.common.base.ToStringHelperBenchmark'
p3757
sg16
(lp3758
sg19
(lp3759
sg22
(lp3760
sg25
I0
sba(iArchitecture
Entity
p3761
(dp3762
g11
(lp3763
sg14
S'com.google.common.base.ToStringHelperTest'
p3764
sg16
(lp3765
sg19
(lp3766
sg22
(lp3767
sg25
I0
sba(iArchitecture
Entity
p3768
(dp3769
g11
(lp3770
sg14
S'com.google.common.base.VerifyTest'
p3771
sg16
(lp3772
sg19
(lp3773
sg22
(lp3774
sg25
I0
sba(iArchitecture
Entity
p3775
(dp3776
g11
(lp3777
sg14
S'com.google.common.base.WhitespaceMatcherBenchmark'
p3778
sg16
(lp3779
sg19
(lp3780
sg22
(lp3781
sg25
I0
sba(iArchitecture
Entity
p3782
(dp3783
g11
(lp3784
sg14
S'com.google.common.cache.AbstractCacheTest'
p3785
sg16
(lp3786
sg19
(lp3787
sg22
(lp3788
sg25
I0
sba(iArchitecture
Entity
p3789
(dp3790
g11
(lp3791
sg14
S'com.google.common.cache.AbstractLoadingCacheTest'
p3792
sg16
(lp3793
sg19
(lp3794
sg22
(lp3795
sg25
I0
sba(iArchitecture
Entity
p3796
(dp3797
g11
(lp3798
sg14
S'com.google.common.cache.CacheBuilderFactory'
p3799
sg16
(lp3800
sg19
(lp3801
sg22
(lp3802
sg25
I0
sba(iArchitecture
Entity
p3803
(dp3804
g11
(lp3805
sg14
S'com.google.common.cache.CacheBuilderSpec'
p3806
sg16
(lp3807
sg19
(lp3808
sg22
(lp3809
sg25
I0
sba(iArchitecture
Entity
p3810
(dp3811
g11
(lp3812
sg14
S'com.google.common.cache.CacheBuilderSpecTest'
p3813
sg16
(lp3814
sg19
(lp3815
sg22
(lp3816
sg25
I0
sba(iArchitecture
Entity
p3817
(dp3818
g11
(lp3819
sg14
S'com.google.common.cache.CacheBuilderTest'
p3820
sg16
(lp3821
sg19
(lp3822
sg22
(lp3823
sg25
I0
sba(iArchitecture
Entity
p3824
(dp3825
g11
(lp3826
sg14
S'com.google.common.cache.CacheLoadingTest'
p3827
sg16
(lp3828
sg19
(lp3829
sg22
(lp3830
sg25
I0
sba(iArchitecture
Entity
p3831
(dp3832
g11
(lp3833
sg14
S'com.google.common.cache.CacheStatsTest'
p3834
sg16
(lp3835
sg19
(lp3836
sg22
(lp3837
sg25
I0
sba(iArchitecture
Entity
p3838
(dp3839
g11
(lp3840
sg14
S'com.google.common.cache.ChainBenchmark'
p3841
sg16
(lp3842
sg19
(lp3843
sg22
(lp3844
sg25
I0
sba(iArchitecture
Entity
p3845
(dp3846
g11
(lp3847
sg14
S'com.google.common.cache.EmptyCachesTest'
p3848
sg16
(lp3849
sg19
(lp3850
sg22
(lp3851
sg25
I0
sba(iArchitecture
Entity
p3852
(dp3853
g11
(lp3854
sg14
S'com.google.common.cache.ForwardingCacheTest'
p3855
sg16
(lp3856
sg19
(lp3857
sg22
(lp3858
sg25
I0
sba(iArchitecture
Entity
p3859
(dp3860
g11
(lp3861
sg14
S'com.google.common.cache.ForwardingLoadingCacheTest'
p3862
sg16
(lp3863
sg19
(lp3864
sg22
(lp3865
sg25
I0
sba(iArchitecture
Entity
p3866
(dp3867
g11
(lp3868
sg14
S'com.google.common.cache.LoadingCacheSingleThreadBenchmark'
p3869
sg16
(lp3870
sg19
(lp3871
sg22
(lp3872
sg25
I0
sba(iArchitecture
Entity
p3873
(dp3874
g11
(lp3875
sg14
S'com.google.common.cache.LocalCache'
p3876
sg16
(lp3877
sg19
(lp3878
sg22
(lp3879
sg25
I0
sba(iArchitecture
Entity
p3880
(dp3881
g11
(lp3882
sg14
S'com.google.common.cache.LocalCacheTest'
p3883
sg16
(lp3884
sg19
(lp3885
sg22
(lp3886
sg25
I0
sba(iArchitecture
Entity
p3887
(dp3888
g11
(lp3889
sg14
S'com.google.common.cache.LongAdder'
p3890
sg16
(lp3891
sg19
(lp3892
sg22
(lp3893
sg25
I0
sba(iArchitecture
Entity
p3894
(dp3895
g11
(lp3896
sg14
S'com.google.common.cache.MapMakerComparisonBenchmark'
p3897
sg16
(lp3898
sg19
(lp3899
sg22
(lp3900
sg25
I0
sba(iArchitecture
Entity
p3901
(dp3902
g11
(lp3903
sg14
S'com.google.common.cache.SegmentBenchmark'
p3904
sg16
(lp3905
sg19
(lp3906
sg22
(lp3907
sg25
I0
sba(iArchitecture
Entity
p3908
(dp3909
g11
(lp3910
sg14
S'com.google.common.cache.TestingWeighers'
p3911
sg16
(lp3912
sg19
(lp3913
sg22
(lp3914
sg25
I0
sba(iArchitecture
Entity
p3915
(dp3916
g11
(lp3917
sg14
S'com.google.common.collect.AbstractBiMap'
p3918
sg16
(lp3919
sg19
(lp3920
sg22
(lp3921
sg25
I0
sba(iArchitecture
Entity
p3922
(dp3923
g11
(lp3924
sg14
S'com.google.common.collect.AbstractBiMapTest'
p3925
sg16
(lp3926
sg19
(lp3927
sg22
(lp3928
sg25
I0
sba(iArchitecture
Entity
p3929
(dp3930
g11
(lp3931
sg14
S'com.google.common.collect.AbstractImmutableSetTest'
p3932
sg16
(lp3933
sg19
(lp3934
sg22
(lp3935
sg25
I0
sba(iArchitecture
Entity
p3936
(dp3937
g11
(lp3938
sg14
S'com.google.common.collect.AbstractImmutableTableTest'
p3939
sg16
(lp3940
sg19
(lp3941
sg22
(lp3942
sg25
I0
sba(iArchitecture
Entity
p3943
(dp3944
g11
(lp3945
sg14
S'com.google.common.collect.AbstractIndexedListIterator'
p3946
sg16
(lp3947
sg19
(lp3948
sg22
(lp3949
sg25
I0
sba(iArchitecture
Entity
p3950
(dp3951
g11
(lp3952
sg14
S'com.google.common.collect.AbstractIteratorTest'
p3953
sg16
(lp3954
sg19
(lp3955
sg22
(lp3956
sg25
I0
sba(iArchitecture
Entity
p3957
(dp3958
g11
(lp3959
sg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p3960
sg16
(lp3961
sg19
(lp3962
sg22
(lp3963
sg25
I0
sba(iArchitecture
Entity
p3964
(dp3965
g11
(lp3966
sg14
S'com.google.common.collect.AbstractMapBasedMultiset'
p3967
sg16
(lp3968
sg19
(lp3969
sg22
(lp3970
sg25
I0
sba(iArchitecture
Entity
p3971
(dp3972
g11
(lp3973
sg14
S'com.google.common.collect.AbstractMultimap'
p3974
sg16
(lp3975
sg19
(lp3976
sg22
(lp3977
sg25
I0
sba(iArchitecture
Entity
p3978
(dp3979
g11
(lp3980
sg14
S'com.google.common.collect.AbstractMultiset'
p3981
sg16
(lp3982
sg19
(lp3983
sg22
(lp3984
sg25
I0
sba(iArchitecture
Entity
p3985
(dp3986
g11
(lp3987
sg14
S'com.google.common.collect.AbstractNavigableMap'
p3988
sg16
(lp3989
sg19
(lp3990
sg22
(lp3991
sg25
I0
sba(iArchitecture
Entity
p3992
(dp3993
g11
(lp3994
sg14
S'com.google.common.collect.AbstractRangeSet'
p3995
sg16
(lp3996
sg19
(lp3997
sg22
(lp3998
sg25
I0
sba(iArchitecture
Entity
p3999
(dp4000
g11
(lp4001
sg14
S'com.google.common.collect.AbstractSequentialIteratorTest'
p4002
sg16
(lp4003
sg19
(lp4004
sg22
(lp4005
sg25
I0
sba(iArchitecture
Entity
p4006
(dp4007
g11
(lp4008
sg14
S'com.google.common.collect.AbstractTable'
p4009
sg16
(lp4010
sg19
(lp4011
sg22
(lp4012
sg25
I0
sba(iArchitecture
Entity
p4013
(dp4014
g11
(lp4015
sg14
S'com.google.common.collect.AbstractTableReadTest'
p4016
sg16
(lp4017
sg19
(lp4018
sg22
(lp4019
sg25
I0
sba(iArchitecture
Entity
p4020
(dp4021
g11
(lp4022
sg14
S'com.google.common.collect.ArrayListMultimapTest'
p4023
sg16
(lp4024
sg19
(lp4025
sg22
(lp4026
sg25
I0
sba(iArchitecture
Entity
p4027
(dp4028
g11
(lp4029
sg14
S'com.google.common.collect.ArrayTableTest'
p4030
sg16
(lp4031
sg19
(lp4032
sg22
(lp4033
sg25
I0
sba(iArchitecture
Entity
p4034
(dp4035
g11
(lp4036
sg14
S'com.google.common.collect.ArrayTableTest_gwt'
p4037
sg16
(lp4038
sg19
(lp4039
sg22
(lp4040
sg25
I0
sba(iArchitecture
Entity
p4041
(dp4042
g11
(lp4043
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p4044
sg16
(lp4045
sg19
(lp4046
sg22
(lp4047
sg25
I0
sba(iArchitecture
Entity
p4048
(dp4049
g11
(lp4050
sg14
S'com.google.common.collect.BinaryTreeTraverserBenchmark'
p4051
sg16
(lp4052
sg19
(lp4053
sg22
(lp4054
sg25
I0
sba(iArchitecture
Entity
p4055
(dp4056
g11
(lp4057
sg14
S'com.google.common.collect.CartesianList'
p4058
sg16
(lp4059
sg19
(lp4060
sg22
(lp4061
sg25
I0
sba(iArchitecture
Entity
p4062
(dp4063
g11
(lp4064
sg14
S'com.google.common.collect.CollectionBenchmarkSampleData'
p4065
sg16
(lp4066
sg19
(lp4067
sg22
(lp4068
sg25
I0
sba(iArchitecture
Entity
p4069
(dp4070
g11
(lp4071
sg14
S'com.google.common.collect.Collections2'
p4072
sg16
(lp4073
sg19
(lp4074
sg22
(lp4075
sg25
I0
sba(iArchitecture
Entity
p4076
(dp4077
g11
(lp4078
sg14
S'com.google.common.collect.Collections2Test'
p4079
sg16
(lp4080
sg19
(lp4081
sg22
(lp4082
sg25
I0
sba(iArchitecture
Entity
p4083
(dp4084
g11
(lp4085
sg14
S'com.google.common.collect.Collections2Test_gwt'
p4086
sg16
(lp4087
sg19
(lp4088
sg22
(lp4089
sg25
I0
sba(iArchitecture
Entity
p4090
(dp4091
g11
(lp4092
sg14
S'com.google.common.collect.ComparatorDelegationOverheadBenchmark'
p4093
sg16
(lp4094
sg19
(lp4095
sg22
(lp4096
sg25
I0
sba(iArchitecture
Entity
p4097
(dp4098
g11
(lp4099
sg14
S'com.google.common.collect.ComparisonChain'
p4100
sg16
(lp4101
sg19
(lp4102
sg22
(lp4103
sg25
I0
sba(iArchitecture
Entity
p4104
(dp4105
g11
(lp4106
sg14
S'com.google.common.collect.ComparisonChainTest'
p4107
sg16
(lp4108
sg19
(lp4109
sg22
(lp4110
sg25
I0
sba(iArchitecture
Entity
p4111
(dp4112
g11
(lp4113
sg14
S'com.google.common.collect.CompoundOrdering'
p4114
sg16
(lp4115
sg19
(lp4116
sg22
(lp4117
sg25
I0
sba(iArchitecture
Entity
p4118
(dp4119
g11
(lp4120
sg14
S'com.google.common.collect.ComputingConcurrentHashMap'
p4121
sg16
(lp4122
sg19
(lp4123
sg22
(lp4124
sg25
I0
sba(iArchitecture
Entity
p4125
(dp4126
g11
(lp4127
sg14
S'com.google.common.collect.ConcurrentHashMultiset'
p4128
sg16
(lp4129
sg19
(lp4130
sg22
(lp4131
sg25
I0
sba(iArchitecture
Entity
p4132
(dp4133
g11
(lp4134
sg14
S'com.google.common.collect.ConcurrentHashMultisetBasherTest'
p4135
sg16
(lp4136
sg19
(lp4137
sg22
(lp4138
sg25
I0
sba(iArchitecture
Entity
p4139
(dp4140
g11
(lp4141
sg14
S'com.google.common.collect.ConcurrentHashMultisetBenchmark'
p4142
sg16
(lp4143
sg19
(lp4144
sg22
(lp4145
sg25
I0
sba(iArchitecture
Entity
p4146
(dp4147
g11
(lp4148
sg14
S'com.google.common.collect.ConcurrentHashMultisetTest'
p4149
sg16
(lp4150
sg19
(lp4151
sg22
(lp4152
sg25
I0
sba(iArchitecture
Entity
p4153
(dp4154
g11
(lp4155
sg14
S'com.google.common.collect.ConstrainedMapImplementsMapTest'
p4156
sg16
(lp4157
sg19
(lp4158
sg22
(lp4159
sg25
I0
sba(iArchitecture
Entity
p4160
(dp4161
g11
(lp4162
sg14
S'com.google.common.collect.ConstrainedMapImplementsMapTest_gwt'
p4163
sg16
(lp4164
sg19
(lp4165
sg22
(lp4166
sg25
I0
sba(iArchitecture
Entity
p4167
(dp4168
g11
(lp4169
sg14
S'com.google.common.collect.ConstrainedMultimapAsMapImplementsMapTest_gwt'
p4170
sg16
(lp4171
sg19
(lp4172
sg22
(lp4173
sg25
I0
sba(iArchitecture
Entity
p4174
(dp4175
g11
(lp4176
sg14
S'com.google.common.collect.ContiguousSet'
p4177
sg16
(lp4178
sg19
(lp4179
sg22
(lp4180
sg25
I0
sba(iArchitecture
Entity
p4181
(dp4182
g11
(lp4183
sg14
S'com.google.common.collect.ContiguousSetTest'
p4184
sg16
(lp4185
sg19
(lp4186
sg22
(lp4187
sg25
I0
sba(iArchitecture
Entity
p4188
(dp4189
g11
(lp4190
sg14
S'com.google.common.collect.Count'
p4191
sg16
(lp4192
sg19
(lp4193
sg22
(lp4194
sg25
I0
sba(iArchitecture
Entity
p4195
(dp4196
g11
(lp4197
sg14
S'com.google.common.collect.DenseImmutableTable'
p4198
sg16
(lp4199
sg19
(lp4200
sg22
(lp4201
sg25
I0
sba(iArchitecture
Entity
p4202
(dp4203
g11
(lp4204
sg14
S'com.google.common.collect.DescendingImmutableSortedMultiset'
p4205
sg16
(lp4206
sg19
(lp4207
sg22
(lp4208
sg25
I0
sba(iArchitecture
Entity
p4209
(dp4210
g11
(lp4211
sg14
S'com.google.common.collect.DescendingImmutableSortedSet'
p4212
sg16
(lp4213
sg19
(lp4214
sg22
(lp4215
sg25
I0
sba(iArchitecture
Entity
p4216
(dp4217
g11
(lp4218
sg14
S'com.google.common.collect.DescendingMultiset'
p4219
sg16
(lp4220
sg19
(lp4221
sg22
(lp4222
sg25
I0
sba(iArchitecture
Entity
p4223
(dp4224
g11
(lp4225
sg14
S'com.google.common.collect.EmptyContiguousSet'
p4226
sg16
(lp4227
sg19
(lp4228
sg22
(lp4229
sg25
I0
sba(iArchitecture
Entity
p4230
(dp4231
g11
(lp4232
sg14
S'com.google.common.collect.EmptyImmutableTableTest'
p4233
sg16
(lp4234
sg19
(lp4235
sg22
(lp4236
sg25
I0
sba(iArchitecture
Entity
p4237
(dp4238
g11
(lp4239
sg14
S'com.google.common.collect.EmptyImmutableTableTest_gwt'
p4240
sg16
(lp4241
sg19
(lp4242
sg22
(lp4243
sg25
I0
sba(iArchitecture
Entity
p4244
(dp4245
g11
(lp4246
sg14
S'com.google.common.collect.EnumHashBiMapTest'
p4247
sg16
(lp4248
sg19
(lp4249
sg22
(lp4250
sg25
I0
sba(iArchitecture
Entity
p4251
(dp4252
g11
(lp4253
sg14
S'com.google.common.collect.EnumMultisetTest'
p4254
sg16
(lp4255
sg19
(lp4256
sg22
(lp4257
sg25
I0
sba(iArchitecture
Entity
p4258
(dp4259
g11
(lp4260
sg14
S'com.google.common.collect.EvictingQueueTest'
p4261
sg16
(lp4262
sg19
(lp4263
sg22
(lp4264
sg25
I0
sba(iArchitecture
Entity
p4265
(dp4266
g11
(lp4267
sg14
S'com.google.common.collect.ExplicitOrdering'
p4268
sg16
(lp4269
sg19
(lp4270
sg22
(lp4271
sg25
I0
sba(iArchitecture
Entity
p4272
(dp4273
g11
(lp4274
sg14
S'com.google.common.collect.FauxveridesTest'
p4275
sg16
(lp4276
sg19
(lp4277
sg22
(lp4278
sg25
I0
sba(iArchitecture
Entity
p4279
(dp4280
g11
(lp4281
sg14
S'com.google.common.collect.FilteredEntryMultimap'
p4282
sg16
(lp4283
sg19
(lp4284
sg22
(lp4285
sg25
I0
sba(iArchitecture
Entity
p4286
(dp4287
g11
(lp4288
sg14
S'com.google.common.collect.FluentIterableTest'
p4289
sg16
(lp4290
sg19
(lp4291
sg22
(lp4292
sg25
I0
sba(iArchitecture
Entity
p4293
(dp4294
g11
(lp4295
sg14
S'com.google.common.collect.ForMapMultimapAsMapImplementsMapTest'
p4296
sg16
(lp4297
sg19
(lp4298
sg22
(lp4299
sg25
I0
sba(iArchitecture
Entity
p4300
(dp4301
g11
(lp4302
sg14
S'com.google.common.collect.ForMapMultimapAsMapImplementsMapTest_gwt'
p4303
sg16
(lp4304
sg19
(lp4305
sg22
(lp4306
sg25
I0
sba(iArchitecture
Entity
p4307
(dp4308
g11
(lp4309
sg14
S'com.google.common.collect.ForwardingBlockingDeque'
p4310
sg16
(lp4311
sg19
(lp4312
sg22
(lp4313
sg25
I0
sba(iArchitecture
Entity
p4314
(dp4315
g11
(lp4316
sg14
S'com.google.common.collect.ForwardingBlockingDequeTest'
p4317
sg16
(lp4318
sg19
(lp4319
sg22
(lp4320
sg25
I0
sba(iArchitecture
Entity
p4321
(dp4322
g11
(lp4323
sg14
S'com.google.common.collect.ForwardingCollectionTest'
p4324
sg16
(lp4325
sg19
(lp4326
sg22
(lp4327
sg25
I0
sba(iArchitecture
Entity
p4328
(dp4329
g11
(lp4330
sg14
S'com.google.common.collect.ForwardingDeque'
p4331
sg16
(lp4332
sg19
(lp4333
sg22
(lp4334
sg25
I0
sba(iArchitecture
Entity
p4335
(dp4336
g11
(lp4337
sg14
S'com.google.common.collect.ForwardingDequeTest'
p4338
sg16
(lp4339
sg19
(lp4340
sg22
(lp4341
sg25
I0
sba(iArchitecture
Entity
p4342
(dp4343
g11
(lp4344
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p4345
sg16
(lp4346
sg19
(lp4347
sg22
(lp4348
sg25
I0
sba(iArchitecture
Entity
p4349
(dp4350
g11
(lp4351
sg14
S'com.google.common.collect.ForwardingImmutableList'
p4352
sg16
(lp4353
sg19
(lp4354
sg22
(lp4355
sg25
I0
sba(iArchitecture
Entity
p4356
(dp4357
g11
(lp4358
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p4359
sg16
(lp4360
sg19
(lp4361
sg22
(lp4362
sg25
I0
sba(iArchitecture
Entity
p4363
(dp4364
g11
(lp4365
sg14
S'com.google.common.collect.ForwardingList'
p4366
sg16
(lp4367
sg19
(lp4368
sg22
(lp4369
sg25
I0
sba(iArchitecture
Entity
p4370
(dp4371
g11
(lp4372
sg14
S'com.google.common.collect.ForwardingListIteratorTest'
p4373
sg16
(lp4374
sg19
(lp4375
sg22
(lp4376
sg25
I0
sba(iArchitecture
Entity
p4377
(dp4378
g11
(lp4379
sg14
S'com.google.common.collect.ForwardingListTest'
p4380
sg16
(lp4381
sg19
(lp4382
sg22
(lp4383
sg25
I0
sba(iArchitecture
Entity
p4384
(dp4385
g11
(lp4386
sg14
S'com.google.common.collect.ForwardingMapTest'
p4387
sg16
(lp4388
sg19
(lp4389
sg22
(lp4390
sg25
I0
sba(iArchitecture
Entity
p4391
(dp4392
g11
(lp4393
sg14
S'com.google.common.collect.ForwardingMultimap'
p4394
sg16
(lp4395
sg19
(lp4396
sg22
(lp4397
sg25
I0
sba(iArchitecture
Entity
p4398
(dp4399
g11
(lp4400
sg14
S'com.google.common.collect.ForwardingMultimapTest'
p4401
sg16
(lp4402
sg19
(lp4403
sg22
(lp4404
sg25
I0
sba(iArchitecture
Entity
p4405
(dp4406
g11
(lp4407
sg14
S'com.google.common.collect.ForwardingMultisetTest'
p4408
sg16
(lp4409
sg19
(lp4410
sg22
(lp4411
sg25
I0
sba(iArchitecture
Entity
p4412
(dp4413
g11
(lp4414
sg14
S'com.google.common.collect.ForwardingNavigableMapTest'
p4415
sg16
(lp4416
sg19
(lp4417
sg22
(lp4418
sg25
I0
sba(iArchitecture
Entity
p4419
(dp4420
g11
(lp4421
sg14
S'com.google.common.collect.ForwardingNavigableSetTest'
p4422
sg16
(lp4423
sg19
(lp4424
sg22
(lp4425
sg25
I0
sba(iArchitecture
Entity
p4426
(dp4427
g11
(lp4428
sg14
S'com.google.common.collect.ForwardingQueueTest'
p4429
sg16
(lp4430
sg19
(lp4431
sg22
(lp4432
sg25
I0
sba(iArchitecture
Entity
p4433
(dp4434
g11
(lp4435
sg14
S'com.google.common.collect.ForwardingSetTest'
p4436
sg16
(lp4437
sg19
(lp4438
sg22
(lp4439
sg25
I0
sba(iArchitecture
Entity
p4440
(dp4441
g11
(lp4442
sg14
S'com.google.common.collect.ForwardingSortedMapImplementsMapTest'
p4443
sg16
(lp4444
sg19
(lp4445
sg22
(lp4446
sg25
I0
sba(iArchitecture
Entity
p4447
(dp4448
g11
(lp4449
sg14
S'com.google.common.collect.ForwardingSortedMapImplementsMapTest_gwt'
p4450
sg16
(lp4451
sg19
(lp4452
sg22
(lp4453
sg25
I0
sba(iArchitecture
Entity
p4454
(dp4455
g11
(lp4456
sg14
S'com.google.common.collect.ForwardingSortedMapTest'
p4457
sg16
(lp4458
sg19
(lp4459
sg22
(lp4460
sg25
I0
sba(iArchitecture
Entity
p4461
(dp4462
g11
(lp4463
sg14
S'com.google.common.collect.ForwardingSortedMultisetTest'
p4464
sg16
(lp4465
sg19
(lp4466
sg22
(lp4467
sg25
I0
sba(iArchitecture
Entity
p4468
(dp4469
g11
(lp4470
sg14
S'com.google.common.collect.ForwardingSortedSetTest'
p4471
sg16
(lp4472
sg19
(lp4473
sg22
(lp4474
sg25
I0
sba(iArchitecture
Entity
p4475
(dp4476
g11
(lp4477
sg14
S'com.google.common.collect.ForwardingTable'
p4478
sg16
(lp4479
sg19
(lp4480
sg22
(lp4481
sg25
I0
sba(iArchitecture
Entity
p4482
(dp4483
g11
(lp4484
sg14
S'com.google.common.collect.ForwardingTableTest'
p4485
sg16
(lp4486
sg19
(lp4487
sg22
(lp4488
sg25
I0
sba(iArchitecture
Entity
p4489
(dp4490
g11
(lp4491
sg14
S'com.google.common.collect.ForwardingTestCase'
p4492
sg16
(lp4493
sg19
(lp4494
sg22
(lp4495
sg25
I0
sba(iArchitecture
Entity
p4496
(dp4497
g11
(lp4498
sg14
S'com.google.common.collect.GeneralRange'
p4499
sg16
(lp4500
sg19
(lp4501
sg22
(lp4502
sg25
I0
sba(iArchitecture
Entity
p4503
(dp4504
g11
(lp4505
sg14
S'com.google.common.collect.GeneralRangeTest'
p4506
sg16
(lp4507
sg19
(lp4508
sg22
(lp4509
sg25
I0
sba(iArchitecture
Entity
p4510
(dp4511
g11
(lp4512
sg14
S'com.google.common.collect.HashBasedTableTest_gwt'
p4513
sg16
(lp4514
sg19
(lp4515
sg22
(lp4516
sg25
I0
sba(iArchitecture
Entity
p4517
(dp4518
g11
(lp4519
sg14
S'com.google.common.collect.HashBiMap'
p4520
sg16
(lp4521
sg19
(lp4522
sg22
(lp4523
sg25
I0
sba(iArchitecture
Entity
p4524
(dp4525
g11
(lp4526
sg14
S'com.google.common.collect.HashBiMapTest'
p4527
sg16
(lp4528
sg19
(lp4529
sg22
(lp4530
sg25
I0
sba(iArchitecture
Entity
p4531
(dp4532
g11
(lp4533
sg14
S'com.google.common.collect.HashMultimapTest'
p4534
sg16
(lp4535
sg19
(lp4536
sg22
(lp4537
sg25
I0
sba(iArchitecture
Entity
p4538
(dp4539
g11
(lp4540
sg14
S'com.google.common.collect.HashMultisetAddPresentBenchmark'
p4541
sg16
(lp4542
sg19
(lp4543
sg22
(lp4544
sg25
I0
sba(iArchitecture
Entity
p4545
(dp4546
g11
(lp4547
sg14
S'com.google.common.collect.Hashing'
p4548
sg16
(lp4549
sg19
(lp4550
sg22
(lp4551
sg25
I0
sba(iArchitecture
Entity
p4552
(dp4553
g11
(lp4554
sg14
S'com.google.common.collect.ImmutableBiMapTest'
p4555
sg16
(lp4556
sg19
(lp4557
sg22
(lp4558
sg25
I0
sba(iArchitecture
Entity
p4559
(dp4560
g11
(lp4561
sg14
S'com.google.common.collect.ImmutableBiMapTest_gwt'
p4562
sg16
(lp4563
sg19
(lp4564
sg22
(lp4565
sg25
I0
sba(iArchitecture
Entity
p4566
(dp4567
g11
(lp4568
sg14
S'com.google.common.collect.ImmutableCollection'
p4569
sg16
(lp4570
sg19
(lp4571
sg22
(lp4572
sg25
I0
sba(iArchitecture
Entity
p4573
(dp4574
g11
(lp4575
sg14
S'com.google.common.collect.ImmutableList'
p4576
sg16
(lp4577
sg19
(lp4578
sg22
(lp4579
sg25
I0
sba(iArchitecture
Entity
p4580
(dp4581
g11
(lp4582
sg14
S'com.google.common.collect.ImmutableListCreationBenchmark'
p4583
sg16
(lp4584
sg19
(lp4585
sg22
(lp4586
sg25
I0
sba(iArchitecture
Entity
p4587
(dp4588
g11
(lp4589
sg14
S'com.google.common.collect.ImmutableListMultimapTest'
p4590
sg16
(lp4591
sg19
(lp4592
sg22
(lp4593
sg25
I0
sba(iArchitecture
Entity
p4594
(dp4595
g11
(lp4596
sg14
S'com.google.common.collect.ImmutableListMultimapTest_gwt'
p4597
sg16
(lp4598
sg19
(lp4599
sg22
(lp4600
sg25
I0
sba(iArchitecture
Entity
p4601
(dp4602
g11
(lp4603
sg14
S'com.google.common.collect.ImmutableListTest'
p4604
sg16
(lp4605
sg19
(lp4606
sg22
(lp4607
sg25
I0
sba(iArchitecture
Entity
p4608
(dp4609
g11
(lp4610
sg14
S'com.google.common.collect.ImmutableListTest_gwt'
p4611
sg16
(lp4612
sg19
(lp4613
sg22
(lp4614
sg25
I0
sba(iArchitecture
Entity
p4615
(dp4616
g11
(lp4617
sg14
S'com.google.common.collect.ImmutableMap'
p4618
sg16
(lp4619
sg19
(lp4620
sg22
(lp4621
sg25
I0
sba(iArchitecture
Entity
p4622
(dp4623
g11
(lp4624
sg14
S'com.google.common.collect.ImmutableMapTest'
p4625
sg16
(lp4626
sg19
(lp4627
sg22
(lp4628
sg25
I0
sba(iArchitecture
Entity
p4629
(dp4630
g11
(lp4631
sg14
S'com.google.common.collect.ImmutableMapTest_gwt'
p4632
sg16
(lp4633
sg19
(lp4634
sg22
(lp4635
sg25
I0
sba(iArchitecture
Entity
p4636
(dp4637
g11
(lp4638
sg14
S'com.google.common.collect.ImmutableMapValues'
p4639
sg16
(lp4640
sg19
(lp4641
sg22
(lp4642
sg25
I0
sba(iArchitecture
Entity
p4643
(dp4644
g11
(lp4645
sg14
S'com.google.common.collect.ImmutableMultimapAsMapImplementsMapTest_gwt'
p4646
sg16
(lp4647
sg19
(lp4648
sg22
(lp4649
sg25
I0
sba(iArchitecture
Entity
p4650
(dp4651
g11
(lp4652
sg14
S'com.google.common.collect.ImmutableMultimapTest'
p4653
sg16
(lp4654
sg19
(lp4655
sg22
(lp4656
sg25
I0
sba(iArchitecture
Entity
p4657
(dp4658
g11
(lp4659
sg14
S'com.google.common.collect.ImmutableMultiset'
p4660
sg16
(lp4661
sg19
(lp4662
sg22
(lp4663
sg25
I0
sba(iArchitecture
Entity
p4664
(dp4665
g11
(lp4666
sg14
S'com.google.common.collect.ImmutableMultisetTest'
p4667
sg16
(lp4668
sg19
(lp4669
sg22
(lp4670
sg25
I0
sba(iArchitecture
Entity
p4671
(dp4672
g11
(lp4673
sg14
S'com.google.common.collect.ImmutableMultisetTest_gwt'
p4674
sg16
(lp4675
sg19
(lp4676
sg22
(lp4677
sg25
I0
sba(iArchitecture
Entity
p4678
(dp4679
g11
(lp4680
V2258
p4681
asg14
S'com.google.common.collect.ImmutableRangeMap'
p4682
sg16
(lp4683
VMutable operations on `ImmutableRangeSet` (`add`, `remove`, `clear`, etc) should be marked as unsupported and deprecated and javadoc modified appropriately, in a similar way to mutable operations on the other immutable collections.\u000a
p4684
asg19
(lp4685
(lp4686
I2
aasg22
(lp4687
VMutable operations on ImmutableRangeSet should be deprecated
p4688
asg25
I0
sba(iArchitecture
Entity
p4689
(dp4690
g11
(lp4691
sg14
S'com.google.common.collect.ImmutableRangeMapTest'
p4692
sg16
(lp4693
sg19
(lp4694
sg22
(lp4695
sg25
I0
sba(iArchitecture
Entity
p4696
(dp4697
g11
(lp4698
g4681
asg14
S'com.google.common.collect.ImmutableRangeSet'
p4699
sg16
(lp4700
VMutable operations on `ImmutableRangeSet` (`add`, `remove`, `clear`, etc) should be marked as unsupported and deprecated and javadoc modified appropriately, in a similar way to mutable operations on the other immutable collections.\u000a
p4701
asg19
(lp4702
g4686
asg22
(lp4703
g4688
asg25
I0
sba(iArchitecture
Entity
p4704
(dp4705
g11
(lp4706
sg14
S'com.google.common.collect.ImmutableRangeSetTest'
p4707
sg16
(lp4708
sg19
(lp4709
sg22
(lp4710
sg25
I0
sba(iArchitecture
Entity
p4711
(dp4712
g11
(lp4713
sg14
S'com.google.common.collect.ImmutableSet'
p4714
sg16
(lp4715
sg19
(lp4716
sg22
(lp4717
sg25
I0
sba(iArchitecture
Entity
p4718
(dp4719
g11
(lp4720
sg14
S'com.google.common.collect.ImmutableSetMultimapAsMapImplementsMapTest_gwt'
p4721
sg16
(lp4722
sg19
(lp4723
sg22
(lp4724
sg25
I0
sba(iArchitecture
Entity
p4725
(dp4726
g11
(lp4727
sg14
S'com.google.common.collect.ImmutableSetMultimapTest'
p4728
sg16
(lp4729
sg19
(lp4730
sg22
(lp4731
sg25
I0
sba(iArchitecture
Entity
p4732
(dp4733
g11
(lp4734
sg14
S'com.google.common.collect.ImmutableSetMultimapTest_gwt'
p4735
sg16
(lp4736
sg19
(lp4737
sg22
(lp4738
sg25
I0
sba(iArchitecture
Entity
p4739
(dp4740
g11
(lp4741
sg14
S'com.google.common.collect.ImmutableSetTest'
p4742
sg16
(lp4743
sg19
(lp4744
sg22
(lp4745
sg25
I0
sba(iArchitecture
Entity
p4746
(dp4747
g11
(lp4748
sg14
S'com.google.common.collect.ImmutableSetTest_gwt'
p4749
sg16
(lp4750
sg19
(lp4751
sg22
(lp4752
sg25
I0
sba(iArchitecture
Entity
p4753
(dp4754
g11
(lp4755
sg14
S'com.google.common.collect.ImmutableSortedMapTest'
p4756
sg16
(lp4757
sg19
(lp4758
sg22
(lp4759
sg25
I0
sba(iArchitecture
Entity
p4760
(dp4761
g11
(lp4762
sg14
S'com.google.common.collect.ImmutableSortedMapTest_gwt'
p4763
sg16
(lp4764
sg19
(lp4765
sg22
(lp4766
sg25
I0
sba(iArchitecture
Entity
p4767
(dp4768
g11
(lp4769
sg14
S'com.google.common.collect.ImmutableSortedMultiset'
p4770
sg16
(lp4771
sg19
(lp4772
sg22
(lp4773
sg25
I0
sba(iArchitecture
Entity
p4774
(dp4775
g11
(lp4776
sg14
S'com.google.common.collect.ImmutableSortedMultisetTest'
p4777
sg16
(lp4778
sg19
(lp4779
sg22
(lp4780
sg25
I0
sba(iArchitecture
Entity
p4781
(dp4782
g11
(lp4783
sg14
S'com.google.common.collect.ImmutableSortedSet'
p4784
sg16
(lp4785
sg19
(lp4786
sg22
(lp4787
sg25
I0
sba(iArchitecture
Entity
p4788
(dp4789
g11
(lp4790
sg14
S'com.google.common.collect.ImmutableSortedSetTest'
p4791
sg16
(lp4792
sg19
(lp4793
sg22
(lp4794
sg25
I0
sba(iArchitecture
Entity
p4795
(dp4796
g11
(lp4797
sg14
S'com.google.common.collect.ImmutableSortedSetTest_gwt'
p4798
sg16
(lp4799
sg19
(lp4800
sg22
(lp4801
sg25
I0
sba(iArchitecture
Entity
p4802
(dp4803
g11
(lp4804
sg14
S'com.google.common.collect.ImmutableTableTest_gwt'
p4805
sg16
(lp4806
sg19
(lp4807
sg22
(lp4808
sg25
I0
sba(iArchitecture
Entity
p4809
(dp4810
g11
(lp4811
sg14
S'com.google.common.collect.InternersBenchmark'
p4812
sg16
(lp4813
sg19
(lp4814
sg22
(lp4815
sg25
I0
sba(iArchitecture
Entity
p4816
(dp4817
g11
(lp4818
sg14
S'com.google.common.collect.InternersTest'
p4819
sg16
(lp4820
sg19
(lp4821
sg22
(lp4822
sg25
I0
sba(iArchitecture
Entity
p4823
(dp4824
g11
(lp4825
sg14
S'com.google.common.collect.Iterables'
p4826
sg16
(lp4827
sg19
(lp4828
sg22
(lp4829
sg25
I0
sba(iArchitecture
Entity
p4830
(dp4831
g11
(lp4832
sg14
S'com.google.common.collect.IterablesTest'
p4833
sg16
(lp4834
sg19
(lp4835
sg22
(lp4836
sg25
I0
sba(iArchitecture
Entity
p4837
(dp4838
g11
(lp4839
sg14
S'com.google.common.collect.IterablesTest_gwt'
p4840
sg16
(lp4841
sg19
(lp4842
sg22
(lp4843
sg25
I0
sba(iArchitecture
Entity
p4844
(dp4845
g11
(lp4846
sg14
S'com.google.common.collect.IteratorBenchmark'
p4847
sg16
(lp4848
sg19
(lp4849
sg22
(lp4850
sg25
I0
sba(iArchitecture
Entity
p4851
(dp4852
g11
(lp4853
sg14
S'com.google.common.collect.Iterators'
p4854
sg16
(lp4855
sg19
(lp4856
sg22
(lp4857
sg25
I0
sba(iArchitecture
Entity
p4858
(dp4859
g11
(lp4860
sg14
S'com.google.common.collect.IteratorsTest'
p4861
sg16
(lp4862
sg19
(lp4863
sg22
(lp4864
sg25
I0
sba(iArchitecture
Entity
p4865
(dp4866
g11
(lp4867
sg14
S'com.google.common.collect.IteratorsTest_gwt'
p4868
sg16
(lp4869
sg19
(lp4870
sg22
(lp4871
sg25
I0
sba(iArchitecture
Entity
p4872
(dp4873
g11
(lp4874
sg14
S'com.google.common.collect.LexicographicalOrdering'
p4875
sg16
(lp4876
sg19
(lp4877
sg22
(lp4878
sg25
I0
sba(iArchitecture
Entity
p4879
(dp4880
g11
(lp4881
sg14
S'com.google.common.collect.LinkedHashMultimap'
p4882
sg16
(lp4883
sg19
(lp4884
sg22
(lp4885
sg25
I0
sba(iArchitecture
Entity
p4886
(dp4887
g11
(lp4888
sg14
S'com.google.common.collect.LinkedHashMultimapTest'
p4889
sg16
(lp4890
sg19
(lp4891
sg22
(lp4892
sg25
I0
sba(iArchitecture
Entity
p4893
(dp4894
g11
(lp4895
sg14
S'com.google.common.collect.LinkedListMultimap'
p4896
sg16
(lp4897
sg19
(lp4898
sg22
(lp4899
sg25
I0
sba(iArchitecture
Entity
p4900
(dp4901
g11
(lp4902
sg14
S'com.google.common.collect.Lists'
p4903
sg16
(lp4904
sg19
(lp4905
sg22
(lp4906
sg25
I0
sba(iArchitecture
Entity
p4907
(dp4908
g11
(lp4909
sg14
S'com.google.common.collect.ListsTest'
p4910
sg16
(lp4911
sg19
(lp4912
sg22
(lp4913
sg25
I0
sba(iArchitecture
Entity
p4914
(dp4915
g11
(lp4916
sg14
S'com.google.common.collect.ListsTest_gwt'
p4917
sg16
(lp4918
sg19
(lp4919
sg22
(lp4920
sg25
I0
sba(iArchitecture
Entity
p4921
(dp4922
g11
(lp4923
sg14
S'com.google.common.collect.MapConstraintsTest'
p4924
sg16
(lp4925
sg19
(lp4926
sg22
(lp4927
sg25
I0
sba(iArchitecture
Entity
p4928
(dp4929
g11
(lp4930
sg14
S'com.google.common.collect.MapConstraintsTest_gwt'
p4931
sg16
(lp4932
sg19
(lp4933
sg22
(lp4934
sg25
I0
sba(iArchitecture
Entity
p4935
(dp4936
g11
(lp4937
sg14
S'com.google.common.collect.MapMaker'
p4938
sg16
(lp4939
sg19
(lp4940
sg22
(lp4941
sg25
I0
sba(iArchitecture
Entity
p4942
(dp4943
g11
(lp4944
sg14
S'com.google.common.collect.MapMakerInternalMap'
p4945
sg16
(lp4946
sg19
(lp4947
sg22
(lp4948
sg25
I0
sba(iArchitecture
Entity
p4949
(dp4950
g11
(lp4951
sg14
S'com.google.common.collect.MapMakerInternalMapTest'
p4952
sg16
(lp4953
sg19
(lp4954
sg22
(lp4955
sg25
I0
sba(iArchitecture
Entity
p4956
(dp4957
g11
(lp4958
sg14
S'com.google.common.collect.MapMakerSingleThreadBenchmark'
p4959
sg16
(lp4960
sg19
(lp4961
sg22
(lp4962
sg25
I0
sba(iArchitecture
Entity
p4963
(dp4964
g11
(lp4965
sg14
S'com.google.common.collect.MapMakerTest'
p4966
sg16
(lp4967
sg19
(lp4968
sg22
(lp4969
sg25
I0
sba(iArchitecture
Entity
p4970
(dp4971
g11
(lp4972
sg14
S'com.google.common.collect.MapsSortedTransformValuesTest_gwt'
p4973
sg16
(lp4974
sg19
(lp4975
sg22
(lp4976
sg25
I0
sba(iArchitecture
Entity
p4977
(dp4978
g11
(lp4979
sg14
S'com.google.common.collect.MapsTest'
p4980
sg16
(lp4981
sg19
(lp4982
sg22
(lp4983
sg25
I0
sba(iArchitecture
Entity
p4984
(dp4985
g11
(lp4986
sg14
S'com.google.common.collect.MapsTest_gwt'
p4987
sg16
(lp4988
sg19
(lp4989
sg22
(lp4990
sg25
I0
sba(iArchitecture
Entity
p4991
(dp4992
g11
(lp4993
sg14
S'com.google.common.collect.MapsTransformValuesTest_gwt'
p4994
sg16
(lp4995
sg19
(lp4996
sg22
(lp4997
sg25
I0
sba(iArchitecture
Entity
p4998
(dp4999
g11
(lp5000
sg14
S'com.google.common.collect.MapsTransformValuesUnmodifiableIteratorTest_gwt'
p5001
sg16
(lp5002
sg19
(lp5003
sg22
(lp5004
sg25
I0
sba(iArchitecture
Entity
p5005
(dp5006
g11
(lp5007
sg14
S'com.google.common.collect.MinMaxPriorityQueue'
p5008
sg16
(lp5009
sg19
(lp5010
sg22
(lp5011
sg25
I0
sba(iArchitecture
Entity
p5012
(dp5013
g11
(lp5014
sg14
S'com.google.common.collect.MinMaxPriorityQueueBenchmark'
p5015
sg16
(lp5016
sg19
(lp5017
sg22
(lp5018
sg25
I0
sba(iArchitecture
Entity
p5019
(dp5020
g11
(lp5021
sg14
S'com.google.common.collect.MinMaxPriorityQueueTest'
p5022
sg16
(lp5023
sg19
(lp5024
sg22
(lp5025
sg25
I0
sba(iArchitecture
Entity
p5026
(dp5027
g11
(lp5028
sg14
S'com.google.common.collect.MultimapsCollectionTest'
p5029
sg16
(lp5030
sg19
(lp5031
sg22
(lp5032
sg25
I0
sba(iArchitecture
Entity
p5033
(dp5034
g11
(lp5035
sg14
S'com.google.common.collect.MultimapsTest'
p5036
sg16
(lp5037
sg19
(lp5038
sg22
(lp5039
sg25
I0
sba(iArchitecture
Entity
p5040
(dp5041
g11
(lp5042
sg14
S'com.google.common.collect.MultimapsTest_gwt'
p5043
sg16
(lp5044
sg19
(lp5045
sg22
(lp5046
sg25
I0
sba(iArchitecture
Entity
p5047
(dp5048
g11
(lp5049
sg14
S'com.google.common.collect.MultimapsTransformValuesAsMapTest_gwt'
p5050
sg16
(lp5051
sg19
(lp5052
sg22
(lp5053
sg25
I0
sba(iArchitecture
Entity
p5054
(dp5055
g11
(lp5056
sg14
S'com.google.common.collect.MultipleSetContainsBenchmark'
p5057
sg16
(lp5058
sg19
(lp5059
sg22
(lp5060
sg25
I0
sba(iArchitecture
Entity
p5061
(dp5062
g11
(lp5063
sg14
S'com.google.common.collect.MultisetIteratorBenchmark'
p5064
sg16
(lp5065
sg19
(lp5066
sg22
(lp5067
sg25
I0
sba(iArchitecture
Entity
p5068
(dp5069
g11
(lp5070
sg14
S'com.google.common.collect.Multisets'
p5071
sg16
(lp5072
sg19
(lp5073
sg22
(lp5074
sg25
I0
sba(iArchitecture
Entity
p5075
(dp5076
g11
(lp5077
sg14
S'com.google.common.collect.MultisetsTest'
p5078
sg16
(lp5079
sg19
(lp5080
sg22
(lp5081
sg25
I0
sba(iArchitecture
Entity
p5082
(dp5083
g11
(lp5084
sg14
S'com.google.common.collect.MultisetsTest_gwt'
p5085
sg16
(lp5086
sg19
(lp5087
sg22
(lp5088
sg25
I0
sba(iArchitecture
Entity
p5089
(dp5090
g11
(lp5091
sg14
S'com.google.common.collect.NewCustomTableTest_gwt'
p5092
sg16
(lp5093
sg19
(lp5094
sg22
(lp5095
sg25
I0
sba(iArchitecture
Entity
p5096
(dp5097
g11
(lp5098
sg14
S'com.google.common.collect.NullsFirstOrdering'
p5099
sg16
(lp5100
sg19
(lp5101
sg22
(lp5102
sg25
I0
sba(iArchitecture
Entity
p5103
(dp5104
g11
(lp5105
sg14
S'com.google.common.collect.NullsLastOrdering'
p5106
sg16
(lp5107
sg19
(lp5108
sg22
(lp5109
sg25
I0
sba(iArchitecture
Entity
p5110
(dp5111
g11
(lp5112
sg14
S'com.google.common.collect.ObjectArrays'
p5113
sg16
(lp5114
sg19
(lp5115
sg22
(lp5116
sg25
I0
sba(iArchitecture
Entity
p5117
(dp5118
g11
(lp5119
sg14
S'com.google.common.collect.ObjectArraysTest'
p5120
sg16
(lp5121
sg19
(lp5122
sg22
(lp5123
sg25
I0
sba(iArchitecture
Entity
p5124
(dp5125
g11
(lp5126
sg14
S'com.google.common.collect.OrderingTest'
p5127
sg16
(lp5128
sg19
(lp5129
sg22
(lp5130
sg25
I0
sba(iArchitecture
Entity
p5131
(dp5132
g11
(lp5133
sg14
S'com.google.common.collect.PeekingIteratorTest'
p5134
sg16
(lp5135
sg19
(lp5136
sg22
(lp5137
sg25
I0
sba(iArchitecture
Entity
p5138
(dp5139
g11
(lp5140
sg14
S'com.google.common.collect.Platform'
p5141
sg16
(lp5142
sg19
(lp5143
sg22
(lp5144
sg25
I0
sba(iArchitecture
Entity
p5145
(dp5146
g11
(lp5147
sg14
S'com.google.common.collect.PowerSetBenchmark'
p5148
sg16
(lp5149
sg19
(lp5150
sg22
(lp5151
sg25
I0
sba(iArchitecture
Entity
p5152
(dp5153
g11
(lp5154
sg14
S'com.google.common.collect.QueuesTest'
p5155
sg16
(lp5156
sg19
(lp5157
sg22
(lp5158
sg25
I0
sba(iArchitecture
Entity
p5159
(dp5160
g11
(lp5161
V2376
p5162
ag5162
ag5162
ag5162
asg14
S'com.google.common.collect.Range'
p5163
sg16
(lp5164
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5165
aV`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5166
aV`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5167
aV`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5168
asg19
(lp5169
(lp5170
I1
aag5170
ag5170
ag5170
asg22
(lp5171
VConsider replacing unicode character in Range.toString()
p5172
ag5172
ag5172
ag5172
asg25
I0
sba(iArchitecture
Entity
p5173
(dp5174
g11
(lp5175
g5162
asg14
S'com.google.common.collect.RangeTest'
p5176
sg16
(lp5177
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p5178
asg19
(lp5179
g5170
asg22
(lp5180
g5172
asg25
I0
sba(iArchitecture
Entity
p5181
(dp5182
g11
(lp5183
sg14
S'com.google.common.collect.RangeTest_gwt'
p5184
sg16
(lp5185
sg19
(lp5186
sg22
(lp5187
sg25
I0
sba(iArchitecture
Entity
p5188
(dp5189
g11
(lp5190
sg14
S'com.google.common.collect.RegularContiguousSet'
p5191
sg16
(lp5192
sg19
(lp5193
sg22
(lp5194
sg25
I0
sba(iArchitecture
Entity
p5195
(dp5196
g11
(lp5197
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p5198
sg16
(lp5199
sg19
(lp5200
sg22
(lp5201
sg25
I0
sba(iArchitecture
Entity
p5202
(dp5203
g11
(lp5204
sg14
S'com.google.common.collect.RegularImmutableList'
p5205
sg16
(lp5206
sg19
(lp5207
sg22
(lp5208
sg25
I0
sba(iArchitecture
Entity
p5209
(dp5210
g11
(lp5211
sg14
S'com.google.common.collect.RegularImmutableMultiset'
p5212
sg16
(lp5213
sg19
(lp5214
sg22
(lp5215
sg25
I0
sba(iArchitecture
Entity
p5216
(dp5217
g11
(lp5218
sg14
S'com.google.common.collect.RegularImmutableSet'
p5219
sg16
(lp5220
sg19
(lp5221
sg22
(lp5222
sg25
I0
sba(iArchitecture
Entity
p5223
(dp5224
g11
(lp5225
sg14
S'com.google.common.collect.RegularImmutableSortedMultiset'
p5226
sg16
(lp5227
sg19
(lp5228
sg22
(lp5229
sg25
I0
sba(iArchitecture
Entity
p5230
(dp5231
g11
(lp5232
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p5233
sg16
(lp5234
sg19
(lp5235
sg22
(lp5236
sg25
I0
sba(iArchitecture
Entity
p5237
(dp5238
g11
(lp5239
sg14
S'com.google.common.collect.RegularImmutableTable'
p5240
sg16
(lp5241
sg19
(lp5242
sg22
(lp5243
sg25
I0
sba(iArchitecture
Entity
p5244
(dp5245
g11
(lp5246
sg14
S'com.google.common.collect.RegularImmutableTableTest'
p5247
sg16
(lp5248
sg19
(lp5249
sg22
(lp5250
sg25
I0
sba(iArchitecture
Entity
p5251
(dp5252
g11
(lp5253
sg14
S'com.google.common.collect.ReverseOrdering'
p5254
sg16
(lp5255
sg19
(lp5256
sg22
(lp5257
sg25
I0
sba(iArchitecture
Entity
p5258
(dp5259
g11
(lp5260
sg14
S'com.google.common.collect.SetCreationBenchmark'
p5261
sg16
(lp5262
sg19
(lp5263
sg22
(lp5264
sg25
I0
sba(iArchitecture
Entity
p5265
(dp5266
g11
(lp5267
sg14
S'com.google.common.collect.SetIterationBenchmark'
p5268
sg16
(lp5269
sg19
(lp5270
sg22
(lp5271
sg25
I0
sba(iArchitecture
Entity
p5272
(dp5273
g11
(lp5274
sg14
S'com.google.common.collect.SetOperationsTest'
p5275
sg16
(lp5276
sg19
(lp5277
sg22
(lp5278
sg25
I0
sba(iArchitecture
Entity
p5279
(dp5280
g11
(lp5281
sg14
S'com.google.common.collect.Sets'
p5282
sg16
(lp5283
sg19
(lp5284
sg22
(lp5285
sg25
I0
sba(iArchitecture
Entity
p5286
(dp5287
g11
(lp5288
sg14
S'com.google.common.collect.SetsTest'
p5289
sg16
(lp5290
sg19
(lp5291
sg22
(lp5292
sg25
I0
sba(iArchitecture
Entity
p5293
(dp5294
g11
(lp5295
sg14
S'com.google.common.collect.SetsTest_gwt'
p5296
sg16
(lp5297
sg19
(lp5298
sg22
(lp5299
sg25
I0
sba(iArchitecture
Entity
p5300
(dp5301
g11
(lp5302
sg14
S'com.google.common.collect.SimpleAbstractMultisetTest'
p5303
sg16
(lp5304
sg19
(lp5305
sg22
(lp5306
sg25
I0
sba(iArchitecture
Entity
p5307
(dp5308
g11
(lp5309
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p5310
sg16
(lp5311
sg19
(lp5312
sg22
(lp5313
sg25
I0
sba(iArchitecture
Entity
p5314
(dp5315
g11
(lp5316
sg14
S'com.google.common.collect.SingletonImmutableList'
p5317
sg16
(lp5318
sg19
(lp5319
sg22
(lp5320
sg25
I0
sba(iArchitecture
Entity
p5321
(dp5322
g11
(lp5323
sg14
S'com.google.common.collect.SingletonImmutableSet'
p5324
sg16
(lp5325
sg19
(lp5326
sg22
(lp5327
sg25
I0
sba(iArchitecture
Entity
p5328
(dp5329
g11
(lp5330
sg14
S'com.google.common.collect.SingletonImmutableTableTest'
p5331
sg16
(lp5332
sg19
(lp5333
sg22
(lp5334
sg25
I0
sba(iArchitecture
Entity
p5335
(dp5336
g11
(lp5337
sg14
S'com.google.common.collect.SingletonImmutableTableTest_gwt'
p5338
sg16
(lp5339
sg19
(lp5340
sg22
(lp5341
sg25
I0
sba(iArchitecture
Entity
p5342
(dp5343
g11
(lp5344
sg14
S'com.google.common.collect.SortedCopyBenchmark'
p5345
sg16
(lp5346
sg19
(lp5347
sg22
(lp5348
sg25
I0
sba(iArchitecture
Entity
p5349
(dp5350
g11
(lp5351
sg14
S'com.google.common.collect.StandardTable'
p5352
sg16
(lp5353
sg19
(lp5354
sg22
(lp5355
sg25
I0
sba(iArchitecture
Entity
p5356
(dp5357
g11
(lp5358
sg14
S'com.google.common.collect.SubMapMultimapAsMapImplementsMapTest'
p5359
sg16
(lp5360
sg19
(lp5361
sg22
(lp5362
sg25
I0
sba(iArchitecture
Entity
p5363
(dp5364
g11
(lp5365
sg14
S'com.google.common.collect.SubMapMultimapAsMapImplementsMapTest_gwt'
p5366
sg16
(lp5367
sg19
(lp5368
sg22
(lp5369
sg25
I0
sba(iArchitecture
Entity
p5370
(dp5371
g11
(lp5372
sg14
S'com.google.common.collect.Synchronized'
p5373
sg16
(lp5374
sg19
(lp5375
sg22
(lp5376
sg25
I0
sba(iArchitecture
Entity
p5377
(dp5378
g11
(lp5379
sg14
S'com.google.common.collect.SynchronizedDequeTest'
p5380
sg16
(lp5381
sg19
(lp5382
sg22
(lp5383
sg25
I0
sba(iArchitecture
Entity
p5384
(dp5385
g11
(lp5386
sg14
S'com.google.common.collect.SynchronizedMapTest'
p5387
sg16
(lp5388
sg19
(lp5389
sg22
(lp5390
sg25
I0
sba(iArchitecture
Entity
p5391
(dp5392
g11
(lp5393
sg14
S'com.google.common.collect.SynchronizedMultimapTest'
p5394
sg16
(lp5395
sg19
(lp5396
sg22
(lp5397
sg25
I0
sba(iArchitecture
Entity
p5398
(dp5399
g11
(lp5400
sg14
S'com.google.common.collect.SynchronizedNavigableMapTest'
p5401
sg16
(lp5402
sg19
(lp5403
sg22
(lp5404
sg25
I0
sba(iArchitecture
Entity
p5405
(dp5406
g11
(lp5407
sg14
S'com.google.common.collect.SynchronizedNavigableSetTest'
p5408
sg16
(lp5409
sg19
(lp5410
sg22
(lp5411
sg25
I0
sba(iArchitecture
Entity
p5412
(dp5413
g11
(lp5414
sg14
S'com.google.common.collect.SynchronizedQueueTest'
p5415
sg16
(lp5416
sg19
(lp5417
sg22
(lp5418
sg25
I0
sba(iArchitecture
Entity
p5419
(dp5420
g11
(lp5421
sg14
S'com.google.common.collect.SynchronizedSetTest'
p5422
sg16
(lp5423
sg19
(lp5424
sg22
(lp5425
sg25
I0
sba(iArchitecture
Entity
p5426
(dp5427
g11
(lp5428
sg14
S'com.google.common.collect.TableCollectionTest_gwt'
p5429
sg16
(lp5430
sg19
(lp5431
sg22
(lp5432
sg25
I0
sba(iArchitecture
Entity
p5433
(dp5434
g11
(lp5435
sg14
S'com.google.common.collect.TransformedListIterator'
p5436
sg16
(lp5437
sg19
(lp5438
sg22
(lp5439
sg25
I0
sba(iArchitecture
Entity
p5440
(dp5441
g11
(lp5442
sg14
S'com.google.common.collect.TransposedTableTest_gwt'
p5443
sg16
(lp5444
sg19
(lp5445
sg22
(lp5446
sg25
I0
sba(iArchitecture
Entity
p5447
(dp5448
g11
(lp5449
sg14
S'com.google.common.collect.TreeBasedTableTest'
p5450
sg16
(lp5451
sg19
(lp5452
sg22
(lp5453
sg25
I0
sba(iArchitecture
Entity
p5454
(dp5455
g11
(lp5456
sg14
S'com.google.common.collect.TreeBasedTableTest_gwt'
p5457
sg16
(lp5458
sg19
(lp5459
sg22
(lp5460
sg25
I0
sba(iArchitecture
Entity
p5461
(dp5462
g11
(lp5463
sg14
S'com.google.common.collect.TreeMultimapExplicitTest'
p5464
sg16
(lp5465
sg19
(lp5466
sg22
(lp5467
sg25
I0
sba(iArchitecture
Entity
p5468
(dp5469
g11
(lp5470
sg14
S'com.google.common.collect.TreeMultimapNaturalTest'
p5471
sg16
(lp5472
sg19
(lp5473
sg22
(lp5474
sg25
I0
sba(iArchitecture
Entity
p5475
(dp5476
g11
(lp5477
sg14
S'com.google.common.collect.TreeMultiset'
p5478
sg16
(lp5479
sg19
(lp5480
sg22
(lp5481
sg25
I0
sba(iArchitecture
Entity
p5482
(dp5483
g11
(lp5484
sg14
S'com.google.common.collect.TreeMultisetTest'
p5485
sg16
(lp5486
sg19
(lp5487
sg22
(lp5488
sg25
I0
sba(iArchitecture
Entity
p5489
(dp5490
g11
(lp5491
sg14
S'com.google.common.collect.TreeRangeMap'
p5492
sg16
(lp5493
sg19
(lp5494
sg22
(lp5495
sg25
I0
sba(iArchitecture
Entity
p5496
(dp5497
g11
(lp5498
sg14
S'com.google.common.collect.TreeRangeMapTest'
p5499
sg16
(lp5500
sg19
(lp5501
sg22
(lp5502
sg25
I0
sba(iArchitecture
Entity
p5503
(dp5504
g11
(lp5505
sg14
S'com.google.common.collect.TreeRangeSet'
p5506
sg16
(lp5507
sg19
(lp5508
sg22
(lp5509
sg25
I0
sba(iArchitecture
Entity
p5510
(dp5511
g11
(lp5512
sg14
S'com.google.common.collect.TreeRangeSetTest'
p5513
sg16
(lp5514
sg19
(lp5515
sg22
(lp5516
sg25
I0
sba(iArchitecture
Entity
p5517
(dp5518
g11
(lp5519
sg14
S'com.google.common.collect.TreeTraverserTest'
p5520
sg16
(lp5521
sg19
(lp5522
sg22
(lp5523
sg25
I0
sba(iArchitecture
Entity
p5524
(dp5525
g11
(lp5526
sg14
S'com.google.common.collect.UnmodifiableIteratorTest'
p5527
sg16
(lp5528
sg19
(lp5529
sg22
(lp5530
sg25
I0
sba(iArchitecture
Entity
p5531
(dp5532
g11
(lp5533
sg14
S'com.google.common.collect.UnmodifiableListIteratorTest'
p5534
sg16
(lp5535
sg19
(lp5536
sg22
(lp5537
sg25
I0
sba(iArchitecture
Entity
p5538
(dp5539
g11
(lp5540
sg14
S'com.google.common.collect.UnmodifiableMultimapAsMapImplementsMapTest_gwt'
p5541
sg16
(lp5542
sg19
(lp5543
sg22
(lp5544
sg25
I0
sba(iArchitecture
Entity
p5545
(dp5546
g11
(lp5547
sg14
S'com.google.common.collect.testing.AbstractIteratorTester'
p5548
sg16
(lp5549
sg19
(lp5550
sg22
(lp5551
sg25
I0
sba(iArchitecture
Entity
p5552
(dp5553
g11
(lp5554
sg14
S'com.google.common.collect.testing.AbstractTester'
p5555
sg16
(lp5556
sg19
(lp5557
sg22
(lp5558
sg25
I0
sba(iArchitecture
Entity
p5559
(dp5560
g11
(lp5561
sg14
S'com.google.common.collect.testing.FeatureSpecificTestSuiteBuilderTest'
p5562
sg16
(lp5563
sg19
(lp5564
sg22
(lp5565
sg25
I0
sba(iArchitecture
Entity
p5566
(dp5567
g11
(lp5568
sg14
S'com.google.common.collect.testing.Helpers'
p5569
sg16
(lp5570
sg19
(lp5571
sg22
(lp5572
sg25
I0
sba(iArchitecture
Entity
p5573
(dp5574
g11
(lp5575
sg14
S'com.google.common.collect.testing.IteratorTesterTest'
p5576
sg16
(lp5577
sg19
(lp5578
sg22
(lp5579
sg25
I0
sba(iArchitecture
Entity
p5580
(dp5581
g11
(lp5582
sg14
S'com.google.common.collect.testing.MinimalCollection'
p5583
sg16
(lp5584
sg19
(lp5585
sg22
(lp5586
sg25
I0
sba(iArchitecture
Entity
p5587
(dp5588
g11
(lp5589
sg14
S'com.google.common.collect.testing.MinimalIterableTest'
p5590
sg16
(lp5591
sg19
(lp5592
sg22
(lp5593
sg25
I0
sba(iArchitecture
Entity
p5594
(dp5595
g11
(lp5596
sg14
S'com.google.common.collect.testing.OneSizeGenerator'
p5597
sg16
(lp5598
sg19
(lp5599
sg22
(lp5600
sg25
I0
sba(iArchitecture
Entity
p5601
(dp5602
g11
(lp5603
sg14
S'com.google.common.collect.testing.SafeTreeMap'
p5604
sg16
(lp5605
sg19
(lp5606
sg22
(lp5607
sg25
I0
sba(iArchitecture
Entity
p5608
(dp5609
g11
(lp5610
sg14
S'com.google.common.collect.testing.SafeTreeSet'
p5611
sg16
(lp5612
sg19
(lp5613
sg22
(lp5614
sg25
I0
sba(iArchitecture
Entity
p5615
(dp5616
g11
(lp5617
sg14
S'com.google.common.collect.testing.SampleElements'
p5618
sg16
(lp5619
sg19
(lp5620
sg22
(lp5621
sg25
I0
sba(iArchitecture
Entity
p5622
(dp5623
g11
(lp5624
sg14
S'com.google.common.collect.testing.TestEnumMapGenerator'
p5625
sg16
(lp5626
sg19
(lp5627
sg22
(lp5628
sg25
I0
sba(iArchitecture
Entity
p5629
(dp5630
g11
(lp5631
sg14
S'com.google.common.collect.testing.TestEnumSetGenerator'
p5632
sg16
(lp5633
sg19
(lp5634
sg22
(lp5635
sg25
I0
sba(iArchitecture
Entity
p5636
(dp5637
g11
(lp5638
sg14
S'com.google.common.collect.testing.TestStringCollectionGenerator'
p5639
sg16
(lp5640
sg19
(lp5641
sg22
(lp5642
sg25
I0
sba(iArchitecture
Entity
p5643
(dp5644
g11
(lp5645
sg14
S'com.google.common.collect.testing.TestStringListGenerator'
p5646
sg16
(lp5647
sg19
(lp5648
sg22
(lp5649
sg25
I0
sba(iArchitecture
Entity
p5650
(dp5651
g11
(lp5652
sg14
S'com.google.common.collect.testing.TestStringMapGenerator'
p5653
sg16
(lp5654
sg19
(lp5655
sg22
(lp5656
sg25
I0
sba(iArchitecture
Entity
p5657
(dp5658
g11
(lp5659
sg14
S'com.google.common.collect.testing.TestStringQueueGenerator'
p5660
sg16
(lp5661
sg19
(lp5662
sg22
(lp5663
sg25
I0
sba(iArchitecture
Entity
p5664
(dp5665
g11
(lp5666
sg14
S'com.google.common.collect.testing.TestUnhashableCollectionGenerator'
p5667
sg16
(lp5668
sg19
(lp5669
sg22
(lp5670
sg25
I0
sba(iArchitecture
Entity
p5671
(dp5672
g11
(lp5673
sg14
S'com.google.common.collect.testing.TestsForListsInJavaUtil'
p5674
sg16
(lp5675
sg19
(lp5676
sg22
(lp5677
sg25
I0
sba(iArchitecture
Entity
p5678
(dp5679
g11
(lp5680
sg14
S'com.google.common.collect.testing.TestsForQueuesInJavaUtil'
p5681
sg16
(lp5682
sg19
(lp5683
sg22
(lp5684
sg25
I0
sba(iArchitecture
Entity
p5685
(dp5686
g11
(lp5687
sg14
S'com.google.common.collect.testing.TestsForSetsInJavaUtil'
p5688
sg16
(lp5689
sg19
(lp5690
sg22
(lp5691
sg25
I0
sba(iArchitecture
Entity
p5692
(dp5693
g11
(lp5694
sg14
S'com.google.common.collect.testing.UnhashableObject'
p5695
sg16
(lp5696
sg19
(lp5697
sg22
(lp5698
sg25
I0
sba(iArchitecture
Entity
p5699
(dp5700
g11
(lp5701
sg14
S'com.google.common.collect.testing.features.TesterRequirements'
p5702
sg16
(lp5703
sg19
(lp5704
sg22
(lp5705
sg25
I0
sba(iArchitecture
Entity
p5706
(dp5707
g11
(lp5708
sg14
S'com.google.common.collect.testing.google.AbstractMultisetSetCountTester'
p5709
sg16
(lp5710
sg19
(lp5711
sg22
(lp5712
sg25
I0
sba(iArchitecture
Entity
p5713
(dp5714
g11
(lp5715
sg14
S'com.google.common.collect.testing.google.BiMapClearTester'
p5716
sg16
(lp5717
sg19
(lp5718
sg22
(lp5719
sg25
I0
sba(iArchitecture
Entity
p5720
(dp5721
g11
(lp5722
sg14
S'com.google.common.collect.testing.google.BiMapRemoveTester'
p5723
sg16
(lp5724
sg19
(lp5725
sg22
(lp5726
sg25
I0
sba(iArchitecture
Entity
p5727
(dp5728
g11
(lp5729
sg14
S'com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators'
p5730
sg16
(lp5731
sg19
(lp5732
sg22
(lp5733
sg25
I0
sba(iArchitecture
Entity
p5734
(dp5735
g11
(lp5736
sg14
S'com.google.common.collect.testing.google.MultimapClearTester'
p5737
sg16
(lp5738
sg19
(lp5739
sg22
(lp5740
sg25
I0
sba(iArchitecture
Entity
p5741
(dp5742
g11
(lp5743
sg14
S'com.google.common.collect.testing.google.MultimapContainsEntryTester'
p5744
sg16
(lp5745
sg19
(lp5746
sg22
(lp5747
sg25
I0
sba(iArchitecture
Entity
p5748
(dp5749
g11
(lp5750
sg14
S'com.google.common.collect.testing.google.MultimapContainsKeyTester'
p5751
sg16
(lp5752
sg19
(lp5753
sg22
(lp5754
sg25
I0
sba(iArchitecture
Entity
p5755
(dp5756
g11
(lp5757
sg14
S'com.google.common.collect.testing.google.MultimapGetTester'
p5758
sg16
(lp5759
sg19
(lp5760
sg22
(lp5761
sg25
I0
sba(iArchitecture
Entity
p5762
(dp5763
g11
(lp5764
sg14
S'com.google.common.collect.testing.google.MultimapPutAllMultimapTester'
p5765
sg16
(lp5766
sg19
(lp5767
sg22
(lp5768
sg25
I0
sba(iArchitecture
Entity
p5769
(dp5770
g11
(lp5771
sg14
S'com.google.common.collect.testing.google.MultimapPutIterableTester'
p5772
sg16
(lp5773
sg19
(lp5774
sg22
(lp5775
sg25
I0
sba(iArchitecture
Entity
p5776
(dp5777
g11
(lp5778
sg14
S'com.google.common.collect.testing.google.MultimapPutTester'
p5779
sg16
(lp5780
sg19
(lp5781
sg22
(lp5782
sg25
I0
sba(iArchitecture
Entity
p5783
(dp5784
g11
(lp5785
sg14
S'com.google.common.collect.testing.google.MultimapSizeTester'
p5786
sg16
(lp5787
sg19
(lp5788
sg22
(lp5789
sg25
I0
sba(iArchitecture
Entity
p5790
(dp5791
g11
(lp5792
sg14
S'com.google.common.collect.testing.google.MultisetAddTester'
p5793
sg16
(lp5794
sg19
(lp5795
sg22
(lp5796
sg25
I0
sba(iArchitecture
Entity
p5797
(dp5798
g11
(lp5799
sg14
S'com.google.common.collect.testing.google.MultisetCountTester'
p5800
sg16
(lp5801
sg19
(lp5802
sg22
(lp5803
sg25
I0
sba(iArchitecture
Entity
p5804
(dp5805
g11
(lp5806
sg14
S'com.google.common.collect.testing.google.MultisetNavigationTester'
p5807
sg16
(lp5808
sg19
(lp5809
sg22
(lp5810
sg25
I0
sba(iArchitecture
Entity
p5811
(dp5812
g11
(lp5813
sg14
S'com.google.common.collect.testing.google.MultisetReadsTester'
p5814
sg16
(lp5815
sg19
(lp5816
sg22
(lp5817
sg25
I0
sba(iArchitecture
Entity
p5818
(dp5819
g11
(lp5820
sg14
S'com.google.common.collect.testing.google.MultisetRemoveTester'
p5821
sg16
(lp5822
sg19
(lp5823
sg22
(lp5824
sg25
I0
sba(iArchitecture
Entity
p5825
(dp5826
g11
(lp5827
sg14
S'com.google.common.collect.testing.google.MultisetSetCountConditionallyTester'
p5828
sg16
(lp5829
sg19
(lp5830
sg22
(lp5831
sg25
I0
sba(iArchitecture
Entity
p5832
(dp5833
g11
(lp5834
sg14
S'com.google.common.collect.testing.google.MultisetSetCountUnconditionallyTester'
p5835
sg16
(lp5836
sg19
(lp5837
sg22
(lp5838
sg25
I0
sba(iArchitecture
Entity
p5839
(dp5840
g11
(lp5841
sg14
S'com.google.common.collect.testing.google.TestStringBiMapGenerator'
p5842
sg16
(lp5843
sg19
(lp5844
sg22
(lp5845
sg25
I0
sba(iArchitecture
Entity
p5846
(dp5847
g11
(lp5848
sg14
S'com.google.common.collect.testing.google.TestStringListMultimapGenerator'
p5849
sg16
(lp5850
sg19
(lp5851
sg22
(lp5852
sg25
I0
sba(iArchitecture
Entity
p5853
(dp5854
g11
(lp5855
sg14
S'com.google.common.collect.testing.google.TestStringMultisetGenerator'
p5856
sg16
(lp5857
sg19
(lp5858
sg22
(lp5859
sg25
I0
sba(iArchitecture
Entity
p5860
(dp5861
g11
(lp5862
sg14
S'com.google.common.collect.testing.google.TestStringSetMultimapGenerator'
p5863
sg16
(lp5864
sg19
(lp5865
sg22
(lp5866
sg25
I0
sba(iArchitecture
Entity
p5867
(dp5868
g11
(lp5869
sg14
S'com.google.common.collect.testing.testers.AbstractListIndexOfTester'
p5870
sg16
(lp5871
sg19
(lp5872
sg22
(lp5873
sg25
I0
sba(iArchitecture
Entity
p5874
(dp5875
g11
(lp5876
sg14
S'com.google.common.collect.testing.testers.CollectionContainsAllTester'
p5877
sg16
(lp5878
sg19
(lp5879
sg22
(lp5880
sg25
I0
sba(iArchitecture
Entity
p5881
(dp5882
g11
(lp5883
sg14
S'com.google.common.collect.testing.testers.CollectionContainsTester'
p5884
sg16
(lp5885
sg19
(lp5886
sg22
(lp5887
sg25
I0
sba(iArchitecture
Entity
p5888
(dp5889
g11
(lp5890
sg14
S'com.google.common.collect.testing.testers.CollectionRemoveAllTester'
p5891
sg16
(lp5892
sg19
(lp5893
sg22
(lp5894
sg25
I0
sba(iArchitecture
Entity
p5895
(dp5896
g11
(lp5897
sg14
S'com.google.common.collect.testing.testers.CollectionRemoveTester'
p5898
sg16
(lp5899
sg19
(lp5900
sg22
(lp5901
sg25
I0
sba(iArchitecture
Entity
p5902
(dp5903
g11
(lp5904
sg14
S'com.google.common.collect.testing.testers.CollectionRetainAllTester'
p5905
sg16
(lp5906
sg19
(lp5907
sg22
(lp5908
sg25
I0
sba(iArchitecture
Entity
p5909
(dp5910
g11
(lp5911
sg14
S'com.google.common.collect.testing.testers.CollectionToArrayTester'
p5912
sg16
(lp5913
sg19
(lp5914
sg22
(lp5915
sg25
I0
sba(iArchitecture
Entity
p5916
(dp5917
g11
(lp5918
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapPutIfAbsentTester'
p5919
sg16
(lp5920
sg19
(lp5921
sg22
(lp5922
sg25
I0
sba(iArchitecture
Entity
p5923
(dp5924
g11
(lp5925
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapReplaceEntryTester'
p5926
sg16
(lp5927
sg19
(lp5928
sg22
(lp5929
sg25
I0
sba(iArchitecture
Entity
p5930
(dp5931
g11
(lp5932
sg14
S'com.google.common.collect.testing.testers.ListAddAllAtIndexTester'
p5933
sg16
(lp5934
sg19
(lp5935
sg22
(lp5936
sg25
I0
sba(iArchitecture
Entity
p5937
(dp5938
g11
(lp5939
sg14
S'com.google.common.collect.testing.testers.ListEqualsTester'
p5940
sg16
(lp5941
sg19
(lp5942
sg22
(lp5943
sg25
I0
sba(iArchitecture
Entity
p5944
(dp5945
g11
(lp5946
sg14
S'com.google.common.collect.testing.testers.ListSetTester'
p5947
sg16
(lp5948
sg19
(lp5949
sg22
(lp5950
sg25
I0
sba(iArchitecture
Entity
p5951
(dp5952
g11
(lp5953
sg14
S'com.google.common.collect.testing.testers.ListSubListTester'
p5954
sg16
(lp5955
sg19
(lp5956
sg22
(lp5957
sg25
I0
sba(iArchitecture
Entity
p5958
(dp5959
g11
(lp5960
sg14
S'com.google.common.collect.testing.testers.MapContainsKeyTester'
p5961
sg16
(lp5962
sg19
(lp5963
sg22
(lp5964
sg25
I0
sba(iArchitecture
Entity
p5965
(dp5966
g11
(lp5967
sg14
S'com.google.common.collect.testing.testers.MapContainsValueTester'
p5968
sg16
(lp5969
sg19
(lp5970
sg22
(lp5971
sg25
I0
sba(iArchitecture
Entity
p5972
(dp5973
g11
(lp5974
sg14
S'com.google.common.collect.testing.testers.MapGetTester'
p5975
sg16
(lp5976
sg19
(lp5977
sg22
(lp5978
sg25
I0
sba(iArchitecture
Entity
p5979
(dp5980
g11
(lp5981
sg14
S'com.google.common.collect.testing.testers.MapPutTester'
p5982
sg16
(lp5983
sg19
(lp5984
sg22
(lp5985
sg25
I0
sba(iArchitecture
Entity
p5986
(dp5987
g11
(lp5988
sg14
S'com.google.common.collect.testing.testers.MapRemoveTester'
p5989
sg16
(lp5990
sg19
(lp5991
sg22
(lp5992
sg25
I0
sba(iArchitecture
Entity
p5993
(dp5994
g11
(lp5995
sg14
S'com.google.common.collect.testing.testers.NavigableMapNavigationTester'
p5996
sg16
(lp5997
sg19
(lp5998
sg22
(lp5999
sg25
I0
sba(iArchitecture
Entity
p6000
(dp6001
g11
(lp6002
sg14
S'com.google.common.collect.testing.testers.NavigableSetNavigationTester'
p6003
sg16
(lp6004
sg19
(lp6005
sg22
(lp6006
sg25
I0
sba(iArchitecture
Entity
p6007
(dp6008
g11
(lp6009
sg14
S'com.google.common.collect.testing.testers.Platform'
p6010
sg16
(lp6011
sg19
(lp6012
sg22
(lp6013
sg25
I0
sba(iArchitecture
Entity
p6014
(dp6015
g11
(lp6016
sg14
S'com.google.common.collect.testing.testers.SetEqualsTester'
p6017
sg16
(lp6018
sg19
(lp6019
sg22
(lp6020
sg25
I0
sba(iArchitecture
Entity
p6021
(dp6022
g11
(lp6023
sg14
S'com.google.common.collect.testing.testers.SortedMapNavigationTester'
p6024
sg16
(lp6025
sg19
(lp6026
sg22
(lp6027
sg25
I0
sba(iArchitecture
Entity
p6028
(dp6029
g11
(lp6030
sg14
S'com.google.common.escape.ArrayBasedEscaperMapTest'
p6031
sg16
(lp6032
sg19
(lp6033
sg22
(lp6034
sg25
I0
sba(iArchitecture
Entity
p6035
(dp6036
g11
(lp6037
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaperTest'
p6038
sg16
(lp6039
sg19
(lp6040
sg22
(lp6041
sg25
I0
sba(iArchitecture
Entity
p6042
(dp6043
g11
(lp6044
sg14
S'com.google.common.escape.CharEscaper'
p6045
sg16
(lp6046
sg19
(lp6047
sg22
(lp6048
sg25
I0
sba(iArchitecture
Entity
p6049
(dp6050
g11
(lp6051
sg14
S'com.google.common.escape.CharEscaperBuilder'
p6052
sg16
(lp6053
sg19
(lp6054
sg22
(lp6055
sg25
I0
sba(iArchitecture
Entity
p6056
(dp6057
g11
(lp6058
sg14
S'com.google.common.escape.UnicodeEscaper'
p6059
sg16
(lp6060
sg19
(lp6061
sg22
(lp6062
sg25
I0
sba(iArchitecture
Entity
p6063
(dp6064
g11
(lp6065
sg14
S'com.google.common.escape.UnicodeEscaperTest'
p6066
sg16
(lp6067
sg19
(lp6068
sg22
(lp6069
sg25
I0
sba(iArchitecture
Entity
p6070
(dp6071
g11
(lp6072
sg14
S'com.google.common.escape.testing.EscaperAsserts'
p6073
sg16
(lp6074
sg19
(lp6075
sg22
(lp6076
sg25
I0
sba(iArchitecture
Entity
p6077
(dp6078
g11
(lp6079
sg14
S'com.google.common.eventbus.DispatcherTest'
p6080
sg16
(lp6081
sg19
(lp6082
sg22
(lp6083
sg25
I0
sba(iArchitecture
Entity
p6084
(dp6085
g11
(lp6086
sg14
S'com.google.common.eventbus.ReentrantEventsTest'
p6087
sg16
(lp6088
sg19
(lp6089
sg22
(lp6090
sg25
I0
sba(iArchitecture
Entity
p6091
(dp6092
g11
(lp6093
sg14
S'com.google.common.eventbus.Subscriber'
p6094
sg16
(lp6095
sg19
(lp6096
sg22
(lp6097
sg25
I0
sba(iArchitecture
Entity
p6098
(dp6099
g11
(lp6100
sg14
S'com.google.common.eventbus.SubscriberTest'
p6101
sg16
(lp6102
sg19
(lp6103
sg22
(lp6104
sg25
I0
sba(iArchitecture
Entity
p6105
(dp6106
g11
(lp6107
sg14
S'com.google.common.eventbus.outside.AnnotatedSubscriberFinderTests'
p6108
sg16
(lp6109
sg19
(lp6110
sg22
(lp6111
sg25
I0
sba(iArchitecture
Entity
p6112
(dp6113
g11
(lp6114
sg14
S'com.google.common.hash.AbstractByteHasherTest'
p6115
sg16
(lp6116
sg19
(lp6117
sg22
(lp6118
sg25
I0
sba(iArchitecture
Entity
p6119
(dp6120
g11
(lp6121
sg14
S'com.google.common.hash.AbstractCompositeHashFunction'
p6122
sg16
(lp6123
sg19
(lp6124
sg22
(lp6125
sg25
I0
sba(iArchitecture
Entity
p6126
(dp6127
g11
(lp6128
sg14
S'com.google.common.hash.BloomFilterStrategies'
p6129
sg16
(lp6130
sg19
(lp6131
sg22
(lp6132
sg25
I0
sba(iArchitecture
Entity
p6133
(dp6134
g11
(lp6135
sg14
S'com.google.common.hash.BloomFilterTest'
p6136
sg16
(lp6137
sg19
(lp6138
sg22
(lp6139
sg25
I0
sba(iArchitecture
Entity
p6140
(dp6141
g11
(lp6142
sg14
S'com.google.common.hash.ChecksumBenchmark'
p6143
sg16
(lp6144
sg19
(lp6145
sg22
(lp6146
sg25
I0
sba(iArchitecture
Entity
p6147
(dp6148
g11
(lp6149
sg14
S'com.google.common.hash.ChecksumHashFunction'
p6150
sg16
(lp6151
sg19
(lp6152
sg22
(lp6153
sg25
I0
sba(iArchitecture
Entity
p6154
(dp6155
g11
(lp6156
sg14
S'com.google.common.hash.Crc32cHashFunction'
p6157
sg16
(lp6158
sg19
(lp6159
sg22
(lp6160
sg25
I0
sba(iArchitecture
Entity
p6161
(dp6162
g11
(lp6163
sg14
S'com.google.common.hash.Crc32cHashFunctionTest'
p6164
sg16
(lp6165
sg19
(lp6166
sg22
(lp6167
sg25
I0
sba(iArchitecture
Entity
p6168
(dp6169
g11
(lp6170
sg14
S'com.google.common.hash.FunnelsTest'
p6171
sg16
(lp6172
sg19
(lp6173
sg22
(lp6174
sg25
I0
sba(iArchitecture
Entity
p6175
(dp6176
g11
(lp6177
sg14
S'com.google.common.hash.HashCode'
p6178
sg16
(lp6179
sg19
(lp6180
sg22
(lp6181
sg25
I0
sba(iArchitecture
Entity
p6182
(dp6183
g11
(lp6184
sg14
S'com.google.common.hash.HashCodeBenchmark'
p6185
sg16
(lp6186
sg19
(lp6187
sg22
(lp6188
sg25
I0
sba(iArchitecture
Entity
p6189
(dp6190
g11
(lp6191
sg14
S'com.google.common.hash.HashCodeTest'
p6192
sg16
(lp6193
sg19
(lp6194
sg22
(lp6195
sg25
I0
sba(iArchitecture
Entity
p6196
(dp6197
g11
(lp6198
sg14
S'com.google.common.hash.HashFunctionBenchmark'
p6199
sg16
(lp6200
sg19
(lp6201
sg22
(lp6202
sg25
I0
sba(iArchitecture
Entity
p6203
(dp6204
g11
(lp6205
sg14
S'com.google.common.hash.HashTestUtils'
p6206
sg16
(lp6207
sg19
(lp6208
sg22
(lp6209
sg25
I0
sba(iArchitecture
Entity
p6210
(dp6211
g11
(lp6212
sg14
S'com.google.common.hash.Hashing'
p6213
sg16
(lp6214
sg19
(lp6215
sg22
(lp6216
sg25
I0
sba(iArchitecture
Entity
p6217
(dp6218
g11
(lp6219
sg14
S'com.google.common.hash.HashingInputStreamTest'
p6220
sg16
(lp6221
sg19
(lp6222
sg22
(lp6223
sg25
I0
sba(iArchitecture
Entity
p6224
(dp6225
g11
(lp6226
sg14
S'com.google.common.hash.HashingTest'
p6227
sg16
(lp6228
sg19
(lp6229
sg22
(lp6230
sg25
I0
sba(iArchitecture
Entity
p6231
(dp6232
g11
(lp6233
sg14
S'com.google.common.hash.MessageDigestCreationBenchmark'
p6234
sg16
(lp6235
sg19
(lp6236
sg22
(lp6237
sg25
I0
sba(iArchitecture
Entity
p6238
(dp6239
g11
(lp6240
sg14
S'com.google.common.hash.Murmur3Hash32Test'
p6241
sg16
(lp6242
sg19
(lp6243
sg22
(lp6244
sg25
I0
sba(iArchitecture
Entity
p6245
(dp6246
g11
(lp6247
sg14
S'com.google.common.hash.Murmur3_128HashFunction'
p6248
sg16
(lp6249
sg19
(lp6250
sg22
(lp6251
sg25
I0
sba(iArchitecture
Entity
p6252
(dp6253
g11
(lp6254
sg14
S'com.google.common.hash.Murmur3_32HashFunction'
p6255
sg16
(lp6256
sg19
(lp6257
sg22
(lp6258
sg25
I0
sba(iArchitecture
Entity
p6259
(dp6260
g11
(lp6261
sg14
S'com.google.common.hash.SipHashFunction'
p6262
sg16
(lp6263
sg19
(lp6264
sg22
(lp6265
sg25
I0
sba(iArchitecture
Entity
p6266
(dp6267
g11
(lp6268
V2124
p6269
asg14
S'com.google.common.io.BaseEncoding'
p6270
sg16
(lp6271
VThe next GWT release will probably have emulations for `Charset` built in. Internal CL 99622756 will be removing our custom emulations, but I think we can go further, changing calls to methods like `getBytes` to use the `Charset` versions.\u000a\u000aThis assumes that we require the new GWT version for the post-19 Guava release. This was not the plan on #1999 but might be reasonable. Otherwise, we need a workaround. We'd need to figure out if our emulations would interfere with the GWT versions for users who _are_ using the new GWT.\u000a
p6272
asg19
(lp6273
(lp6274
I0
aasg22
(lp6275
VUse String.getBytes(Charset) and other Charset utilities once GWT supports them
p6276
asg25
I0
sba(iArchitecture
Entity
p6277
(dp6278
g11
(lp6279
sg14
S'com.google.common.io.BaseEncodingBenchmark'
p6280
sg16
(lp6281
sg19
(lp6282
sg22
(lp6283
sg25
I0
sba(iArchitecture
Entity
p6284
(dp6285
g11
(lp6286
sg14
S'com.google.common.io.ByteArrayDataOutput'
p6287
sg16
(lp6288
sg19
(lp6289
sg22
(lp6290
sg25
I0
sba(iArchitecture
Entity
p6291
(dp6292
g11
(lp6293
sg14
S'com.google.common.io.ByteSourceTester'
p6294
sg16
(lp6295
sg19
(lp6296
sg22
(lp6297
sg25
I0
sba(iArchitecture
Entity
p6298
(dp6299
g11
(lp6300
sg14
S'com.google.common.io.CharSequenceReader'
p6301
sg16
(lp6302
sg19
(lp6303
sg22
(lp6304
sg25
I0
sba(iArchitecture
Entity
p6305
(dp6306
g11
(lp6307
sg14
S'com.google.common.io.FilesSimplifyPathTest'
p6308
sg16
(lp6309
sg19
(lp6310
sg22
(lp6311
sg25
I0
sba(iArchitecture
Entity
p6312
(dp6313
g11
(lp6314
sg14
S'com.google.common.io.MultiReader'
p6315
sg16
(lp6316
sg19
(lp6317
sg22
(lp6318
sg25
I0
sba(iArchitecture
Entity
p6319
(dp6320
g11
(lp6321
sg14
S'com.google.common.math.ApacheBenchmark'
p6322
sg16
(lp6323
sg19
(lp6324
sg22
(lp6325
sg25
I0
sba(iArchitecture
Entity
p6326
(dp6327
g11
(lp6328
sg14
S'com.google.common.math.BigIntegerMath'
p6329
sg16
(lp6330
sg19
(lp6331
sg22
(lp6332
sg25
I0
sba(iArchitecture
Entity
p6333
(dp6334
g11
(lp6335
sg14
S'com.google.common.math.BigIntegerMathBenchmark'
p6336
sg16
(lp6337
sg19
(lp6338
sg22
(lp6339
sg25
I0
sba(iArchitecture
Entity
p6340
(dp6341
g11
(lp6342
sg14
S'com.google.common.math.BigIntegerMathRoundingBenchmark'
p6343
sg16
(lp6344
sg19
(lp6345
sg22
(lp6346
sg25
I0
sba(iArchitecture
Entity
p6347
(dp6348
g11
(lp6349
sg14
S'com.google.common.math.BigIntegerMathTest'
p6350
sg16
(lp6351
sg19
(lp6352
sg22
(lp6353
sg25
I0
sba(iArchitecture
Entity
p6354
(dp6355
g11
(lp6356
sg14
S'com.google.common.math.DoubleMathBenchmark'
p6357
sg16
(lp6358
sg19
(lp6359
sg22
(lp6360
sg25
I0
sba(iArchitecture
Entity
p6361
(dp6362
g11
(lp6363
sg14
S'com.google.common.math.DoubleMathRoundingBenchmark'
p6364
sg16
(lp6365
sg19
(lp6366
sg22
(lp6367
sg25
I0
sba(iArchitecture
Entity
p6368
(dp6369
g11
(lp6370
sg14
S'com.google.common.math.DoubleMathTest'
p6371
sg16
(lp6372
sg19
(lp6373
sg22
(lp6374
sg25
I0
sba(iArchitecture
Entity
p6375
(dp6376
g11
(lp6377
sg14
S'com.google.common.math.IntMath'
p6378
sg16
(lp6379
sg19
(lp6380
sg22
(lp6381
sg25
I0
sba(iArchitecture
Entity
p6382
(dp6383
g11
(lp6384
sg14
S'com.google.common.math.IntMathBenchmark'
p6385
sg16
(lp6386
sg19
(lp6387
sg22
(lp6388
sg25
I0
sba(iArchitecture
Entity
p6389
(dp6390
g11
(lp6391
sg14
S'com.google.common.math.IntMathRoundingBenchmark'
p6392
sg16
(lp6393
sg19
(lp6394
sg22
(lp6395
sg25
I0
sba(iArchitecture
Entity
p6396
(dp6397
g11
(lp6398
sg14
S'com.google.common.math.IntMathTest'
p6399
sg16
(lp6400
sg19
(lp6401
sg22
(lp6402
sg25
I0
sba(iArchitecture
Entity
p6403
(dp6404
g11
(lp6405
sg14
S'com.google.common.math.LessThanBenchmark'
p6406
sg16
(lp6407
sg19
(lp6408
sg22
(lp6409
sg25
I0
sba(iArchitecture
Entity
p6410
(dp6411
g11
(lp6412
sg14
S'com.google.common.math.LongMath'
p6413
sg16
(lp6414
sg19
(lp6415
sg22
(lp6416
sg25
I0
sba(iArchitecture
Entity
p6417
(dp6418
g11
(lp6419
sg14
S'com.google.common.math.LongMathBenchmark'
p6420
sg16
(lp6421
sg19
(lp6422
sg22
(lp6423
sg25
I0
sba(iArchitecture
Entity
p6424
(dp6425
g11
(lp6426
sg14
S'com.google.common.math.LongMathRoundingBenchmark'
p6427
sg16
(lp6428
sg19
(lp6429
sg22
(lp6430
sg25
I0
sba(iArchitecture
Entity
p6431
(dp6432
g11
(lp6433
sg14
S'com.google.common.math.LongMathTest'
p6434
sg16
(lp6435
sg19
(lp6436
sg22
(lp6437
sg25
I0
sba(iArchitecture
Entity
p6438
(dp6439
g11
(lp6440
sg14
S'com.google.common.math.MathBenchmarking'
p6441
sg16
(lp6442
sg19
(lp6443
sg22
(lp6444
sg25
I0
sba(iArchitecture
Entity
p6445
(dp6446
g11
(lp6447
sg14
S'com.google.common.math.MathPreconditionsTest'
p6448
sg16
(lp6449
sg19
(lp6450
sg22
(lp6451
sg25
I0
sba(iArchitecture
Entity
p6452
(dp6453
g11
(lp6454
sg14
S'com.google.common.net.HostAndPortTest'
p6455
sg16
(lp6456
sg19
(lp6457
sg22
(lp6458
sg25
I0
sba(iArchitecture
Entity
p6459
(dp6460
g11
(lp6461
sg14
S'com.google.common.net.MediaTypeTest'
p6462
sg16
(lp6463
sg19
(lp6464
sg22
(lp6465
sg25
I0
sba(iArchitecture
Entity
p6466
(dp6467
g11
(lp6468
sg14
S'com.google.common.net.PercentEscaper'
p6469
sg16
(lp6470
sg19
(lp6471
sg22
(lp6472
sg25
I0
sba(iArchitecture
Entity
p6473
(dp6474
g11
(lp6475
sg14
S'com.google.common.net.PercentEscaperTest'
p6476
sg16
(lp6477
sg19
(lp6478
sg22
(lp6479
sg25
I0
sba(iArchitecture
Entity
p6480
(dp6481
g11
(lp6482
V1942
p6483
asg14
S'com.google.common.primitives.Booleans'
p6484
sg16
(lp6485
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6486
asg19
(lp6487
(lp6488
I6
aasg22
(lp6489
VLine comment on requiring Java 6
p6490
asg25
I0
sba(iArchitecture
Entity
p6491
(dp6492
g11
(lp6493
sg14
S'com.google.common.primitives.BooleansTest'
p6494
sg16
(lp6495
sg19
(lp6496
sg22
(lp6497
sg25
I0
sba(iArchitecture
Entity
p6498
(dp6499
g11
(lp6500
sg14
S'com.google.common.primitives.BooleansTest_gwt'
p6501
sg16
(lp6502
sg19
(lp6503
sg22
(lp6504
sg25
I0
sba(iArchitecture
Entity
p6505
(dp6506
g11
(lp6507
sg14
S'com.google.common.primitives.ByteArrayAsListTest'
p6508
sg16
(lp6509
sg19
(lp6510
sg22
(lp6511
sg25
I0
sba(iArchitecture
Entity
p6512
(dp6513
g11
(lp6514
g6483
asg14
S'com.google.common.primitives.Bytes'
p6515
sg16
(lp6516
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6517
asg19
(lp6518
g6488
asg22
(lp6519
g6490
asg25
I0
sba(iArchitecture
Entity
p6520
(dp6521
g11
(lp6522
g6483
asg14
S'com.google.common.primitives.Chars'
p6523
sg16
(lp6524
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6525
asg19
(lp6526
g6488
asg22
(lp6527
g6490
asg25
I0
sba(iArchitecture
Entity
p6528
(dp6529
g11
(lp6530
sg14
S'com.google.common.primitives.CharsTest'
p6531
sg16
(lp6532
sg19
(lp6533
sg22
(lp6534
sg25
I0
sba(iArchitecture
Entity
p6535
(dp6536
g11
(lp6537
sg14
S'com.google.common.primitives.DoubleArrayAsListTest'
p6538
sg16
(lp6539
sg19
(lp6540
sg22
(lp6541
sg25
I0
sba(iArchitecture
Entity
p6542
(dp6543
g11
(lp6544
g6483
asg14
S'com.google.common.primitives.Doubles'
p6545
sg16
(lp6546
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6547
asg19
(lp6548
g6488
asg22
(lp6549
g6490
asg25
I0
sba(iArchitecture
Entity
p6550
(dp6551
g11
(lp6552
sg14
S'com.google.common.primitives.DoublesTest'
p6553
sg16
(lp6554
sg19
(lp6555
sg22
(lp6556
sg25
I0
sba(iArchitecture
Entity
p6557
(dp6558
g11
(lp6559
sg14
S'com.google.common.primitives.FloatArrayAsListTest'
p6560
sg16
(lp6561
sg19
(lp6562
sg22
(lp6563
sg25
I0
sba(iArchitecture
Entity
p6564
(dp6565
g11
(lp6566
g6483
asg14
S'com.google.common.primitives.Floats'
p6567
sg16
(lp6568
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6569
asg19
(lp6570
g6488
asg22
(lp6571
g6490
asg25
I0
sba(iArchitecture
Entity
p6572
(dp6573
g11
(lp6574
sg14
S'com.google.common.primitives.IntArrayAsListTest'
p6575
sg16
(lp6576
sg19
(lp6577
sg22
(lp6578
sg25
I0
sba(iArchitecture
Entity
p6579
(dp6580
g11
(lp6581
g6483
asg14
S'com.google.common.primitives.Ints'
p6582
sg16
(lp6583
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6584
asg19
(lp6585
g6488
asg22
(lp6586
g6490
asg25
I0
sba(iArchitecture
Entity
p6587
(dp6588
g11
(lp6589
sg14
S'com.google.common.primitives.IntsTest'
p6590
sg16
(lp6591
sg19
(lp6592
sg22
(lp6593
sg25
I0
sba(iArchitecture
Entity
p6594
(dp6595
g11
(lp6596
sg14
S'com.google.common.primitives.IntsTest_gwt'
p6597
sg16
(lp6598
sg19
(lp6599
sg22
(lp6600
sg25
I0
sba(iArchitecture
Entity
p6601
(dp6602
g11
(lp6603
sg14
S'com.google.common.primitives.LongArrayAsListTest'
p6604
sg16
(lp6605
sg19
(lp6606
sg22
(lp6607
sg25
I0
sba(iArchitecture
Entity
p6608
(dp6609
g11
(lp6610
g6483
asg14
S'com.google.common.primitives.Longs'
p6611
sg16
(lp6612
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6613
asg19
(lp6614
g6488
asg22
(lp6615
g6490
asg25
I0
sba(iArchitecture
Entity
p6616
(dp6617
g11
(lp6618
sg14
S'com.google.common.primitives.LongsTest'
p6619
sg16
(lp6620
sg19
(lp6621
sg22
(lp6622
sg25
I0
sba(iArchitecture
Entity
p6623
(dp6624
g11
(lp6625
sg14
S'com.google.common.primitives.LongsTest_gwt'
p6626
sg16
(lp6627
sg19
(lp6628
sg22
(lp6629
sg25
I0
sba(iArchitecture
Entity
p6630
(dp6631
g11
(lp6632
sg14
S'com.google.common.primitives.PrimitivesTest'
p6633
sg16
(lp6634
sg19
(lp6635
sg22
(lp6636
sg25
I0
sba(iArchitecture
Entity
p6637
(dp6638
g11
(lp6639
sg14
S'com.google.common.primitives.ShortArrayAsListTest'
p6640
sg16
(lp6641
sg19
(lp6642
sg22
(lp6643
sg25
I0
sba(iArchitecture
Entity
p6644
(dp6645
g11
(lp6646
g6483
asg14
S'com.google.common.primitives.Shorts'
p6647
sg16
(lp6648
VPlease see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\u000a\u000aIsn't Java 6 available?\u000aIf it is, should that comment be removed?\u000aShould the method be removed? (It is private and only used in a single place).\u000a
p6649
asg19
(lp6650
g6488
asg22
(lp6651
g6490
asg25
I0
sba(iArchitecture
Entity
p6652
(dp6653
g11
(lp6654
sg14
S'com.google.common.primitives.ShortsTest'
p6655
sg16
(lp6656
sg19
(lp6657
sg22
(lp6658
sg25
I0
sba(iArchitecture
Entity
p6659
(dp6660
g11
(lp6661
sg14
S'com.google.common.primitives.SignedBytes'
p6662
sg16
(lp6663
sg19
(lp6664
sg22
(lp6665
sg25
I0
sba(iArchitecture
Entity
p6666
(dp6667
g11
(lp6668
sg14
S'com.google.common.primitives.SignedBytesTest'
p6669
sg16
(lp6670
sg19
(lp6671
sg22
(lp6672
sg25
I0
sba(iArchitecture
Entity
p6673
(dp6674
g11
(lp6675
sg14
S'com.google.common.primitives.UnsignedBytes'
p6676
sg16
(lp6677
sg19
(lp6678
sg22
(lp6679
sg25
I0
sba(iArchitecture
Entity
p6680
(dp6681
g11
(lp6682
sg14
S'com.google.common.primitives.UnsignedBytesBenchmark'
p6683
sg16
(lp6684
sg19
(lp6685
sg22
(lp6686
sg25
I0
sba(iArchitecture
Entity
p6687
(dp6688
g11
(lp6689
sg14
S'com.google.common.primitives.UnsignedBytesTest'
p6690
sg16
(lp6691
sg19
(lp6692
sg22
(lp6693
sg25
I0
sba(iArchitecture
Entity
p6694
(dp6695
g11
(lp6696
sg14
S'com.google.common.primitives.UnsignedInteger'
p6697
sg16
(lp6698
sg19
(lp6699
sg22
(lp6700
sg25
I0
sba(iArchitecture
Entity
p6701
(dp6702
g11
(lp6703
sg14
S'com.google.common.primitives.UnsignedIntegerTest'
p6704
sg16
(lp6705
sg19
(lp6706
sg22
(lp6707
sg25
I0
sba(iArchitecture
Entity
p6708
(dp6709
g11
(lp6710
sg14
S'com.google.common.primitives.UnsignedInts'
p6711
sg16
(lp6712
sg19
(lp6713
sg22
(lp6714
sg25
I0
sba(iArchitecture
Entity
p6715
(dp6716
g11
(lp6717
sg14
S'com.google.common.primitives.UnsignedIntsTest'
p6718
sg16
(lp6719
sg19
(lp6720
sg22
(lp6721
sg25
I0
sba(iArchitecture
Entity
p6722
(dp6723
g11
(lp6724
sg14
S'com.google.common.primitives.UnsignedLong'
p6725
sg16
(lp6726
sg19
(lp6727
sg22
(lp6728
sg25
I0
sba(iArchitecture
Entity
p6729
(dp6730
g11
(lp6731
sg14
S'com.google.common.primitives.UnsignedLongTest'
p6732
sg16
(lp6733
sg19
(lp6734
sg22
(lp6735
sg25
I0
sba(iArchitecture
Entity
p6736
(dp6737
g11
(lp6738
sg14
S'com.google.common.primitives.UnsignedLongs'
p6739
sg16
(lp6740
sg19
(lp6741
sg22
(lp6742
sg25
I0
sba(iArchitecture
Entity
p6743
(dp6744
g11
(lp6745
sg14
S'com.google.common.primitives.UnsignedLongsBenchmark'
p6746
sg16
(lp6747
sg19
(lp6748
sg22
(lp6749
sg25
I0
sba(iArchitecture
Entity
p6750
(dp6751
g11
(lp6752
sg14
S'com.google.common.primitives.UnsignedLongsTest'
p6753
sg16
(lp6754
sg19
(lp6755
sg22
(lp6756
sg25
I0
sba(iArchitecture
Entity
p6757
(dp6758
g11
(lp6759
sg14
S'com.google.common.reflect.Element'
p6760
sg16
(lp6761
sg19
(lp6762
sg22
(lp6763
sg25
I0
sba(iArchitecture
Entity
p6764
(dp6765
g11
(lp6766
sg14
S'com.google.common.reflect.ElementTest'
p6767
sg16
(lp6768
sg19
(lp6769
sg22
(lp6770
sg25
I0
sba(iArchitecture
Entity
p6771
(dp6772
g11
(lp6773
sg14
S'com.google.common.reflect.Invokable'
p6774
sg16
(lp6775
sg19
(lp6776
sg22
(lp6777
sg25
I0
sba(iArchitecture
Entity
p6778
(dp6779
g11
(lp6780
sg14
S'com.google.common.reflect.InvokableTest'
p6781
sg16
(lp6782
sg19
(lp6783
sg22
(lp6784
sg25
I0
sba(iArchitecture
Entity
p6785
(dp6786
g11
(lp6787
sg14
S'com.google.common.reflect.Parameter'
p6788
sg16
(lp6789
sg19
(lp6790
sg22
(lp6791
sg25
I0
sba(iArchitecture
Entity
p6792
(dp6793
g11
(lp6794
sg14
S'com.google.common.reflect.ParameterTest'
p6795
sg16
(lp6796
sg19
(lp6797
sg22
(lp6798
sg25
I0
sba(iArchitecture
Entity
p6799
(dp6800
g11
(lp6801
sg14
S'com.google.common.reflect.TypeResolverTest'
p6802
sg16
(lp6803
sg19
(lp6804
sg22
(lp6805
sg25
I0
sba(iArchitecture
Entity
p6806
(dp6807
g11
(lp6808
sg14
S'com.google.common.reflect.TypeTokenTest'
p6809
sg16
(lp6810
sg19
(lp6811
sg22
(lp6812
sg25
I0
sba(iArchitecture
Entity
p6813
(dp6814
g11
(lp6815
sg14
S'com.google.common.testing.ClassSanityTesterTest'
p6816
sg16
(lp6817
sg19
(lp6818
sg22
(lp6819
sg25
I0
sba(iArchitecture
Entity
p6820
(dp6821
g11
(lp6822
sg14
S'com.google.common.testing.EqualsTesterTest'
p6823
sg16
(lp6824
sg19
(lp6825
sg22
(lp6826
sg25
I0
sba(iArchitecture
Entity
p6827
(dp6828
g11
(lp6829
sg14
S'com.google.common.testing.FakeTickerTest'
p6830
sg16
(lp6831
sg19
(lp6832
sg22
(lp6833
sg25
I0
sba(iArchitecture
Entity
p6834
(dp6835
g11
(lp6836
sg14
S'com.google.common.testing.FreshValueGeneratorTest'
p6837
sg16
(lp6838
sg19
(lp6839
sg22
(lp6840
sg25
I0
sba(iArchitecture
Entity
p6841
(dp6842
g11
(lp6843
sg14
S'com.google.common.testing.GcFinalization'
p6844
sg16
(lp6845
sg19
(lp6846
sg22
(lp6847
sg25
I0
sba(iArchitecture
Entity
p6848
(dp6849
g11
(lp6850
sg14
S'com.google.common.testing.GcFinalizationTest'
p6851
sg16
(lp6852
sg19
(lp6853
sg22
(lp6854
sg25
I0
sba(iArchitecture
Entity
p6855
(dp6856
g11
(lp6857
V1819
p6858
asg14
S'com.google.common.testing.NullPointerTesterTest'
p6859
sg16
(lp6860
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1819) created by **ogregoire** on 2014-07-29 at 03:35 PM_\u000a\u000a---\u000a\u000aWhen I call the following, the test case fails (see full test case in attachment).\u000a\u000a&nbsp;&nbsp;new ClassSanityTester().testNulls(MyObject.class);\u000a\u000aI get the following error: No exception thrown for parameter at index 0 from MyObjectTest$MyObject.public boolean MyObjectTest$MyObject.equals(java.lang.Object)[null] for class MyObjectTest$MyObject\u000a\u000aClearly, this indicates that it expects a call to "equals(Object)" to throw a NullPointerException. That method should never throw an exception but rather return true or false. The test seems to skip this assertion and I'm surprised this hasn't been reported earlier. \u000a\u000aPlease make it so ClassSanityTester#testNulls(Class) doesn't fail when equals is behaving correctly (see the test case where testEquals(MyObject.class succeeds).\u000a\u000aOn a side note, the text returned should be adapted as it mentions three times MyObjectTest$MyObject. That's 2 too many, and it renders the whole error message nearly not understandable.\u000a
p6861
asg19
(lp6862
(lp6863
I1
aasg22
(lp6864
VNullPointerTester should not require @Nullable on the param of an equals() override
p6865
asg25
I0
sba(iArchitecture
Entity
p6866
(dp6867
g11
(lp6868
sg14
S'com.google.common.testing.RelationshipTester'
p6869
sg16
(lp6870
sg19
(lp6871
sg22
(lp6872
sg25
I0
sba(iArchitecture
Entity
p6873
(dp6874
g11
(lp6875
sg14
S'com.google.common.testing.SerializableTesterTest'
p6876
sg16
(lp6877
sg19
(lp6878
sg22
(lp6879
sg25
I0
sba(iArchitecture
Entity
p6880
(dp6881
g11
(lp6882
sg14
S'com.google.common.testing.TearDownStackTest'
p6883
sg16
(lp6884
sg19
(lp6885
sg22
(lp6886
sg25
I0
sba(iArchitecture
Entity
p6887
(dp6888
g11
(lp6889
sg14
S'com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest'
p6890
sg16
(lp6891
sg19
(lp6892
sg22
(lp6893
sg25
I0
sba(iArchitecture
Entity
p6894
(dp6895
g11
(lp6896
sg14
S'com.google.common.util.concurrent.AbstractAbstractFutureTest'
p6897
sg16
(lp6898
sg19
(lp6899
sg22
(lp6900
sg25
I0
sba(iArchitecture
Entity
p6901
(dp6902
g11
(lp6903
V1961
p6904
asg14
S'com.google.common.util.concurrent.AbstractFuture'
p6905
sg16
(lp6906
VOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p6907
asg19
(lp6908
(lp6909
I0
aasg22
(lp6910
VMake immediateFailedFuture and immediateCancelledFuture return a TrustedFuture?
p6911
asg25
I0
sba(iArchitecture
Entity
p6912
(dp6913
g11
(lp6914
sg14
S'com.google.common.util.concurrent.AbstractFutureTest'
p6915
sg16
(lp6916
sg19
(lp6917
sg22
(lp6918
sg25
I0
sba(iArchitecture
Entity
p6919
(dp6920
g11
(lp6921
sg14
S'com.google.common.util.concurrent.AbstractIdleService'
p6922
sg16
(lp6923
sg19
(lp6924
sg22
(lp6925
sg25
I0
sba(iArchitecture
Entity
p6926
(dp6927
g11
(lp6928
V2463
p6929
ag6929
asg14
S'com.google.common.util.concurrent.AggregateFuture'
p6930
sg16
(lp6931
VWe already do in `AbstractFuture`.\u000a
p6932
aVWe already do in `AbstractFuture`.\u000a
p6933
asg19
(lp6934
(lp6935
I1
aag6935
asg22
(lp6936
VWork around Samsung 5.0.x Atomic*FieldUpdater bug in AggregateFutureState and InterruptibleTask
p6937
ag6937
asg25
I0
sba(iArchitecture
Entity
p6938
(dp6939
g11
(lp6940
sg14
S'com.google.common.util.concurrent.AtomicDouble'
p6941
sg16
(lp6942
sg19
(lp6943
sg22
(lp6944
sg25
I0
sba(iArchitecture
Entity
p6945
(dp6946
g11
(lp6947
sg14
S'com.google.common.util.concurrent.AtomicDoubleArray'
p6948
sg16
(lp6949
sg19
(lp6950
sg22
(lp6951
sg25
I0
sba(iArchitecture
Entity
p6952
(dp6953
g11
(lp6954
sg14
S'com.google.common.util.concurrent.AtomicDoubleArrayTest'
p6955
sg16
(lp6956
sg19
(lp6957
sg22
(lp6958
sg25
I0
sba(iArchitecture
Entity
p6959
(dp6960
g11
(lp6961
sg14
S'com.google.common.util.concurrent.AtomicDoubleTest'
p6962
sg16
(lp6963
sg19
(lp6964
sg22
(lp6965
sg25
I0
sba(iArchitecture
Entity
p6966
(dp6967
g11
(lp6968
sg14
S'com.google.common.util.concurrent.AtomicsTest'
p6969
sg16
(lp6970
sg19
(lp6971
sg22
(lp6972
sg25
I0
sba(iArchitecture
Entity
p6973
(dp6974
g11
(lp6975
sg14
S'com.google.common.util.concurrent.CallablesTest'
p6976
sg16
(lp6977
sg19
(lp6978
sg22
(lp6979
sg25
I0
sba(iArchitecture
Entity
p6980
(dp6981
g11
(lp6982
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactoryBenchmark'
p6983
sg16
(lp6984
sg19
(lp6985
sg22
(lp6986
sg25
I0
sba(iArchitecture
Entity
p6987
(dp6988
g11
(lp6989
sg14
S'com.google.common.util.concurrent.ExecutionListBenchmark'
p6990
sg16
(lp6991
sg19
(lp6992
sg22
(lp6993
sg25
I0
sba(iArchitecture
Entity
p6994
(dp6995
g11
(lp6996
sg14
S'com.google.common.util.concurrent.FutureCallbackTest'
p6997
sg16
(lp6998
sg19
(lp6999
sg22
(lp7000
sg25
I0
sba(iArchitecture
Entity
p7001
(dp7002
g11
(lp7003
g6929
aV1999
p7004
aV2254
p7005
ag7005
asg14
S'com.google.common.util.concurrent.FuturesTest'
p7006
sg16
(lp7007
VWe already do in `AbstractFuture`.\u000a
p7008
aV- @lowasser internal CL 88242480 wants to use `SimpleImmutableEntry`.\u000a- Internal CL 86210805 can be rolled back to use `AssertionError(String, Throwable)`.\u000a- @kak internal CL 83767705 wanted to use `Arrays.copyOf`.\u000a- My internal CL 59647656 wants to remove `AbstractIteratorTester` workarounds for bugs in `java.util` classes fixed in new releases of GWT.\u000a\u000aGWT 2.7.0 was released in November. But note that we had bug reports from users of GWT 2.5.1 as late as October 2014, 9 months after the release of 2.6.0. We should get some idea of how quickly external users update the version of GWT they use.\u000a
p7009
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p7010
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p7011
asg19
(lp7012
g6935
a(lp7013
I7
aa(lp7014
I1
aag7014
asg22
(lp7015
g6937
aVRelease a Guava that supports+requires GWT 2.8.0 upon GWT release
p7016
aVNesting Futures.transform() eats StackOverflowError and causes the Future to hang forever
p7017
ag7017
asg25
I0
sba(iArchitecture
Entity
p7018
(dp7019
g11
(lp7020
sg14
S'com.google.common.util.concurrent.GeneratedMonitorTest'
p7021
sg16
(lp7022
sg19
(lp7023
sg22
(lp7024
sg25
I0
sba(iArchitecture
Entity
p7025
(dp7026
g11
(lp7027
sg14
S'com.google.common.util.concurrent.JSR166TestCase'
p7028
sg16
(lp7029
sg19
(lp7030
sg22
(lp7031
sg25
I0
sba(iArchitecture
Entity
p7032
(dp7033
g11
(lp7034
sg14
S'com.google.common.util.concurrent.Monitor'
p7035
sg16
(lp7036
sg19
(lp7037
sg22
(lp7038
sg25
I0
sba(iArchitecture
Entity
p7039
(dp7040
g11
(lp7041
sg14
S'com.google.common.util.concurrent.MonitorBasedArrayBlockingQueue'
p7042
sg16
(lp7043
sg19
(lp7044
sg22
(lp7045
sg25
I0
sba(iArchitecture
Entity
p7046
(dp7047
g11
(lp7048
sg14
S'com.google.common.util.concurrent.MonitorBasedPriorityBlockingQueue'
p7049
sg16
(lp7050
sg19
(lp7051
sg22
(lp7052
sg25
I0
sba(iArchitecture
Entity
p7053
(dp7054
g11
(lp7055
sg14
S'com.google.common.util.concurrent.MonitorBenchmark'
p7056
sg16
(lp7057
sg19
(lp7058
sg22
(lp7059
sg25
I0
sba(iArchitecture
Entity
p7060
(dp7061
g11
(lp7062
sg14
S'com.google.common.util.concurrent.MonitorTestCase'
p7063
sg16
(lp7064
sg19
(lp7065
sg22
(lp7066
sg25
I0
sba(iArchitecture
Entity
p7067
(dp7068
g11
(lp7069
sg14
S'com.google.common.util.concurrent.RateLimiterTest'
p7070
sg16
(lp7071
sg19
(lp7072
sg22
(lp7073
sg25
I0
sba(iArchitecture
Entity
p7074
(dp7075
g11
(lp7076
sg14
S'com.google.common.util.concurrent.SerializingExecutorTest'
p7077
sg16
(lp7078
sg19
(lp7079
sg22
(lp7080
sg25
I0
sba(iArchitecture
Entity
p7081
(dp7082
g11
(lp7083
sg14
S'com.google.common.util.concurrent.SettableFutureTest'
p7084
sg16
(lp7085
sg19
(lp7086
sg22
(lp7087
sg25
I0
sba(iArchitecture
Entity
p7088
(dp7089
g11
(lp7090
sg14
S'com.google.common.util.concurrent.Striped'
p7091
sg16
(lp7092
sg19
(lp7093
sg22
(lp7094
sg25
I0
sba(iArchitecture
Entity
p7095
(dp7096
g11
(lp7097
sg14
S'com.google.common.util.concurrent.StripedBenchmark'
p7098
sg16
(lp7099
sg19
(lp7100
sg22
(lp7101
sg25
I0
sba(iArchitecture
Entity
p7102
(dp7103
g11
(lp7104
sg14
S'com.google.common.util.concurrent.StripedTest'
p7105
sg16
(lp7106
sg19
(lp7107
sg22
(lp7108
sg25
I0
sba(iArchitecture
Entity
p7109
(dp7110
g11
(lp7111
sg14
S'com.google.common.util.concurrent.SupplementalMonitorTest'
p7112
sg16
(lp7113
sg19
(lp7114
sg22
(lp7115
sg25
I0
sba(iArchitecture
Entity
p7116
(dp7117
g11
(lp7118
sg14
S'com.google.common.util.concurrent.TestThread'
p7119
sg16
(lp7120
sg19
(lp7121
sg22
(lp7122
sg25
I0
sba(iArchitecture
Entity
p7123
(dp7124
g11
(lp7125
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p7126
sg16
(lp7127
sg19
(lp7128
sg22
(lp7129
sg25
I0
sba(iArchitecture
Entity
p7130
(dp7131
g11
(lp7132
sg14
S'com.google.common.util.concurrent.WrappingExecutorServiceTest'
p7133
sg16
(lp7134
sg19
(lp7135
sg22
(lp7136
sg25
I0
sba(iArchitecture
Entity
p7137
(dp7138
g11
(lp7139
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorServiceTest'
p7140
sg16
(lp7141
sg19
(lp7142
sg22
(lp7143
sg25
I0
sba(iArchitecture
Entity
p7144
(dp7145
g11
(lp7146
sg14
S'com.google.common.util.concurrent.testing.AbstractListenableFutureTest'
p7147
sg16
(lp7148
sg19
(lp7149
sg22
(lp7150
sg25
I0
sba(iArchitecture
Entity
p7151
(dp7152
g11
(lp7153
sg14
S'com.google.common.util.concurrent.testing.TestingExecutorsTest'
p7154
sg16
(lp7155
sg19
(lp7156
sg22
(lp7157
sg25
I0
sba(iArchitecture
Entity
p7158
(dp7159
g11
(lp7160
sg14
S'java.util.concurrent.ConcurrentHashMap'
p7161
sg16
(lp7162
sg19
(lp7163
sg22
(lp7164
sg25
I0
sba(iArchitecture
Entity
p7165
(dp7166
g11
(lp7167
sg14
S'java.util.concurrent.CountDownLatch'
p7168
sg16
(lp7169
sg19
(lp7170
sg22
(lp7171
sg25
I0
sba(iArchitecture
Entity
p7172
(dp7173
g11
(lp7174
sg14
S'java.util.concurrent.TimeUnit'
p7175
sg16
(lp7176
sg19
(lp7177
sg22
(lp7178
sg25
I0
sba(iArchitecture
Entity
p7179
(dp7180
g11
(lp7181
sg14
S'java.util.concurrent.atomic.AtomicBoolean'
p7182
sg16
(lp7183
sg19
(lp7184
sg22
(lp7185
sg25
I0
sba(iArchitecture
Entity
p7186
(dp7187
g11
(lp7188
sg14
S'java.util.concurrent.atomic.AtomicInteger'
p7189
sg16
(lp7190
sg19
(lp7191
sg22
(lp7192
sg25
I0
sba(iArchitecture
Entity
p7193
(dp7194
g11
(lp7195
sg14
S'java.util.concurrent.atomic.AtomicLong'
p7196
sg16
(lp7197
sg19
(lp7198
sg22
(lp7199
sg25
I0
sbasg1017
(lp7200
g3528
ag3535
ag3542
ag3550
ag3560
ag3567
ag3574
ag3581
ag3588
ag3595
ag3602
ag3609
ag3616
ag3623
ag3630
ag3637
ag3644
ag3651
ag3658
ag3666
ag3677
ag3685
ag3692
ag3699
ag3706
ag3714
ag3725
ag3732
ag3739
ag3747
ag3757
ag3764
ag3771
ag3778
ag3785
ag3792
ag3799
ag3806
ag3813
ag3820
ag3827
ag3834
ag3841
ag3848
ag3855
ag3862
ag3869
ag3876
ag3883
ag3890
ag3897
ag3904
ag3911
ag3918
ag3925
ag3932
ag3939
ag3946
ag3953
ag3960
ag3967
ag3974
ag3981
ag3988
ag3995
ag4002
ag4009
ag4016
ag4023
ag4030
ag4037
ag4044
ag4051
ag4058
ag4065
ag4072
ag4079
ag4086
ag4093
ag4100
ag4107
ag4114
ag4121
ag4128
ag4135
ag4142
ag4149
ag4156
ag4163
ag4170
ag4177
ag4184
ag4191
ag4198
ag4205
ag4212
ag4219
ag4226
ag4233
ag4240
ag4247
ag4254
ag4261
ag4268
ag4275
ag4282
ag4289
ag4296
ag4303
ag4310
ag4317
ag4324
ag4331
ag4338
ag4345
ag4352
ag4359
ag4366
ag4373
ag4380
ag4387
ag4394
ag4401
ag4408
ag4415
ag4422
ag4429
ag4436
ag4443
ag4450
ag4457
ag4464
ag4471
ag4478
ag4485
ag4492
ag4499
ag4506
ag4513
ag4520
ag4527
ag4534
ag4541
ag4548
ag4555
ag4562
ag4569
ag4576
ag4583
ag4590
ag4597
ag4604
ag4611
ag4618
ag4625
ag4632
ag4639
ag4646
ag4653
ag4660
ag4667
ag4674
ag4682
ag4692
ag4699
ag4707
ag4714
ag4721
ag4728
ag4735
ag4742
ag4749
ag4756
ag4763
ag4770
ag4777
ag4784
ag4791
ag4798
ag4805
ag4812
ag4819
ag4826
ag4833
ag4840
ag4847
ag4854
ag4861
ag4868
ag4875
ag4882
ag4889
ag4896
ag4903
ag4910
ag4917
ag4924
ag4931
ag4938
ag4945
ag4952
ag4959
ag4966
ag4973
ag4980
ag4987
ag4994
ag5001
ag5008
ag5015
ag5022
ag5029
ag5036
ag5043
ag5050
ag5057
ag5064
ag5071
ag5078
ag5085
ag5092
ag5099
ag5106
ag5113
ag5120
ag5127
ag5134
ag5141
ag5148
ag5155
ag5163
ag5176
ag5184
ag5191
ag5198
ag5205
ag5212
ag5219
ag5226
ag5233
ag5240
ag5247
ag5254
ag5261
ag5268
ag5275
ag5282
ag5289
ag5296
ag5303
ag5310
ag5317
ag5324
ag5331
ag5338
ag5345
ag5352
ag5359
ag5366
ag5373
ag5380
ag5387
ag5394
ag5401
ag5408
ag5415
ag5422
ag5429
ag5436
ag5443
ag5450
ag5457
ag5464
ag5471
ag5478
ag5485
ag5492
ag5499
ag5506
ag5513
ag5520
ag5527
ag5534
ag5541
ag5548
ag5555
ag5562
ag5569
ag5576
ag5583
ag5590
ag5597
ag5604
ag5611
ag5618
ag5625
ag5632
ag5639
ag5646
ag5653
ag5660
ag5667
ag5674
ag5681
ag5688
ag5695
ag5702
ag5709
ag5716
ag5723
ag5730
ag5737
ag5744
ag5751
ag5758
ag5765
ag5772
ag5779
ag5786
ag5793
ag5800
ag5807
ag5814
ag5821
ag5828
ag5835
ag5842
ag5849
ag5856
ag5863
ag5870
ag5877
ag5884
ag5891
ag5898
ag5905
ag5912
ag5919
ag5926
ag5933
ag5940
ag5947
ag5954
ag5961
ag5968
ag5975
ag5982
ag5989
ag5996
ag6003
ag6010
ag6017
ag6024
ag6031
ag6038
ag6045
ag6052
ag6059
ag6066
ag6073
ag6080
ag6087
ag6094
ag6101
ag6108
ag6115
ag6122
ag6129
ag6136
ag6143
ag6150
ag6157
ag6164
ag6171
ag6178
ag6185
ag6192
ag6199
ag6206
ag6213
ag6220
ag6227
ag6234
ag6241
ag6248
ag6255
ag6262
ag6270
ag6280
ag6287
ag6294
ag6301
ag6308
ag6315
ag6322
ag6329
ag6336
ag6343
ag6350
ag6357
ag6364
ag6371
ag6378
ag6385
ag6392
ag6399
ag6406
ag6413
ag6420
ag6427
ag6434
ag6441
ag6448
ag6455
ag6462
ag6469
ag6476
ag6484
ag6494
ag6501
ag6508
ag6515
ag6523
ag6531
ag6538
ag6545
ag6553
ag6560
ag6567
ag6575
ag6582
ag6590
ag6597
ag6604
ag6611
ag6619
ag6626
ag6633
ag6640
ag6647
ag6655
ag6662
ag6669
ag6676
ag6683
ag6690
ag6697
ag6704
ag6711
ag6718
ag6725
ag6732
ag6739
ag6746
ag6753
ag6760
ag6767
ag6774
ag6781
ag6788
ag6795
ag6802
ag6809
ag6816
ag6823
ag6830
ag6837
ag6844
ag6851
ag6859
ag6869
ag6876
ag6883
ag6890
ag6897
ag6905
ag6915
ag6922
ag6930
ag6941
ag6948
ag6955
ag6962
ag6969
ag6976
ag6983
ag6990
ag6997
ag7006
ag7021
ag7028
ag7035
ag7042
ag7049
ag7056
ag7063
ag7070
ag7077
ag7084
ag7091
ag7098
ag7105
ag7112
ag7119
ag7126
ag7133
ag7140
ag7147
ag7154
ag7161
ag7168
ag7175
ag7182
ag7189
ag7196
asg25
I0
sg1019
S'graphics'
p7201
sba(iArchitecture
Cluster
p7202
(dp7203
g7
(lp7204
(iArchitecture
Entity
p7205
(dp7206
g11
(lp7207
sg14
S'com.google.common.GwtTestSuite'
p7208
sg16
(lp7209
sg19
(lp7210
sg22
(lp7211
sg25
I0
sba(iArchitecture
Entity
p7212
(dp7213
g11
(lp7214
sg14
S'com.google.common.base.Ascii'
p7215
sg16
(lp7216
sg19
(lp7217
sg22
(lp7218
sg25
I0
sba(iArchitecture
Entity
p7219
(dp7220
g11
(lp7221
sg14
S'com.google.common.base.BenchmarkHelpers'
p7222
sg16
(lp7223
sg19
(lp7224
sg22
(lp7225
sg25
I0
sba(iArchitecture
Entity
p7226
(dp7227
g11
(lp7228
sg14
S'com.google.common.base.CaseFormat'
p7229
sg16
(lp7230
sg19
(lp7231
sg22
(lp7232
sg25
I0
sba(iArchitecture
Entity
p7233
(dp7234
g11
(lp7235
sg14
S'com.google.common.base.Charsets'
p7236
sg16
(lp7237
sg19
(lp7238
sg22
(lp7239
sg25
I0
sba(iArchitecture
Entity
p7240
(dp7241
g11
(lp7242
sg14
S'com.google.common.base.CharsetsTest'
p7243
sg16
(lp7244
sg19
(lp7245
sg22
(lp7246
sg25
I0
sba(iArchitecture
Entity
p7247
(dp7248
g11
(lp7249
sg14
S'com.google.common.base.DefaultsTest'
p7250
sg16
(lp7251
sg19
(lp7252
sg22
(lp7253
sg25
I0
sba(iArchitecture
Entity
p7254
(dp7255
g11
(lp7256
sg14
S'com.google.common.base.FunctionalEquivalence'
p7257
sg16
(lp7258
sg19
(lp7259
sg22
(lp7260
sg25
I0
sba(iArchitecture
Entity
p7261
(dp7262
g11
(lp7263
sg14
S'com.google.common.base.MoreObjects'
p7264
sg16
(lp7265
sg19
(lp7266
sg22
(lp7267
sg25
I0
sba(iArchitecture
Entity
p7268
(dp7269
g11
(lp7270
sg14
S'com.google.common.base.Objects'
p7271
sg16
(lp7272
sg19
(lp7273
sg22
(lp7274
sg25
I0
sba(iArchitecture
Entity
p7275
(dp7276
g11
(lp7277
sg14
S'com.google.common.base.ObjectsTest'
p7278
sg16
(lp7279
sg19
(lp7280
sg22
(lp7281
sg25
I0
sba(iArchitecture
Entity
p7282
(dp7283
g11
(lp7284
sg14
S'com.google.common.base.StringsTest'
p7285
sg16
(lp7286
sg19
(lp7287
sg22
(lp7288
sg25
I0
sba(iArchitecture
Entity
p7289
(dp7290
g11
(lp7291
sg14
S'com.google.common.base.Utf8'
p7292
sg16
(lp7293
sg19
(lp7294
sg22
(lp7295
sg25
I0
sba(iArchitecture
Entity
p7296
(dp7297
g11
(lp7298
sg14
S'com.google.common.base.Utf8Test'
p7299
sg16
(lp7300
sg19
(lp7301
sg22
(lp7302
sg25
I0
sba(iArchitecture
Entity
p7303
(dp7304
g11
(lp7305
sg14
S'com.google.common.collect.AbstractRangeSetTest'
p7306
sg16
(lp7307
sg19
(lp7308
sg22
(lp7309
sg25
I0
sba(iArchitecture
Entity
p7310
(dp7311
g11
(lp7312
sg14
S'com.google.common.collect.AbstractTableTest'
p7313
sg16
(lp7314
sg19
(lp7315
sg22
(lp7316
sg25
I0
sba(iArchitecture
Entity
p7317
(dp7318
g11
(lp7319
sg14
S'com.google.common.collect.AllEqualOrdering'
p7320
sg16
(lp7321
sg19
(lp7322
sg22
(lp7323
sg25
I0
sba(iArchitecture
Entity
p7324
(dp7325
g11
(lp7326
sg14
S'com.google.common.collect.ByFunctionOrdering'
p7327
sg16
(lp7328
sg19
(lp7329
sg22
(lp7330
sg25
I0
sba(iArchitecture
Entity
p7331
(dp7332
g11
(lp7333
sg14
S'com.google.common.collect.ComparatorOrdering'
p7334
sg16
(lp7335
sg19
(lp7336
sg22
(lp7337
sg25
I0
sba(iArchitecture
Entity
p7338
(dp7339
g11
(lp7340
sg14
S'com.google.common.collect.ConstrainedSetMultimapTest'
p7341
sg16
(lp7342
sg19
(lp7343
sg22
(lp7344
sg25
I0
sba(iArchitecture
Entity
p7345
(dp7346
g11
(lp7347
sg14
S'com.google.common.collect.FilteredCollectionsTest'
p7348
sg16
(lp7349
sg19
(lp7350
sg22
(lp7351
sg25
I0
sba(iArchitecture
Entity
p7352
(dp7353
g11
(lp7354
sg14
S'com.google.common.collect.FilteredMultimapTest'
p7355
sg16
(lp7356
sg19
(lp7357
sg22
(lp7358
sg25
I0
sba(iArchitecture
Entity
p7359
(dp7360
g11
(lp7361
sg14
S'com.google.common.collect.FluentIterable'
p7362
sg16
(lp7363
sg19
(lp7364
sg22
(lp7365
sg25
I0
sba(iArchitecture
Entity
p7366
(dp7367
g11
(lp7368
sg14
S'com.google.common.collect.GwtSerializationDependencies'
p7369
sg16
(lp7370
sg19
(lp7371
sg22
(lp7372
sg25
I0
sba(iArchitecture
Entity
p7373
(dp7374
g11
(lp7375
sg14
S'com.google.common.collect.HashBasedTableTest'
p7376
sg16
(lp7377
sg19
(lp7378
sg22
(lp7379
sg25
I0
sba(iArchitecture
Entity
p7380
(dp7381
g11
(lp7382
sg14
S'com.google.common.collect.HashMultimap'
p7383
sg16
(lp7384
sg19
(lp7385
sg22
(lp7386
sg25
I0
sba(iArchitecture
Entity
p7387
(dp7388
g11
(lp7389
sg14
S'com.google.common.collect.HashMultiset'
p7390
sg16
(lp7391
sg19
(lp7392
sg22
(lp7393
sg25
I0
sba(iArchitecture
Entity
p7394
(dp7395
g11
(lp7396
sg14
S'com.google.common.collect.ImmutableAsList'
p7397
sg16
(lp7398
sg19
(lp7399
sg22
(lp7400
sg25
I0
sba(iArchitecture
Entity
p7401
(dp7402
g11
(lp7403
sg14
S'com.google.common.collect.ImmutableCollectionTest'
p7404
sg16
(lp7405
sg19
(lp7406
sg22
(lp7407
sg25
I0
sba(iArchitecture
Entity
p7408
(dp7409
g11
(lp7410
sg14
S'com.google.common.collect.ImmutableEntry'
p7411
sg16
(lp7412
sg19
(lp7413
sg22
(lp7414
sg25
I0
sba(iArchitecture
Entity
p7415
(dp7416
g11
(lp7417
sg14
S'com.google.common.collect.ImmutableListMultimap'
p7418
sg16
(lp7419
sg19
(lp7420
sg22
(lp7421
sg25
I0
sba(iArchitecture
Entity
p7422
(dp7423
g11
(lp7424
sg14
S'com.google.common.collect.ImmutableTableTest'
p7425
sg16
(lp7426
sg19
(lp7427
sg22
(lp7428
sg25
I0
sba(iArchitecture
Entity
p7429
(dp7430
g11
(lp7431
sg14
S'com.google.common.collect.LinkedHashMultiset'
p7432
sg16
(lp7433
sg19
(lp7434
sg22
(lp7435
sg25
I0
sba(iArchitecture
Entity
p7436
(dp7437
g11
(lp7438
sg14
S'com.google.common.collect.MapsSortedTransformValuesTest'
p7439
sg16
(lp7440
sg19
(lp7441
sg22
(lp7442
sg25
I0
sba(iArchitecture
Entity
p7443
(dp7444
g11
(lp7445
sg14
S'com.google.common.collect.MultimapBuilderTest'
p7446
sg16
(lp7447
sg19
(lp7448
sg22
(lp7449
sg25
I0
sba(iArchitecture
Entity
p7450
(dp7451
g11
(lp7452
sg14
S'com.google.common.collect.NaturalOrdering'
p7453
sg16
(lp7454
sg19
(lp7455
sg22
(lp7456
sg25
I0
sba(iArchitecture
Entity
p7457
(dp7458
g11
(lp7459
sg14
S'com.google.common.collect.NewCustomTableTest'
p7460
sg16
(lp7461
sg19
(lp7462
sg22
(lp7463
sg25
I0
sba(iArchitecture
Entity
p7464
(dp7465
g11
(lp7466
sg14
S'com.google.common.collect.RangeNonGwtTest'
p7467
sg16
(lp7468
sg19
(lp7469
sg22
(lp7470
sg25
I0
sba(iArchitecture
Entity
p7471
(dp7472
g11
(lp7473
sg14
S'com.google.common.collect.RegularImmutableAsListTest'
p7474
sg16
(lp7475
sg19
(lp7476
sg22
(lp7477
sg25
I0
sba(iArchitecture
Entity
p7478
(dp7479
g11
(lp7480
sg14
S'com.google.common.collect.ReverseNaturalOrdering'
p7481
sg16
(lp7482
sg19
(lp7483
sg22
(lp7484
sg25
I0
sba(iArchitecture
Entity
p7485
(dp7486
g11
(lp7487
sg14
S'com.google.common.collect.Serialization'
p7488
sg16
(lp7489
sg19
(lp7490
sg22
(lp7491
sg25
I0
sba(iArchitecture
Entity
p7492
(dp7493
g11
(lp7494
sg14
S'com.google.common.collect.SpecialRandom'
p7495
sg16
(lp7496
sg19
(lp7497
sg22
(lp7498
sg25
I0
sba(iArchitecture
Entity
p7499
(dp7500
g11
(lp7501
sg14
S'com.google.common.collect.TableCollectionTest'
p7502
sg16
(lp7503
sg19
(lp7504
sg22
(lp7505
sg25
I0
sba(iArchitecture
Entity
p7506
(dp7507
g11
(lp7508
sg14
S'com.google.common.collect.TablesTest'
p7509
sg16
(lp7510
sg19
(lp7511
sg22
(lp7512
sg25
I0
sba(iArchitecture
Entity
p7513
(dp7514
g11
(lp7515
sg14
S'com.google.common.collect.TablesTransformValuesTest'
p7516
sg16
(lp7517
sg19
(lp7518
sg22
(lp7519
sg25
I0
sba(iArchitecture
Entity
p7520
(dp7521
g11
(lp7522
sg14
S'com.google.common.collect.TransformedIterator'
p7523
sg16
(lp7524
sg19
(lp7525
sg22
(lp7526
sg25
I0
sba(iArchitecture
Entity
p7527
(dp7528
g11
(lp7529
sg14
S'com.google.common.collect.TransposedTableTest'
p7530
sg16
(lp7531
sg19
(lp7532
sg22
(lp7533
sg25
I0
sba(iArchitecture
Entity
p7534
(dp7535
g11
(lp7536
sg14
S'com.google.common.collect.UsingToStringOrdering'
p7537
sg16
(lp7538
sg19
(lp7539
sg22
(lp7540
sg25
I0
sba(iArchitecture
Entity
p7541
(dp7542
g11
(lp7543
sg14
S'com.google.common.collect.testing.AbstractCollectionTester'
p7544
sg16
(lp7545
sg19
(lp7546
sg22
(lp7547
sg25
I0
sba(iArchitecture
Entity
p7548
(dp7549
g11
(lp7550
sg14
S'com.google.common.collect.testing.BaseComparable'
p7551
sg16
(lp7552
sg19
(lp7553
sg22
(lp7554
sg25
I0
sba(iArchitecture
Entity
p7555
(dp7556
g11
(lp7557
sg14
S'com.google.common.collect.testing.DerivedComparable'
p7558
sg16
(lp7559
sg19
(lp7560
sg22
(lp7561
sg25
I0
sba(iArchitecture
Entity
p7562
(dp7563
g11
(lp7564
sg14
S'com.google.common.collect.testing.DerivedTestIteratorGenerator'
p7565
sg16
(lp7566
sg19
(lp7567
sg22
(lp7568
sg25
I0
sba(iArchitecture
Entity
p7569
(dp7570
g11
(lp7571
sg14
S'com.google.common.collect.testing.IteratorTestSuiteBuilder'
p7572
sg16
(lp7573
sg19
(lp7574
sg22
(lp7575
sg25
I0
sba(iArchitecture
Entity
p7576
(dp7577
g11
(lp7578
sg14
S'com.google.common.collect.testing.OpenJdk6Tests'
p7579
sg16
(lp7580
sg19
(lp7581
sg22
(lp7582
sg25
I0
sba(iArchitecture
Entity
p7583
(dp7584
g11
(lp7585
sg14
S'com.google.common.collect.testing.Platform'
p7586
sg16
(lp7587
sg19
(lp7588
sg22
(lp7589
sg25
I0
sba(iArchitecture
Entity
p7590
(dp7591
g11
(lp7592
sg14
S'com.google.common.collect.testing.ReserializingTestCollectionGenerator'
p7593
sg16
(lp7594
sg19
(lp7595
sg22
(lp7596
sg25
I0
sba(iArchitecture
Entity
p7597
(dp7598
g11
(lp7599
sg14
S'com.google.common.collect.testing.TestCharacterListGenerator'
p7600
sg16
(lp7601
sg19
(lp7602
sg22
(lp7603
sg25
I0
sba(iArchitecture
Entity
p7604
(dp7605
g11
(lp7606
sg14
S'com.google.common.collect.testing.TestsForMapsInJavaUtil'
p7607
sg16
(lp7608
sg19
(lp7609
sg22
(lp7610
sg25
I0
sba(iArchitecture
Entity
p7611
(dp7612
g11
(lp7613
sg14
S'com.google.common.collect.testing.google.BiMapInverseTester'
p7614
sg16
(lp7615
sg19
(lp7616
sg22
(lp7617
sg25
I0
sba(iArchitecture
Entity
p7618
(dp7619
g11
(lp7620
sg14
S'com.google.common.collect.testing.testers.CollectionEqualsTester'
p7621
sg16
(lp7622
sg19
(lp7623
sg22
(lp7624
sg25
I0
sba(iArchitecture
Entity
p7625
(dp7626
g11
(lp7627
sg14
S'com.google.common.escape.ArrayBasedCharEscaper'
p7628
sg16
(lp7629
sg19
(lp7630
sg22
(lp7631
sg25
I0
sba(iArchitecture
Entity
p7632
(dp7633
g11
(lp7634
sg14
S'com.google.common.escape.ArrayBasedCharEscaperTest'
p7635
sg16
(lp7636
sg19
(lp7637
sg22
(lp7638
sg25
I0
sba(iArchitecture
Entity
p7639
(dp7640
g11
(lp7641
sg14
S'com.google.common.escape.ArrayBasedEscaperMap'
p7642
sg16
(lp7643
sg19
(lp7644
sg22
(lp7645
sg25
I0
sba(iArchitecture
Entity
p7646
(dp7647
g11
(lp7648
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaper'
p7649
sg16
(lp7650
sg19
(lp7651
sg22
(lp7652
sg25
I0
sba(iArchitecture
Entity
p7653
(dp7654
g11
(lp7655
sg14
S'com.google.common.escape.Escaper'
p7656
sg16
(lp7657
sg19
(lp7658
sg22
(lp7659
sg25
I0
sba(iArchitecture
Entity
p7660
(dp7661
g11
(lp7662
sg14
S'com.google.common.escape.Escapers'
p7663
sg16
(lp7664
sg19
(lp7665
sg22
(lp7666
sg25
I0
sba(iArchitecture
Entity
p7667
(dp7668
g11
(lp7669
sg14
S'com.google.common.escape.EscapersTest'
p7670
sg16
(lp7671
sg19
(lp7672
sg22
(lp7673
sg25
I0
sba(iArchitecture
Entity
p7674
(dp7675
g11
(lp7676
sg14
S'com.google.common.escape.Platform'
p7677
sg16
(lp7678
sg19
(lp7679
sg22
(lp7680
sg25
I0
sba(iArchitecture
Entity
p7681
(dp7682
g11
(lp7683
sg14
S'com.google.common.eventbus.DeadEvent'
p7684
sg16
(lp7685
sg19
(lp7686
sg22
(lp7687
sg25
I0
sba(iArchitecture
Entity
p7688
(dp7689
g11
(lp7690
sg14
S'com.google.common.eventbus.SubscriberRegistryTest'
p7691
sg16
(lp7692
sg19
(lp7693
sg22
(lp7694
sg25
I0
sba(iArchitecture
Entity
p7695
(dp7696
g11
(lp7697
sg14
S'com.google.common.hash.AbstractByteHasher'
p7698
sg16
(lp7699
sg19
(lp7700
sg22
(lp7701
sg25
I0
sba(iArchitecture
Entity
p7702
(dp7703
g11
(lp7704
sg14
S'com.google.common.hash.AbstractHasher'
p7705
sg16
(lp7706
sg19
(lp7707
sg22
(lp7708
sg25
I0
sba(iArchitecture
Entity
p7709
(dp7710
g11
(lp7711
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunction'
p7712
sg16
(lp7713
sg19
(lp7714
sg22
(lp7715
sg25
I0
sba(iArchitecture
Entity
p7716
(dp7717
g11
(lp7718
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunctionTest'
p7719
sg16
(lp7720
sg19
(lp7721
sg22
(lp7722
sg25
I0
sba(iArchitecture
Entity
p7723
(dp7724
g11
(lp7725
sg14
S'com.google.common.hash.AbstractStreamingHashFunction'
p7726
sg16
(lp7727
sg19
(lp7728
sg22
(lp7729
sg25
I0
sba(iArchitecture
Entity
p7730
(dp7731
g11
(lp7732
sg14
S'com.google.common.hash.AbstractStreamingHasherTest'
p7733
sg16
(lp7734
sg19
(lp7735
sg22
(lp7736
sg25
I0
sba(iArchitecture
Entity
p7737
(dp7738
g11
(lp7739
sg14
S'com.google.common.hash.BloomFilter'
p7740
sg16
(lp7741
sg19
(lp7742
sg22
(lp7743
sg25
I0
sba(iArchitecture
Entity
p7744
(dp7745
g11
(lp7746
sg14
S'com.google.common.hash.ChecksumHashFunctionTest'
p7747
sg16
(lp7748
sg19
(lp7749
sg22
(lp7750
sg25
I0
sba(iArchitecture
Entity
p7751
(dp7752
g11
(lp7753
sg14
S'com.google.common.hash.Funnels'
p7754
sg16
(lp7755
sg19
(lp7756
sg22
(lp7757
sg25
I0
sba(iArchitecture
Entity
p7758
(dp7759
g11
(lp7760
sg14
S'com.google.common.hash.HashFunction'
p7761
sg16
(lp7762
sg19
(lp7763
sg22
(lp7764
sg25
I0
sba(iArchitecture
Entity
p7765
(dp7766
g11
(lp7767
sg14
S'com.google.common.hash.Hasher'
p7768
sg16
(lp7769
sg19
(lp7770
sg22
(lp7771
sg25
I0
sba(iArchitecture
Entity
p7772
(dp7773
g11
(lp7774
sg14
S'com.google.common.hash.HashingInputStream'
p7775
sg16
(lp7776
sg19
(lp7777
sg22
(lp7778
sg25
I0
sba(iArchitecture
Entity
p7779
(dp7780
g11
(lp7781
sg14
S'com.google.common.hash.HashingOutputStream'
p7782
sg16
(lp7783
sg19
(lp7784
sg22
(lp7785
sg25
I0
sba(iArchitecture
Entity
p7786
(dp7787
g11
(lp7788
sg14
S'com.google.common.hash.HashingOutputStreamTest'
p7789
sg16
(lp7790
sg19
(lp7791
sg22
(lp7792
sg25
I0
sba(iArchitecture
Entity
p7793
(dp7794
g11
(lp7795
sg14
S'com.google.common.hash.MessageDigestAlgorithmBenchmark'
p7796
sg16
(lp7797
sg19
(lp7798
sg22
(lp7799
sg25
I0
sba(iArchitecture
Entity
p7800
(dp7801
g11
(lp7802
sg14
S'com.google.common.hash.MessageDigestHashFunction'
p7803
sg16
(lp7804
sg19
(lp7805
sg22
(lp7806
sg25
I0
sba(iArchitecture
Entity
p7807
(dp7808
g11
(lp7809
sg14
S'com.google.common.hash.MessageDigestHashFunctionTest'
p7810
sg16
(lp7811
sg19
(lp7812
sg22
(lp7813
sg25
I0
sba(iArchitecture
Entity
p7814
(dp7815
g11
(lp7816
sg14
S'com.google.common.hash.Murmur3Hash128Test'
p7817
sg16
(lp7818
sg19
(lp7819
sg22
(lp7820
sg25
I0
sba(iArchitecture
Entity
p7821
(dp7822
g11
(lp7823
sg14
S'com.google.common.hash.PrimitiveSink'
p7824
sg16
(lp7825
sg19
(lp7826
sg22
(lp7827
sg25
I0
sba(iArchitecture
Entity
p7828
(dp7829
g11
(lp7830
sg14
S'com.google.common.hash.SipHashFunctionTest'
p7831
sg16
(lp7832
sg19
(lp7833
sg22
(lp7834
sg25
I0
sba(iArchitecture
Entity
p7835
(dp7836
g11
(lp7837
sg14
S'com.google.common.io.AppendableWriter'
p7838
sg16
(lp7839
sg19
(lp7840
sg22
(lp7841
sg25
I0
sba(iArchitecture
Entity
p7842
(dp7843
g11
(lp7844
sg14
S'com.google.common.io.AppendableWriterTest'
p7845
sg16
(lp7846
sg19
(lp7847
sg22
(lp7848
sg25
I0
sba(iArchitecture
Entity
p7849
(dp7850
g11
(lp7851
g6269
asg14
S'com.google.common.io.BaseEncodingTest'
p7852
sg16
(lp7853
VThe next GWT release will probably have emulations for `Charset` built in. Internal CL 99622756 will be removing our custom emulations, but I think we can go further, changing calls to methods like `getBytes` to use the `Charset` versions.\u000a\u000aThis assumes that we require the new GWT version for the post-19 Guava release. This was not the plan on #1999 but might be reasonable. Otherwise, we need a workaround. We'd need to figure out if our emulations would interfere with the GWT versions for users who _are_ using the new GWT.\u000a
p7854
asg19
(lp7855
g6274
asg22
(lp7856
g6276
asg25
I0
sba(iArchitecture
Entity
p7857
(dp7858
g11
(lp7859
sg14
S'com.google.common.io.BaseEncodingTest_gwt'
p7860
sg16
(lp7861
sg19
(lp7862
sg22
(lp7863
sg25
I0
sba(iArchitecture
Entity
p7864
(dp7865
g11
(lp7866
sg14
S'com.google.common.io.ByteArrayDataInput'
p7867
sg16
(lp7868
sg19
(lp7869
sg22
(lp7870
sg25
I0
sba(iArchitecture
Entity
p7871
(dp7872
g11
(lp7873
sg14
S'com.google.common.io.ByteProcessor'
p7874
sg16
(lp7875
sg19
(lp7876
sg22
(lp7877
sg25
I0
sba(iArchitecture
Entity
p7878
(dp7879
g11
(lp7880
sg14
S'com.google.common.io.ByteSink'
p7881
sg16
(lp7882
sg19
(lp7883
sg22
(lp7884
sg25
I0
sba(iArchitecture
Entity
p7885
(dp7886
g11
(lp7887
sg14
S'com.google.common.io.ByteSinkTest'
p7888
sg16
(lp7889
sg19
(lp7890
sg22
(lp7891
sg25
I0
sba(iArchitecture
Entity
p7892
(dp7893
g11
(lp7894
sg14
S'com.google.common.io.ByteSinkTester'
p7895
sg16
(lp7896
sg19
(lp7897
sg22
(lp7898
sg25
I0
sba(iArchitecture
Entity
p7899
(dp7900
g11
(lp7901
sg14
S'com.google.common.io.ByteSource'
p7902
sg16
(lp7903
sg19
(lp7904
sg22
(lp7905
sg25
I0
sba(iArchitecture
Entity
p7906
(dp7907
g11
(lp7908
sg14
S'com.google.common.io.ByteSourceTest'
p7909
sg16
(lp7910
sg19
(lp7911
sg22
(lp7912
sg25
I0
sba(iArchitecture
Entity
p7913
(dp7914
g11
(lp7915
sg14
S'com.google.common.io.ByteStreams'
p7916
sg16
(lp7917
sg19
(lp7918
sg22
(lp7919
sg25
I0
sba(iArchitecture
Entity
p7920
(dp7921
g11
(lp7922
sg14
S'com.google.common.io.ByteStreamsTest'
p7923
sg16
(lp7924
sg19
(lp7925
sg22
(lp7926
sg25
I0
sba(iArchitecture
Entity
p7927
(dp7928
g11
(lp7929
sg14
S'com.google.common.io.CharSequenceReaderTest'
p7930
sg16
(lp7931
sg19
(lp7932
sg22
(lp7933
sg25
I0
sba(iArchitecture
Entity
p7934
(dp7935
g11
(lp7936
sg14
S'com.google.common.io.CharSink'
p7937
sg16
(lp7938
sg19
(lp7939
sg22
(lp7940
sg25
I0
sba(iArchitecture
Entity
p7941
(dp7942
g11
(lp7943
sg14
S'com.google.common.io.CharSinkTest'
p7944
sg16
(lp7945
sg19
(lp7946
sg22
(lp7947
sg25
I0
sba(iArchitecture
Entity
p7948
(dp7949
g11
(lp7950
sg14
S'com.google.common.io.CharSinkTester'
p7951
sg16
(lp7952
sg19
(lp7953
sg22
(lp7954
sg25
I0
sba(iArchitecture
Entity
p7955
(dp7956
g11
(lp7957
sg14
S'com.google.common.io.CharSource'
p7958
sg16
(lp7959
sg19
(lp7960
sg22
(lp7961
sg25
I0
sba(iArchitecture
Entity
p7962
(dp7963
g11
(lp7964
sg14
S'com.google.common.io.CharSourceTest'
p7965
sg16
(lp7966
sg19
(lp7967
sg22
(lp7968
sg25
I0
sba(iArchitecture
Entity
p7969
(dp7970
g11
(lp7971
sg14
S'com.google.common.io.CharSourceTester'
p7972
sg16
(lp7973
sg19
(lp7974
sg22
(lp7975
sg25
I0
sba(iArchitecture
Entity
p7976
(dp7977
g11
(lp7978
sg14
S'com.google.common.io.CharStreams'
p7979
sg16
(lp7980
sg19
(lp7981
sg22
(lp7982
sg25
I0
sba(iArchitecture
Entity
p7983
(dp7984
g11
(lp7985
sg14
S'com.google.common.io.CharStreamsTest'
p7986
sg16
(lp7987
sg19
(lp7988
sg22
(lp7989
sg25
I0
sba(iArchitecture
Entity
p7990
(dp7991
g11
(lp7992
sg14
S'com.google.common.io.Closeables'
p7993
sg16
(lp7994
sg19
(lp7995
sg22
(lp7996
sg25
I0
sba(iArchitecture
Entity
p7997
(dp7998
g11
(lp7999
sg14
S'com.google.common.io.CloseablesTest'
p8000
sg16
(lp8001
sg19
(lp8002
sg22
(lp8003
sg25
I0
sba(iArchitecture
Entity
p8004
(dp8005
g11
(lp8006
sg14
S'com.google.common.io.CloserTest'
p8007
sg16
(lp8008
sg19
(lp8009
sg22
(lp8010
sg25
I0
sba(iArchitecture
Entity
p8011
(dp8012
g11
(lp8013
sg14
S'com.google.common.io.CountingInputStream'
p8014
sg16
(lp8015
sg19
(lp8016
sg22
(lp8017
sg25
I0
sba(iArchitecture
Entity
p8018
(dp8019
g11
(lp8020
sg14
S'com.google.common.io.CountingInputStreamTest'
p8021
sg16
(lp8022
sg19
(lp8023
sg22
(lp8024
sg25
I0
sba(iArchitecture
Entity
p8025
(dp8026
g11
(lp8027
sg14
S'com.google.common.io.CountingOutputStream'
p8028
sg16
(lp8029
sg19
(lp8030
sg22
(lp8031
sg25
I0
sba(iArchitecture
Entity
p8032
(dp8033
g11
(lp8034
sg14
S'com.google.common.io.CountingOutputStreamTest'
p8035
sg16
(lp8036
sg19
(lp8037
sg22
(lp8038
sg25
I0
sba(iArchitecture
Entity
p8039
(dp8040
g11
(lp8041
sg14
S'com.google.common.io.FileBackedOutputStream'
p8042
sg16
(lp8043
sg19
(lp8044
sg22
(lp8045
sg25
I0
sba(iArchitecture
Entity
p8046
(dp8047
g11
(lp8048
sg14
S'com.google.common.io.FileBackedOutputStreamTest'
p8049
sg16
(lp8050
sg19
(lp8051
sg22
(lp8052
sg25
I0
sba(iArchitecture
Entity
p8053
(dp8054
g11
(lp8055
sg14
S'com.google.common.io.FileTreeTraverserTest'
p8056
sg16
(lp8057
sg19
(lp8058
sg22
(lp8059
sg25
I0
sba(iArchitecture
Entity
p8060
(dp8061
g11
(lp8062
sg14
S'com.google.common.io.FileWriteMode'
p8063
sg16
(lp8064
sg19
(lp8065
sg22
(lp8066
sg25
I0
sba(iArchitecture
Entity
p8067
(dp8068
g11
(lp8069
sg14
S'com.google.common.io.Files'
p8070
sg16
(lp8071
sg19
(lp8072
sg22
(lp8073
sg25
I0
sba(iArchitecture
Entity
p8074
(dp8075
g11
(lp8076
sg14
S'com.google.common.io.FilesTest'
p8077
sg16
(lp8078
sg19
(lp8079
sg22
(lp8080
sg25
I0
sba(iArchitecture
Entity
p8081
(dp8082
g11
(lp8083
sg14
S'com.google.common.io.Flushables'
p8084
sg16
(lp8085
sg19
(lp8086
sg22
(lp8087
sg25
I0
sba(iArchitecture
Entity
p8088
(dp8089
g11
(lp8090
sg14
S'com.google.common.io.FlushablesTest'
p8091
sg16
(lp8092
sg19
(lp8093
sg22
(lp8094
sg25
I0
sba(iArchitecture
Entity
p8095
(dp8096
g11
(lp8097
sg14
S'com.google.common.io.IoTestCase'
p8098
sg16
(lp8099
sg19
(lp8100
sg22
(lp8101
sg25
I0
sba(iArchitecture
Entity
p8102
(dp8103
g11
(lp8104
sg14
S'com.google.common.io.LineBuffer'
p8105
sg16
(lp8106
sg19
(lp8107
sg22
(lp8108
sg25
I0
sba(iArchitecture
Entity
p8109
(dp8110
g11
(lp8111
sg14
S'com.google.common.io.LineBufferTest'
p8112
sg16
(lp8113
sg19
(lp8114
sg22
(lp8115
sg25
I0
sba(iArchitecture
Entity
p8116
(dp8117
g11
(lp8118
sg14
S'com.google.common.io.LineProcessor'
p8119
sg16
(lp8120
sg19
(lp8121
sg22
(lp8122
sg25
I0
sba(iArchitecture
Entity
p8123
(dp8124
g11
(lp8125
sg14
S'com.google.common.io.LineReader'
p8126
sg16
(lp8127
sg19
(lp8128
sg22
(lp8129
sg25
I0
sba(iArchitecture
Entity
p8130
(dp8131
g11
(lp8132
sg14
S'com.google.common.io.LittleEndianDataInputStream'
p8133
sg16
(lp8134
sg19
(lp8135
sg22
(lp8136
sg25
I0
sba(iArchitecture
Entity
p8137
(dp8138
g11
(lp8139
sg14
S'com.google.common.io.LittleEndianDataInputStreamTest'
p8140
sg16
(lp8141
sg19
(lp8142
sg22
(lp8143
sg25
I0
sba(iArchitecture
Entity
p8144
(dp8145
g11
(lp8146
sg14
S'com.google.common.io.LittleEndianDataOutputStream'
p8147
sg16
(lp8148
sg19
(lp8149
sg22
(lp8150
sg25
I0
sba(iArchitecture
Entity
p8151
(dp8152
g11
(lp8153
sg14
S'com.google.common.io.LittleEndianDataOutputStreamTest'
p8154
sg16
(lp8155
sg19
(lp8156
sg22
(lp8157
sg25
I0
sba(iArchitecture
Entity
p8158
(dp8159
g11
(lp8160
sg14
S'com.google.common.io.MultiInputStream'
p8161
sg16
(lp8162
sg19
(lp8163
sg22
(lp8164
sg25
I0
sba(iArchitecture
Entity
p8165
(dp8166
g11
(lp8167
sg14
S'com.google.common.io.MultiInputStreamTest'
p8168
sg16
(lp8169
sg19
(lp8170
sg22
(lp8171
sg25
I0
sba(iArchitecture
Entity
p8172
(dp8173
g11
(lp8174
sg14
S'com.google.common.io.MultiReaderTest'
p8175
sg16
(lp8176
sg19
(lp8177
sg22
(lp8178
sg25
I0
sba(iArchitecture
Entity
p8179
(dp8180
g11
(lp8181
sg14
S'com.google.common.io.OutputSupplier'
p8182
sg16
(lp8183
sg19
(lp8184
sg22
(lp8185
sg25
I0
sba(iArchitecture
Entity
p8186
(dp8187
g11
(lp8188
sg14
S'com.google.common.io.PackageSanityTests'
p8189
sg16
(lp8190
sg19
(lp8191
sg22
(lp8192
sg25
I0
sba(iArchitecture
Entity
p8193
(dp8194
g11
(lp8195
sg14
S'com.google.common.io.PatternFilenameFilter'
p8196
sg16
(lp8197
sg19
(lp8198
sg22
(lp8199
sg25
I0
sba(iArchitecture
Entity
p8200
(dp8201
g11
(lp8202
sg14
S'com.google.common.io.PatternFilenameFilterTest'
p8203
sg16
(lp8204
sg19
(lp8205
sg22
(lp8206
sg25
I0
sba(iArchitecture
Entity
p8207
(dp8208
g11
(lp8209
sg14
S'com.google.common.io.RandomAmountInputStream'
p8210
sg16
(lp8211
sg19
(lp8212
sg22
(lp8213
sg25
I0
sba(iArchitecture
Entity
p8214
(dp8215
g11
(lp8216
sg14
S'com.google.common.io.SourceSinkFactories'
p8217
sg16
(lp8218
sg19
(lp8219
sg22
(lp8220
sg25
I0
sba(iArchitecture
Entity
p8221
(dp8222
g11
(lp8223
sg14
S'com.google.common.io.SourceSinkFactory'
p8224
sg16
(lp8225
sg19
(lp8226
sg22
(lp8227
sg25
I0
sba(iArchitecture
Entity
p8228
(dp8229
g11
(lp8230
sg14
S'com.google.common.io.SourceSinkTester'
p8231
sg16
(lp8232
sg19
(lp8233
sg22
(lp8234
sg25
I0
sba(iArchitecture
Entity
p8235
(dp8236
g11
(lp8237
sg14
S'com.google.common.io.TestByteSink'
p8238
sg16
(lp8239
sg19
(lp8240
sg22
(lp8241
sg25
I0
sba(iArchitecture
Entity
p8242
(dp8243
g11
(lp8244
sg14
S'com.google.common.io.TestByteSource'
p8245
sg16
(lp8246
sg19
(lp8247
sg22
(lp8248
sg25
I0
sba(iArchitecture
Entity
p8249
(dp8250
g11
(lp8251
sg14
S'com.google.common.io.TestCharSink'
p8252
sg16
(lp8253
sg19
(lp8254
sg22
(lp8255
sg25
I0
sba(iArchitecture
Entity
p8256
(dp8257
g11
(lp8258
sg14
S'com.google.common.io.TestCharSource'
p8259
sg16
(lp8260
sg19
(lp8261
sg22
(lp8262
sg25
I0
sba(iArchitecture
Entity
p8263
(dp8264
g11
(lp8265
sg14
S'com.google.common.io.TestInputStream'
p8266
sg16
(lp8267
sg19
(lp8268
sg22
(lp8269
sg25
I0
sba(iArchitecture
Entity
p8270
(dp8271
g11
(lp8272
sg14
S'com.google.common.io.TestOption'
p8273
sg16
(lp8274
sg19
(lp8275
sg22
(lp8276
sg25
I0
sba(iArchitecture
Entity
p8277
(dp8278
g11
(lp8279
sg14
S'com.google.common.io.TestOutputStream'
p8280
sg16
(lp8281
sg19
(lp8282
sg22
(lp8283
sg25
I0
sba(iArchitecture
Entity
p8284
(dp8285
g11
(lp8286
sg14
S'com.google.common.io.TestReader'
p8287
sg16
(lp8288
sg19
(lp8289
sg22
(lp8290
sg25
I0
sba(iArchitecture
Entity
p8291
(dp8292
g11
(lp8293
sg14
S'com.google.common.io.TestStreamSupplier'
p8294
sg16
(lp8295
sg19
(lp8296
sg22
(lp8297
sg25
I0
sba(iArchitecture
Entity
p8298
(dp8299
g11
(lp8300
sg14
S'com.google.common.io.TestWriter'
p8301
sg16
(lp8302
sg19
(lp8303
sg22
(lp8304
sg25
I0
sba(iArchitecture
Entity
p8305
(dp8306
g11
(lp8307
sg14
S'com.google.common.io.package-info'
p8308
sg16
(lp8309
sg19
(lp8310
sg22
(lp8311
sg25
I0
sba(iArchitecture
Entity
p8312
(dp8313
g11
(lp8314
sg14
S'com.google.common.math.DoubleUtilsTest'
p8315
sg16
(lp8316
sg19
(lp8317
sg22
(lp8318
sg25
I0
sba(iArchitecture
Entity
p8319
(dp8320
g11
(lp8321
sg14
S'com.google.common.net.MediaTypeTest'
p8322
sg16
(lp8323
sg19
(lp8324
sg22
(lp8325
sg25
I0
sba(iArchitecture
Entity
p8326
(dp8327
g11
(lp8328
sg14
S'com.google.common.primitives.BytesTest'
p8329
sg16
(lp8330
sg19
(lp8331
sg22
(lp8332
sg25
I0
sba(iArchitecture
Entity
p8333
(dp8334
g11
(lp8335
sg14
S'com.google.common.primitives.CharArrayAsListTest'
p8336
sg16
(lp8337
sg19
(lp8338
sg22
(lp8339
sg25
I0
sba(iArchitecture
Entity
p8340
(dp8341
g11
(lp8342
sg14
S'com.google.common.primitives.PackageSanityTests'
p8343
sg16
(lp8344
sg19
(lp8345
sg22
(lp8346
sg25
I0
sba(iArchitecture
Entity
p8347
(dp8348
g11
(lp8349
sg14
S'com.google.common.testing.ArbitraryInstancesTest'
p8350
sg16
(lp8351
sg19
(lp8352
sg22
(lp8353
sg25
I0
sba(iArchitecture
Entity
p8354
(dp8355
g11
(lp8356
sg14
S'com.google.common.testing.ClusterException'
p8357
sg16
(lp8358
sg19
(lp8359
sg22
(lp8360
sg25
I0
sba(iArchitecture
Entity
p8361
(dp8362
g11
(lp8363
sg14
S'com.google.common.testing.FakeTickerTest'
p8364
sg16
(lp8365
sg19
(lp8366
sg22
(lp8367
sg25
I0
sba(iArchitecture
Entity
p8368
(dp8369
g11
(lp8370
sg14
S'com.google.common.testing.Platform'
p8371
sg16
(lp8372
sg19
(lp8373
sg22
(lp8374
sg25
I0
sba(iArchitecture
Entity
p8375
(dp8376
g11
(lp8377
sg14
S'com.google.common.testing.SerializableTester'
p8378
sg16
(lp8379
sg19
(lp8380
sg22
(lp8381
sg25
I0
sba(iArchitecture
Entity
p8382
(dp8383
g11
(lp8384
sg14
S'com.google.common.testing.TearDownStackTest_gwt'
p8385
sg16
(lp8386
sg19
(lp8387
sg22
(lp8388
sg25
I0
sba(iArchitecture
Entity
p8389
(dp8390
g11
(lp8391
sg14
S'com.google.common.testing.anotherpackage.SomeClassThatDoesNotUseNullable'
p8392
sg16
(lp8393
sg19
(lp8394
sg22
(lp8395
sg25
I0
sba(iArchitecture
Entity
p8396
(dp8397
g11
(lp8398
sg14
S'com.google.common.util.concurrent.AbstractChainedListenableFutureTest'
p8399
sg16
(lp8400
sg19
(lp8401
sg22
(lp8402
sg25
I0
sba(iArchitecture
Entity
p8403
(dp8404
g11
(lp8405
sg14
S'com.google.common.util.concurrent.ForwardingObjectTesterTest'
p8406
sg16
(lp8407
sg19
(lp8408
sg22
(lp8409
sg25
I0
sba(iArchitecture
Entity
p8410
(dp8411
g11
(lp8412
g6929
ag6904
ag6904
ag7004
aV2379
p8413
ag7005
ag7005
asg14
S'com.google.common.util.concurrent.Futures'
p8414
sg16
(lp8415
VWe already do in `AbstractFuture`.\u000a
p8416
aVOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p8417
aVOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p8418
aV- @lowasser internal CL 88242480 wants to use `SimpleImmutableEntry`.\u000a- Internal CL 86210805 can be rolled back to use `AssertionError(String, Throwable)`.\u000a- @kak internal CL 83767705 wanted to use `Arrays.copyOf`.\u000a- My internal CL 59647656 wants to remove `AbstractIteratorTester` workarounds for bugs in `java.util` classes fixed in new releases of GWT.\u000a\u000aGWT 2.7.0 was released in November. But note that we had bug reports from users of GWT 2.5.1 as late as October 2014, 9 months after the release of 2.6.0. We should get some idea of how quickly external users update the version of GWT they use.\u000a
p8419
aVPreviously we at least showed [the `@GwtIncompatible` reason in the Javadoc](http://google.github.io/guava/releases/19.0/api/docs/com/google/common/util/concurrent/Futures.html#catching%28com.google.common.util.concurrent.ListenableFuture, java.lang.Class, com.google.common.base.Function%29). But this will be going away in 20.0 with the removal of `@GwtIncompatible` reasons.\u000a\u000aFurthermore, even _with_ the reason, I saw multiple people who were confused.\u000a\u000aThere are various directions we could go here, including removing `@GwtIncompatible` (by adding a manual emulation to `Futures.java` ). But I'm wondering if, whichever direction we go, we pretty much need to start the Javadoc with **This is available under GWT, but you need to pass `Throwable.class` specifically.**\u000a
p8420
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8421
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8422
asg19
(lp8423
g6935
ag6909
ag6909
ag7013
a(lp8424
I2
aag7014
ag7014
asg22
(lp8425
g6937
ag6911
ag6911
ag7016
aVBetter documentation of Futures.catching GWT availability
p8426
ag7017
ag7017
asg25
I0
sba(iArchitecture
Entity
p8427
(dp8428
g11
(lp8429
sg14
S'com.google.common.util.concurrent.FuturesGetCheckedInputs'
p8430
sg16
(lp8431
sg19
(lp8432
sg22
(lp8433
sg25
I0
sba(iArchitecture
Entity
p8434
(dp8435
g11
(lp8436
sg14
S'com.google.common.util.concurrent.FuturesGetCheckedTest'
p8437
sg16
(lp8438
sg19
(lp8439
sg22
(lp8440
sg25
I0
sba(iArchitecture
Entity
p8441
(dp8442
g11
(lp8443
g6929
ag7004
ag7005
ag7005
asg14
S'com.google.common.util.concurrent.FuturesTest'
p8444
sg16
(lp8445
VWe already do in `AbstractFuture`.\u000a
p8446
aV- @lowasser internal CL 88242480 wants to use `SimpleImmutableEntry`.\u000a- Internal CL 86210805 can be rolled back to use `AssertionError(String, Throwable)`.\u000a- @kak internal CL 83767705 wanted to use `Arrays.copyOf`.\u000a- My internal CL 59647656 wants to remove `AbstractIteratorTester` workarounds for bugs in `java.util` classes fixed in new releases of GWT.\u000a\u000aGWT 2.7.0 was released in November. But note that we had bug reports from users of GWT 2.5.1 as late as October 2014, 9 months after the release of 2.6.0. We should get some idea of how quickly external users update the version of GWT they use.\u000a
p8447
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8448
aVHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8449
asg19
(lp8450
g6935
ag7013
ag7014
ag7014
asg22
(lp8451
g6937
ag7016
ag7017
ag7017
asg25
I0
sba(iArchitecture
Entity
p8452
(dp8453
g11
(lp8454
g7005
asg14
S'com.google.common.util.concurrent.FuturesTest_gwt'
p8455
sg16
(lp8456
VHey!\u000aI found that the following test will fail with a TimeoutException (the Future hangs indefinitely): \u000a\u000a``` java\u000a  static final int REPS = 10000;\u000a  @Test\u000a  public void hangs() throws InterruptedException, TimeoutException {\u000a    SettableFuture<Integer> settableFuture = SettableFuture.create();\u000a    ListenableFuture<Integer> chained = settableFuture;\u000a    for (int i = 0; i < REPS; ++i) {\u000a      chained = Futures.transform(chained, Functions.<Integer>identity());\u000a    }\u000a    settableFuture.set(0);\u000a\u000a    Futures.get(chained, 10, TimeUnit.SECONDS, TimeoutException.class);\u000a  }\u000a```\u000a\u000aBut if I change REPS to be something smaller, like 1000 (this will depend on the size of the stack) then the test passes. I think the root cause is is that the exception can't 'surface' to the final `chained` Future due to a StackOverflowError caused by repeated DirectExecutor.execute application.\u000a\u000aMy logging config may be screwed up, but I didn't see a log for this or anything, which made finding this a bit of a chore. I checked that this happens with Guava 18 and 19. Apologies if this is a KP or already filed (I tried searching Issues, but nothing related pops up).\u000a
p8457
asg19
(lp8458
g7014
asg22
(lp8459
g7017
asg25
I0
sba(iArchitecture
Entity
p8460
(dp8461
g11
(lp8462
sg14
S'com.google.common.util.concurrent.FuturesTransformAsyncFunctionTest'
p8463
sg16
(lp8464
sg19
(lp8465
sg22
(lp8466
sg25
I0
sba(iArchitecture
Entity
p8467
(dp8468
g11
(lp8469
sg14
S'com.google.common.util.concurrent.FuturesTransformAsyncTest'
p8470
sg16
(lp8471
sg19
(lp8472
sg22
(lp8473
sg25
I0
sba(iArchitecture
Entity
p8474
(dp8475
g11
(lp8476
sg14
S'com.google.common.util.concurrent.FuturesTransformTest'
p8477
sg16
(lp8478
sg19
(lp8479
sg22
(lp8480
sg25
I0
sba(iArchitecture
Entity
p8481
(dp8482
g11
(lp8483
sg14
S'com.google.common.util.concurrent.GwtFuturesCatchingSpecialization'
p8484
sg16
(lp8485
sg19
(lp8486
sg22
(lp8487
sg25
I0
sba(iArchitecture
Entity
p8488
(dp8489
g11
(lp8490
g6929
asg14
S'com.google.common.util.concurrent.InterruptibleTask'
p8491
sg16
(lp8492
VWe already do in `AbstractFuture`.\u000a
p8493
asg19
(lp8494
g6935
asg22
(lp8495
g6937
asg25
I0
sba(iArchitecture
Entity
p8496
(dp8497
g11
(lp8498
sg14
S'com.google.common.util.concurrent.InterruptionUtil'
p8499
sg16
(lp8500
sg19
(lp8501
sg22
(lp8502
sg25
I0
sba(iArchitecture
Entity
p8503
(dp8504
g11
(lp8505
sg14
S'com.google.common.util.concurrent.JdkFutureAdaptersTest'
p8506
sg16
(lp8507
sg19
(lp8508
sg22
(lp8509
sg25
I0
sba(iArchitecture
Entity
p8510
(dp8511
g11
(lp8512
sg14
S'com.google.common.util.concurrent.PackageSanityTests'
p8513
sg16
(lp8514
sg19
(lp8515
sg22
(lp8516
sg25
I0
sba(iArchitecture
Entity
p8517
(dp8518
g11
(lp8519
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiterTest'
p8520
sg16
(lp8521
sg19
(lp8522
sg22
(lp8523
sg25
I0
sba(iArchitecture
Entity
p8524
(dp8525
g11
(lp8526
sg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlers'
p8527
sg16
(lp8528
sg19
(lp8529
sg22
(lp8530
sg25
I0
sba(iArchitecture
Entity
p8531
(dp8532
g11
(lp8533
sg14
S'com.google.common.xml.XmlEscapers'
p8534
sg16
(lp8535
sg19
(lp8536
sg22
(lp8537
sg25
I0
sba(iArchitecture
Entity
p8538
(dp8539
g11
(lp8540
sg14
S'com.google.common.xml.XmlEscapersTest'
p8541
sg16
(lp8542
sg19
(lp8543
sg22
(lp8544
sg25
I0
sba(iArchitecture
Entity
p8545
(dp8546
g11
(lp8547
sg14
S'com.google.thirdparty.publicsuffix.TrieParser'
p8548
sg16
(lp8549
sg19
(lp8550
sg22
(lp8551
sg25
I0
sba(iArchitecture
Entity
p8552
(dp8553
g11
(lp8554
sg14
S'java.nio.charset.Charset'
p8555
sg16
(lp8556
sg19
(lp8557
sg22
(lp8558
sg25
I0
sba(iArchitecture
Entity
p8559
(dp8560
g11
(lp8561
sg14
S'java.nio.charset.IllegalCharsetNameException'
p8562
sg16
(lp8563
sg19
(lp8564
sg22
(lp8565
sg25
I0
sba(iArchitecture
Entity
p8566
(dp8567
g11
(lp8568
sg14
S'java.nio.charset.UnsupportedCharsetException'
p8569
sg16
(lp8570
sg19
(lp8571
sg22
(lp8572
sg25
I0
sba(iArchitecture
Entity
p8573
(dp8574
g11
(lp8575
sg14
S'java.util.concurrent.CancellationException'
p8576
sg16
(lp8577
sg19
(lp8578
sg22
(lp8579
sg25
I0
sba(iArchitecture
Entity
p8580
(dp8581
g11
(lp8582
sg14
S'java.util.concurrent.Executors'
p8583
sg16
(lp8584
sg19
(lp8585
sg22
(lp8586
sg25
I0
sba(iArchitecture
Entity
p8587
(dp8588
g11
(lp8589
sg14
S'java.util.concurrent.RejectedExecutionException'
p8590
sg16
(lp8591
sg19
(lp8592
sg22
(lp8593
sg25
I0
sba(iArchitecture
Entity
p8594
(dp8595
g11
(lp8596
sg14
S'java.util.concurrent.TimeoutException'
p8597
sg16
(lp8598
sg19
(lp8599
sg22
(lp8600
sg25
I0
sbasg1017
(lp8601
g7208
ag7215
ag7222
ag7229
ag7236
ag7243
ag7250
ag7257
ag7264
ag7271
ag7278
ag7285
ag7292
ag7299
ag7306
ag7313
ag7320
ag7327
ag7334
ag7341
ag7348
ag7355
ag7362
ag7369
ag7376
ag7383
ag7390
ag7397
ag7404
ag7411
ag7418
ag7425
ag7432
ag7439
ag7446
ag7453
ag7460
ag7467
ag7474
ag7481
ag7488
ag7495
ag7502
ag7509
ag7516
ag7523
ag7530
ag7537
ag7544
ag7551
ag7558
ag7565
ag7572
ag7579
ag7586
ag7593
ag7600
ag7607
ag7614
ag7621
ag7628
ag7635
ag7642
ag7649
ag7656
ag7663
ag7670
ag7677
ag7684
ag7691
ag7698
ag7705
ag7712
ag7719
ag7726
ag7733
ag7740
ag7747
ag7754
ag7761
ag7768
ag7775
ag7782
ag7789
ag7796
ag7803
ag7810
ag7817
ag7824
ag7831
ag7838
ag7845
ag7852
ag7860
ag7867
ag7874
ag7881
ag7888
ag7895
ag7902
ag7909
ag7916
ag7923
ag7930
ag7937
ag7944
ag7951
ag7958
ag7965
ag7972
ag7979
ag7986
ag7993
ag8000
ag8007
ag8014
ag8021
ag8028
ag8035
ag8042
ag8049
ag8056
ag8063
ag8070
ag8077
ag8084
ag8091
ag8098
ag8105
ag8112
ag8119
ag8126
ag8133
ag8140
ag8147
ag8154
ag8161
ag8168
ag8175
ag8182
ag8189
ag8196
ag8203
ag8210
ag8217
ag8224
ag8231
ag8238
ag8245
ag8252
ag8259
ag8266
ag8273
ag8280
ag8287
ag8294
ag8301
ag8308
ag8315
ag8322
ag8329
ag8336
ag8343
ag8350
ag8357
ag8364
ag8371
ag8378
ag8385
ag8392
ag8399
ag8406
ag8414
ag8430
ag8437
ag8444
ag8455
ag8463
ag8470
ag8477
ag8484
ag8491
ag8499
ag8506
ag8513
ag8520
ag8527
ag8534
ag8541
ag8548
ag8555
ag8562
ag8569
ag8576
ag8583
ag8590
ag8597
asg25
I0
sg1019
S'io'
p8602
sba(iArchitecture
Cluster
p8603
(dp8604
g7
(lp8605
(iArchitecture
Entity
p8606
(dp8607
g11
(lp8608
sg14
S'com.google.common.base.AbstractIterator'
p8609
sg16
(lp8610
sg19
(lp8611
sg22
(lp8612
sg25
I0
sba(iArchitecture
Entity
p8613
(dp8614
g11
(lp8615
sg14
S'com.google.common.base.AbstractIteratorTest'
p8616
sg16
(lp8617
sg19
(lp8618
sg22
(lp8619
sg25
I0
sba(iArchitecture
Entity
p8620
(dp8621
g11
(lp8622
sg14
S'com.google.common.base.AbstractIteratorTest_gwt'
p8623
sg16
(lp8624
sg19
(lp8625
sg22
(lp8626
sg25
I0
sba(iArchitecture
Entity
p8627
(dp8628
g11
(lp8629
sg14
S'com.google.common.base.AsciiTest'
p8630
sg16
(lp8631
sg19
(lp8632
sg22
(lp8633
sg25
I0
sba(iArchitecture
Entity
p8634
(dp8635
g11
(lp8636
sg14
S'com.google.common.base.AsciiTest_gwt'
p8637
sg16
(lp8638
sg19
(lp8639
sg22
(lp8640
sg25
I0
sba(iArchitecture
Entity
p8641
(dp8642
g11
(lp8643
sg14
S'com.google.common.base.CaseFormatTest_gwt'
p8644
sg16
(lp8645
sg19
(lp8646
sg22
(lp8647
sg25
I0
sba(iArchitecture
Entity
p8648
(dp8649
g11
(lp8650
sg14
S'com.google.common.base.CharMatcherTest_gwt'
p8651
sg16
(lp8652
sg19
(lp8653
sg22
(lp8654
sg25
I0
sba(iArchitecture
Entity
p8655
(dp8656
g11
(lp8657
sg14
S'com.google.common.base.CharsetsTest_gwt'
p8658
sg16
(lp8659
sg19
(lp8660
sg22
(lp8661
sg25
I0
sba(iArchitecture
Entity
p8662
(dp8663
g11
(lp8664
sg14
S'com.google.common.base.Converter'
p8665
sg16
(lp8666
sg19
(lp8667
sg22
(lp8668
sg25
I0
sba(iArchitecture
Entity
p8669
(dp8670
g11
(lp8671
sg14
S'com.google.common.base.ConverterTest_gwt'
p8672
sg16
(lp8673
sg19
(lp8674
sg22
(lp8675
sg25
I0
sba(iArchitecture
Entity
p8676
(dp8677
g11
(lp8678
sg14
S'com.google.common.base.Enums'
p8679
sg16
(lp8680
sg19
(lp8681
sg22
(lp8682
sg25
I0
sba(iArchitecture
Entity
p8683
(dp8684
g11
(lp8685
sg14
S'com.google.common.base.EnumsBenchmark'
p8686
sg16
(lp8687
sg19
(lp8688
sg22
(lp8689
sg25
I0
sba(iArchitecture
Entity
p8690
(dp8691
g11
(lp8692
sg14
S'com.google.common.base.EnumsTest'
p8693
sg16
(lp8694
sg19
(lp8695
sg22
(lp8696
sg25
I0
sba(iArchitecture
Entity
p8697
(dp8698
g11
(lp8699
sg14
S'com.google.common.base.EnumsTest_gwt'
p8700
sg16
(lp8701
sg19
(lp8702
sg22
(lp8703
sg25
I0
sba(iArchitecture
Entity
p8704
(dp8705
g11
(lp8706
sg14
S'com.google.common.base.EquivalenceTest_gwt'
p8707
sg16
(lp8708
sg19
(lp8709
sg22
(lp8710
sg25
I0
sba(iArchitecture
Entity
p8711
(dp8712
g11
(lp8713
sg14
S'com.google.common.base.FinalizableReferenceQueue'
p8714
sg16
(lp8715
sg19
(lp8716
sg22
(lp8717
sg25
I0
sba(iArchitecture
Entity
p8718
(dp8719
g11
(lp8720
sg14
S'com.google.common.base.FinalizableReferenceQueueClassLoaderUnloadingTest'
p8721
sg16
(lp8722
sg19
(lp8723
sg22
(lp8724
sg25
I0
sba(iArchitecture
Entity
p8725
(dp8726
g11
(lp8727
sg14
S'com.google.common.base.FinalizableReferenceQueueTest'
p8728
sg16
(lp8729
sg19
(lp8730
sg22
(lp8731
sg25
I0
sba(iArchitecture
Entity
p8732
(dp8733
g11
(lp8734
sg14
S'com.google.common.base.FunctionsTest_gwt'
p8735
sg16
(lp8736
sg19
(lp8737
sg22
(lp8738
sg25
I0
sba(iArchitecture
Entity
p8739
(dp8740
g11
(lp8741
sg14
S'com.google.common.base.GwtSerializationDependencies'
p8742
sg16
(lp8743
sg19
(lp8744
sg22
(lp8745
sg25
I0
sba(iArchitecture
Entity
p8746
(dp8747
g11
(lp8748
sg14
S'com.google.common.base.Joiner'
p8749
sg16
(lp8750
sg19
(lp8751
sg22
(lp8752
sg25
I0
sba(iArchitecture
Entity
p8753
(dp8754
g11
(lp8755
sg14
S'com.google.common.base.JoinerTest_gwt'
p8756
sg16
(lp8757
sg19
(lp8758
sg22
(lp8759
sg25
I0
sba(iArchitecture
Entity
p8760
(dp8761
g11
(lp8762
sg14
S'com.google.common.base.ObjectsTest_gwt'
p8763
sg16
(lp8764
sg19
(lp8765
sg22
(lp8766
sg25
I0
sba(iArchitecture
Entity
p8767
(dp8768
g11
(lp8769
sg14
S'com.google.common.base.OptionalTest_gwt'
p8770
sg16
(lp8771
sg19
(lp8772
sg22
(lp8773
sg25
I0
sba(iArchitecture
Entity
p8774
(dp8775
g11
(lp8776
sg14
S'com.google.common.base.PackageSanityTests'
p8777
sg16
(lp8778
sg19
(lp8779
sg22
(lp8780
sg25
I0
sba(iArchitecture
Entity
p8781
(dp8782
g11
(lp8783
sg14
S'com.google.common.base.PreconditionsTest_gwt'
p8784
sg16
(lp8785
sg19
(lp8786
sg22
(lp8787
sg25
I0
sba(iArchitecture
Entity
p8788
(dp8789
g11
(lp8790
sg14
S'com.google.common.base.PredicatesTest_gwt'
p8791
sg16
(lp8792
sg19
(lp8793
sg22
(lp8794
sg25
I0
sba(iArchitecture
Entity
p8795
(dp8796
g11
(lp8797
sg14
S'com.google.common.base.SplitterTest_gwt'
p8798
sg16
(lp8799
sg19
(lp8800
sg22
(lp8801
sg25
I0
sba(iArchitecture
Entity
p8802
(dp8803
g11
(lp8804
sg14
S'com.google.common.base.StandardSystemPropertyTest'
p8805
sg16
(lp8806
sg19
(lp8807
sg22
(lp8808
sg25
I0
sba(iArchitecture
Entity
p8809
(dp8810
g11
(lp8811
g3713
asg14
S'com.google.common.base.StopwatchTest_gwt'
p8812
sg16
(lp8813
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p8814
asg19
(lp8815
g3719
asg22
(lp8816
g3721
asg25
I0
sba(iArchitecture
Entity
p8817
(dp8818
g11
(lp8819
sg14
S'com.google.common.base.StringsTest_gwt'
p8820
sg16
(lp8821
sg19
(lp8822
sg22
(lp8823
sg25
I0
sba(iArchitecture
Entity
p8824
(dp8825
g11
(lp8826
sg14
S'com.google.common.base.SuppliersTest_gwt'
p8827
sg16
(lp8828
sg19
(lp8829
sg22
(lp8830
sg25
I0
sba(iArchitecture
Entity
p8831
(dp8832
g11
(lp8833
sg14
S'com.google.common.base.Ticker'
p8834
sg16
(lp8835
sg19
(lp8836
sg22
(lp8837
sg25
I0
sba(iArchitecture
Entity
p8838
(dp8839
g11
(lp8840
sg14
S'com.google.common.base.ToStringHelperTest_gwt'
p8841
sg16
(lp8842
sg19
(lp8843
sg22
(lp8844
sg25
I0
sba(iArchitecture
Entity
p8845
(dp8846
g11
(lp8847
sg14
S'com.google.common.base.Utf8Test_gwt'
p8848
sg16
(lp8849
sg19
(lp8850
sg22
(lp8851
sg25
I0
sba(iArchitecture
Entity
p8852
(dp8853
g11
(lp8854
sg14
S'com.google.common.base.Verify'
p8855
sg16
(lp8856
sg19
(lp8857
sg22
(lp8858
sg25
I0
sba(iArchitecture
Entity
p8859
(dp8860
g11
(lp8861
sg14
S'com.google.common.base.VerifyException'
p8862
sg16
(lp8863
sg19
(lp8864
sg22
(lp8865
sg25
I0
sba(iArchitecture
Entity
p8866
(dp8867
g11
(lp8868
sg14
S'com.google.common.base.VerifyTest_gwt'
p8869
sg16
(lp8870
sg19
(lp8871
sg22
(lp8872
sg25
I0
sba(iArchitecture
Entity
p8873
(dp8874
g11
(lp8875
sg14
S'com.google.common.base.package-info'
p8876
sg16
(lp8877
sg19
(lp8878
sg22
(lp8879
sg25
I0
sba(iArchitecture
Entity
p8880
(dp8881
g11
(lp8882
sg14
S'com.google.common.cache.AbstractCache'
p8883
sg16
(lp8884
sg19
(lp8885
sg22
(lp8886
sg25
I0
sba(iArchitecture
Entity
p8887
(dp8888
g11
(lp8889
sg14
S'com.google.common.cache.AbstractLoadingCache'
p8890
sg16
(lp8891
sg19
(lp8892
sg22
(lp8893
sg25
I0
sba(iArchitecture
Entity
p8894
(dp8895
g11
(lp8896
sg14
S'com.google.common.cache.CacheBuilder'
p8897
sg16
(lp8898
sg19
(lp8899
sg22
(lp8900
sg25
I0
sba(iArchitecture
Entity
p8901
(dp8902
g11
(lp8903
sg14
S'com.google.common.cache.CacheBuilderGwtTest'
p8904
sg16
(lp8905
sg19
(lp8906
sg22
(lp8907
sg25
I0
sba(iArchitecture
Entity
p8908
(dp8909
g11
(lp8910
sg14
S'com.google.common.cache.CacheBuilderGwtTest_gwt'
p8911
sg16
(lp8912
sg19
(lp8913
sg22
(lp8914
sg25
I0
sba(iArchitecture
Entity
p8915
(dp8916
g11
(lp8917
sg14
S'com.google.common.cache.CacheBuilderTest_gwt'
p8918
sg16
(lp8919
sg19
(lp8920
sg22
(lp8921
sg25
I0
sba(iArchitecture
Entity
p8922
(dp8923
g11
(lp8924
sg14
S'com.google.common.cache.CacheEvictionTest'
p8925
sg16
(lp8926
sg19
(lp8927
sg22
(lp8928
sg25
I0
sba(iArchitecture
Entity
p8929
(dp8930
g11
(lp8931
sg14
S'com.google.common.cache.CacheExpirationTest'
p8932
sg16
(lp8933
sg19
(lp8934
sg22
(lp8935
sg25
I0
sba(iArchitecture
Entity
p8936
(dp8937
g11
(lp8938
sg14
S'com.google.common.cache.CacheLoader'
p8939
sg16
(lp8940
sg19
(lp8941
sg22
(lp8942
sg25
I0
sba(iArchitecture
Entity
p8943
(dp8944
g11
(lp8945
sg14
S'com.google.common.cache.CacheManualTest'
p8946
sg16
(lp8947
sg19
(lp8948
sg22
(lp8949
sg25
I0
sba(iArchitecture
Entity
p8950
(dp8951
g11
(lp8952
sg14
S'com.google.common.cache.CacheReferencesTest'
p8953
sg16
(lp8954
sg19
(lp8955
sg22
(lp8956
sg25
I0
sba(iArchitecture
Entity
p8957
(dp8958
g11
(lp8959
sg14
S'com.google.common.cache.CacheRefreshTest'
p8960
sg16
(lp8961
sg19
(lp8962
sg22
(lp8963
sg25
I0
sba(iArchitecture
Entity
p8964
(dp8965
g11
(lp8966
sg14
S'com.google.common.cache.CacheStats'
p8967
sg16
(lp8968
sg19
(lp8969
sg22
(lp8970
sg25
I0
sba(iArchitecture
Entity
p8971
(dp8972
g11
(lp8973
sg14
S'com.google.common.cache.ForwardingCache'
p8974
sg16
(lp8975
sg19
(lp8976
sg22
(lp8977
sg25
I0
sba(iArchitecture
Entity
p8978
(dp8979
g11
(lp8980
sg14
S'com.google.common.cache.ForwardingLoadingCache'
p8981
sg16
(lp8982
sg19
(lp8983
sg22
(lp8984
sg25
I0
sba(iArchitecture
Entity
p8985
(dp8986
g11
(lp8987
sg14
S'com.google.common.cache.LoadingCache'
p8988
sg16
(lp8989
sg19
(lp8990
sg22
(lp8991
sg25
I0
sba(iArchitecture
Entity
p8992
(dp8993
g11
(lp8994
sg14
S'com.google.common.cache.LocalLoadingCacheTest'
p8995
sg16
(lp8996
sg19
(lp8997
sg22
(lp8998
sg25
I0
sba(iArchitecture
Entity
p8999
(dp9000
g11
(lp9001
sg14
S'com.google.common.cache.LongAddables'
p9002
sg16
(lp9003
sg19
(lp9004
sg22
(lp9005
sg25
I0
sba(iArchitecture
Entity
p9006
(dp9007
g11
(lp9008
sg14
S'com.google.common.cache.LongAdder'
p9009
sg16
(lp9010
sg19
(lp9011
sg22
(lp9012
sg25
I0
sba(iArchitecture
Entity
p9013
(dp9014
g11
(lp9015
sg14
S'com.google.common.cache.LongAdderTest'
p9016
sg16
(lp9017
sg19
(lp9018
sg22
(lp9019
sg25
I0
sba(iArchitecture
Entity
p9020
(dp9021
g11
(lp9022
sg14
S'com.google.common.cache.PopulatedCachesTest'
p9023
sg16
(lp9024
sg19
(lp9025
sg22
(lp9026
sg25
I0
sba(iArchitecture
Entity
p9027
(dp9028
g11
(lp9029
sg14
S'com.google.common.cache.RemovalCause'
p9030
sg16
(lp9031
sg19
(lp9032
sg22
(lp9033
sg25
I0
sba(iArchitecture
Entity
p9034
(dp9035
g11
(lp9036
sg14
S'com.google.common.cache.RemovalListeners'
p9037
sg16
(lp9038
sg19
(lp9039
sg22
(lp9040
sg25
I0
sba(iArchitecture
Entity
p9041
(dp9042
g11
(lp9043
sg14
S'com.google.common.cache.RemovalNotification'
p9044
sg16
(lp9045
sg19
(lp9046
sg22
(lp9047
sg25
I0
sba(iArchitecture
Entity
p9048
(dp9049
g11
(lp9050
sg14
S'com.google.common.cache.RemovalNotificationTest'
p9051
sg16
(lp9052
sg19
(lp9053
sg22
(lp9054
sg25
I0
sba(iArchitecture
Entity
p9055
(dp9056
g11
(lp9057
sg14
S'com.google.common.cache.Striped64'
p9058
sg16
(lp9059
sg19
(lp9060
sg22
(lp9061
sg25
I0
sba(iArchitecture
Entity
p9062
(dp9063
g11
(lp9064
sg14
S'com.google.common.cache.TestModuleEntryPoint'
p9065
sg16
(lp9066
sg19
(lp9067
sg22
(lp9068
sg25
I0
sba(iArchitecture
Entity
p9069
(dp9070
g11
(lp9071
sg14
S'com.google.common.cache.TestingCacheLoaders'
p9072
sg16
(lp9073
sg19
(lp9074
sg22
(lp9075
sg25
I0
sba(iArchitecture
Entity
p9076
(dp9077
g11
(lp9078
sg14
S'com.google.common.cache.TestingRemovalListeners'
p9079
sg16
(lp9080
sg19
(lp9081
sg22
(lp9082
sg25
I0
sba(iArchitecture
Entity
p9083
(dp9084
g11
(lp9085
sg14
S'com.google.common.cache.Weigher'
p9086
sg16
(lp9087
sg19
(lp9088
sg22
(lp9089
sg25
I0
sba(iArchitecture
Entity
p9090
(dp9091
g11
(lp9092
sg14
S'com.google.common.cache.package-info'
p9093
sg16
(lp9094
sg19
(lp9095
sg22
(lp9096
sg25
I0
sba(iArchitecture
Entity
p9097
(dp9098
g11
(lp9099
sg14
S'com.google.common.collect.AbstractIterator'
p9100
sg16
(lp9101
sg19
(lp9102
sg22
(lp9103
sg25
I0
sba(iArchitecture
Entity
p9104
(dp9105
g11
(lp9106
sg14
S'com.google.common.collect.AbstractIteratorTest_gwt'
p9107
sg16
(lp9108
sg19
(lp9109
sg22
(lp9110
sg25
I0
sba(iArchitecture
Entity
p9111
(dp9112
g11
(lp9113
sg14
S'com.google.common.collect.AbstractMapEntry'
p9114
sg16
(lp9115
sg19
(lp9116
sg22
(lp9117
sg25
I0
sba(iArchitecture
Entity
p9118
(dp9119
g11
(lp9120
sg14
S'com.google.common.collect.AbstractMapEntryTest_gwt'
p9121
sg16
(lp9122
sg19
(lp9123
sg22
(lp9124
sg25
I0
sba(iArchitecture
Entity
p9125
(dp9126
g11
(lp9127
sg14
S'com.google.common.collect.AbstractMultimapAsMapImplementsMapTest'
p9128
sg16
(lp9129
sg19
(lp9130
sg22
(lp9131
sg25
I0
sba(iArchitecture
Entity
p9132
(dp9133
g11
(lp9134
sg14
S'com.google.common.collect.AbstractSequentialIteratorTest_gwt'
p9135
sg16
(lp9136
sg19
(lp9137
sg22
(lp9138
sg25
I0
sba(iArchitecture
Entity
p9139
(dp9140
g11
(lp9141
sg14
S'com.google.common.collect.AbstractSortedMultiset'
p9142
sg16
(lp9143
sg19
(lp9144
sg22
(lp9145
sg25
I0
sba(iArchitecture
Entity
p9146
(dp9147
g11
(lp9148
sg14
S'com.google.common.collect.ArrayListMultimapTest_gwt'
p9149
sg16
(lp9150
sg19
(lp9151
sg22
(lp9152
sg25
I0
sba(iArchitecture
Entity
p9153
(dp9154
g11
(lp9155
sg14
S'com.google.common.collect.ArrayListMultimap_CustomFieldSerializer'
p9156
sg16
(lp9157
sg19
(lp9158
sg22
(lp9159
sg25
I0
sba(iArchitecture
Entity
p9160
(dp9161
g11
(lp9162
sg14
S'com.google.common.collect.BenchmarkHelpers'
p9163
sg16
(lp9164
sg19
(lp9165
sg22
(lp9166
sg25
I0
sba(iArchitecture
Entity
p9167
(dp9168
g11
(lp9169
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p9170
sg16
(lp9171
sg19
(lp9172
sg22
(lp9173
sg25
I0
sba(iArchitecture
Entity
p9174
(dp9175
g11
(lp9176
sg14
S'com.google.common.collect.CollectPreconditions'
p9177
sg16
(lp9178
sg19
(lp9179
sg22
(lp9180
sg25
I0
sba(iArchitecture
Entity
p9181
(dp9182
g11
(lp9183
sg14
S'com.google.common.collect.ComparisonChainTest_gwt'
p9184
sg16
(lp9185
sg19
(lp9186
sg22
(lp9187
sg25
I0
sba(iArchitecture
Entity
p9188
(dp9189
g11
(lp9190
sg14
S'com.google.common.collect.ConstrainedBiMapTest'
p9191
sg16
(lp9192
sg19
(lp9193
sg22
(lp9194
sg25
I0
sba(iArchitecture
Entity
p9195
(dp9196
g11
(lp9197
sg14
S'com.google.common.collect.ConstrainedBiMapTest_gwt'
p9198
sg16
(lp9199
sg19
(lp9200
sg22
(lp9201
sg25
I0
sba(iArchitecture
Entity
p9202
(dp9203
g11
(lp9204
sg14
S'com.google.common.collect.ConstrainedMapTest'
p9205
sg16
(lp9206
sg19
(lp9207
sg22
(lp9208
sg25
I0
sba(iArchitecture
Entity
p9209
(dp9210
g11
(lp9211
sg14
S'com.google.common.collect.ConstrainedMapTest_gwt'
p9212
sg16
(lp9213
sg19
(lp9214
sg22
(lp9215
sg25
I0
sba(iArchitecture
Entity
p9216
(dp9217
g11
(lp9218
sg14
S'com.google.common.collect.ConstrainedMultimapAsMapImplementsMapTest'
p9219
sg16
(lp9220
sg19
(lp9221
sg22
(lp9222
sg25
I0
sba(iArchitecture
Entity
p9223
(dp9224
g11
(lp9225
sg14
S'com.google.common.collect.Constraint'
p9226
sg16
(lp9227
sg19
(lp9228
sg22
(lp9229
sg25
I0
sba(iArchitecture
Entity
p9230
(dp9231
g11
(lp9232
sg14
S'com.google.common.collect.Constraints'
p9233
sg16
(lp9234
sg19
(lp9235
sg22
(lp9236
sg25
I0
sba(iArchitecture
Entity
p9237
(dp9238
g11
(lp9239
sg14
S'com.google.common.collect.ConstraintsTest'
p9240
sg16
(lp9241
sg19
(lp9242
sg22
(lp9243
sg25
I0
sba(iArchitecture
Entity
p9244
(dp9245
g11
(lp9246
sg14
S'com.google.common.collect.ConstraintsTest_gwt'
p9247
sg16
(lp9248
sg19
(lp9249
sg22
(lp9250
sg25
I0
sba(iArchitecture
Entity
p9251
(dp9252
g11
(lp9253
sg14
S'com.google.common.collect.ConsumingQueueIterator'
p9254
sg16
(lp9255
sg19
(lp9256
sg22
(lp9257
sg25
I0
sba(iArchitecture
Entity
p9258
(dp9259
g11
(lp9260
sg14
S'com.google.common.collect.ContiguousSetTest_gwt'
p9261
sg16
(lp9262
sg19
(lp9263
sg22
(lp9264
sg25
I0
sba(iArchitecture
Entity
p9265
(dp9266
g11
(lp9267
sg14
S'com.google.common.collect.CountTest'
p9268
sg16
(lp9269
sg19
(lp9270
sg22
(lp9271
sg25
I0
sba(iArchitecture
Entity
p9272
(dp9273
g11
(lp9274
sg14
S'com.google.common.collect.CountTest_gwt'
p9275
sg16
(lp9276
sg19
(lp9277
sg22
(lp9278
sg25
I0
sba(iArchitecture
Entity
p9279
(dp9280
g11
(lp9281
sg14
S'com.google.common.collect.Cut'
p9282
sg16
(lp9283
sg19
(lp9284
sg22
(lp9285
sg25
I0
sba(iArchitecture
Entity
p9286
(dp9287
g11
(lp9288
sg14
S'com.google.common.collect.DiscreteDomain'
p9289
sg16
(lp9290
sg19
(lp9291
sg22
(lp9292
sg25
I0
sba(iArchitecture
Entity
p9293
(dp9294
g11
(lp9295
sg14
S'com.google.common.collect.DiscreteDomainTest'
p9296
sg16
(lp9297
sg19
(lp9298
sg22
(lp9299
sg25
I0
sba(iArchitecture
Entity
p9300
(dp9301
g11
(lp9302
sg14
S'com.google.common.collect.EnumBiMapTest_gwt'
p9303
sg16
(lp9304
sg19
(lp9305
sg22
(lp9306
sg25
I0
sba(iArchitecture
Entity
p9307
(dp9308
g11
(lp9309
sg14
S'com.google.common.collect.EnumHashBiMapTest_gwt'
p9310
sg16
(lp9311
sg19
(lp9312
sg22
(lp9313
sg25
I0
sba(iArchitecture
Entity
p9314
(dp9315
g11
(lp9316
sg14
S'com.google.common.collect.EnumMultisetTest_gwt'
p9317
sg16
(lp9318
sg19
(lp9319
sg22
(lp9320
sg25
I0
sba(iArchitecture
Entity
p9321
(dp9322
g11
(lp9323
sg14
S'com.google.common.collect.EvictingQueue'
p9324
sg16
(lp9325
sg19
(lp9326
sg22
(lp9327
sg25
I0
sba(iArchitecture
Entity
p9328
(dp9329
g11
(lp9330
sg14
S'com.google.common.collect.EvictingQueueTest_gwt'
p9331
sg16
(lp9332
sg19
(lp9333
sg22
(lp9334
sg25
I0
sba(iArchitecture
Entity
p9335
(dp9336
g11
(lp9337
sg14
S'com.google.common.collect.FilteredKeyListMultimap'
p9338
sg16
(lp9339
sg19
(lp9340
sg22
(lp9341
sg25
I0
sba(iArchitecture
Entity
p9342
(dp9343
g11
(lp9344
sg14
S'com.google.common.collect.FilteredSetMultimap'
p9345
sg16
(lp9346
sg19
(lp9347
sg22
(lp9348
sg25
I0
sba(iArchitecture
Entity
p9349
(dp9350
g11
(lp9351
sg14
S'com.google.common.collect.ForwardingCollection'
p9352
sg16
(lp9353
sg19
(lp9354
sg22
(lp9355
sg25
I0
sba(iArchitecture
Entity
p9356
(dp9357
g11
(lp9358
sg14
S'com.google.common.collect.ForwardingConcurrentMap'
p9359
sg16
(lp9360
sg19
(lp9361
sg22
(lp9362
sg25
I0
sba(iArchitecture
Entity
p9363
(dp9364
g11
(lp9365
sg14
S'com.google.common.collect.ForwardingImmutableList'
p9366
sg16
(lp9367
sg19
(lp9368
sg22
(lp9369
sg25
I0
sba(iArchitecture
Entity
p9370
(dp9371
g11
(lp9372
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p9373
sg16
(lp9374
sg19
(lp9375
sg22
(lp9376
sg25
I0
sba(iArchitecture
Entity
p9377
(dp9378
g11
(lp9379
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p9380
sg16
(lp9381
sg19
(lp9382
sg22
(lp9383
sg25
I0
sba(iArchitecture
Entity
p9384
(dp9385
g11
(lp9386
sg14
S'com.google.common.collect.ForwardingIterator'
p9387
sg16
(lp9388
sg19
(lp9389
sg22
(lp9390
sg25
I0
sba(iArchitecture
Entity
p9391
(dp9392
g11
(lp9393
sg14
S'com.google.common.collect.ForwardingListIterator'
p9394
sg16
(lp9395
sg19
(lp9396
sg22
(lp9397
sg25
I0
sba(iArchitecture
Entity
p9398
(dp9399
g11
(lp9400
sg14
S'com.google.common.collect.ForwardingListMultimap'
p9401
sg16
(lp9402
sg19
(lp9403
sg22
(lp9404
sg25
I0
sba(iArchitecture
Entity
p9405
(dp9406
g11
(lp9407
sg14
S'com.google.common.collect.ForwardingListMultimapTest'
p9408
sg16
(lp9409
sg19
(lp9410
sg22
(lp9411
sg25
I0
sba(iArchitecture
Entity
p9412
(dp9413
g11
(lp9414
sg14
S'com.google.common.collect.ForwardingMap'
p9415
sg16
(lp9416
sg19
(lp9417
sg22
(lp9418
sg25
I0
sba(iArchitecture
Entity
p9419
(dp9420
g11
(lp9421
sg14
S'com.google.common.collect.ForwardingMapEntry'
p9422
sg16
(lp9423
sg19
(lp9424
sg22
(lp9425
sg25
I0
sba(iArchitecture
Entity
p9426
(dp9427
g11
(lp9428
sg14
S'com.google.common.collect.ForwardingMultiset'
p9429
sg16
(lp9430
sg19
(lp9431
sg22
(lp9432
sg25
I0
sba(iArchitecture
Entity
p9433
(dp9434
g11
(lp9435
sg14
S'com.google.common.collect.ForwardingNavigableMap'
p9436
sg16
(lp9437
sg19
(lp9438
sg22
(lp9439
sg25
I0
sba(iArchitecture
Entity
p9440
(dp9441
g11
(lp9442
sg14
S'com.google.common.collect.ForwardingNavigableSet'
p9443
sg16
(lp9444
sg19
(lp9445
sg22
(lp9446
sg25
I0
sba(iArchitecture
Entity
p9447
(dp9448
g11
(lp9449
sg14
S'com.google.common.collect.ForwardingObject'
p9450
sg16
(lp9451
sg19
(lp9452
sg22
(lp9453
sg25
I0
sba(iArchitecture
Entity
p9454
(dp9455
g11
(lp9456
sg14
S'com.google.common.collect.ForwardingQueue'
p9457
sg16
(lp9458
sg19
(lp9459
sg22
(lp9460
sg25
I0
sba(iArchitecture
Entity
p9461
(dp9462
g11
(lp9463
sg14
S'com.google.common.collect.ForwardingSet'
p9464
sg16
(lp9465
sg19
(lp9466
sg22
(lp9467
sg25
I0
sba(iArchitecture
Entity
p9468
(dp9469
g11
(lp9470
sg14
S'com.google.common.collect.ForwardingSetMultimapTest'
p9471
sg16
(lp9472
sg19
(lp9473
sg22
(lp9474
sg25
I0
sba(iArchitecture
Entity
p9475
(dp9476
g11
(lp9477
sg14
S'com.google.common.collect.ForwardingSortedMap'
p9478
sg16
(lp9479
sg19
(lp9480
sg22
(lp9481
sg25
I0
sba(iArchitecture
Entity
p9482
(dp9483
g11
(lp9484
sg14
S'com.google.common.collect.ForwardingSortedMultiset'
p9485
sg16
(lp9486
sg19
(lp9487
sg22
(lp9488
sg25
I0
sba(iArchitecture
Entity
p9489
(dp9490
g11
(lp9491
sg14
S'com.google.common.collect.ForwardingSortedSet'
p9492
sg16
(lp9493
sg19
(lp9494
sg22
(lp9495
sg25
I0
sba(iArchitecture
Entity
p9496
(dp9497
g11
(lp9498
sg14
S'com.google.common.collect.ForwardingSortedSetMultimapTest'
p9499
sg16
(lp9500
sg19
(lp9501
sg22
(lp9502
sg25
I0
sba(iArchitecture
Entity
p9503
(dp9504
g11
(lp9505
sg14
S'com.google.common.collect.GeneralRangeTest_gwt'
p9506
sg16
(lp9507
sg19
(lp9508
sg22
(lp9509
sg25
I0
sba(iArchitecture
Entity
p9510
(dp9511
g11
(lp9512
sg14
S'com.google.common.collect.GenericMapMaker'
p9513
sg16
(lp9514
sg19
(lp9515
sg22
(lp9516
sg25
I0
sba(iArchitecture
Entity
p9517
(dp9518
g11
(lp9519
sg14
S'com.google.common.collect.GwtPlatform'
p9520
sg16
(lp9521
sg19
(lp9522
sg22
(lp9523
sg25
I0
sba(iArchitecture
Entity
p9524
(dp9525
g11
(lp9526
sg14
S'com.google.common.collect.GwtTransient'
p9527
sg16
(lp9528
sg19
(lp9529
sg22
(lp9530
sg25
I0
sba(iArchitecture
Entity
p9531
(dp9532
g11
(lp9533
sg14
S'com.google.common.collect.HashBiMapTest_gwt'
p9534
sg16
(lp9535
sg19
(lp9536
sg22
(lp9537
sg25
I0
sba(iArchitecture
Entity
p9538
(dp9539
g11
(lp9540
sg14
S'com.google.common.collect.HashMultimapTest'
p9541
sg16
(lp9542
sg19
(lp9543
sg22
(lp9544
sg25
I0
sba(iArchitecture
Entity
p9545
(dp9546
g11
(lp9547
sg14
S'com.google.common.collect.HashMultimapTest_gwt'
p9548
sg16
(lp9549
sg19
(lp9550
sg22
(lp9551
sg25
I0
sba(iArchitecture
Entity
p9552
(dp9553
g11
(lp9554
sg14
S'com.google.common.collect.HashMultimap_CustomFieldSerializer'
p9555
sg16
(lp9556
sg19
(lp9557
sg22
(lp9558
sg25
I0
sba(iArchitecture
Entity
p9559
(dp9560
g11
(lp9561
sg14
S'com.google.common.collect.HashMultiset'
p9562
sg16
(lp9563
sg19
(lp9564
sg22
(lp9565
sg25
I0
sba(iArchitecture
Entity
p9566
(dp9567
g11
(lp9568
sg14
S'com.google.common.collect.HashMultisetTest'
p9569
sg16
(lp9570
sg19
(lp9571
sg22
(lp9572
sg25
I0
sba(iArchitecture
Entity
p9573
(dp9574
g11
(lp9575
sg14
S'com.google.common.collect.HashMultisetTest_gwt'
p9576
sg16
(lp9577
sg19
(lp9578
sg22
(lp9579
sg25
I0
sba(iArchitecture
Entity
p9580
(dp9581
g11
(lp9582
sg14
S'com.google.common.collect.ImmutableAsList'
p9583
sg16
(lp9584
sg19
(lp9585
sg22
(lp9586
sg25
I0
sba(iArchitecture
Entity
p9587
(dp9588
g11
(lp9589
sg14
S'com.google.common.collect.ImmutableClassToInstanceMapTest'
p9590
sg16
(lp9591
sg19
(lp9592
sg22
(lp9593
sg25
I0
sba(iArchitecture
Entity
p9594
(dp9595
g11
(lp9596
sg14
S'com.google.common.collect.ImmutableCollection'
p9597
sg16
(lp9598
sg19
(lp9599
sg22
(lp9600
sg25
I0
sba(iArchitecture
Entity
p9601
(dp9602
g11
(lp9603
sg14
S'com.google.common.collect.ImmutableEnumMap'
p9604
sg16
(lp9605
sg19
(lp9606
sg22
(lp9607
sg25
I0
sba(iArchitecture
Entity
p9608
(dp9609
g11
(lp9610
sg14
S'com.google.common.collect.ImmutableEnumMapTest'
p9611
sg16
(lp9612
sg19
(lp9613
sg22
(lp9614
sg25
I0
sba(iArchitecture
Entity
p9615
(dp9616
g11
(lp9617
sg14
S'com.google.common.collect.ImmutableEnumMapTest_gwt'
p9618
sg16
(lp9619
sg19
(lp9620
sg22
(lp9621
sg25
I0
sba(iArchitecture
Entity
p9622
(dp9623
g11
(lp9624
sg14
S'com.google.common.collect.ImmutableEnumSet'
p9625
sg16
(lp9626
sg19
(lp9627
sg22
(lp9628
sg25
I0
sba(iArchitecture
Entity
p9629
(dp9630
g11
(lp9631
sg14
S'com.google.common.collect.ImmutableMapEntry'
p9632
sg16
(lp9633
sg19
(lp9634
sg22
(lp9635
sg25
I0
sba(iArchitecture
Entity
p9636
(dp9637
g11
(lp9638
sg14
S'com.google.common.collect.ImmutableMapEntrySet'
p9639
sg16
(lp9640
sg19
(lp9641
sg22
(lp9642
sg25
I0
sba(iArchitecture
Entity
p9643
(dp9644
g11
(lp9645
sg14
S'com.google.common.collect.ImmutableMultimapAsMapImplementsMapTest'
p9646
sg16
(lp9647
sg19
(lp9648
sg22
(lp9649
sg25
I0
sba(iArchitecture
Entity
p9650
(dp9651
g11
(lp9652
sg14
S'com.google.common.collect.ImmutableMultimapTest_gwt'
p9653
sg16
(lp9654
sg19
(lp9655
sg22
(lp9656
sg25
I0
sba(iArchitecture
Entity
p9657
(dp9658
g11
(lp9659
sg14
S'com.google.common.collect.ImmutableSetMultimapAsMapImplementsMapTest'
p9660
sg16
(lp9661
sg19
(lp9662
sg22
(lp9663
sg25
I0
sba(iArchitecture
Entity
p9664
(dp9665
g11
(lp9666
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p9667
sg16
(lp9668
sg19
(lp9669
sg22
(lp9670
sg25
I0
sba(iArchitecture
Entity
p9671
(dp9672
g11
(lp9673
sg14
S'com.google.common.collect.Interners'
p9674
sg16
(lp9675
sg19
(lp9676
sg22
(lp9677
sg25
I0
sba(iArchitecture
Entity
p9678
(dp9679
g11
(lp9680
sg14
S'com.google.common.collect.LenientSerializableTester'
p9681
sg16
(lp9682
sg19
(lp9683
sg22
(lp9684
sg25
I0
sba(iArchitecture
Entity
p9685
(dp9686
g11
(lp9687
sg14
S'com.google.common.collect.LinkedHashMultimapTest_gwt'
p9688
sg16
(lp9689
sg19
(lp9690
sg22
(lp9691
sg25
I0
sba(iArchitecture
Entity
p9692
(dp9693
g11
(lp9694
sg14
S'com.google.common.collect.LinkedHashMultiset'
p9695
sg16
(lp9696
sg19
(lp9697
sg22
(lp9698
sg25
I0
sba(iArchitecture
Entity
p9699
(dp9700
g11
(lp9701
sg14
S'com.google.common.collect.LinkedHashMultisetTest'
p9702
sg16
(lp9703
sg19
(lp9704
sg22
(lp9705
sg25
I0
sba(iArchitecture
Entity
p9706
(dp9707
g11
(lp9708
sg14
S'com.google.common.collect.LinkedHashMultisetTest_gwt'
p9709
sg16
(lp9710
sg19
(lp9711
sg22
(lp9712
sg25
I0
sba(iArchitecture
Entity
p9713
(dp9714
g11
(lp9715
sg14
S'com.google.common.collect.LinkedListMultimapTest'
p9716
sg16
(lp9717
sg19
(lp9718
sg22
(lp9719
sg25
I0
sba(iArchitecture
Entity
p9720
(dp9721
g11
(lp9722
sg14
S'com.google.common.collect.LinkedListMultimapTest_gwt'
p9723
sg16
(lp9724
sg19
(lp9725
sg22
(lp9726
sg25
I0
sba(iArchitecture
Entity
p9727
(dp9728
g11
(lp9729
sg14
S'com.google.common.collect.MapConstraint'
p9730
sg16
(lp9731
sg19
(lp9732
sg22
(lp9733
sg25
I0
sba(iArchitecture
Entity
p9734
(dp9735
g11
(lp9736
sg14
S'com.google.common.collect.MapMaker'
p9737
sg16
(lp9738
sg19
(lp9739
sg22
(lp9740
sg25
I0
sba(iArchitecture
Entity
p9741
(dp9742
g11
(lp9743
sg14
S'com.google.common.collect.MapMakerTest_gwt'
p9744
sg16
(lp9745
sg19
(lp9746
sg22
(lp9747
sg25
I0
sba(iArchitecture
Entity
p9748
(dp9749
g11
(lp9750
sg14
S'com.google.common.collect.MapsCollectionTest'
p9751
sg16
(lp9752
sg19
(lp9753
sg22
(lp9754
sg25
I0
sba(iArchitecture
Entity
p9755
(dp9756
g11
(lp9757
sg14
S'com.google.common.collect.MapsTransformValuesTest'
p9758
sg16
(lp9759
sg19
(lp9760
sg22
(lp9761
sg25
I0
sba(iArchitecture
Entity
p9762
(dp9763
g11
(lp9764
sg14
S'com.google.common.collect.MapsTransformValuesUnmodifiableIteratorTest'
p9765
sg16
(lp9766
sg19
(lp9767
sg22
(lp9768
sg25
I0
sba(iArchitecture
Entity
p9769
(dp9770
g11
(lp9771
sg14
S'com.google.common.collect.MultimapBuilder'
p9772
sg16
(lp9773
sg19
(lp9774
sg22
(lp9775
sg25
I0
sba(iArchitecture
Entity
p9776
(dp9777
g11
(lp9778
sg14
S'com.google.common.collect.MultimapBuilderTest_gwt'
p9779
sg16
(lp9780
sg19
(lp9781
sg22
(lp9782
sg25
I0
sba(iArchitecture
Entity
p9783
(dp9784
g11
(lp9785
sg14
S'com.google.common.collect.MultimapsFilterEntriesAsMapTest'
p9786
sg16
(lp9787
sg19
(lp9788
sg22
(lp9789
sg25
I0
sba(iArchitecture
Entity
p9790
(dp9791
g11
(lp9792
sg14
S'com.google.common.collect.MultimapsTransformValuesAsMapTest'
p9793
sg16
(lp9794
sg19
(lp9795
sg22
(lp9796
sg25
I0
sba(iArchitecture
Entity
p9797
(dp9798
g11
(lp9799
sg14
S'com.google.common.collect.Multiset'
p9800
sg16
(lp9801
sg19
(lp9802
sg22
(lp9803
sg25
I0
sba(iArchitecture
Entity
p9804
(dp9805
g11
(lp9806
sg14
S'com.google.common.collect.MultisetsCollectionTest'
p9807
sg16
(lp9808
sg19
(lp9809
sg22
(lp9810
sg25
I0
sba(iArchitecture
Entity
p9811
(dp9812
g11
(lp9813
sg14
S'com.google.common.collect.MultisetsImmutableEntryTest'
p9814
sg16
(lp9815
sg19
(lp9816
sg22
(lp9817
sg25
I0
sba(iArchitecture
Entity
p9818
(dp9819
g11
(lp9820
sg14
S'com.google.common.collect.MultisetsImmutableEntryTest_gwt'
p9821
sg16
(lp9822
sg19
(lp9823
sg22
(lp9824
sg25
I0
sba(iArchitecture
Entity
p9825
(dp9826
g11
(lp9827
sg14
S'com.google.common.collect.ObjectArraysTest_gwt'
p9828
sg16
(lp9829
sg19
(lp9830
sg22
(lp9831
sg25
I0
sba(iArchitecture
Entity
p9832
(dp9833
g11
(lp9834
sg14
S'com.google.common.collect.OrderingTest_gwt'
p9835
sg16
(lp9836
sg19
(lp9837
sg22
(lp9838
sg25
I0
sba(iArchitecture
Entity
p9839
(dp9840
g11
(lp9841
sg14
S'com.google.common.collect.PeekingIterator'
p9842
sg16
(lp9843
sg19
(lp9844
sg22
(lp9845
sg25
I0
sba(iArchitecture
Entity
p9846
(dp9847
g11
(lp9848
sg14
S'com.google.common.collect.PeekingIteratorTest'
p9849
sg16
(lp9850
sg19
(lp9851
sg22
(lp9852
sg25
I0
sba(iArchitecture
Entity
p9853
(dp9854
g11
(lp9855
sg14
S'com.google.common.collect.PeekingIteratorTest_gwt'
p9856
sg16
(lp9857
sg19
(lp9858
sg22
(lp9859
sg25
I0
sba(iArchitecture
Entity
p9860
(dp9861
g11
(lp9862
sg14
S'com.google.common.collect.RegularImmutableAsList'
p9863
sg16
(lp9864
sg19
(lp9865
sg22
(lp9866
sg25
I0
sba(iArchitecture
Entity
p9867
(dp9868
g11
(lp9869
sg14
S'com.google.common.collect.RegularImmutableAsListTest_gwt'
p9870
sg16
(lp9871
sg19
(lp9872
sg22
(lp9873
sg25
I0
sba(iArchitecture
Entity
p9874
(dp9875
g11
(lp9876
sg14
S'com.google.common.collect.RegularImmutableList'
p9877
sg16
(lp9878
sg19
(lp9879
sg22
(lp9880
sg25
I0
sba(iArchitecture
Entity
p9881
(dp9882
g11
(lp9883
sg14
S'com.google.common.collect.RegularImmutableTableTest_gwt'
p9884
sg16
(lp9885
sg19
(lp9886
sg22
(lp9887
sg25
I0
sba(iArchitecture
Entity
p9888
(dp9889
g11
(lp9890
sg14
S'com.google.common.collect.SetOperationsTest_gwt'
p9891
sg16
(lp9892
sg19
(lp9893
sg22
(lp9894
sg25
I0
sba(iArchitecture
Entity
p9895
(dp9896
g11
(lp9897
sg14
S'com.google.common.collect.SimpleAbstractMultisetTest_gwt'
p9898
sg16
(lp9899
sg19
(lp9900
sg22
(lp9901
sg25
I0
sba(iArchitecture
Entity
p9902
(dp9903
g11
(lp9904
sg14
S'com.google.common.collect.SingletonImmutableSet'
p9905
sg16
(lp9906
sg19
(lp9907
sg22
(lp9908
sg25
I0
sba(iArchitecture
Entity
p9909
(dp9910
g11
(lp9911
sg14
S'com.google.common.collect.SingletonImmutableTable'
p9912
sg16
(lp9913
sg19
(lp9914
sg22
(lp9915
sg25
I0
sba(iArchitecture
Entity
p9916
(dp9917
g11
(lp9918
sg14
S'com.google.common.collect.SortedIterablesTest_gwt'
p9919
sg16
(lp9920
sg19
(lp9921
sg22
(lp9922
sg25
I0
sba(iArchitecture
Entity
p9923
(dp9924
g11
(lp9925
sg14
S'com.google.common.collect.SortedLists'
p9926
sg16
(lp9927
sg19
(lp9928
sg22
(lp9929
sg25
I0
sba(iArchitecture
Entity
p9930
(dp9931
g11
(lp9932
sg14
S'com.google.common.collect.SortedListsTest'
p9933
sg16
(lp9934
sg19
(lp9935
sg22
(lp9936
sg25
I0
sba(iArchitecture
Entity
p9937
(dp9938
g11
(lp9939
sg14
S'com.google.common.collect.SortedListsTest_gwt'
p9940
sg16
(lp9941
sg19
(lp9942
sg22
(lp9943
sg25
I0
sba(iArchitecture
Entity
p9944
(dp9945
g11
(lp9946
sg14
S'com.google.common.collect.SortedMultiset'
p9947
sg16
(lp9948
sg19
(lp9949
sg22
(lp9950
sg25
I0
sba(iArchitecture
Entity
p9951
(dp9952
g11
(lp9953
sg14
S'com.google.common.collect.StandardRowSortedTable'
p9954
sg16
(lp9955
sg19
(lp9956
sg22
(lp9957
sg25
I0
sba(iArchitecture
Entity
p9958
(dp9959
g11
(lp9960
sg14
S'com.google.common.collect.SynchronizedBiMapTest'
p9961
sg16
(lp9962
sg19
(lp9963
sg22
(lp9964
sg25
I0
sba(iArchitecture
Entity
p9965
(dp9966
g11
(lp9967
sg14
S'com.google.common.collect.TablesTest_gwt'
p9968
sg16
(lp9969
sg19
(lp9970
sg22
(lp9971
sg25
I0
sba(iArchitecture
Entity
p9972
(dp9973
g11
(lp9974
sg14
S'com.google.common.collect.TablesTransformValuesTest_gwt'
p9975
sg16
(lp9976
sg19
(lp9977
sg22
(lp9978
sg25
I0
sba(iArchitecture
Entity
p9979
(dp9980
g11
(lp9981
sg14
S'com.google.common.collect.TreeMultimapExplicitTest_gwt'
p9982
sg16
(lp9983
sg19
(lp9984
sg22
(lp9985
sg25
I0
sba(iArchitecture
Entity
p9986
(dp9987
g11
(lp9988
sg14
S'com.google.common.collect.TreeMultimapNaturalTest_gwt'
p9989
sg16
(lp9990
sg19
(lp9991
sg22
(lp9992
sg25
I0
sba(iArchitecture
Entity
p9993
(dp9994
g11
(lp9995
sg14
S'com.google.common.collect.TreeMultisetTest_gwt'
p9996
sg16
(lp9997
sg19
(lp9998
sg22
(lp9999
sg25
I0
sba(iArchitecture
Entity
p10000
(dp10001
g11
(lp10002
sg14
S'com.google.common.collect.TreeTraverser'
p10003
sg16
(lp10004
sg19
(lp10005
sg22
(lp10006
sg25
I0
sba(iArchitecture
Entity
p10007
(dp10008
g11
(lp10009
sg14
S'com.google.common.collect.TreeTraverserTest_gwt'
p10010
sg16
(lp10011
sg19
(lp10012
sg22
(lp10013
sg25
I0
sba(iArchitecture
Entity
p10014
(dp10015
g11
(lp10016
sg14
S'com.google.common.collect.UnmodifiableIterator'
p10017
sg16
(lp10018
sg19
(lp10019
sg22
(lp10020
sg25
I0
sba(iArchitecture
Entity
p10021
(dp10022
g11
(lp10023
sg14
S'com.google.common.collect.UnmodifiableIteratorTest_gwt'
p10024
sg16
(lp10025
sg19
(lp10026
sg22
(lp10027
sg25
I0
sba(iArchitecture
Entity
p10028
(dp10029
g11
(lp10030
sg14
S'com.google.common.collect.UnmodifiableListIterator'
p10031
sg16
(lp10032
sg19
(lp10033
sg22
(lp10034
sg25
I0
sba(iArchitecture
Entity
p10035
(dp10036
g11
(lp10037
sg14
S'com.google.common.collect.UnmodifiableListIteratorTest_gwt'
p10038
sg16
(lp10039
sg19
(lp10040
sg22
(lp10041
sg25
I0
sba(iArchitecture
Entity
p10042
(dp10043
g11
(lp10044
sg14
S'com.google.common.collect.UnmodifiableMultimapAsMapImplementsMapTest'
p10045
sg16
(lp10046
sg19
(lp10047
sg22
(lp10048
sg25
I0
sba(iArchitecture
Entity
p10049
(dp10050
g11
(lp10051
sg14
S'com.google.common.collect.UnmodifiableSortedMultiset'
p10052
sg16
(lp10053
sg19
(lp10054
sg22
(lp10055
sg25
I0
sba(iArchitecture
Entity
p10056
(dp10057
g11
(lp10058
sg14
S'com.google.common.collect.WellBehavedMapTest_gwt'
p10059
sg16
(lp10060
sg19
(lp10061
sg22
(lp10062
sg25
I0
sba(iArchitecture
Entity
p10063
(dp10064
g11
(lp10065
sg14
S'com.google.common.collect.package-info'
p10066
sg16
(lp10067
sg19
(lp10068
sg22
(lp10069
sg25
I0
sba(iArchitecture
Entity
p10070
(dp10071
g11
(lp10072
sg14
S'com.google.common.collect.testing.AbstractCollectionTestSuiteBuilder'
p10073
sg16
(lp10074
sg19
(lp10075
sg22
(lp10076
sg25
I0
sba(iArchitecture
Entity
p10077
(dp10078
g11
(lp10079
sg14
S'com.google.common.collect.testing.AbstractContainerTester'
p10080
sg16
(lp10081
sg19
(lp10082
sg22
(lp10083
sg25
I0
sba(iArchitecture
Entity
p10084
(dp10085
g11
(lp10086
sg14
S'com.google.common.collect.testing.AbstractMapTester'
p10087
sg16
(lp10088
sg19
(lp10089
sg22
(lp10090
sg25
I0
sba(iArchitecture
Entity
p10091
(dp10092
g11
(lp10093
sg14
S'com.google.common.collect.testing.DerivedCollectionGenerators'
p10094
sg16
(lp10095
sg19
(lp10096
sg22
(lp10097
sg25
I0
sba(iArchitecture
Entity
p10098
(dp10099
g11
(lp10100
sg14
S'com.google.common.collect.testing.DerivedGenerator'
p10101
sg16
(lp10102
sg19
(lp10103
sg22
(lp10104
sg25
I0
sba(iArchitecture
Entity
p10105
(dp10106
g11
(lp10107
sg14
S'com.google.common.collect.testing.DerivedIteratorTestSuiteBuilder'
p10108
sg16
(lp10109
sg19
(lp10110
sg22
(lp10111
sg25
I0
sba(iArchitecture
Entity
p10112
(dp10113
g11
(lp10114
sg14
S'com.google.common.collect.testing.GwtPlatform'
p10115
sg16
(lp10116
sg19
(lp10117
sg22
(lp10118
sg25
I0
sba(iArchitecture
Entity
p10119
(dp10120
g11
(lp10121
sg14
S'com.google.common.collect.testing.HelpersTest'
p10122
sg16
(lp10123
sg19
(lp10124
sg22
(lp10125
sg25
I0
sba(iArchitecture
Entity
p10126
(dp10127
g11
(lp10128
sg14
S'com.google.common.collect.testing.HelpersTest_gwt'
p10129
sg16
(lp10130
sg19
(lp10131
sg22
(lp10132
sg25
I0
sba(iArchitecture
Entity
p10133
(dp10134
g11
(lp10135
sg14
S'com.google.common.collect.testing.IteratorFeature'
p10136
sg16
(lp10137
sg19
(lp10138
sg22
(lp10139
sg25
I0
sba(iArchitecture
Entity
p10140
(dp10141
g11
(lp10142
sg14
S'com.google.common.collect.testing.IteratorTester'
p10143
sg16
(lp10144
sg19
(lp10145
sg22
(lp10146
sg25
I0
sba(iArchitecture
Entity
p10147
(dp10148
g11
(lp10149
sg14
S'com.google.common.collect.testing.IteratorTesterTest_gwt'
p10150
sg16
(lp10151
sg19
(lp10152
sg22
(lp10153
sg25
I0
sba(iArchitecture
Entity
p10154
(dp10155
g11
(lp10156
sg14
S'com.google.common.collect.testing.ListIteratorTester'
p10157
sg16
(lp10158
sg19
(lp10159
sg22
(lp10160
sg25
I0
sba(iArchitecture
Entity
p10161
(dp10162
g11
(lp10163
sg14
S'com.google.common.collect.testing.ListTestSuiteBuilder'
p10164
sg16
(lp10165
sg19
(lp10166
sg22
(lp10167
sg25
I0
sba(iArchitecture
Entity
p10168
(dp10169
g11
(lp10170
sg14
S'com.google.common.collect.testing.MapTestSuiteBuilderTests'
p10171
sg16
(lp10172
sg19
(lp10173
sg22
(lp10174
sg25
I0
sba(iArchitecture
Entity
p10175
(dp10176
g11
(lp10177
sg14
S'com.google.common.collect.testing.MinimalCollectionTest'
p10178
sg16
(lp10179
sg19
(lp10180
sg22
(lp10181
sg25
I0
sba(iArchitecture
Entity
p10182
(dp10183
g11
(lp10184
sg14
S'com.google.common.collect.testing.MinimalIterable'
p10185
sg16
(lp10186
sg19
(lp10187
sg22
(lp10188
sg25
I0
sba(iArchitecture
Entity
p10189
(dp10190
g11
(lp10191
sg14
S'com.google.common.collect.testing.MinimalIterableTest_gwt'
p10192
sg16
(lp10193
sg19
(lp10194
sg22
(lp10195
sg25
I0
sba(iArchitecture
Entity
p10196
(dp10197
g11
(lp10198
sg14
S'com.google.common.collect.testing.NavigableMapTestSuiteBuilder'
p10199
sg16
(lp10200
sg19
(lp10201
sg22
(lp10202
sg25
I0
sba(iArchitecture
Entity
p10203
(dp10204
g11
(lp10205
sg14
S'com.google.common.collect.testing.NavigableSetTestSuiteBuilder'
p10206
sg16
(lp10207
sg19
(lp10208
sg22
(lp10209
sg25
I0
sba(iArchitecture
Entity
p10210
(dp10211
g11
(lp10212
sg14
S'com.google.common.collect.testing.OneSizeTestContainerGenerator'
p10213
sg16
(lp10214
sg19
(lp10215
sg22
(lp10216
sg25
I0
sba(iArchitecture
Entity
p10217
(dp10218
g11
(lp10219
sg14
S'com.google.common.collect.testing.QueueTestSuiteBuilder'
p10220
sg16
(lp10221
sg19
(lp10222
sg22
(lp10223
sg25
I0
sba(iArchitecture
Entity
p10224
(dp10225
g11
(lp10226
sg14
S'com.google.common.collect.testing.SafeTreeMapTest'
p10227
sg16
(lp10228
sg19
(lp10229
sg22
(lp10230
sg25
I0
sba(iArchitecture
Entity
p10231
(dp10232
g11
(lp10233
sg14
S'com.google.common.collect.testing.SafeTreeSetTest'
p10234
sg16
(lp10235
sg19
(lp10236
sg22
(lp10237
sg25
I0
sba(iArchitecture
Entity
p10238
(dp10239
g11
(lp10240
sg14
S'com.google.common.collect.testing.SetTestSuiteBuilder'
p10241
sg16
(lp10242
sg19
(lp10243
sg22
(lp10244
sg25
I0
sba(iArchitecture
Entity
p10245
(dp10246
g11
(lp10247
sg14
S'com.google.common.collect.testing.SortedMapInterfaceTest'
p10248
sg16
(lp10249
sg19
(lp10250
sg22
(lp10251
sg25
I0
sba(iArchitecture
Entity
p10252
(dp10253
g11
(lp10254
sg14
S'com.google.common.collect.testing.TestCollidingSetGenerator'
p10255
sg16
(lp10256
sg19
(lp10257
sg22
(lp10258
sg25
I0
sba(iArchitecture
Entity
p10259
(dp10260
g11
(lp10261
sg14
S'com.google.common.collect.testing.TestIntegerSetGenerator'
p10262
sg16
(lp10263
sg19
(lp10264
sg22
(lp10265
sg25
I0
sba(iArchitecture
Entity
p10266
(dp10267
g11
(lp10268
sg14
S'com.google.common.collect.testing.TestIntegerSortedSetGenerator'
p10269
sg16
(lp10270
sg19
(lp10271
sg22
(lp10272
sg25
I0
sba(iArchitecture
Entity
p10273
(dp10274
g11
(lp10275
sg14
S'com.google.common.collect.testing.TestSortedMapGenerator'
p10276
sg16
(lp10277
sg19
(lp10278
sg22
(lp10279
sg25
I0
sba(iArchitecture
Entity
p10280
(dp10281
g11
(lp10282
sg14
S'com.google.common.collect.testing.TestSortedSetGenerator'
p10283
sg16
(lp10284
sg19
(lp10285
sg22
(lp10286
sg25
I0
sba(iArchitecture
Entity
p10287
(dp10288
g11
(lp10289
sg14
S'com.google.common.collect.testing.TestStringSetGenerator'
p10290
sg16
(lp10291
sg19
(lp10292
sg22
(lp10293
sg25
I0
sba(iArchitecture
Entity
p10294
(dp10295
g11
(lp10296
sg14
S'com.google.common.collect.testing.TestStringSortedMapGenerator'
p10297
sg16
(lp10298
sg19
(lp10299
sg22
(lp10300
sg25
I0
sba(iArchitecture
Entity
p10301
(dp10302
g11
(lp10303
sg14
S'com.google.common.collect.testing.TestStringSortedSetGenerator'
p10304
sg16
(lp10305
sg19
(lp10306
sg22
(lp10307
sg25
I0
sba(iArchitecture
Entity
p10308
(dp10309
g11
(lp10310
sg14
S'com.google.common.collect.testing.features.CollectionSize'
p10311
sg16
(lp10312
sg19
(lp10313
sg22
(lp10314
sg25
I0
sba(iArchitecture
Entity
p10315
(dp10316
g11
(lp10317
sg14
S'com.google.common.collect.testing.google.AbstractMultisetTester'
p10318
sg16
(lp10319
sg19
(lp10320
sg22
(lp10321
sg25
I0
sba(iArchitecture
Entity
p10322
(dp10323
g11
(lp10324
sg14
S'com.google.common.collect.testing.google.BiMapGenerators'
p10325
sg16
(lp10326
sg19
(lp10327
sg22
(lp10328
sg25
I0
sba(iArchitecture
Entity
p10329
(dp10330
g11
(lp10331
sg14
S'com.google.common.collect.testing.google.ListMultimapEqualsTester'
p10332
sg16
(lp10333
sg19
(lp10334
sg22
(lp10335
sg25
I0
sba(iArchitecture
Entity
p10336
(dp10337
g11
(lp10338
sg14
S'com.google.common.collect.testing.google.MapGenerators'
p10339
sg16
(lp10340
sg19
(lp10341
sg22
(lp10342
sg25
I0
sba(iArchitecture
Entity
p10343
(dp10344
g11
(lp10345
sg14
S'com.google.common.collect.testing.google.MultisetFeature'
p10346
sg16
(lp10347
sg19
(lp10348
sg22
(lp10349
sg25
I0
sba(iArchitecture
Entity
p10350
(dp10351
g11
(lp10352
sg14
S'com.google.common.collect.testing.google.MultisetTestSuiteBuilder'
p10353
sg16
(lp10354
sg19
(lp10355
sg22
(lp10356
sg25
I0
sba(iArchitecture
Entity
p10357
(dp10358
g11
(lp10359
sg14
S'com.google.common.collect.testing.google.SetGenerators'
p10360
sg16
(lp10361
sg19
(lp10362
sg22
(lp10363
sg25
I0
sba(iArchitecture
Entity
p10364
(dp10365
g11
(lp10366
sg14
S'com.google.common.collect.testing.google.SetMultimapEqualsTester'
p10367
sg16
(lp10368
sg19
(lp10369
sg22
(lp10370
sg25
I0
sba(iArchitecture
Entity
p10371
(dp10372
g11
(lp10373
sg14
S'com.google.common.collect.testing.google.SortedMapGenerators'
p10374
sg16
(lp10375
sg19
(lp10376
sg22
(lp10377
sg25
I0
sba(iArchitecture
Entity
p10378
(dp10379
g11
(lp10380
sg14
S'com.google.common.collect.testing.google.SortedSetMultimapGetTester'
p10381
sg16
(lp10382
sg19
(lp10383
sg22
(lp10384
sg25
I0
sba(iArchitecture
Entity
p10385
(dp10386
g11
(lp10387
sg14
S'com.google.common.collect.testing.google.TestEnumMultisetGenerator'
p10388
sg16
(lp10389
sg19
(lp10390
sg22
(lp10391
sg25
I0
sba(iArchitecture
Entity
p10392
(dp10393
g11
(lp10394
sg14
S'com.google.common.collect.testing.google.TestMultisetGenerator'
p10395
sg16
(lp10396
sg19
(lp10397
sg22
(lp10398
sg25
I0
sba(iArchitecture
Entity
p10399
(dp10400
g11
(lp10401
sg14
S'com.google.common.collect.testing.testers.AbstractListTester'
p10402
sg16
(lp10403
sg19
(lp10404
sg22
(lp10405
sg25
I0
sba(iArchitecture
Entity
p10406
(dp10407
g11
(lp10408
sg14
S'com.google.common.collect.testing.testers.CollectionAddTester'
p10409
sg16
(lp10410
sg19
(lp10411
sg22
(lp10412
sg25
I0
sba(iArchitecture
Entity
p10413
(dp10414
g11
(lp10415
sg14
S'com.google.common.collect.testing.testers.CollectionIsEmptyTester'
p10416
sg16
(lp10417
sg19
(lp10418
sg22
(lp10419
sg25
I0
sba(iArchitecture
Entity
p10420
(dp10421
g11
(lp10422
sg14
S'com.google.common.collect.testing.testers.CollectionIteratorTester'
p10423
sg16
(lp10424
sg19
(lp10425
sg22
(lp10426
sg25
I0
sba(iArchitecture
Entity
p10427
(dp10428
g11
(lp10429
sg14
S'com.google.common.collect.testing.testers.CollectionSizeTester'
p10430
sg16
(lp10431
sg19
(lp10432
sg22
(lp10433
sg25
I0
sba(iArchitecture
Entity
p10434
(dp10435
g11
(lp10436
sg14
S'com.google.common.collect.testing.testers.ListAddAllTester'
p10437
sg16
(lp10438
sg19
(lp10439
sg22
(lp10440
sg25
I0
sba(iArchitecture
Entity
p10441
(dp10442
g11
(lp10443
sg14
S'com.google.common.collect.testing.testers.ListAddAtIndexTester'
p10444
sg16
(lp10445
sg19
(lp10446
sg22
(lp10447
sg25
I0
sba(iArchitecture
Entity
p10448
(dp10449
g11
(lp10450
sg14
S'com.google.common.collect.testing.testers.ListAddTester'
p10451
sg16
(lp10452
sg19
(lp10453
sg22
(lp10454
sg25
I0
sba(iArchitecture
Entity
p10455
(dp10456
g11
(lp10457
sg14
S'com.google.common.collect.testing.testers.ListGetTester'
p10458
sg16
(lp10459
sg19
(lp10460
sg22
(lp10461
sg25
I0
sba(iArchitecture
Entity
p10462
(dp10463
g11
(lp10464
sg14
S'com.google.common.collect.testing.testers.ListRemoveTester'
p10465
sg16
(lp10466
sg19
(lp10467
sg22
(lp10468
sg25
I0
sba(iArchitecture
Entity
p10469
(dp10470
g11
(lp10471
sg14
S'com.google.common.collect.testing.testers.ListToArrayTester'
p10472
sg16
(lp10473
sg19
(lp10474
sg22
(lp10475
sg25
I0
sba(iArchitecture
Entity
p10476
(dp10477
g11
(lp10478
sg14
S'com.google.common.collect.testing.testers.MapIsEmptyTester'
p10479
sg16
(lp10480
sg19
(lp10481
sg22
(lp10482
sg25
I0
sba(iArchitecture
Entity
p10483
(dp10484
g11
(lp10485
sg14
S'com.google.common.collect.testing.testers.MapSizeTester'
p10486
sg16
(lp10487
sg19
(lp10488
sg22
(lp10489
sg25
I0
sba(iArchitecture
Entity
p10490
(dp10491
g11
(lp10492
sg14
S'com.google.common.collect.testing.testers.Platform'
p10493
sg16
(lp10494
sg19
(lp10495
sg22
(lp10496
sg25
I0
sba(iArchitecture
Entity
p10497
(dp10498
g11
(lp10499
sg14
S'com.google.common.collect.testing.testers.SetAddAllTester'
p10500
sg16
(lp10501
sg19
(lp10502
sg22
(lp10503
sg25
I0
sba(iArchitecture
Entity
p10504
(dp10505
g11
(lp10506
sg14
S'com.google.common.escape.ArrayBasedCharEscaperTest_gwt'
p10507
sg16
(lp10508
sg19
(lp10509
sg22
(lp10510
sg25
I0
sba(iArchitecture
Entity
p10511
(dp10512
g11
(lp10513
sg14
S'com.google.common.escape.ArrayBasedEscaperMapTest_gwt'
p10514
sg16
(lp10515
sg19
(lp10516
sg22
(lp10517
sg25
I0
sba(iArchitecture
Entity
p10518
(dp10519
g11
(lp10520
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaperTest_gwt'
p10521
sg16
(lp10522
sg19
(lp10523
sg22
(lp10524
sg25
I0
sba(iArchitecture
Entity
p10525
(dp10526
g11
(lp10527
sg14
S'com.google.common.escape.EscapersTest_gwt'
p10528
sg16
(lp10529
sg19
(lp10530
sg22
(lp10531
sg25
I0
sba(iArchitecture
Entity
p10532
(dp10533
g11
(lp10534
sg14
S'com.google.common.escape.UnicodeEscaperTest_gwt'
p10535
sg16
(lp10536
sg19
(lp10537
sg22
(lp10538
sg25
I0
sba(iArchitecture
Entity
p10539
(dp10540
g11
(lp10541
sg14
S'com.google.common.escape.package-info'
p10542
sg16
(lp10543
sg19
(lp10544
sg22
(lp10545
sg25
I0
sba(iArchitecture
Entity
p10546
(dp10547
g11
(lp10548
sg14
S'com.google.common.eventbus.AsyncEventBus'
p10549
sg16
(lp10550
sg19
(lp10551
sg22
(lp10552
sg25
I0
sba(iArchitecture
Entity
p10553
(dp10554
g11
(lp10555
sg14
S'com.google.common.eventbus.AsyncEventBusTest'
p10556
sg16
(lp10557
sg19
(lp10558
sg22
(lp10559
sg25
I0
sba(iArchitecture
Entity
p10560
(dp10561
g11
(lp10562
sg14
S'com.google.common.eventbus.EventBus'
p10563
sg16
(lp10564
sg19
(lp10565
sg22
(lp10566
sg25
I0
sba(iArchitecture
Entity
p10567
(dp10568
g11
(lp10569
sg14
S'com.google.common.eventbus.EventBusTest'
p10570
sg16
(lp10571
sg19
(lp10572
sg22
(lp10573
sg25
I0
sba(iArchitecture
Entity
p10574
(dp10575
g11
(lp10576
sg14
S'com.google.common.eventbus.outside.OutsideEventBusTest'
p10577
sg16
(lp10578
sg19
(lp10579
sg22
(lp10580
sg25
I0
sba(iArchitecture
Entity
p10581
(dp10582
g11
(lp10583
sg14
S'com.google.common.hash.HashFunctionEnum'
p10584
sg16
(lp10585
sg19
(lp10586
sg22
(lp10587
sg25
I0
sba(iArchitecture
Entity
p10588
(dp10589
g11
(lp10590
sg14
S'com.google.common.html.HtmlEscapers'
p10591
sg16
(lp10592
sg19
(lp10593
sg22
(lp10594
sg25
I0
sba(iArchitecture
Entity
p10595
(dp10596
g11
(lp10597
sg14
S'com.google.common.html.HtmlEscapersTest'
p10598
sg16
(lp10599
sg19
(lp10600
sg22
(lp10601
sg25
I0
sba(iArchitecture
Entity
p10602
(dp10603
g11
(lp10604
sg14
S'com.google.common.html.HtmlEscapersTest_gwt'
p10605
sg16
(lp10606
sg19
(lp10607
sg22
(lp10608
sg25
I0
sba(iArchitecture
Entity
p10609
(dp10610
g11
(lp10611
sg14
S'com.google.common.html.TestModuleEntryPoint'
p10612
sg16
(lp10613
sg19
(lp10614
sg22
(lp10615
sg25
I0
sba(iArchitecture
Entity
p10616
(dp10617
g11
(lp10618
sg14
S'com.google.common.io.Resources'
p10619
sg16
(lp10620
sg19
(lp10621
sg22
(lp10622
sg25
I0
sba(iArchitecture
Entity
p10623
(dp10624
g11
(lp10625
sg14
S'com.google.common.io.ResourcesTest'
p10626
sg16
(lp10627
sg19
(lp10628
sg22
(lp10629
sg25
I0
sba(iArchitecture
Entity
p10630
(dp10631
g11
(lp10632
sg14
S'com.google.common.math.BigIntegerMathTest_gwt'
p10633
sg16
(lp10634
sg19
(lp10635
sg22
(lp10636
sg25
I0
sba(iArchitecture
Entity
p10637
(dp10638
g11
(lp10639
sg14
S'com.google.common.math.DoubleUtils'
p10640
sg16
(lp10641
sg19
(lp10642
sg22
(lp10643
sg25
I0
sba(iArchitecture
Entity
p10644
(dp10645
g11
(lp10646
sg14
S'com.google.common.math.IntMathTest_gwt'
p10647
sg16
(lp10648
sg19
(lp10649
sg22
(lp10650
sg25
I0
sba(iArchitecture
Entity
p10651
(dp10652
g11
(lp10653
sg14
S'com.google.common.math.LongMathTest_gwt'
p10654
sg16
(lp10655
sg19
(lp10656
sg22
(lp10657
sg25
I0
sba(iArchitecture
Entity
p10658
(dp10659
g11
(lp10660
sg14
S'com.google.common.math.MathPreconditions'
p10661
sg16
(lp10662
sg19
(lp10663
sg22
(lp10664
sg25
I0
sba(iArchitecture
Entity
p10665
(dp10666
g11
(lp10667
sg14
S'com.google.common.net.HostAndPort'
p10668
sg16
(lp10669
sg19
(lp10670
sg22
(lp10671
sg25
I0
sba(iArchitecture
Entity
p10672
(dp10673
g11
(lp10674
sg14
S'com.google.common.net.HostAndPortTest_gwt'
p10675
sg16
(lp10676
sg19
(lp10677
sg22
(lp10678
sg25
I0
sba(iArchitecture
Entity
p10679
(dp10680
g11
(lp10681
sg14
S'com.google.common.net.HostSpecifier'
p10682
sg16
(lp10683
sg19
(lp10684
sg22
(lp10685
sg25
I0
sba(iArchitecture
Entity
p10686
(dp10687
g11
(lp10688
sg14
S'com.google.common.net.HostSpecifierTest'
p10689
sg16
(lp10690
sg19
(lp10691
sg22
(lp10692
sg25
I0
sba(iArchitecture
Entity
p10693
(dp10694
g11
(lp10695
V2430
p10696
asg14
S'com.google.common.net.HttpHeaders'
p10697
sg16
(lp10698
VAs they are [common headers](https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Common_non-standard_request_fields) (at least the `X-Forwarded-Host`) it would be nice if they are defined in the class `HttpHeaders`. The `X-Forwared-Port` is used for example in [AWS](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/x-forwarded-headers.html).\u000a
p10699
asg19
(lp10700
(lp10701
I5
aasg22
(lp10702
VAdd a constant for X-Forwarded-Host and X-Forwarded-Port to HttpHeaders
p10703
asg25
I0
sba(iArchitecture
Entity
p10704
(dp10705
g11
(lp10706
sg14
S'com.google.common.net.HttpHeadersTest'
p10707
sg16
(lp10708
sg19
(lp10709
sg22
(lp10710
sg25
I0
sba(iArchitecture
Entity
p10711
(dp10712
g11
(lp10713
sg14
S'com.google.common.net.InetAddresses'
p10714
sg16
(lp10715
sg19
(lp10716
sg22
(lp10717
sg25
I0
sba(iArchitecture
Entity
p10718
(dp10719
g11
(lp10720
sg14
S'com.google.common.net.InetAddressesTest'
p10721
sg16
(lp10722
sg19
(lp10723
sg22
(lp10724
sg25
I0
sba(iArchitecture
Entity
p10725
(dp10726
g11
(lp10727
sg14
S'com.google.common.net.InternetDomainName'
p10728
sg16
(lp10729
sg19
(lp10730
sg22
(lp10731
sg25
I0
sba(iArchitecture
Entity
p10732
(dp10733
g11
(lp10734
sg14
S'com.google.common.net.InternetDomainNameTest'
p10735
sg16
(lp10736
sg19
(lp10737
sg22
(lp10738
sg25
I0
sba(iArchitecture
Entity
p10739
(dp10740
g11
(lp10741
sg14
S'com.google.common.net.InternetDomainNameTest_gwt'
p10742
sg16
(lp10743
sg19
(lp10744
sg22
(lp10745
sg25
I0
sba(iArchitecture
Entity
p10746
(dp10747
g11
(lp10748
sg14
S'com.google.common.net.MediaTypeTest_gwt'
p10749
sg16
(lp10750
sg19
(lp10751
sg22
(lp10752
sg25
I0
sba(iArchitecture
Entity
p10753
(dp10754
g11
(lp10755
sg14
S'com.google.common.net.PackageSanityTests'
p10756
sg16
(lp10757
sg19
(lp10758
sg22
(lp10759
sg25
I0
sba(iArchitecture
Entity
p10760
(dp10761
g11
(lp10762
sg14
S'com.google.common.net.PercentEscaperTest_gwt'
p10763
sg16
(lp10764
sg19
(lp10765
sg22
(lp10766
sg25
I0
sba(iArchitecture
Entity
p10767
(dp10768
g11
(lp10769
sg14
S'com.google.common.net.TestModuleEntryPoint'
p10770
sg16
(lp10771
sg19
(lp10772
sg22
(lp10773
sg25
I0
sba(iArchitecture
Entity
p10774
(dp10775
g11
(lp10776
sg14
S'com.google.common.net.UrlEscapers'
p10777
sg16
(lp10778
sg19
(lp10779
sg22
(lp10780
sg25
I0
sba(iArchitecture
Entity
p10781
(dp10782
g11
(lp10783
sg14
S'com.google.common.net.UrlEscapersTest'
p10784
sg16
(lp10785
sg19
(lp10786
sg22
(lp10787
sg25
I0
sba(iArchitecture
Entity
p10788
(dp10789
g11
(lp10790
sg14
S'com.google.common.net.UrlEscapersTest_gwt'
p10791
sg16
(lp10792
sg19
(lp10793
sg22
(lp10794
sg25
I0
sba(iArchitecture
Entity
p10795
(dp10796
g11
(lp10797
sg14
S'com.google.common.net.package-info'
p10798
sg16
(lp10799
sg19
(lp10800
sg22
(lp10801
sg25
I0
sba(iArchitecture
Entity
p10802
(dp10803
g11
(lp10804
sg14
S'com.google.common.primitives.BytesTest_gwt'
p10805
sg16
(lp10806
sg19
(lp10807
sg22
(lp10808
sg25
I0
sba(iArchitecture
Entity
p10809
(dp10810
g11
(lp10811
sg14
S'com.google.common.primitives.CharsTest_gwt'
p10812
sg16
(lp10813
sg19
(lp10814
sg22
(lp10815
sg25
I0
sba(iArchitecture
Entity
p10816
(dp10817
g11
(lp10818
sg14
S'com.google.common.primitives.DoublesTest_gwt'
p10819
sg16
(lp10820
sg19
(lp10821
sg22
(lp10822
sg25
I0
sba(iArchitecture
Entity
p10823
(dp10824
g11
(lp10825
sg14
S'com.google.common.primitives.FloatArrayAsListTest'
p10826
sg16
(lp10827
sg19
(lp10828
sg22
(lp10829
sg25
I0
sba(iArchitecture
Entity
p10830
(dp10831
g11
(lp10832
sg14
S'com.google.common.primitives.ParseRequest'
p10833
sg16
(lp10834
sg19
(lp10835
sg22
(lp10836
sg25
I0
sba(iArchitecture
Entity
p10837
(dp10838
g11
(lp10839
sg14
S'com.google.common.primitives.SignedBytesTest_gwt'
p10840
sg16
(lp10841
sg19
(lp10842
sg22
(lp10843
sg25
I0
sba(iArchitecture
Entity
p10844
(dp10845
g11
(lp10846
sg14
S'com.google.common.primitives.UnsignedIntsTest_gwt'
p10847
sg16
(lp10848
sg19
(lp10849
sg22
(lp10850
sg25
I0
sba(iArchitecture
Entity
p10851
(dp10852
g11
(lp10853
sg14
S'com.google.common.primitives.UnsignedLongTest_gwt'
p10854
sg16
(lp10855
sg19
(lp10856
sg22
(lp10857
sg25
I0
sba(iArchitecture
Entity
p10858
(dp10859
g11
(lp10860
sg14
S'com.google.common.primitives.UnsignedLongsTest_gwt'
p10861
sg16
(lp10862
sg19
(lp10863
sg22
(lp10864
sg25
I0
sba(iArchitecture
Entity
p10865
(dp10866
g11
(lp10867
sg14
S'com.google.common.primitives.package-info'
p10868
sg16
(lp10869
sg19
(lp10870
sg22
(lp10871
sg25
I0
sba(iArchitecture
Entity
p10872
(dp10873
g11
(lp10874
sg14
S'com.google.common.reflect.AbstractInvocationHandler'
p10875
sg16
(lp10876
sg19
(lp10877
sg22
(lp10878
sg25
I0
sba(iArchitecture
Entity
p10879
(dp10880
g11
(lp10881
sg14
S'com.google.common.reflect.AbstractInvocationHandlerTest'
p10882
sg16
(lp10883
sg19
(lp10884
sg22
(lp10885
sg25
I0
sba(iArchitecture
Entity
p10886
(dp10887
g11
(lp10888
V2228
p10889
ag10889
asg14
S'com.google.common.reflect.ClassPath'
p10890
sg16
(lp10891
VIf I want to load a resource I have found by classpath scanning with `ClassPath`, I need to use `Resources.asByteSource(resourceInfo.url())`. This is only little code, but hard to discover because it uses a third class `Resources` which is neither related to what I have (`ResourceInfo`) nor what I want (`ByteSource`). I also need to remember that I should go via the URL and that I cannot use `ResourceInfo.getResourceName()`.\u000a\u000aA direct method to get a `ByteSource` from a `ResourceInfo` would make this easier. Alternatively, this should be documented at least.\u000a
p10892
aVIf I want to load a resource I have found by classpath scanning with `ClassPath`, I need to use `Resources.asByteSource(resourceInfo.url())`. This is only little code, but hard to discover because it uses a third class `Resources` which is neither related to what I have (`ResourceInfo`) nor what I want (`ByteSource`). I also need to remember that I should go via the URL and that I cannot use `ResourceInfo.getResourceName()`.\u000a\u000aA direct method to get a `ByteSource` from a `ResourceInfo` would make this easier. Alternatively, this should be documented at least.\u000a
p10893
asg19
(lp10894
(lp10895
I5
aag10895
asg22
(lp10896
VAdd ClassPath.ResourceInfo.asByteSource()
p10897
ag10897
asg25
I0
sba(iArchitecture
Entity
p10898
(dp10899
g11
(lp10900
g10889
asg14
S'com.google.common.reflect.ClassPathTest'
p10901
sg16
(lp10902
VIf I want to load a resource I have found by classpath scanning with `ClassPath`, I need to use `Resources.asByteSource(resourceInfo.url())`. This is only little code, but hard to discover because it uses a third class `Resources` which is neither related to what I have (`ResourceInfo`) nor what I want (`ByteSource`). I also need to remember that I should go via the URL and that I cannot use `ResourceInfo.getResourceName()`.\u000a\u000aA direct method to get a `ByteSource` from a `ResourceInfo` would make this easier. Alternatively, this should be documented at least.\u000a
p10903
asg19
(lp10904
g10895
asg22
(lp10905
g10897
asg25
I0
sba(iArchitecture
Entity
p10906
(dp10907
g11
(lp10908
sg14
S'com.google.common.reflect.Reflection'
p10909
sg16
(lp10910
sg19
(lp10911
sg22
(lp10912
sg25
I0
sba(iArchitecture
Entity
p10913
(dp10914
g11
(lp10915
sg14
S'com.google.common.reflect.TypeCapture'
p10916
sg16
(lp10917
sg19
(lp10918
sg22
(lp10919
sg25
I0
sba(iArchitecture
Entity
p10920
(dp10921
g11
(lp10922
sg14
S'com.google.common.reflect.TypeTokenResolutionTest'
p10923
sg16
(lp10924
sg19
(lp10925
sg22
(lp10926
sg25
I0
sba(iArchitecture
Entity
p10927
(dp10928
g11
(lp10929
sg14
S'com.google.common.testing.AbstractPackageSanityTests'
p10930
sg16
(lp10931
sg19
(lp10932
sg22
(lp10933
sg25
I0
sba(iArchitecture
Entity
p10934
(dp10935
g11
(lp10936
sg14
S'com.google.common.testing.ClassSanityTester'
p10937
sg16
(lp10938
sg19
(lp10939
sg22
(lp10940
sg25
I0
sba(iArchitecture
Entity
p10941
(dp10942
g11
(lp10943
sg14
S'com.google.common.testing.EqualsTesterTest_gwt'
p10944
sg16
(lp10945
sg19
(lp10946
sg22
(lp10947
sg25
I0
sba(iArchitecture
Entity
p10948
(dp10949
g11
(lp10950
sg14
S'com.google.common.testing.EquivalenceTester'
p10951
sg16
(lp10952
sg19
(lp10953
sg22
(lp10954
sg25
I0
sba(iArchitecture
Entity
p10955
(dp10956
g11
(lp10957
sg14
S'com.google.common.testing.EquivalenceTesterTest_gwt'
p10958
sg16
(lp10959
sg19
(lp10960
sg22
(lp10961
sg25
I0
sba(iArchitecture
Entity
p10962
(dp10963
g11
(lp10964
sg14
S'com.google.common.testing.FakeTicker'
p10965
sg16
(lp10966
sg19
(lp10967
sg22
(lp10968
sg25
I0
sba(iArchitecture
Entity
p10969
(dp10970
g11
(lp10971
sg14
S'com.google.common.testing.FakeTickerTest_gwt'
p10972
sg16
(lp10973
sg19
(lp10974
sg22
(lp10975
sg25
I0
sba(iArchitecture
Entity
p10976
(dp10977
g11
(lp10978
sg14
S'com.google.common.testing.SloppyTearDown'
p10979
sg16
(lp10980
sg19
(lp10981
sg22
(lp10982
sg25
I0
sba(iArchitecture
Entity
p10983
(dp10984
g11
(lp10985
sg14
S'com.google.common.testing.TearDown'
p10986
sg16
(lp10987
sg19
(lp10988
sg22
(lp10989
sg25
I0
sba(iArchitecture
Entity
p10990
(dp10991
g11
(lp10992
sg14
S'com.google.common.testing.TestLogHandler'
p10993
sg16
(lp10994
sg19
(lp10995
sg22
(lp10996
sg25
I0
sba(iArchitecture
Entity
p10997
(dp10998
g11
(lp10999
sg14
S'com.google.common.testing.TestLogHandlerTest'
p11000
sg16
(lp11001
sg19
(lp11002
sg22
(lp11003
sg25
I0
sba(iArchitecture
Entity
p11004
(dp11005
g11
(lp11006
sg14
S'com.google.common.util.concurrent.AbstractCheckedFuture'
p11007
sg16
(lp11008
sg19
(lp11009
sg22
(lp11010
sg25
I0
sba(iArchitecture
Entity
p11011
(dp11012
g11
(lp11013
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadService'
p11014
sg16
(lp11015
sg19
(lp11016
sg22
(lp11017
sg25
I0
sba(iArchitecture
Entity
p11018
(dp11019
g11
(lp11020
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadServiceTest'
p11021
sg16
(lp11022
sg19
(lp11023
sg22
(lp11024
sg25
I0
sba(iArchitecture
Entity
p11025
(dp11026
g11
(lp11027
g6904
asg14
S'com.google.common.util.concurrent.AbstractFuture'
p11028
sg16
(lp11029
VOn the theory that most things should be a `TrustedFuture` :)\u000a\u000aWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\u000a\u000aBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters ("would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding)," per Luke).\u000a\u000aWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\u000a\u000aAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\u000a
p11030
asg19
(lp11031
g6909
asg22
(lp11032
g6911
asg25
I0
sba(iArchitecture
Entity
p11033
(dp11034
g11
(lp11035
sg14
S'com.google.common.util.concurrent.AbstractFutureBenchmarks'
p11036
sg16
(lp11037
sg19
(lp11038
sg22
(lp11039
sg25
I0
sba(iArchitecture
Entity
p11040
(dp11041
g11
(lp11042
sg14
S'com.google.common.util.concurrent.AbstractFutureCancellationCauseTest'
p11043
sg16
(lp11044
sg19
(lp11045
sg22
(lp11046
sg25
I0
sba(iArchitecture
Entity
p11047
(dp11048
g11
(lp11049
sg14
S'com.google.common.util.concurrent.AbstractFutureFootprintBenchmark'
p11050
sg16
(lp11051
sg19
(lp11052
sg22
(lp11053
sg25
I0
sba(iArchitecture
Entity
p11054
(dp11055
g11
(lp11056
sg14
S'com.google.common.util.concurrent.AbstractIdleServiceTest'
p11057
sg16
(lp11058
sg19
(lp11059
sg22
(lp11060
sg25
I0
sba(iArchitecture
Entity
p11061
(dp11062
g11
(lp11063
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorService'
p11064
sg16
(lp11065
sg19
(lp11066
sg22
(lp11067
sg25
I0
sba(iArchitecture
Entity
p11068
(dp11069
g11
(lp11070
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorServiceTest'
p11071
sg16
(lp11072
sg19
(lp11073
sg22
(lp11074
sg25
I0
sba(iArchitecture
Entity
p11075
(dp11076
g11
(lp11077
sg14
S'com.google.common.util.concurrent.AbstractScheduledService'
p11078
sg16
(lp11079
sg19
(lp11080
sg22
(lp11081
sg25
I0
sba(iArchitecture
Entity
p11082
(dp11083
g11
(lp11084
sg14
S'com.google.common.util.concurrent.AbstractScheduledServiceTest'
p11085
sg16
(lp11086
sg19
(lp11087
sg22
(lp11088
sg25
I0
sba(iArchitecture
Entity
p11089
(dp11090
g11
(lp11091
sg14
S'com.google.common.util.concurrent.AbstractService'
p11092
sg16
(lp11093
sg19
(lp11094
sg22
(lp11095
sg25
I0
sba(iArchitecture
Entity
p11096
(dp11097
g11
(lp11098
sg14
S'com.google.common.util.concurrent.AbstractServiceTest'
p11099
sg16
(lp11100
sg19
(lp11101
sg22
(lp11102
sg25
I0
sba(iArchitecture
Entity
p11103
(dp11104
g11
(lp11105
sg14
S'com.google.common.util.concurrent.Callables'
p11106
sg16
(lp11107
sg19
(lp11108
sg22
(lp11109
sg25
I0
sba(iArchitecture
Entity
p11110
(dp11111
g11
(lp11112
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactory'
p11113
sg16
(lp11114
sg19
(lp11115
sg22
(lp11116
sg25
I0
sba(iArchitecture
Entity
p11117
(dp11118
g11
(lp11119
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactoryTest'
p11120
sg16
(lp11121
sg19
(lp11122
sg22
(lp11123
sg25
I0
sba(iArchitecture
Entity
p11124
(dp11125
g11
(lp11126
sg14
S'com.google.common.util.concurrent.ExecutionError'
p11127
sg16
(lp11128
sg19
(lp11129
sg22
(lp11130
sg25
I0
sba(iArchitecture
Entity
p11131
(dp11132
g11
(lp11133
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueue'
p11134
sg16
(lp11135
sg19
(lp11136
sg22
(lp11137
sg25
I0
sba(iArchitecture
Entity
p11138
(dp11139
g11
(lp11140
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFuture'
p11141
sg16
(lp11142
sg19
(lp11143
sg22
(lp11144
sg25
I0
sba(iArchitecture
Entity
p11145
(dp11146
g11
(lp11147
sg14
S'com.google.common.util.concurrent.ForwardingExecutorService'
p11148
sg16
(lp11149
sg19
(lp11150
sg22
(lp11151
sg25
I0
sba(iArchitecture
Entity
p11152
(dp11153
g11
(lp11154
sg14
S'com.google.common.util.concurrent.ForwardingFuture'
p11155
sg16
(lp11156
sg19
(lp11157
sg22
(lp11158
sg25
I0
sba(iArchitecture
Entity
p11159
(dp11160
g11
(lp11161
sg14
S'com.google.common.util.concurrent.ForwardingListenableFuture'
p11162
sg16
(lp11163
sg19
(lp11164
sg22
(lp11165
sg25
I0
sba(iArchitecture
Entity
p11166
(dp11167
g11
(lp11168
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorService'
p11169
sg16
(lp11170
sg19
(lp11171
sg22
(lp11172
sg25
I0
sba(iArchitecture
Entity
p11173
(dp11174
g11
(lp11175
sg14
S'com.google.common.util.concurrent.GwtFuturesCatchingSpecialization'
p11176
sg16
(lp11177
sg19
(lp11178
sg22
(lp11179
sg25
I0
sba(iArchitecture
Entity
p11180
(dp11181
g11
(lp11182
sg14
S'com.google.common.util.concurrent.JdkFutureAdapters'
p11183
sg16
(lp11184
sg19
(lp11185
sg22
(lp11186
sg25
I0
sba(iArchitecture
Entity
p11187
(dp11188
g11
(lp11189
sg14
S'com.google.common.util.concurrent.ListenableFuture'
p11190
sg16
(lp11191
sg19
(lp11192
sg22
(lp11193
sg25
I0
sba(iArchitecture
Entity
p11194
(dp11195
g11
(lp11196
sg14
S'com.google.common.util.concurrent.ListenerCallQueue'
p11197
sg16
(lp11198
sg19
(lp11199
sg22
(lp11200
sg25
I0
sba(iArchitecture
Entity
p11201
(dp11202
g11
(lp11203
sg14
S'com.google.common.util.concurrent.ListenerCallQueueTest'
p11204
sg16
(lp11205
sg19
(lp11206
sg22
(lp11207
sg25
I0
sba(iArchitecture
Entity
p11208
(dp11209
g11
(lp11210
sg14
S'com.google.common.util.concurrent.ListeningExecutorService'
p11211
sg16
(lp11212
sg19
(lp11213
sg22
(lp11214
sg25
I0
sba(iArchitecture
Entity
p11215
(dp11216
g11
(lp11217
sg14
S'com.google.common.util.concurrent.MoreExecutors'
p11218
sg16
(lp11219
sg19
(lp11220
sg22
(lp11221
sg25
I0
sba(iArchitecture
Entity
p11222
(dp11223
g11
(lp11224
sg14
S'com.google.common.util.concurrent.MoreExecutorsTest'
p11225
sg16
(lp11226
sg19
(lp11227
sg22
(lp11228
sg25
I0
sba(iArchitecture
Entity
p11229
(dp11230
g11
(lp11231
sg14
S'com.google.common.util.concurrent.RateLimiter'
p11232
sg16
(lp11233
sg19
(lp11234
sg22
(lp11235
sg25
I0
sba(iArchitecture
Entity
p11236
(dp11237
g11
(lp11238
sg14
S'com.google.common.util.concurrent.Runnables'
p11239
sg16
(lp11240
sg19
(lp11241
sg22
(lp11242
sg25
I0
sba(iArchitecture
Entity
p11243
(dp11244
g11
(lp11245
sg14
S'com.google.common.util.concurrent.SerializingExecutor'
p11246
sg16
(lp11247
sg19
(lp11248
sg22
(lp11249
sg25
I0
sba(iArchitecture
Entity
p11250
(dp11251
g11
(lp11252
sg14
S'com.google.common.util.concurrent.Service'
p11253
sg16
(lp11254
sg19
(lp11255
sg22
(lp11256
sg25
I0
sba(iArchitecture
Entity
p11257
(dp11258
g11
(lp11259
sg14
S'com.google.common.util.concurrent.ServiceManager'
p11260
sg16
(lp11261
sg19
(lp11262
sg22
(lp11263
sg25
I0
sba(iArchitecture
Entity
p11264
(dp11265
g11
(lp11266
sg14
S'com.google.common.util.concurrent.SettableFuture'
p11267
sg16
(lp11268
sg19
(lp11269
sg22
(lp11270
sg25
I0
sba(iArchitecture
Entity
p11271
(dp11272
g11
(lp11273
sg14
S'com.google.common.util.concurrent.SingleThreadAbstractFutureBenchmark'
p11274
sg16
(lp11275
sg19
(lp11276
sg22
(lp11277
sg25
I0
sba(iArchitecture
Entity
p11278
(dp11279
g11
(lp11280
sg14
S'com.google.common.util.concurrent.SmoothRateLimiter'
p11281
sg16
(lp11282
sg19
(lp11283
sg22
(lp11284
sg25
I0
sba(iArchitecture
Entity
p11285
(dp11286
g11
(lp11287
sg14
S'com.google.common.util.concurrent.ThreadFactoryBuilder'
p11288
sg16
(lp11289
sg19
(lp11290
sg22
(lp11291
sg25
I0
sba(iArchitecture
Entity
p11292
(dp11293
g11
(lp11294
sg14
S'com.google.common.util.concurrent.TrustedInputFutureTest'
p11295
sg16
(lp11296
sg19
(lp11297
sg22
(lp11298
sg25
I0
sba(iArchitecture
Entity
p11299
(dp11300
g11
(lp11301
sg14
S'com.google.common.util.concurrent.UncheckedExecutionException'
p11302
sg16
(lp11303
sg19
(lp11304
sg22
(lp11305
sg25
I0
sba(iArchitecture
Entity
p11306
(dp11307
g11
(lp11308
sg14
S'com.google.common.util.concurrent.UncheckedTimeoutException'
p11309
sg16
(lp11310
sg19
(lp11311
sg22
(lp11312
sg25
I0
sba(iArchitecture
Entity
p11313
(dp11314
g11
(lp11315
sg14
S'com.google.common.util.concurrent.UntrustedInputFutureTest'
p11316
sg16
(lp11317
sg19
(lp11318
sg22
(lp11319
sg25
I0
sba(iArchitecture
Entity
p11320
(dp11321
g11
(lp11322
sg14
S'com.google.common.util.concurrent.WrappingExecutorService'
p11323
sg16
(lp11324
sg19
(lp11325
sg22
(lp11326
sg25
I0
sba(iArchitecture
Entity
p11327
(dp11328
g11
(lp11329
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorService'
p11330
sg16
(lp11331
sg19
(lp11332
sg22
(lp11333
sg25
I0
sba(iArchitecture
Entity
p11334
(dp11335
g11
(lp11336
sg14
S'com.google.common.util.concurrent.testing.AbstractCheckedFutureTest'
p11337
sg16
(lp11338
sg19
(lp11339
sg22
(lp11340
sg25
I0
sba(iArchitecture
Entity
p11341
(dp11342
g11
(lp11343
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixPatterns'
p11344
sg16
(lp11345
sg19
(lp11346
sg22
(lp11347
sg25
I0
sba(iArchitecture
Entity
p11348
(dp11349
g11
(lp11350
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixType'
p11351
sg16
(lp11352
sg19
(lp11353
sg22
(lp11354
sg25
I0
sba(iArchitecture
Entity
p11355
(dp11356
g11
(lp11357
sg14
S'java.lang.InterruptedException'
p11358
sg16
(lp11359
sg19
(lp11360
sg22
(lp11361
sg25
I0
sba(iArchitecture
Entity
p11362
(dp11363
g11
(lp11364
sg14
S'java.util.concurrent.Future'
p11365
sg16
(lp11366
sg19
(lp11367
sg22
(lp11368
sg25
I0
sbasg1017
(lp11369
g8609
ag8616
ag8623
ag8630
ag8637
ag8644
ag8651
ag8658
ag8665
ag8672
ag8679
ag8686
ag8693
ag8700
ag8707
ag8714
ag8721
ag8728
ag8735
ag8742
ag8749
ag8756
ag8763
ag8770
ag8777
ag8784
ag8791
ag8798
ag8805
ag8812
ag8820
ag8827
ag8834
ag8841
ag8848
ag8855
ag8862
ag8869
ag8876
ag8883
ag8890
ag8897
ag8904
ag8911
ag8918
ag8925
ag8932
ag8939
ag8946
ag8953
ag8960
ag8967
ag8974
ag8981
ag8988
ag8995
ag9002
ag9009
ag9016
ag9023
ag9030
ag9037
ag9044
ag9051
ag9058
ag9065
ag9072
ag9079
ag9086
ag9093
ag9100
ag9107
ag9114
ag9121
ag9128
ag9135
ag9142
ag9149
ag9156
ag9163
ag9170
ag9177
ag9184
ag9191
ag9198
ag9205
ag9212
ag9219
ag9226
ag9233
ag9240
ag9247
ag9254
ag9261
ag9268
ag9275
ag9282
ag9289
ag9296
ag9303
ag9310
ag9317
ag9324
ag9331
ag9338
ag9345
ag9352
ag9359
ag9366
ag9373
ag9380
ag9387
ag9394
ag9401
ag9408
ag9415
ag9422
ag9429
ag9436
ag9443
ag9450
ag9457
ag9464
ag9471
ag9478
ag9485
ag9492
ag9499
ag9506
ag9513
ag9520
ag9527
ag9534
ag9541
ag9548
ag9555
ag9562
ag9569
ag9576
ag9583
ag9590
ag9597
ag9604
ag9611
ag9618
ag9625
ag9632
ag9639
ag9646
ag9653
ag9660
ag9667
ag9674
ag9681
ag9688
ag9695
ag9702
ag9709
ag9716
ag9723
ag9730
ag9737
ag9744
ag9751
ag9758
ag9765
ag9772
ag9779
ag9786
ag9793
ag9800
ag9807
ag9814
ag9821
ag9828
ag9835
ag9842
ag9849
ag9856
ag9863
ag9870
ag9877
ag9884
ag9891
ag9898
ag9905
ag9912
ag9919
ag9926
ag9933
ag9940
ag9947
ag9954
ag9961
ag9968
ag9975
ag9982
ag9989
ag9996
ag10003
ag10010
ag10017
ag10024
ag10031
ag10038
ag10045
ag10052
ag10059
ag10066
ag10073
ag10080
ag10087
ag10094
ag10101
ag10108
ag10115
ag10122
ag10129
ag10136
ag10143
ag10150
ag10157
ag10164
ag10171
ag10178
ag10185
ag10192
ag10199
ag10206
ag10213
ag10220
ag10227
ag10234
ag10241
ag10248
ag10255
ag10262
ag10269
ag10276
ag10283
ag10290
ag10297
ag10304
ag10311
ag10318
ag10325
ag10332
ag10339
ag10346
ag10353
ag10360
ag10367
ag10374
ag10381
ag10388
ag10395
ag10402
ag10409
ag10416
ag10423
ag10430
ag10437
ag10444
ag10451
ag10458
ag10465
ag10472
ag10479
ag10486
ag10493
ag10500
ag10507
ag10514
ag10521
ag10528
ag10535
ag10542
ag10549
ag10556
ag10563
ag10570
ag10577
ag10584
ag10591
ag10598
ag10605
ag10612
ag10619
ag10626
ag10633
ag10640
ag10647
ag10654
ag10661
ag10668
ag10675
ag10682
ag10689
ag10697
ag10707
ag10714
ag10721
ag10728
ag10735
ag10742
ag10749
ag10756
ag10763
ag10770
ag10777
ag10784
ag10791
ag10798
ag10805
ag10812
ag10819
ag10826
ag10833
ag10840
ag10847
ag10854
ag10861
ag10868
ag10875
ag10882
ag10890
ag10901
ag10909
ag10916
ag10923
ag10930
ag10937
ag10944
ag10951
ag10958
ag10965
ag10972
ag10979
ag10986
ag10993
ag11000
ag11007
ag11014
ag11021
ag11028
ag11036
ag11043
ag11050
ag11057
ag11064
ag11071
ag11078
ag11085
ag11092
ag11099
ag11106
ag11113
ag11120
ag11127
ag11134
ag11141
ag11148
ag11155
ag11162
ag11169
ag11176
ag11183
ag11190
ag11197
ag11204
ag11211
ag11218
ag11225
ag11232
ag11239
ag11246
ag11253
ag11260
ag11267
ag11274
ag11281
ag11288
ag11295
ag11302
ag11309
ag11316
ag11323
ag11330
ag11337
ag11344
ag11351
ag11358
ag11365
asg25
I0
sg1019
S'networking'
p11370
sba(iArchitecture
Cluster
p11371
(dp11372
g7
(lp11373
(iArchitecture
Entity
p11374
(dp11375
g11
(lp11376
sg14
S'com.google.common.ForceGuavaCompilationEntryPoint'
p11377
sg16
(lp11378
sg19
(lp11379
sg22
(lp11380
sg25
I0
sba(iArchitecture
Entity
p11381
(dp11382
g11
(lp11383
sg14
S'com.google.common.GuavaTestsEntryPoint'
p11384
sg16
(lp11385
sg19
(lp11386
sg22
(lp11387
sg25
I0
sba(iArchitecture
Entity
p11388
(dp11389
g11
(lp11390
sg14
S'com.google.common.annotations.VisibleForTesting'
p11391
sg16
(lp11392
sg19
(lp11393
sg22
(lp11394
sg25
I0
sba(iArchitecture
Entity
p11395
(dp11396
g11
(lp11397
sg14
S'com.google.common.base.FinalizablePhantomReference'
p11398
sg16
(lp11399
sg19
(lp11400
sg22
(lp11401
sg25
I0
sba(iArchitecture
Entity
p11402
(dp11403
g11
(lp11404
sg14
S'com.google.common.base.FinalizableReference'
p11405
sg16
(lp11406
sg19
(lp11407
sg22
(lp11408
sg25
I0
sba(iArchitecture
Entity
p11409
(dp11410
g11
(lp11411
sg14
S'com.google.common.base.FinalizableSoftReference'
p11412
sg16
(lp11413
sg19
(lp11414
sg22
(lp11415
sg25
I0
sba(iArchitecture
Entity
p11416
(dp11417
g11
(lp11418
sg14
S'com.google.common.base.FinalizableWeakReference'
p11419
sg16
(lp11420
sg19
(lp11421
sg22
(lp11422
sg25
I0
sba(iArchitecture
Entity
p11423
(dp11424
g11
(lp11425
sg14
S'com.google.common.base.StopwatchBenchmark'
p11426
sg16
(lp11427
sg19
(lp11428
sg22
(lp11429
sg25
I0
sba(iArchitecture
Entity
p11430
(dp11431
g11
(lp11432
sg14
S'com.google.common.base.TestModuleEntryPoint'
p11433
sg16
(lp11434
sg19
(lp11435
sg22
(lp11436
sg25
I0
sba(iArchitecture
Entity
p11437
(dp11438
g11
(lp11439
sg14
S'com.google.common.cache.CacheTesting'
p11440
sg16
(lp11441
sg19
(lp11442
sg22
(lp11443
sg25
I0
sba(iArchitecture
Entity
p11444
(dp11445
g11
(lp11446
sg14
S'com.google.common.cache.LongAddable'
p11447
sg16
(lp11448
sg19
(lp11449
sg22
(lp11450
sg25
I0
sba(iArchitecture
Entity
p11451
(dp11452
g11
(lp11453
sg14
S'com.google.common.collect.AbstractMapEntryTest'
p11454
sg16
(lp11455
sg19
(lp11456
sg22
(lp11457
sg25
I0
sba(iArchitecture
Entity
p11458
(dp11459
g11
(lp11460
sg14
S'com.google.common.collect.ArrayListMultimap'
p11461
sg16
(lp11462
sg19
(lp11463
sg22
(lp11464
sg25
I0
sba(iArchitecture
Entity
p11465
(dp11466
g11
(lp11467
sg14
S'com.google.common.collect.ComputationException'
p11468
sg16
(lp11469
sg19
(lp11470
sg22
(lp11471
sg25
I0
sba(iArchitecture
Entity
p11472
(dp11473
g11
(lp11474
sg14
S'com.google.common.collect.ComputingConcurrentHashMapTest'
p11475
sg16
(lp11476
sg19
(lp11477
sg22
(lp11478
sg25
I0
sba(iArchitecture
Entity
p11479
(dp11480
g11
(lp11481
sg14
S'com.google.common.collect.FilteredMultimapValues'
p11482
sg16
(lp11483
sg19
(lp11484
sg22
(lp11485
sg25
I0
sba(iArchitecture
Entity
p11486
(dp11487
g11
(lp11488
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p11489
sg16
(lp11490
sg19
(lp11491
sg22
(lp11492
sg25
I0
sba(iArchitecture
Entity
p11493
(dp11494
g11
(lp11495
sg14
S'com.google.common.collect.ForwardingImmutableList_CustomFieldSerializer'
p11496
sg16
(lp11497
sg19
(lp11498
sg22
(lp11499
sg25
I0
sba(iArchitecture
Entity
p11500
(dp11501
g11
(lp11502
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p11503
sg16
(lp11504
sg19
(lp11505
sg22
(lp11506
sg25
I0
sba(iArchitecture
Entity
p11507
(dp11508
g11
(lp11509
sg14
S'com.google.common.collect.ForwardingImmutableSet_CustomFieldSerializer'
p11510
sg16
(lp11511
sg19
(lp11512
sg22
(lp11513
sg25
I0
sba(iArchitecture
Entity
p11514
(dp11515
g11
(lp11516
sg14
S'com.google.common.collect.ImmutableAsList_CustomFieldSerializer'
p11517
sg16
(lp11518
sg19
(lp11519
sg22
(lp11520
sg25
I0
sba(iArchitecture
Entity
p11521
(dp11522
g11
(lp11523
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p11524
sg16
(lp11525
sg19
(lp11526
sg22
(lp11527
sg25
I0
sba(iArchitecture
Entity
p11528
(dp11529
g11
(lp11530
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p11531
sg16
(lp11532
sg19
(lp11533
sg22
(lp11534
sg25
I0
sba(iArchitecture
Entity
p11535
(dp11536
g11
(lp11537
sg14
S'com.google.common.collect.ImmutableSortedMap'
p11538
sg16
(lp11539
sg19
(lp11540
sg22
(lp11541
sg25
I0
sba(iArchitecture
Entity
p11542
(dp11543
g11
(lp11544
sg14
S'com.google.common.collect.RegularImmutableAsList'
p11545
sg16
(lp11546
sg19
(lp11547
sg22
(lp11548
sg25
I0
sba(iArchitecture
Entity
p11549
(dp11550
g11
(lp11551
sg14
S'com.google.common.collect.RegularImmutableMap'
p11552
sg16
(lp11553
sg19
(lp11554
sg22
(lp11555
sg25
I0
sba(iArchitecture
Entity
p11556
(dp11557
g11
(lp11558
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p11559
sg16
(lp11560
sg19
(lp11561
sg22
(lp11562
sg25
I0
sba(iArchitecture
Entity
p11563
(dp11564
g11
(lp11565
sg14
S'com.google.common.collect.TableCollectionTest'
p11566
sg16
(lp11567
sg19
(lp11568
sg22
(lp11569
sg25
I0
sba(iArchitecture
Entity
p11570
(dp11571
g11
(lp11572
sg14
S'com.google.common.collect.TestModuleEntryPoint'
p11573
sg16
(lp11574
sg19
(lp11575
sg22
(lp11576
sg25
I0
sba(iArchitecture
Entity
p11577
(dp11578
g11
(lp11579
sg14
S'com.google.common.collect.testing.AnEnum'
p11580
sg16
(lp11581
sg19
(lp11582
sg22
(lp11583
sg25
I0
sba(iArchitecture
Entity
p11584
(dp11585
g11
(lp11586
sg14
S'com.google.common.collect.testing.ConcurrentMapTestSuiteBuilder'
p11587
sg16
(lp11588
sg19
(lp11589
sg22
(lp11590
sg25
I0
sba(iArchitecture
Entity
p11591
(dp11592
g11
(lp11593
sg14
S'com.google.common.collect.testing.ExampleIteratorTester'
p11594
sg16
(lp11595
sg19
(lp11596
sg22
(lp11597
sg25
I0
sba(iArchitecture
Entity
p11598
(dp11599
g11
(lp11600
sg14
S'com.google.common.collect.testing.OpenJdk6MapTests'
p11601
sg16
(lp11602
sg19
(lp11603
sg22
(lp11604
sg25
I0
sba(iArchitecture
Entity
p11605
(dp11606
g11
(lp11607
sg14
S'com.google.common.collect.testing.TestModuleEntryPoint'
p11608
sg16
(lp11609
sg19
(lp11610
sg22
(lp11611
sg25
I0
sba(iArchitecture
Entity
p11612
(dp11613
g11
(lp11614
sg14
S'com.google.common.collect.testing.google.AbstractBiMapTester'
p11615
sg16
(lp11616
sg19
(lp11617
sg22
(lp11618
sg25
I0
sba(iArchitecture
Entity
p11619
(dp11620
g11
(lp11621
sg14
S'com.google.common.collect.testing.google.ListGenerators'
p11622
sg16
(lp11623
sg19
(lp11624
sg22
(lp11625
sg25
I0
sba(iArchitecture
Entity
p11626
(dp11627
g11
(lp11628
sg14
S'com.google.common.collect.testing.google.MultimapKeysTester'
p11629
sg16
(lp11630
sg19
(lp11631
sg22
(lp11632
sg25
I0
sba(iArchitecture
Entity
p11633
(dp11634
g11
(lp11635
sg14
S'com.google.common.collect.testing.google.MultimapRemoveEntryTester'
p11636
sg16
(lp11637
sg19
(lp11638
sg22
(lp11639
sg25
I0
sba(iArchitecture
Entity
p11640
(dp11641
g11
(lp11642
sg14
S'com.google.common.collect.testing.google.MultisetEntrySetTester'
p11643
sg16
(lp11644
sg19
(lp11645
sg22
(lp11646
sg25
I0
sba(iArchitecture
Entity
p11647
(dp11648
g11
(lp11649
sg14
S'com.google.common.collect.testing.google.MultisetIteratorTester'
p11650
sg16
(lp11651
sg19
(lp11652
sg22
(lp11653
sg25
I0
sba(iArchitecture
Entity
p11654
(dp11655
g11
(lp11656
sg14
S'com.google.common.collect.testing.google.MultisetSerializationTester'
p11657
sg16
(lp11658
sg19
(lp11659
sg22
(lp11660
sg25
I0
sba(iArchitecture
Entity
p11661
(dp11662
g11
(lp11663
sg14
S'com.google.common.collect.testing.google.TestListMultimapGenerator'
p11664
sg16
(lp11665
sg19
(lp11666
sg22
(lp11667
sg25
I0
sba(iArchitecture
Entity
p11668
(dp11669
g11
(lp11670
sg14
S'com.google.common.collect.testing.google.TestSetMultimapGenerator'
p11671
sg16
(lp11672
sg19
(lp11673
sg22
(lp11674
sg25
I0
sba(iArchitecture
Entity
p11675
(dp11676
g11
(lp11677
sg14
S'com.google.common.collect.testing.testers.AbstractQueueTester'
p11678
sg16
(lp11679
sg19
(lp11680
sg22
(lp11681
sg25
I0
sba(iArchitecture
Entity
p11682
(dp11683
g11
(lp11684
sg14
S'com.google.common.collect.testing.testers.CollectionAddAllTester'
p11685
sg16
(lp11686
sg19
(lp11687
sg22
(lp11688
sg25
I0
sba(iArchitecture
Entity
p11689
(dp11690
g11
(lp11691
sg14
S'com.google.common.collect.testing.testers.CollectionSerializationTester'
p11692
sg16
(lp11693
sg19
(lp11694
sg22
(lp11695
sg25
I0
sba(iArchitecture
Entity
p11696
(dp11697
g11
(lp11698
sg14
S'com.google.common.collect.testing.testers.ListHashCodeTester'
p11699
sg16
(lp11700
sg19
(lp11701
sg22
(lp11702
sg25
I0
sba(iArchitecture
Entity
p11703
(dp11704
g11
(lp11705
sg14
S'com.google.common.collect.testing.testers.MapSerializationTester'
p11706
sg16
(lp11707
sg19
(lp11708
sg22
(lp11709
sg25
I0
sba(iArchitecture
Entity
p11710
(dp11711
g11
(lp11712
sg14
S'com.google.common.collect.testing.testers.QueueOfferTester'
p11713
sg16
(lp11714
sg19
(lp11715
sg22
(lp11716
sg25
I0
sba(iArchitecture
Entity
p11717
(dp11718
g11
(lp11719
sg14
S'com.google.common.collect.testing.testers.SetRemoveTester'
p11720
sg16
(lp11721
sg19
(lp11722
sg22
(lp11723
sg25
I0
sba(iArchitecture
Entity
p11724
(dp11725
g11
(lp11726
sg14
S'com.google.common.escape.CharEscaperBuilderTest'
p11727
sg16
(lp11728
sg19
(lp11729
sg22
(lp11730
sg25
I0
sba(iArchitecture
Entity
p11731
(dp11732
g11
(lp11733
sg14
S'com.google.common.escape.PackageSanityTests'
p11734
sg16
(lp11735
sg19
(lp11736
sg22
(lp11737
sg25
I0
sba(iArchitecture
Entity
p11738
(dp11739
g11
(lp11740
sg14
S'com.google.common.escape.TestModuleEntryPoint'
p11741
sg16
(lp11742
sg19
(lp11743
sg22
(lp11744
sg25
I0
sba(iArchitecture
Entity
p11745
(dp11746
g11
(lp11747
sg14
S'com.google.common.eventbus.Dispatcher'
p11748
sg16
(lp11749
sg19
(lp11750
sg22
(lp11751
sg25
I0
sba(iArchitecture
Entity
p11752
(dp11753
g11
(lp11754
sg14
S'com.google.common.eventbus.EventBusBenchmark'
p11755
sg16
(lp11756
sg19
(lp11757
sg22
(lp11758
sg25
I0
sba(iArchitecture
Entity
p11759
(dp11760
g11
(lp11761
sg14
S'com.google.common.eventbus.StringCatcher'
p11762
sg16
(lp11763
sg19
(lp11764
sg22
(lp11765
sg25
I0
sba(iArchitecture
Entity
p11766
(dp11767
g11
(lp11768
sg14
S'com.google.common.eventbus.SubscriberExceptionHandler'
p11769
sg16
(lp11770
sg19
(lp11771
sg22
(lp11772
sg25
I0
sba(iArchitecture
Entity
p11773
(dp11774
g11
(lp11775
sg14
S'com.google.common.hash.Funnel'
p11776
sg16
(lp11777
sg19
(lp11778
sg22
(lp11779
sg25
I0
sba(iArchitecture
Entity
p11780
(dp11781
g11
(lp11782
sg14
S'com.google.common.hash.PackageSanityTests'
p11783
sg16
(lp11784
sg19
(lp11785
sg22
(lp11786
sg25
I0
sba(iArchitecture
Entity
p11787
(dp11788
g11
(lp11789
sg14
S'com.google.common.io.InputSupplier'
p11790
sg16
(lp11791
sg19
(lp11792
sg22
(lp11793
sg25
I0
sba(iArchitecture
Entity
p11794
(dp11795
g11
(lp11796
sg14
S'com.google.common.io.TestModuleEntryPoint'
p11797
sg16
(lp11798
sg19
(lp11799
sg22
(lp11800
sg25
I0
sba(iArchitecture
Entity
p11801
(dp11802
g11
(lp11803
sg14
S'com.google.common.math.MathTesting'
p11804
sg16
(lp11805
sg19
(lp11806
sg22
(lp11807
sg25
I0
sba(iArchitecture
Entity
p11808
(dp11809
g11
(lp11810
sg14
S'com.google.common.math.PackageSanityTests'
p11811
sg16
(lp11812
sg19
(lp11813
sg22
(lp11814
sg25
I0
sba(iArchitecture
Entity
p11815
(dp11816
g11
(lp11817
sg14
S'com.google.common.math.TestModuleEntryPoint'
p11818
sg16
(lp11819
sg19
(lp11820
sg22
(lp11821
sg25
I0
sba(iArchitecture
Entity
p11822
(dp11823
g11
(lp11824
sg14
S'com.google.common.math.TestPlatform'
p11825
sg16
(lp11826
sg19
(lp11827
sg22
(lp11828
sg25
I0
sba(iArchitecture
Entity
p11829
(dp11830
g11
(lp11831
sg14
S'com.google.common.primitives.FloatsTest'
p11832
sg16
(lp11833
sg19
(lp11834
sg22
(lp11835
sg25
I0
sba(iArchitecture
Entity
p11836
(dp11837
g11
(lp11838
sg14
S'com.google.common.primitives.FloatsTest_gwt'
p11839
sg16
(lp11840
sg19
(lp11841
sg22
(lp11842
sg25
I0
sba(iArchitecture
Entity
p11843
(dp11844
g11
(lp11845
sg14
S'com.google.common.primitives.ShortsTest_gwt'
p11846
sg16
(lp11847
sg19
(lp11848
sg22
(lp11849
sg25
I0
sba(iArchitecture
Entity
p11850
(dp11851
g11
(lp11852
sg14
S'com.google.common.primitives.TestModuleEntryPoint'
p11853
sg16
(lp11854
sg19
(lp11855
sg22
(lp11856
sg25
I0
sba(iArchitecture
Entity
p11857
(dp11858
g11
(lp11859
sg14
S'com.google.common.reflect.PackageSanityTests'
p11860
sg16
(lp11861
sg19
(lp11862
sg22
(lp11863
sg25
I0
sba(iArchitecture
Entity
p11864
(dp11865
g11
(lp11866
sg14
S'com.google.common.reflect.TypeParameterTest'
p11867
sg16
(lp11868
sg19
(lp11869
sg22
(lp11870
sg25
I0
sba(iArchitecture
Entity
p11871
(dp11872
g11
(lp11873
sg14
S'com.google.common.reflect.subpackage.ClassInSubPackage'
p11874
sg16
(lp11875
sg19
(lp11876
sg22
(lp11877
sg25
I0
sba(iArchitecture
Entity
p11878
(dp11879
g11
(lp11880
sg14
S'com.google.common.testing.AbstractPackageSanityTestsTest'
p11881
sg16
(lp11882
sg19
(lp11883
sg22
(lp11884
sg25
I0
sba(iArchitecture
Entity
p11885
(dp11886
g11
(lp11887
sg14
S'com.google.common.testing.EquivalenceTesterTest'
p11888
sg16
(lp11889
sg19
(lp11890
sg22
(lp11891
sg25
I0
sba(iArchitecture
Entity
p11892
(dp11893
g11
(lp11894
sg14
S'com.google.common.testing.PackageSanityTests'
p11895
sg16
(lp11896
sg19
(lp11897
sg22
(lp11898
sg25
I0
sba(iArchitecture
Entity
p11899
(dp11900
g11
(lp11901
sg14
S'com.google.common.testing.RelationshipTesterTest'
p11902
sg16
(lp11903
sg19
(lp11904
sg22
(lp11905
sg25
I0
sba(iArchitecture
Entity
p11906
(dp11907
g11
(lp11908
sg14
S'com.google.common.testing.TearDownAccepter'
p11909
sg16
(lp11910
sg19
(lp11911
sg22
(lp11912
sg25
I0
sba(iArchitecture
Entity
p11913
(dp11914
g11
(lp11915
sg14
S'com.google.common.testing.TestModuleEntryPoint'
p11916
sg16
(lp11917
sg19
(lp11918
sg22
(lp11919
sg25
I0
sba(iArchitecture
Entity
p11920
(dp11921
g11
(lp11922
g6929
ag6929
asg14
S'com.google.common.util.concurrent.AggregateFutureState'
p11923
sg16
(lp11924
VWe already do in `AbstractFuture`.\u000a
p11925
aVWe already do in `AbstractFuture`.\u000a
p11926
asg19
(lp11927
g6935
ag6935
asg22
(lp11928
g6937
ag6937
asg25
I0
sba(iArchitecture
Entity
p11929
(dp11930
g11
(lp11931
sg14
S'com.google.common.util.concurrent.CallablesTest_gwt'
p11932
sg16
(lp11933
sg19
(lp11934
sg22
(lp11935
sg25
I0
sba(iArchitecture
Entity
p11936
(dp11937
g11
(lp11938
sg14
S'com.google.common.util.concurrent.ExecutionListTest'
p11939
sg16
(lp11940
sg19
(lp11941
sg22
(lp11942
sg25
I0
sba(iArchitecture
Entity
p11943
(dp11944
g11
(lp11945
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueueTest'
p11946
sg16
(lp11947
sg19
(lp11948
sg22
(lp11949
sg25
I0
sba(iArchitecture
Entity
p11950
(dp11951
g11
(lp11952
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFutureTest'
p11953
sg16
(lp11954
sg19
(lp11955
sg22
(lp11956
sg25
I0
sba(iArchitecture
Entity
p11957
(dp11958
g11
(lp11959
sg14
S'com.google.common.util.concurrent.ForwardingExecutorServiceTest'
p11960
sg16
(lp11961
sg19
(lp11962
sg22
(lp11963
sg25
I0
sba(iArchitecture
Entity
p11964
(dp11965
g11
(lp11966
sg14
S'com.google.common.util.concurrent.ForwardingFutureTest'
p11967
sg16
(lp11968
sg19
(lp11969
sg22
(lp11970
sg25
I0
sba(iArchitecture
Entity
p11971
(dp11972
g11
(lp11973
sg14
S'com.google.common.util.concurrent.ForwardingListenableFutureTest'
p11974
sg16
(lp11975
sg19
(lp11976
sg22
(lp11977
sg25
I0
sba(iArchitecture
Entity
p11978
(dp11979
g11
(lp11980
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorServiceTest'
p11981
sg16
(lp11982
sg19
(lp11983
sg22
(lp11984
sg25
I0
sba(iArchitecture
Entity
p11985
(dp11986
g11
(lp11987
sg14
S'com.google.common.util.concurrent.FutureCallbackTest_gwt'
p11988
sg16
(lp11989
sg19
(lp11990
sg22
(lp11991
sg25
I0
sba(iArchitecture
Entity
p11992
(dp11993
g11
(lp11994
sg14
S'com.google.common.util.concurrent.InterruptibleMonitorTest'
p11995
sg16
(lp11996
sg19
(lp11997
sg22
(lp11998
sg25
I0
sba(iArchitecture
Entity
p11999
(dp12000
g11
(lp12001
sg14
S'com.google.common.util.concurrent.ListenableFutureTaskTest'
p12002
sg16
(lp12003
sg19
(lp12004
sg22
(lp12005
sg25
I0
sba(iArchitecture
Entity
p12006
(dp12007
g11
(lp12008
sg14
S'com.google.common.util.concurrent.RunnablesTest'
p12009
sg16
(lp12010
sg19
(lp12011
sg22
(lp12012
sg25
I0
sba(iArchitecture
Entity
p12013
(dp12014
g11
(lp12015
sg14
S'com.google.common.util.concurrent.RunnablesTest_gwt'
p12016
sg16
(lp12017
sg19
(lp12018
sg22
(lp12019
sg25
I0
sba(iArchitecture
Entity
p12020
(dp12021
g11
(lp12022
sg14
S'com.google.common.util.concurrent.ThreadFactoryBuilderTest'
p12023
sg16
(lp12024
sg19
(lp12025
sg22
(lp12026
sg25
I0
sba(iArchitecture
Entity
p12027
(dp12028
g11
(lp12029
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTaskTest'
p12030
sg16
(lp12031
sg19
(lp12032
sg22
(lp12033
sg25
I0
sba(iArchitecture
Entity
p12034
(dp12035
g11
(lp12036
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTaskTest_gwt'
p12037
sg16
(lp12038
sg19
(lp12039
sg22
(lp12040
sg25
I0
sba(iArchitecture
Entity
p12041
(dp12042
g11
(lp12043
sg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlersTest'
p12044
sg16
(lp12045
sg19
(lp12046
sg22
(lp12047
sg25
I0
sba(iArchitecture
Entity
p12048
(dp12049
g11
(lp12050
sg14
S'com.google.common.util.concurrent.UninterruptibleMonitorTest'
p12051
sg16
(lp12052
sg19
(lp12053
sg22
(lp12054
sg25
I0
sba(iArchitecture
Entity
p12055
(dp12056
g11
(lp12057
sg14
S'com.google.common.util.concurrent.testing.SameThreadScheduledExecutorService'
p12058
sg16
(lp12059
sg19
(lp12060
sg22
(lp12061
sg25
I0
sba(iArchitecture
Entity
p12062
(dp12063
g11
(lp12064
sg14
S'java.lang.reflect.UndeclaredThrowableException'
p12065
sg16
(lp12066
sg19
(lp12067
sg22
(lp12068
sg25
I0
sba(iArchitecture
Entity
p12069
(dp12070
g11
(lp12071
sg14
S'java.util.concurrent.Delayed'
p12072
sg16
(lp12073
sg19
(lp12074
sg22
(lp12075
sg25
I0
sba(iArchitecture
Entity
p12076
(dp12077
g11
(lp12078
sg14
S'java.util.concurrent.ExecutionException'
p12079
sg16
(lp12080
sg19
(lp12081
sg22
(lp12082
sg25
I0
sbasg1017
(lp12083
g11377
ag11384
ag11391
ag11398
ag11405
ag11412
ag11419
ag11426
ag11433
ag11440
ag11447
ag11454
ag11461
ag11468
ag11475
ag11482
ag11489
ag11496
ag11503
ag11510
ag11517
ag11524
ag11531
ag11538
ag11545
ag11552
ag11559
ag11566
ag11573
ag11580
ag11587
ag11594
ag11601
ag11608
ag11615
ag11622
ag11629
ag11636
ag11643
ag11650
ag11657
ag11664
ag11671
ag11678
ag11685
ag11692
ag11699
ag11706
ag11713
ag11720
ag11727
ag11734
ag11741
ag11748
ag11755
ag11762
ag11769
ag11776
ag11783
ag11790
ag11797
ag11804
ag11811
ag11818
ag11825
ag11832
ag11839
ag11846
ag11853
ag11860
ag11867
ag11874
ag11881
ag11888
ag11895
ag11902
ag11909
ag11916
ag11923
ag11932
ag11939
ag11946
ag11953
ag11960
ag11967
ag11974
ag11981
ag11988
ag11995
ag12002
ag12009
ag12016
ag12023
ag12030
ag12037
ag12044
ag12051
ag12058
ag12065
ag12072
ag12079
asg25
I0
sg1019
S'no_match'
p12084
sba(iArchitecture
Cluster
p12085
(dp12086
g7
(lp12087
(iArchitecture
Entity
p12088
(dp12089
g11
(lp12090
sg14
S'com.google.common.annotations.Beta'
p12091
sg16
(lp12092
sg19
(lp12093
sg22
(lp12094
sg25
I0
sba(iArchitecture
Entity
p12095
(dp12096
g11
(lp12097
sg14
S'com.google.common.annotations.GwtCompatible'
p12098
sg16
(lp12099
sg19
(lp12100
sg22
(lp12101
sg25
I0
sba(iArchitecture
Entity
p12102
(dp12103
g11
(lp12104
sg14
S'com.google.common.annotations.GwtIncompatible'
p12105
sg16
(lp12106
sg19
(lp12107
sg22
(lp12108
sg25
I0
sba(iArchitecture
Entity
p12109
(dp12110
g11
(lp12111
sg14
S'com.google.common.annotations.package-info'
p12112
sg16
(lp12113
sg19
(lp12114
sg22
(lp12115
sg25
I0
sba(iArchitecture
Entity
p12116
(dp12117
g11
(lp12118
sg14
S'com.google.common.base.Absent'
p12119
sg16
(lp12120
sg19
(lp12121
sg22
(lp12122
sg25
I0
sba(iArchitecture
Entity
p12123
(dp12124
g11
(lp12125
sg14
S'com.google.common.base.Absent_CustomFieldSerializer'
p12126
sg16
(lp12127
sg19
(lp12128
sg22
(lp12129
sg25
I0
sba(iArchitecture
Entity
p12130
(dp12131
g11
(lp12132
sg14
S'com.google.common.base.Defaults'
p12133
sg16
(lp12134
sg19
(lp12135
sg22
(lp12136
sg25
I0
sba(iArchitecture
Entity
p12137
(dp12138
g11
(lp12139
sg14
S'com.google.common.base.Enums'
p12140
sg16
(lp12141
sg19
(lp12142
sg22
(lp12143
sg25
I0
sba(iArchitecture
Entity
p12144
(dp12145
g11
(lp12146
sg14
S'com.google.common.base.Function'
p12147
sg16
(lp12148
sg19
(lp12149
sg22
(lp12150
sg25
I0
sba(iArchitecture
Entity
p12151
(dp12152
g11
(lp12153
sg14
S'com.google.common.base.Optional'
p12154
sg16
(lp12155
sg19
(lp12156
sg22
(lp12157
sg25
I0
sba(iArchitecture
Entity
p12158
(dp12159
g11
(lp12160
sg14
S'com.google.common.base.PairwiseEquivalence_CustomFieldSerializer'
p12161
sg16
(lp12162
sg19
(lp12163
sg22
(lp12164
sg25
I0
sba(iArchitecture
Entity
p12165
(dp12166
g11
(lp12167
g3713
ag3713
asg14
S'com.google.common.base.Platform'
p12168
sg16
(lp12169
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12170
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12171
asg19
(lp12172
g3719
ag3719
asg22
(lp12173
g3721
ag3721
asg25
I0
sba(iArchitecture
Entity
p12174
(dp12175
g11
(lp12176
g3665
ag3665
asg14
S'com.google.common.base.Predicate'
p12177
sg16
(lp12178
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p12179
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1444) created by **cpovirk@google.com** on 2013-06-11 at 09:49 PM_\u000a\u000a---\u000a\u000aJust as we've inverted Class.isInstance to Predicates.instanceOf, we ought to have inverted Class.isAssignableFrom to Predicates.assignableTo.\u000a\u000aAnd the doc says: "true if the class being tested is assignable from the given class"\ufeff\u000ahttps://google.github.io/guava/apidocs/com/google/common/base/Predicates.html#assignableFrom(java.lang.Class)\u000a\u000aBut it's the other way around.\u000a
p12180
asg19
(lp12181
g3671
ag3671
asg22
(lp12182
g3673
ag3673
asg25
I0
sba(iArchitecture
Entity
p12183
(dp12184
g11
(lp12185
sg14
S'com.google.common.base.Present'
p12186
sg16
(lp12187
sg19
(lp12188
sg22
(lp12189
sg25
I0
sba(iArchitecture
Entity
p12190
(dp12191
g11
(lp12192
sg14
S'com.google.common.base.Present_CustomFieldSerializer'
p12193
sg16
(lp12194
sg19
(lp12195
sg22
(lp12196
sg25
I0
sba(iArchitecture
Entity
p12197
(dp12198
g11
(lp12199
sg14
S'com.google.common.base.StandardSystemProperty'
p12200
sg16
(lp12201
sg19
(lp12202
sg22
(lp12203
sg25
I0
sba(iArchitecture
Entity
p12204
(dp12205
g11
(lp12206
g3713
ag3713
ag3713
asg14
S'com.google.common.base.Stopwatch'
p12207
sg16
(lp12208
VNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12209
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12210
aVNot a high priority. I just feel a little bad that users there would get something like "com.google.common.base.Stopwatch@0xdeadbeef".\u000a
p12211
asg19
(lp12212
g3719
ag3719
ag3719
asg22
(lp12213
g3721
ag3721
ag3721
asg25
I0
sba(iArchitecture
Entity
p12214
(dp12215
g11
(lp12216
sg14
S'com.google.common.base.Supplier'
p12217
sg16
(lp12218
sg19
(lp12219
sg22
(lp12220
sg25
I0
sba(iArchitecture
Entity
p12221
(dp12222
g11
(lp12223
sg14
S'com.google.common.base.Suppliers'
p12224
sg16
(lp12225
sg19
(lp12226
sg22
(lp12227
sg25
I0
sba(iArchitecture
Entity
p12228
(dp12229
g11
(lp12230
sg14
S'com.google.common.base.SuppressUnderAndroid'
p12231
sg16
(lp12232
sg19
(lp12233
sg22
(lp12234
sg25
I0
sba(iArchitecture
Entity
p12235
(dp12236
g11
(lp12237
g3746
ag3746
ag3746
asg14
S'com.google.common.base.Throwables'
p12238
sg16
(lp12239
g3749
ag3749
ag3749
asg19
(lp12240
g3751
ag3751
ag3751
asg22
(lp12241
g3753
ag3753
ag3753
asg25
I0
sba(iArchitecture
Entity
p12242
(dp12243
g11
(lp12244
sg14
S'com.google.common.base.internal.Finalizer'
p12245
sg16
(lp12246
sg19
(lp12247
sg22
(lp12248
sg25
I0
sba(iArchitecture
Entity
p12249
(dp12250
g11
(lp12251
sg14
S'com.google.common.cache.Cache'
p12252
sg16
(lp12253
sg19
(lp12254
sg22
(lp12255
sg25
I0
sba(iArchitecture
Entity
p12256
(dp12257
g11
(lp12258
sg14
S'com.google.common.cache.CacheLoader'
p12259
sg16
(lp12260
sg19
(lp12261
sg22
(lp12262
sg25
I0
sba(iArchitecture
Entity
p12263
(dp12264
g11
(lp12265
sg14
S'com.google.common.cache.CacheLoaderTest'
p12266
sg16
(lp12267
sg19
(lp12268
sg22
(lp12269
sg25
I0
sba(iArchitecture
Entity
p12270
(dp12271
g11
(lp12272
sg14
S'com.google.common.cache.NullCacheTest'
p12273
sg16
(lp12274
sg19
(lp12275
sg22
(lp12276
sg25
I0
sba(iArchitecture
Entity
p12277
(dp12278
g11
(lp12279
sg14
S'com.google.common.cache.PackageSanityTests'
p12280
sg16
(lp12281
sg19
(lp12282
sg22
(lp12283
sg25
I0
sba(iArchitecture
Entity
p12284
(dp12285
g11
(lp12286
sg14
S'com.google.common.cache.RemovalListener'
p12287
sg16
(lp12288
sg19
(lp12289
sg22
(lp12290
sg25
I0
sba(iArchitecture
Entity
p12291
(dp12292
g11
(lp12293
sg14
S'com.google.common.collect.AbstractBiMap'
p12294
sg16
(lp12295
sg19
(lp12296
sg22
(lp12297
sg25
I0
sba(iArchitecture
Entity
p12298
(dp12299
g11
(lp12300
sg14
S'com.google.common.collect.AbstractListMultimap'
p12301
sg16
(lp12302
sg19
(lp12303
sg22
(lp12304
sg25
I0
sba(iArchitecture
Entity
p12305
(dp12306
g11
(lp12307
sg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p12308
sg16
(lp12309
sg19
(lp12310
sg22
(lp12311
sg25
I0
sba(iArchitecture
Entity
p12312
(dp12313
g11
(lp12314
sg14
S'com.google.common.collect.AbstractSequentialIterator'
p12315
sg16
(lp12316
sg19
(lp12317
sg22
(lp12318
sg25
I0
sba(iArchitecture
Entity
p12319
(dp12320
g11
(lp12321
sg14
S'com.google.common.collect.AbstractSetMultimap'
p12322
sg16
(lp12323
sg19
(lp12324
sg22
(lp12325
sg25
I0
sba(iArchitecture
Entity
p12326
(dp12327
g11
(lp12328
sg14
S'com.google.common.collect.AbstractSortedKeySortedSetMultimap'
p12329
sg16
(lp12330
sg19
(lp12331
sg22
(lp12332
sg25
I0
sba(iArchitecture
Entity
p12333
(dp12334
g11
(lp12335
sg14
S'com.google.common.collect.AbstractSortedSetMultimap'
p12336
sg16
(lp12337
sg19
(lp12338
sg22
(lp12339
sg25
I0
sba(iArchitecture
Entity
p12340
(dp12341
g11
(lp12342
sg14
S'com.google.common.collect.AllEqualOrdering_CustomFieldSerializer'
p12343
sg16
(lp12344
sg19
(lp12345
sg22
(lp12346
sg25
I0
sba(iArchitecture
Entity
p12347
(dp12348
g11
(lp12349
sg14
S'com.google.common.collect.ArrayListMultimap'
p12350
sg16
(lp12351
sg19
(lp12352
sg22
(lp12353
sg25
I0
sba(iArchitecture
Entity
p12354
(dp12355
g11
(lp12356
sg14
S'com.google.common.collect.ArrayTable'
p12357
sg16
(lp12358
sg19
(lp12359
sg22
(lp12360
sg25
I0
sba(iArchitecture
Entity
p12361
(dp12362
g11
(lp12363
sg14
S'com.google.common.collect.BiMap'
p12364
sg16
(lp12365
sg19
(lp12366
sg22
(lp12367
sg25
I0
sba(iArchitecture
Entity
p12368
(dp12369
g11
(lp12370
sg14
S'com.google.common.collect.BoundType'
p12371
sg16
(lp12372
sg19
(lp12373
sg22
(lp12374
sg25
I0
sba(iArchitecture
Entity
p12375
(dp12376
g11
(lp12377
sg14
S'com.google.common.collect.ByFunctionOrdering_CustomFieldSerializer'
p12378
sg16
(lp12379
sg19
(lp12380
sg22
(lp12381
sg25
I0
sba(iArchitecture
Entity
p12382
(dp12383
g11
(lp12384
sg14
S'com.google.common.collect.ClassToInstanceMap'
p12385
sg16
(lp12386
sg19
(lp12387
sg22
(lp12388
sg25
I0
sba(iArchitecture
Entity
p12389
(dp12390
g11
(lp12391
sg14
S'com.google.common.collect.ComparatorOrdering_CustomFieldSerializer'
p12392
sg16
(lp12393
sg19
(lp12394
sg22
(lp12395
sg25
I0
sba(iArchitecture
Entity
p12396
(dp12397
g11
(lp12398
sg14
S'com.google.common.collect.CompoundOrdering_CustomFieldSerializer'
p12399
sg16
(lp12400
sg19
(lp12401
sg22
(lp12402
sg25
I0
sba(iArchitecture
Entity
p12403
(dp12404
g11
(lp12405
sg14
S'com.google.common.collect.DenseImmutableTable_CustomFieldSerializer'
p12406
sg16
(lp12407
sg19
(lp12408
sg22
(lp12409
sg25
I0
sba(iArchitecture
Entity
p12410
(dp12411
g11
(lp12412
sg14
S'com.google.common.collect.EmptyImmutableListMultimap'
p12413
sg16
(lp12414
sg19
(lp12415
sg22
(lp12416
sg25
I0
sba(iArchitecture
Entity
p12417
(dp12418
g11
(lp12419
sg14
S'com.google.common.collect.EmptyImmutableListMultimap_CustomFieldSerializer'
p12420
sg16
(lp12421
sg19
(lp12422
sg22
(lp12423
sg25
I0
sba(iArchitecture
Entity
p12424
(dp12425
g11
(lp12426
sg14
S'com.google.common.collect.EmptyImmutableSetMultimap'
p12427
sg16
(lp12428
sg19
(lp12429
sg22
(lp12430
sg25
I0
sba(iArchitecture
Entity
p12431
(dp12432
g11
(lp12433
sg14
S'com.google.common.collect.EmptyImmutableSetMultimap_CustomFieldSerializer'
p12434
sg16
(lp12435
sg19
(lp12436
sg22
(lp12437
sg25
I0
sba(iArchitecture
Entity
p12438
(dp12439
g11
(lp12440
sg14
S'com.google.common.collect.EnumBiMap'
p12441
sg16
(lp12442
sg19
(lp12443
sg22
(lp12444
sg25
I0
sba(iArchitecture
Entity
p12445
(dp12446
g11
(lp12447
sg14
S'com.google.common.collect.EnumBiMapTest'
p12448
sg16
(lp12449
sg19
(lp12450
sg22
(lp12451
sg25
I0
sba(iArchitecture
Entity
p12452
(dp12453
g11
(lp12454
sg14
S'com.google.common.collect.EnumHashBiMap'
p12455
sg16
(lp12456
sg19
(lp12457
sg22
(lp12458
sg25
I0
sba(iArchitecture
Entity
p12459
(dp12460
g11
(lp12461
sg14
S'com.google.common.collect.EnumMultiset'
p12462
sg16
(lp12463
sg19
(lp12464
sg22
(lp12465
sg25
I0
sba(iArchitecture
Entity
p12466
(dp12467
g11
(lp12468
sg14
S'com.google.common.collect.ExplicitOrdering_CustomFieldSerializer'
p12469
sg16
(lp12470
sg19
(lp12471
sg22
(lp12472
sg25
I0
sba(iArchitecture
Entity
p12473
(dp12474
g11
(lp12475
sg14
S'com.google.common.collect.FilteredEntrySetMultimap'
p12476
sg16
(lp12477
sg19
(lp12478
sg22
(lp12479
sg25
I0
sba(iArchitecture
Entity
p12480
(dp12481
g11
(lp12482
sg14
S'com.google.common.collect.FilteredKeyMultimap'
p12483
sg16
(lp12484
sg19
(lp12485
sg22
(lp12486
sg25
I0
sba(iArchitecture
Entity
p12487
(dp12488
g11
(lp12489
sg14
S'com.google.common.collect.FilteredKeySetMultimap'
p12490
sg16
(lp12491
sg19
(lp12492
sg22
(lp12493
sg25
I0
sba(iArchitecture
Entity
p12494
(dp12495
g11
(lp12496
sg14
S'com.google.common.collect.FilteredMultimap'
p12497
sg16
(lp12498
sg19
(lp12499
sg22
(lp12500
sg25
I0
sba(iArchitecture
Entity
p12501
(dp12502
g11
(lp12503
sg14
S'com.google.common.collect.ForwardingConcurrentMapTest'
p12504
sg16
(lp12505
sg19
(lp12506
sg22
(lp12507
sg25
I0
sba(iArchitecture
Entity
p12508
(dp12509
g11
(lp12510
sg14
S'com.google.common.collect.ForwardingObjectTest'
p12511
sg16
(lp12512
sg19
(lp12513
sg22
(lp12514
sg25
I0
sba(iArchitecture
Entity
p12515
(dp12516
g11
(lp12517
sg14
S'com.google.common.collect.ForwardingSetMultimap'
p12518
sg16
(lp12519
sg19
(lp12520
sg22
(lp12521
sg25
I0
sba(iArchitecture
Entity
p12522
(dp12523
g11
(lp12524
sg14
S'com.google.common.collect.ForwardingSortedSetMultimap'
p12525
sg16
(lp12526
sg19
(lp12527
sg22
(lp12528
sg25
I0
sba(iArchitecture
Entity
p12529
(dp12530
g11
(lp12531
sg14
S'com.google.common.collect.GwtPlatform'
p12532
sg16
(lp12533
sg19
(lp12534
sg22
(lp12535
sg25
I0
sba(iArchitecture
Entity
p12536
(dp12537
g11
(lp12538
sg14
S'com.google.common.collect.HashBasedTable'
p12539
sg16
(lp12540
sg19
(lp12541
sg22
(lp12542
sg25
I0
sba(iArchitecture
Entity
p12543
(dp12544
g11
(lp12545
sg14
S'com.google.common.collect.HashBasedTable_CustomFieldSerializer'
p12546
sg16
(lp12547
sg19
(lp12548
sg22
(lp12549
sg25
I0
sba(iArchitecture
Entity
p12550
(dp12551
g11
(lp12552
sg14
S'com.google.common.collect.HashBiMap'
p12553
sg16
(lp12554
sg19
(lp12555
sg22
(lp12556
sg25
I0
sba(iArchitecture
Entity
p12557
(dp12558
g11
(lp12559
sg14
S'com.google.common.collect.HashMultimap'
p12560
sg16
(lp12561
sg19
(lp12562
sg22
(lp12563
sg25
I0
sba(iArchitecture
Entity
p12564
(dp12565
g11
(lp12566
sg14
S'com.google.common.collect.HashMultiset_CustomFieldSerializer'
p12567
sg16
(lp12568
sg19
(lp12569
sg22
(lp12570
sg25
I0
sba(iArchitecture
Entity
p12571
(dp12572
g11
(lp12573
sg14
S'com.google.common.collect.ImmutableBiMap'
p12574
sg16
(lp12575
sg19
(lp12576
sg22
(lp12577
sg25
I0
sba(iArchitecture
Entity
p12578
(dp12579
g11
(lp12580
sg14
S'com.google.common.collect.ImmutableBiMap_CustomFieldSerializer'
p12581
sg16
(lp12582
sg19
(lp12583
sg22
(lp12584
sg25
I0
sba(iArchitecture
Entity
p12585
(dp12586
g11
(lp12587
sg14
S'com.google.common.collect.ImmutableClassToInstanceMap'
p12588
sg16
(lp12589
sg19
(lp12590
sg22
(lp12591
sg25
I0
sba(iArchitecture
Entity
p12592
(dp12593
g11
(lp12594
sg14
S'com.google.common.collect.ImmutableEntry_CustomFieldSerializer'
p12595
sg16
(lp12596
sg19
(lp12597
sg22
(lp12598
sg25
I0
sba(iArchitecture
Entity
p12599
(dp12600
g11
(lp12601
sg14
S'com.google.common.collect.ImmutableEnumMap'
p12602
sg16
(lp12603
sg19
(lp12604
sg22
(lp12605
sg25
I0
sba(iArchitecture
Entity
p12606
(dp12607
g11
(lp12608
sg14
S'com.google.common.collect.ImmutableEnumMap_CustomFieldSerializer'
p12609
sg16
(lp12610
sg19
(lp12611
sg22
(lp12612
sg25
I0
sba(iArchitecture
Entity
p12613
(dp12614
g11
(lp12615
sg14
S'com.google.common.collect.ImmutableEnumSet_CustomFieldSerializer'
p12616
sg16
(lp12617
sg19
(lp12618
sg22
(lp12619
sg25
I0
sba(iArchitecture
Entity
p12620
(dp12621
g11
(lp12622
sg14
S'com.google.common.collect.ImmutableListMultimap'
p12623
sg16
(lp12624
sg19
(lp12625
sg22
(lp12626
sg25
I0
sba(iArchitecture
Entity
p12627
(dp12628
g11
(lp12629
sg14
S'com.google.common.collect.ImmutableListMultimap_CustomFieldSerializer'
p12630
sg16
(lp12631
sg19
(lp12632
sg22
(lp12633
sg25
I0
sba(iArchitecture
Entity
p12634
(dp12635
g11
(lp12636
sg14
S'com.google.common.collect.ImmutableList_CustomFieldSerializer'
p12637
sg16
(lp12638
sg19
(lp12639
sg22
(lp12640
sg25
I0
sba(iArchitecture
Entity
p12641
(dp12642
g11
(lp12643
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p12644
sg16
(lp12645
sg19
(lp12646
sg22
(lp12647
sg25
I0
sba(iArchitecture
Entity
p12648
(dp12649
g11
(lp12650
sg14
S'com.google.common.collect.ImmutableMapValues'
p12651
sg16
(lp12652
sg19
(lp12653
sg22
(lp12654
sg25
I0
sba(iArchitecture
Entity
p12655
(dp12656
g11
(lp12657
sg14
S'com.google.common.collect.ImmutableMultimap'
p12658
sg16
(lp12659
sg19
(lp12660
sg22
(lp12661
sg25
I0
sba(iArchitecture
Entity
p12662
(dp12663
g11
(lp12664
sg14
S'com.google.common.collect.ImmutableMultiset_CustomFieldSerializer'
p12665
sg16
(lp12666
sg19
(lp12667
sg22
(lp12668
sg25
I0
sba(iArchitecture
Entity
p12669
(dp12670
g11
(lp12671
sg14
S'com.google.common.collect.ImmutableSetMultimap'
p12672
sg16
(lp12673
sg19
(lp12674
sg22
(lp12675
sg25
I0
sba(iArchitecture
Entity
p12676
(dp12677
g11
(lp12678
sg14
S'com.google.common.collect.ImmutableSetMultimap_CustomFieldSerializer'
p12679
sg16
(lp12680
sg19
(lp12681
sg22
(lp12682
sg25
I0
sba(iArchitecture
Entity
p12683
(dp12684
g11
(lp12685
sg14
S'com.google.common.collect.ImmutableSet_CustomFieldSerializer'
p12686
sg16
(lp12687
sg19
(lp12688
sg22
(lp12689
sg25
I0
sba(iArchitecture
Entity
p12690
(dp12691
g11
(lp12692
sg14
S'com.google.common.collect.ImmutableSortedMap'
p12693
sg16
(lp12694
sg19
(lp12695
sg22
(lp12696
sg25
I0
sba(iArchitecture
Entity
p12697
(dp12698
g11
(lp12699
sg14
S'com.google.common.collect.ImmutableSortedMapFauxverideShim'
p12700
sg16
(lp12701
sg19
(lp12702
sg22
(lp12703
sg25
I0
sba(iArchitecture
Entity
p12704
(dp12705
g11
(lp12706
sg14
S'com.google.common.collect.ImmutableSortedMap_CustomFieldSerializer'
p12707
sg16
(lp12708
sg19
(lp12709
sg22
(lp12710
sg25
I0
sba(iArchitecture
Entity
p12711
(dp12712
g11
(lp12713
sg14
S'com.google.common.collect.ImmutableSortedMap_CustomFieldSerializerBase'
p12714
sg16
(lp12715
sg19
(lp12716
sg22
(lp12717
sg25
I0
sba(iArchitecture
Entity
p12718
(dp12719
g11
(lp12720
sg14
S'com.google.common.collect.ImmutableSortedMultisetFauxverideShim'
p12721
sg16
(lp12722
sg19
(lp12723
sg22
(lp12724
sg25
I0
sba(iArchitecture
Entity
p12725
(dp12726
g11
(lp12727
sg14
S'com.google.common.collect.ImmutableSortedSetFauxverideShim'
p12728
sg16
(lp12729
sg19
(lp12730
sg22
(lp12731
sg25
I0
sba(iArchitecture
Entity
p12732
(dp12733
g11
(lp12734
sg14
S'com.google.common.collect.ImmutableSortedSet_CustomFieldSerializer'
p12735
sg16
(lp12736
sg19
(lp12737
sg22
(lp12738
sg25
I0
sba(iArchitecture
Entity
p12739
(dp12740
g11
(lp12741
sg14
S'com.google.common.collect.ImmutableTable'
p12742
sg16
(lp12743
sg19
(lp12744
sg22
(lp12745
sg25
I0
sba(iArchitecture
Entity
p12746
(dp12747
g11
(lp12748
sg14
S'com.google.common.collect.ImmutableTable_CustomFieldSerializerBase'
p12749
sg16
(lp12750
sg19
(lp12751
sg22
(lp12752
sg25
I0
sba(iArchitecture
Entity
p12753
(dp12754
g11
(lp12755
sg14
S'com.google.common.collect.Interner'
p12756
sg16
(lp12757
sg19
(lp12758
sg22
(lp12759
sg25
I0
sba(iArchitecture
Entity
p12760
(dp12761
g11
(lp12762
sg14
S'com.google.common.collect.LegacyComparable'
p12763
sg16
(lp12764
sg19
(lp12765
sg22
(lp12766
sg25
I0
sba(iArchitecture
Entity
p12767
(dp12768
g11
(lp12769
sg14
S'com.google.common.collect.LenientSerializableTester'
p12770
sg16
(lp12771
sg19
(lp12772
sg22
(lp12773
sg25
I0
sba(iArchitecture
Entity
p12774
(dp12775
g11
(lp12776
sg14
S'com.google.common.collect.LexicographicalOrdering_CustomFieldSerializer'
p12777
sg16
(lp12778
sg19
(lp12779
sg22
(lp12780
sg25
I0
sba(iArchitecture
Entity
p12781
(dp12782
g11
(lp12783
sg14
S'com.google.common.collect.LinkedHashMultimap'
p12784
sg16
(lp12785
sg19
(lp12786
sg22
(lp12787
sg25
I0
sba(iArchitecture
Entity
p12788
(dp12789
g11
(lp12790
sg14
S'com.google.common.collect.LinkedHashMultimap_CustomFieldSerializer'
p12791
sg16
(lp12792
sg19
(lp12793
sg22
(lp12794
sg25
I0
sba(iArchitecture
Entity
p12795
(dp12796
g11
(lp12797
sg14
S'com.google.common.collect.LinkedHashMultiset_CustomFieldSerializer'
p12798
sg16
(lp12799
sg19
(lp12800
sg22
(lp12801
sg25
I0
sba(iArchitecture
Entity
p12802
(dp12803
g11
(lp12804
sg14
S'com.google.common.collect.LinkedListMultimap_CustomFieldSerializer'
p12805
sg16
(lp12806
sg19
(lp12807
sg22
(lp12808
sg25
I0
sba(iArchitecture
Entity
p12809
(dp12810
g11
(lp12811
sg14
S'com.google.common.collect.ListMultimap'
p12812
sg16
(lp12813
sg19
(lp12814
sg22
(lp12815
sg25
I0
sba(iArchitecture
Entity
p12816
(dp12817
g11
(lp12818
sg14
S'com.google.common.collect.MapBenchmark'
p12819
sg16
(lp12820
sg19
(lp12821
sg22
(lp12822
sg25
I0
sba(iArchitecture
Entity
p12823
(dp12824
g11
(lp12825
sg14
S'com.google.common.collect.MapConstraints'
p12826
sg16
(lp12827
sg19
(lp12828
sg22
(lp12829
sg25
I0
sba(iArchitecture
Entity
p12830
(dp12831
g11
(lp12832
sg14
S'com.google.common.collect.MapDifference'
p12833
sg16
(lp12834
sg19
(lp12835
sg22
(lp12836
sg25
I0
sba(iArchitecture
Entity
p12837
(dp12838
g11
(lp12839
sg14
S'com.google.common.collect.Maps'
p12840
sg16
(lp12841
sg19
(lp12842
sg22
(lp12843
sg25
I0
sba(iArchitecture
Entity
p12844
(dp12845
g11
(lp12846
sg14
S'com.google.common.collect.Multimap'
p12847
sg16
(lp12848
sg19
(lp12849
sg22
(lp12850
sg25
I0
sba(iArchitecture
Entity
p12851
(dp12852
g11
(lp12853
sg14
S'com.google.common.collect.Multimap_CustomFieldSerializerBase'
p12854
sg16
(lp12855
sg19
(lp12856
sg22
(lp12857
sg25
I0
sba(iArchitecture
Entity
p12858
(dp12859
g11
(lp12860
sg14
S'com.google.common.collect.Multimaps'
p12861
sg16
(lp12862
sg19
(lp12863
sg22
(lp12864
sg25
I0
sba(iArchitecture
Entity
p12865
(dp12866
g11
(lp12867
sg14
S'com.google.common.collect.Multiset_CustomFieldSerializerBase'
p12868
sg16
(lp12869
sg19
(lp12870
sg22
(lp12871
sg25
I0
sba(iArchitecture
Entity
p12872
(dp12873
g11
(lp12874
sg14
S'com.google.common.collect.MutableClassToInstanceMap'
p12875
sg16
(lp12876
sg19
(lp12877
sg22
(lp12878
sg25
I0
sba(iArchitecture
Entity
p12879
(dp12880
g11
(lp12881
sg14
S'com.google.common.collect.MutableClassToInstanceMapTest'
p12882
sg16
(lp12883
sg19
(lp12884
sg22
(lp12885
sg25
I0
sba(iArchitecture
Entity
p12886
(dp12887
g11
(lp12888
sg14
S'com.google.common.collect.NaturalOrdering_CustomFieldSerializer'
p12889
sg16
(lp12890
sg19
(lp12891
sg22
(lp12892
sg25
I0
sba(iArchitecture
Entity
p12893
(dp12894
g11
(lp12895
sg14
S'com.google.common.collect.NullsFirstOrdering_CustomFieldSerializer'
p12896
sg16
(lp12897
sg19
(lp12898
sg22
(lp12899
sg25
I0
sba(iArchitecture
Entity
p12900
(dp12901
g11
(lp12902
sg14
S'com.google.common.collect.NullsLastOrdering_CustomFieldSerializer'
p12903
sg16
(lp12904
sg19
(lp12905
sg22
(lp12906
sg25
I0
sba(iArchitecture
Entity
p12907
(dp12908
g11
(lp12909
V2525
p12910
asg14
S'com.google.common.collect.Ordering'
p12911
sg16
(lp12912
VThe [snapshot Javadoc of Ordering#explicit(java.util.List)](http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/Ordering.html#explicit%28java.util.List%29)  contains the sentnece:\u000a\u000a> The returned comparator throws **an ClassCastException** when it receives an input parameter that isn't among the provided values.\u000a\u000ainstead of\u000a\u000a> The returned comparator throws **a ClassCastException** when it receives an input parameter that isn't among the provided values.\u000a
p12913
asg19
(lp12914
(lp12915
I2
aasg22
(lp12916
VTypo in the javadoc of Ordering's explicit(List<T>) method
p12917
asg25
I0
sba(iArchitecture
Entity
p12918
(dp12919
g11
(lp12920
sg14
S'com.google.common.collect.PackageSanityTests'
p12921
sg16
(lp12922
sg19
(lp12923
sg22
(lp12924
sg25
I0
sba(iArchitecture
Entity
p12925
(dp12926
g11
(lp12927
sg14
S'com.google.common.collect.Platform'
p12928
sg16
(lp12929
sg19
(lp12930
sg22
(lp12931
sg25
I0
sba(iArchitecture
Entity
p12932
(dp12933
g11
(lp12934
sg14
S'com.google.common.collect.Queues'
p12935
sg16
(lp12936
sg19
(lp12937
sg22
(lp12938
sg25
I0
sba(iArchitecture
Entity
p12939
(dp12940
g11
(lp12941
g5162
asg14
S'com.google.common.collect.RangeMap'
p12942
sg16
(lp12943
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p12944
asg19
(lp12945
g5170
asg22
(lp12946
g5172
asg25
I0
sba(iArchitecture
Entity
p12947
(dp12948
g11
(lp12949
g5162
asg14
S'com.google.common.collect.RangeSet'
p12950
sg16
(lp12951
V`Range.toString()` returns `U+2025` which is not supported by the default terminal under Windows, and most IDEs unless you explicitly change the font. If you read through https://issues.apache.org/jira/browse/SUREFIRE-1220 you will understand the insane hoops that developers have to jump through to get this to work.\u000a\u000aConsider replacing this unicode character by `..` or `-` or `,` ASCII characters.\u000a
p12952
asg19
(lp12953
g5170
asg22
(lp12954
g5172
asg25
I0
sba(iArchitecture
Entity
p12955
(dp12956
g11
(lp12957
sg14
S'com.google.common.collect.RegularImmutableAsList_CustomFieldSerializer'
p12958
sg16
(lp12959
sg19
(lp12960
sg22
(lp12961
sg25
I0
sba(iArchitecture
Entity
p12962
(dp12963
g11
(lp12964
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p12965
sg16
(lp12966
sg19
(lp12967
sg22
(lp12968
sg25
I0
sba(iArchitecture
Entity
p12969
(dp12970
g11
(lp12971
sg14
S'com.google.common.collect.RegularImmutableBiMap_CustomFieldSerializer'
p12972
sg16
(lp12973
sg19
(lp12974
sg22
(lp12975
sg25
I0
sba(iArchitecture
Entity
p12976
(dp12977
g11
(lp12978
sg14
S'com.google.common.collect.RegularImmutableList_CustomFieldSerializer'
p12979
sg16
(lp12980
sg19
(lp12981
sg22
(lp12982
sg25
I0
sba(iArchitecture
Entity
p12983
(dp12984
g11
(lp12985
sg14
S'com.google.common.collect.RegularImmutableMap'
p12986
sg16
(lp12987
sg19
(lp12988
sg22
(lp12989
sg25
I0
sba(iArchitecture
Entity
p12990
(dp12991
g11
(lp12992
sg14
S'com.google.common.collect.RegularImmutableMap_CustomFieldSerializer'
p12993
sg16
(lp12994
sg19
(lp12995
sg22
(lp12996
sg25
I0
sba(iArchitecture
Entity
p12997
(dp12998
g11
(lp12999
sg14
S'com.google.common.collect.RegularImmutableMultiset_CustomFieldSerializer'
p13000
sg16
(lp13001
sg19
(lp13002
sg22
(lp13003
sg25
I0
sba(iArchitecture
Entity
p13004
(dp13005
g11
(lp13006
sg14
S'com.google.common.collect.RegularImmutableSet'
p13007
sg16
(lp13008
sg19
(lp13009
sg22
(lp13010
sg25
I0
sba(iArchitecture
Entity
p13011
(dp13012
g11
(lp13013
sg14
S'com.google.common.collect.RegularImmutableSet_CustomFieldSerializer'
p13014
sg16
(lp13015
sg19
(lp13016
sg22
(lp13017
sg25
I0
sba(iArchitecture
Entity
p13018
(dp13019
g11
(lp13020
sg14
S'com.google.common.collect.RegularImmutableSortedSet_CustomFieldSerializer'
p13021
sg16
(lp13022
sg19
(lp13023
sg22
(lp13024
sg25
I0
sba(iArchitecture
Entity
p13025
(dp13026
g11
(lp13027
sg14
S'com.google.common.collect.ReverseNaturalOrdering_CustomFieldSerializer'
p13028
sg16
(lp13029
sg19
(lp13030
sg22
(lp13031
sg25
I0
sba(iArchitecture
Entity
p13032
(dp13033
g11
(lp13034
sg14
S'com.google.common.collect.ReverseOrdering_CustomFieldSerializer'
p13035
sg16
(lp13036
sg19
(lp13037
sg22
(lp13038
sg25
I0
sba(iArchitecture
Entity
p13039
(dp13040
g11
(lp13041
sg14
S'com.google.common.collect.RowSortedTable'
p13042
sg16
(lp13043
sg19
(lp13044
sg22
(lp13045
sg25
I0
sba(iArchitecture
Entity
p13046
(dp13047
g11
(lp13048
sg14
S'com.google.common.collect.SetContainsBenchmark'
p13049
sg16
(lp13050
sg19
(lp13051
sg22
(lp13052
sg25
I0
sba(iArchitecture
Entity
p13053
(dp13054
g11
(lp13055
sg14
S'com.google.common.collect.SetMultimap'
p13056
sg16
(lp13057
sg19
(lp13058
sg22
(lp13059
sg25
I0
sba(iArchitecture
Entity
p13060
(dp13061
g11
(lp13062
sg14
S'com.google.common.collect.Sets'
p13063
sg16
(lp13064
sg19
(lp13065
sg22
(lp13066
sg25
I0
sba(iArchitecture
Entity
p13067
(dp13068
g11
(lp13069
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p13070
sg16
(lp13071
sg19
(lp13072
sg22
(lp13073
sg25
I0
sba(iArchitecture
Entity
p13074
(dp13075
g11
(lp13076
sg14
S'com.google.common.collect.SingletonImmutableBiMap_CustomFieldSerializer'
p13077
sg16
(lp13078
sg19
(lp13079
sg22
(lp13080
sg25
I0
sba(iArchitecture
Entity
p13081
(dp13082
g11
(lp13083
sg14
S'com.google.common.collect.SingletonImmutableList'
p13084
sg16
(lp13085
sg19
(lp13086
sg22
(lp13087
sg25
I0
sba(iArchitecture
Entity
p13088
(dp13089
g11
(lp13090
sg14
S'com.google.common.collect.SingletonImmutableList_CustomFieldSerializer'
p13091
sg16
(lp13092
sg19
(lp13093
sg22
(lp13094
sg25
I0
sba(iArchitecture
Entity
p13095
(dp13096
g11
(lp13097
sg14
S'com.google.common.collect.SingletonImmutableSet_CustomFieldSerializer'
p13098
sg16
(lp13099
sg19
(lp13100
sg22
(lp13101
sg25
I0
sba(iArchitecture
Entity
p13102
(dp13103
g11
(lp13104
sg14
S'com.google.common.collect.SingletonImmutableTable_CustomFieldSerializer'
p13105
sg16
(lp13106
sg19
(lp13107
sg22
(lp13108
sg25
I0
sba(iArchitecture
Entity
p13109
(dp13110
g11
(lp13111
sg14
S'com.google.common.collect.SortedIterable'
p13112
sg16
(lp13113
sg19
(lp13114
sg22
(lp13115
sg25
I0
sba(iArchitecture
Entity
p13116
(dp13117
g11
(lp13118
sg14
S'com.google.common.collect.SortedIterables'
p13119
sg16
(lp13120
sg19
(lp13121
sg22
(lp13122
sg25
I0
sba(iArchitecture
Entity
p13123
(dp13124
g11
(lp13125
sg14
S'com.google.common.collect.SortedIterablesTest'
p13126
sg16
(lp13127
sg19
(lp13128
sg22
(lp13129
sg25
I0
sba(iArchitecture
Entity
p13130
(dp13131
g11
(lp13132
sg14
S'com.google.common.collect.SortedMapDifference'
p13133
sg16
(lp13134
sg19
(lp13135
sg22
(lp13136
sg25
I0
sba(iArchitecture
Entity
p13137
(dp13138
g11
(lp13139
sg14
S'com.google.common.collect.SortedMultiset'
p13140
sg16
(lp13141
sg19
(lp13142
sg22
(lp13143
sg25
I0
sba(iArchitecture
Entity
p13144
(dp13145
g11
(lp13146
sg14
S'com.google.common.collect.SortedMultisetBridge'
p13147
sg16
(lp13148
sg19
(lp13149
sg22
(lp13150
sg25
I0
sba(iArchitecture
Entity
p13151
(dp13152
g11
(lp13153
sg14
S'com.google.common.collect.SortedMultisets'
p13154
sg16
(lp13155
sg19
(lp13156
sg22
(lp13157
sg25
I0
sba(iArchitecture
Entity
p13158
(dp13159
g11
(lp13160
sg14
S'com.google.common.collect.SortedSetMultimap'
p13161
sg16
(lp13162
sg19
(lp13163
sg22
(lp13164
sg25
I0
sba(iArchitecture
Entity
p13165
(dp13166
g11
(lp13167
sg14
S'com.google.common.collect.SparseImmutableTable'
p13168
sg16
(lp13169
sg19
(lp13170
sg22
(lp13171
sg25
I0
sba(iArchitecture
Entity
p13172
(dp13173
g11
(lp13174
sg14
S'com.google.common.collect.SparseImmutableTable_CustomFieldSerializer'
p13175
sg16
(lp13176
sg19
(lp13177
sg22
(lp13178
sg25
I0
sba(iArchitecture
Entity
p13179
(dp13180
g11
(lp13181
sg14
S'com.google.common.collect.SuppressUnderAndroid'
p13182
sg16
(lp13183
sg19
(lp13184
sg22
(lp13185
sg25
I0
sba(iArchitecture
Entity
p13186
(dp13187
g11
(lp13188
sg14
S'com.google.common.collect.Table'
p13189
sg16
(lp13190
sg19
(lp13191
sg22
(lp13192
sg25
I0
sba(iArchitecture
Entity
p13193
(dp13194
g11
(lp13195
sg14
S'com.google.common.collect.Table_CustomFieldSerializerBase'
p13196
sg16
(lp13197
sg19
(lp13198
sg22
(lp13199
sg25
I0
sba(iArchitecture
Entity
p13200
(dp13201
g11
(lp13202
sg14
S'com.google.common.collect.Tables'
p13203
sg16
(lp13204
sg19
(lp13205
sg22
(lp13206
sg25
I0
sba(iArchitecture
Entity
p13207
(dp13208
g11
(lp13209
sg14
S'com.google.common.collect.TreeBasedTable'
p13210
sg16
(lp13211
sg19
(lp13212
sg22
(lp13213
sg25
I0
sba(iArchitecture
Entity
p13214
(dp13215
g11
(lp13216
sg14
S'com.google.common.collect.TreeBasedTable_CustomFieldSerializer'
p13217
sg16
(lp13218
sg19
(lp13219
sg22
(lp13220
sg25
I0
sba(iArchitecture
Entity
p13221
(dp13222
g11
(lp13223
sg14
S'com.google.common.collect.TreeMultimap'
p13224
sg16
(lp13225
sg19
(lp13226
sg22
(lp13227
sg25
I0
sba(iArchitecture
Entity
p13228
(dp13229
g11
(lp13230
sg14
S'com.google.common.collect.TreeMultimap_CustomFieldSerializer'
p13231
sg16
(lp13232
sg19
(lp13233
sg22
(lp13234
sg25
I0
sba(iArchitecture
Entity
p13235
(dp13236
g11
(lp13237
sg14
S'com.google.common.collect.UsingToStringOrdering_CustomFieldSerializer'
p13238
sg16
(lp13239
sg19
(lp13240
sg22
(lp13241
sg25
I0
sba(iArchitecture
Entity
p13242
(dp13243
g11
(lp13244
sg14
S'com.google.common.collect.WellBehavedMap'
p13245
sg16
(lp13246
sg19
(lp13247
sg22
(lp13248
sg25
I0
sba(iArchitecture
Entity
p13249
(dp13250
g11
(lp13251
sg14
S'com.google.common.collect.WellBehavedMapTest'
p13252
sg16
(lp13253
sg19
(lp13254
sg22
(lp13255
sg25
I0
sba(iArchitecture
Entity
p13256
(dp13257
g11
(lp13258
sg14
S'com.google.common.collect.testing.CollectionTestSuiteBuilder'
p13259
sg16
(lp13260
sg19
(lp13261
sg22
(lp13262
sg25
I0
sba(iArchitecture
Entity
p13263
(dp13264
g11
(lp13265
sg14
S'com.google.common.collect.testing.ConcurrentNavigableMapTestSuiteBuilder'
p13266
sg16
(lp13267
sg19
(lp13268
sg22
(lp13269
sg25
I0
sba(iArchitecture
Entity
p13270
(dp13271
g11
(lp13272
sg14
S'com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder'
p13273
sg16
(lp13274
sg19
(lp13275
sg22
(lp13276
sg25
I0
sba(iArchitecture
Entity
p13277
(dp13278
g11
(lp13279
sg14
S'com.google.common.collect.testing.GwtPlatform'
p13280
sg16
(lp13281
sg19
(lp13282
sg22
(lp13283
sg25
I0
sba(iArchitecture
Entity
p13284
(dp13285
g11
(lp13286
sg14
S'com.google.common.collect.testing.MapInterfaceTest'
p13287
sg16
(lp13288
sg19
(lp13289
sg22
(lp13290
sg25
I0
sba(iArchitecture
Entity
p13291
(dp13292
g11
(lp13293
sg14
S'com.google.common.collect.testing.MapTestSuiteBuilder'
p13294
sg16
(lp13295
sg19
(lp13296
sg22
(lp13297
sg25
I0
sba(iArchitecture
Entity
p13298
(dp13299
g11
(lp13300
sg14
S'com.google.common.collect.testing.MinimalSet'
p13301
sg16
(lp13302
sg19
(lp13303
sg22
(lp13304
sg25
I0
sba(iArchitecture
Entity
p13305
(dp13306
g11
(lp13307
sg14
S'com.google.common.collect.testing.MinimalSetTest'
p13308
sg16
(lp13309
sg19
(lp13310
sg22
(lp13311
sg25
I0
sba(iArchitecture
Entity
p13312
(dp13313
g11
(lp13314
sg14
S'com.google.common.collect.testing.OpenJdk6ListTests'
p13315
sg16
(lp13316
sg19
(lp13317
sg22
(lp13318
sg25
I0
sba(iArchitecture
Entity
p13319
(dp13320
g11
(lp13321
sg14
S'com.google.common.collect.testing.OpenJdk6QueueTests'
p13322
sg16
(lp13323
sg19
(lp13324
sg22
(lp13325
sg25
I0
sba(iArchitecture
Entity
p13326
(dp13327
g11
(lp13328
sg14
S'com.google.common.collect.testing.OpenJdk6SetTests'
p13329
sg16
(lp13330
sg19
(lp13331
sg22
(lp13332
sg25
I0
sba(iArchitecture
Entity
p13333
(dp13334
g11
(lp13335
sg14
S'com.google.common.collect.testing.PerCollectionSizeTestSuiteBuilder'
p13336
sg16
(lp13337
sg19
(lp13338
sg22
(lp13339
sg25
I0
sba(iArchitecture
Entity
p13340
(dp13341
g11
(lp13342
sg14
S'com.google.common.collect.testing.Platform'
p13343
sg16
(lp13344
sg19
(lp13345
sg22
(lp13346
sg25
I0
sba(iArchitecture
Entity
p13347
(dp13348
g11
(lp13349
sg14
S'com.google.common.collect.testing.ReserializingTestSetGenerator'
p13350
sg16
(lp13351
sg19
(lp13352
sg22
(lp13353
sg25
I0
sba(iArchitecture
Entity
p13354
(dp13355
g11
(lp13356
sg14
S'com.google.common.collect.testing.SortedMapTestSuiteBuilder'
p13357
sg16
(lp13358
sg19
(lp13359
sg22
(lp13360
sg25
I0
sba(iArchitecture
Entity
p13361
(dp13362
g11
(lp13363
sg14
S'com.google.common.collect.testing.SortedSetTestSuiteBuilder'
p13364
sg16
(lp13365
sg19
(lp13366
sg22
(lp13367
sg25
I0
sba(iArchitecture
Entity
p13368
(dp13369
g11
(lp13370
sg14
S'com.google.common.collect.testing.TestCollectionGenerator'
p13371
sg16
(lp13372
sg19
(lp13373
sg22
(lp13374
sg25
I0
sba(iArchitecture
Entity
p13375
(dp13376
g11
(lp13377
V2349
p13378
asg14
S'com.google.common.collect.testing.TestContainerGenerator'
p13379
sg16
(lp13380
VThe [javadoc for TestContainerGenerator.order](https://github.com/google/guava/blob/master/guava-testlib/src/com/google/common/collect/testing/TestContainerGenerator.java#L66) states:\u000a\u000a> This method runs only when CollectionFeature#KNOWN_ORDER is specified when creating the test suite. It should never run when testing containers such as HashSet, which have a non-deterministic iteration order.\u000a\u000aHowever, 74 tests (out of 450) fail with the code below which (as described by the documentation) expects TestContainerGenerator.order not to be called and throws an UnsupportedOperationException for it:\u000a\u000a``` java\u000apublic final class JavaUtilCollectionsTests {\u000a  public static Test suite() {\u000a    TestSuite suite = new TestSuite("HashSet");\u000a    suite.addTest(SetTestSuiteBuilder.<Integer>using(new TestSetGenerator<Integer>() {\u000a      @Override\u000a      public SampleElements<Integer> samples() {\u000a        return new SampleElements<Integer>(-7, 0, Integer.MIN_VALUE, 42, Integer.MAX_VALUE);\u000a      }\u000a\u000a      @Override\u000a      public Integer[] createArray(int length) {\u000a        return new Integer[length];\u000a      }\u000a\u000a      @Override\u000a      public Iterable<Integer> order(List<Integer> insertionOrder) {\u000a        throw new UnsupportedOperationException();\u000a      }\u000a\u000a      @Override\u000a      public Set<Integer> create(Object... elements) {\u000a        List<Integer> values =\u000a            Arrays.stream(elements).map(o -> (Integer) o).collect(Collectors.toList());\u000a        return new HashSet<>(values);\u000a      }\u000a    }).named("HashSet")\u000a        .withFeatures(CollectionSize.ANY, CollectionFeature.GENERAL_PURPOSE,\u000a            CollectionFeature.ALLOWS_NULL_VALUES, CollectionFeature.SERIALIZABLE_INCLUDING_VIEWS)\u000a        .createTestSuite());\u000a    return suite;\u000a  }\u000a}\u000a```\u000a\u000aThe expected result would be for all the tests to pass.\u000a
p13381
asg19
(lp13382
(lp13383
I1
aasg22
(lp13384
VTest suites incorrectly call TestSetGenerator.order
p13385
asg25
I0
sba(iArchitecture
Entity
p13386
(dp13387
g11
(lp13388
sg14
S'com.google.common.collect.testing.TestIteratorGenerator'
p13389
sg16
(lp13390
sg19
(lp13391
sg22
(lp13392
sg25
I0
sba(iArchitecture
Entity
p13393
(dp13394
g11
(lp13395
sg14
S'com.google.common.collect.testing.TestListGenerator'
p13396
sg16
(lp13397
sg19
(lp13398
sg22
(lp13399
sg25
I0
sba(iArchitecture
Entity
p13400
(dp13401
g11
(lp13402
sg14
S'com.google.common.collect.testing.TestMapEntrySetGenerator'
p13403
sg16
(lp13404
sg19
(lp13405
sg22
(lp13406
sg25
I0
sba(iArchitecture
Entity
p13407
(dp13408
g11
(lp13409
sg14
S'com.google.common.collect.testing.TestMapGenerator'
p13410
sg16
(lp13411
sg19
(lp13412
sg22
(lp13413
sg25
I0
sba(iArchitecture
Entity
p13414
(dp13415
g11
(lp13416
sg14
S'com.google.common.collect.testing.TestQueueGenerator'
p13417
sg16
(lp13418
sg19
(lp13419
sg22
(lp13420
sg25
I0
sba(iArchitecture
Entity
p13421
(dp13422
g11
(lp13423
sg14
S'com.google.common.collect.testing.TestSetGenerator'
p13424
sg16
(lp13425
sg19
(lp13426
sg22
(lp13427
sg25
I0
sba(iArchitecture
Entity
p13428
(dp13429
g11
(lp13430
sg14
S'com.google.common.collect.testing.TestSubjectGenerator'
p13431
sg16
(lp13432
sg19
(lp13433
sg22
(lp13434
sg25
I0
sba(iArchitecture
Entity
p13435
(dp13436
g11
(lp13437
sg14
S'com.google.common.collect.testing.WrongType'
p13438
sg16
(lp13439
sg19
(lp13440
sg22
(lp13441
sg25
I0
sba(iArchitecture
Entity
p13442
(dp13443
g11
(lp13444
sg14
S'com.google.common.collect.testing.features.CollectionFeature'
p13445
sg16
(lp13446
sg19
(lp13447
sg22
(lp13448
sg25
I0
sba(iArchitecture
Entity
p13449
(dp13450
g11
(lp13451
sg14
S'com.google.common.collect.testing.features.ConflictingRequirementsException'
p13452
sg16
(lp13453
sg19
(lp13454
sg22
(lp13455
sg25
I0
sba(iArchitecture
Entity
p13456
(dp13457
g11
(lp13458
sg14
S'com.google.common.collect.testing.features.Feature'
p13459
sg16
(lp13460
sg19
(lp13461
sg22
(lp13462
sg25
I0
sba(iArchitecture
Entity
p13463
(dp13464
g11
(lp13465
sg14
S'com.google.common.collect.testing.features.FeatureEnumTest'
p13466
sg16
(lp13467
sg19
(lp13468
sg22
(lp13469
sg25
I0
sba(iArchitecture
Entity
p13470
(dp13471
g11
(lp13472
sg14
S'com.google.common.collect.testing.features.FeatureUtil'
p13473
sg16
(lp13474
sg19
(lp13475
sg22
(lp13476
sg25
I0
sba(iArchitecture
Entity
p13477
(dp13478
g11
(lp13479
sg14
S'com.google.common.collect.testing.features.FeatureUtilTest'
p13480
sg16
(lp13481
sg19
(lp13482
sg22
(lp13483
sg25
I0
sba(iArchitecture
Entity
p13484
(dp13485
g11
(lp13486
sg14
S'com.google.common.collect.testing.features.ListFeature'
p13487
sg16
(lp13488
sg19
(lp13489
sg22
(lp13490
sg25
I0
sba(iArchitecture
Entity
p13491
(dp13492
g11
(lp13493
sg14
S'com.google.common.collect.testing.features.MapFeature'
p13494
sg16
(lp13495
sg19
(lp13496
sg22
(lp13497
sg25
I0
sba(iArchitecture
Entity
p13498
(dp13499
g11
(lp13500
sg14
S'com.google.common.collect.testing.features.SetFeature'
p13501
sg16
(lp13502
sg19
(lp13503
sg22
(lp13504
sg25
I0
sba(iArchitecture
Entity
p13505
(dp13506
g11
(lp13507
sg14
S'com.google.common.collect.testing.features.TesterAnnotation'
p13508
sg16
(lp13509
sg19
(lp13510
sg22
(lp13511
sg25
I0
sba(iArchitecture
Entity
p13512
(dp13513
g11
(lp13514
sg14
S'com.google.common.collect.testing.google.AbstractListMultimapTester'
p13515
sg16
(lp13516
sg19
(lp13517
sg22
(lp13518
sg25
I0
sba(iArchitecture
Entity
p13519
(dp13520
g11
(lp13521
sg14
S'com.google.common.collect.testing.google.AbstractMultimapTester'
p13522
sg16
(lp13523
sg19
(lp13524
sg22
(lp13525
sg25
I0
sba(iArchitecture
Entity
p13526
(dp13527
g11
(lp13528
sg14
S'com.google.common.collect.testing.google.BiMapPutTester'
p13529
sg16
(lp13530
sg19
(lp13531
sg22
(lp13532
sg25
I0
sba(iArchitecture
Entity
p13533
(dp13534
g11
(lp13535
sg14
S'com.google.common.collect.testing.google.BiMapTestSuiteBuilder'
p13536
sg16
(lp13537
sg19
(lp13538
sg22
(lp13539
sg25
I0
sba(iArchitecture
Entity
p13540
(dp13541
g11
(lp13542
sg14
S'com.google.common.collect.testing.google.GoogleHelpers'
p13543
sg16
(lp13544
sg19
(lp13545
sg22
(lp13546
sg25
I0
sba(iArchitecture
Entity
p13547
(dp13548
g11
(lp13549
sg14
S'com.google.common.collect.testing.google.ListMultimapAsMapTester'
p13550
sg16
(lp13551
sg19
(lp13552
sg22
(lp13553
sg25
I0
sba(iArchitecture
Entity
p13554
(dp13555
g11
(lp13556
sg14
S'com.google.common.collect.testing.google.ListMultimapPutAllTester'
p13557
sg16
(lp13558
sg19
(lp13559
sg22
(lp13560
sg25
I0
sba(iArchitecture
Entity
p13561
(dp13562
g11
(lp13563
sg14
S'com.google.common.collect.testing.google.ListMultimapPutTester'
p13564
sg16
(lp13565
sg19
(lp13566
sg22
(lp13567
sg25
I0
sba(iArchitecture
Entity
p13568
(dp13569
g11
(lp13570
sg14
S'com.google.common.collect.testing.google.ListMultimapRemoveTester'
p13571
sg16
(lp13572
sg19
(lp13573
sg22
(lp13574
sg25
I0
sba(iArchitecture
Entity
p13575
(dp13576
g11
(lp13577
sg14
S'com.google.common.collect.testing.google.ListMultimapReplaceValuesTester'
p13578
sg16
(lp13579
sg19
(lp13580
sg22
(lp13581
sg25
I0
sba(iArchitecture
Entity
p13582
(dp13583
g11
(lp13584
sg14
S'com.google.common.collect.testing.google.ListMultimapTestSuiteBuilder'
p13585
sg16
(lp13586
sg19
(lp13587
sg22
(lp13588
sg25
I0
sba(iArchitecture
Entity
p13589
(dp13590
g11
(lp13591
sg14
S'com.google.common.collect.testing.google.MultimapAsMapGetTester'
p13592
sg16
(lp13593
sg19
(lp13594
sg22
(lp13595
sg25
I0
sba(iArchitecture
Entity
p13596
(dp13597
g11
(lp13598
sg14
S'com.google.common.collect.testing.google.MultimapAsMapTester'
p13599
sg16
(lp13600
sg19
(lp13601
sg22
(lp13602
sg25
I0
sba(iArchitecture
Entity
p13603
(dp13604
g11
(lp13605
sg14
S'com.google.common.collect.testing.google.MultimapContainsValueTester'
p13606
sg16
(lp13607
sg19
(lp13608
sg22
(lp13609
sg25
I0
sba(iArchitecture
Entity
p13610
(dp13611
g11
(lp13612
sg14
S'com.google.common.collect.testing.google.MultimapEntriesTester'
p13613
sg16
(lp13614
sg19
(lp13615
sg22
(lp13616
sg25
I0
sba(iArchitecture
Entity
p13617
(dp13618
g11
(lp13619
sg14
S'com.google.common.collect.testing.google.MultimapEqualsTester'
p13620
sg16
(lp13621
sg19
(lp13622
sg22
(lp13623
sg25
I0
sba(iArchitecture
Entity
p13624
(dp13625
g11
(lp13626
sg14
S'com.google.common.collect.testing.google.MultimapFeature'
p13627
sg16
(lp13628
sg19
(lp13629
sg22
(lp13630
sg25
I0
sba(iArchitecture
Entity
p13631
(dp13632
g11
(lp13633
sg14
S'com.google.common.collect.testing.google.MultimapKeySetTester'
p13634
sg16
(lp13635
sg19
(lp13636
sg22
(lp13637
sg25
I0
sba(iArchitecture
Entity
p13638
(dp13639
g11
(lp13640
sg14
S'com.google.common.collect.testing.google.MultimapRemoveAllTester'
p13641
sg16
(lp13642
sg19
(lp13643
sg22
(lp13644
sg25
I0
sba(iArchitecture
Entity
p13645
(dp13646
g11
(lp13647
sg14
S'com.google.common.collect.testing.google.MultimapReplaceValuesTester'
p13648
sg16
(lp13649
sg19
(lp13650
sg22
(lp13651
sg25
I0
sba(iArchitecture
Entity
p13652
(dp13653
g11
(lp13654
sg14
S'com.google.common.collect.testing.google.MultimapTestSuiteBuilder'
p13655
sg16
(lp13656
sg19
(lp13657
sg22
(lp13658
sg25
I0
sba(iArchitecture
Entity
p13659
(dp13660
g11
(lp13661
V2418
p13662
asg14
S'com.google.common.collect.testing.google.MultimapToStringTester'
p13663
sg16
(lp13664
VSee a unit test demonstrating the issue here: https://github.com/gpanther/fastutil-guava-tests/blob/master/src/test/java/net/greypanther/guava/tests/tests/CustomToStringTest.java\u000a\u000aIt shows a HashMap subclass which overrides toString and as a result fails tests, even if CollectionFeature.NON_STANDARD_TOSTRING passed to MapTestSuiteBuilder.\u000a\u000aI believe that methods like https://github.com/google/guava/blob/2cd4d629a2b6f1a462643b248e0972f44c5133b7/guava-testlib/src/com/google/common/collect/testing/testers/MapToStringTester.java#L45 should be marked with `@CollectionFeature.Require(absent = NON_STANDARD_TOSTRING)`.\u000a
p13665
asg19
(lp13666
(lp13667
I1
aasg22
(lp13668
VMap tests assert on .toString even when CollectionFeature.NON_STANDARD_TOSTRING is specified
p13669
asg25
I0
sba(iArchitecture
Entity
p13670
(dp13671
g11
(lp13672
sg14
S'com.google.common.collect.testing.google.MultimapValuesTester'
p13673
sg16
(lp13674
sg19
(lp13675
sg22
(lp13676
sg25
I0
sba(iArchitecture
Entity
p13677
(dp13678
g11
(lp13679
sg14
S'com.google.common.collect.testing.google.MultisetContainsTester'
p13680
sg16
(lp13681
sg19
(lp13682
sg22
(lp13683
sg25
I0
sba(iArchitecture
Entity
p13684
(dp13685
g11
(lp13686
sg14
S'com.google.common.collect.testing.google.MultisetElementSetTester'
p13687
sg16
(lp13688
sg19
(lp13689
sg22
(lp13690
sg25
I0
sba(iArchitecture
Entity
p13691
(dp13692
g11
(lp13693
sg14
S'com.google.common.collect.testing.google.MultisetEqualsTester'
p13694
sg16
(lp13695
sg19
(lp13696
sg22
(lp13697
sg25
I0
sba(iArchitecture
Entity
p13698
(dp13699
g11
(lp13700
sg14
S'com.google.common.collect.testing.google.SetMultimapAsMapTester'
p13701
sg16
(lp13702
sg19
(lp13703
sg22
(lp13704
sg25
I0
sba(iArchitecture
Entity
p13705
(dp13706
g11
(lp13707
sg14
S'com.google.common.collect.testing.google.SetMultimapPutAllTester'
p13708
sg16
(lp13709
sg19
(lp13710
sg22
(lp13711
sg25
I0
sba(iArchitecture
Entity
p13712
(dp13713
g11
(lp13714
sg14
S'com.google.common.collect.testing.google.SetMultimapPutTester'
p13715
sg16
(lp13716
sg19
(lp13717
sg22
(lp13718
sg25
I0
sba(iArchitecture
Entity
p13719
(dp13720
g11
(lp13721
sg14
S'com.google.common.collect.testing.google.SetMultimapReplaceValuesTester'
p13722
sg16
(lp13723
sg19
(lp13724
sg22
(lp13725
sg25
I0
sba(iArchitecture
Entity
p13726
(dp13727
g11
(lp13728
sg14
S'com.google.common.collect.testing.google.SetMultimapTestSuiteBuilder'
p13729
sg16
(lp13730
sg19
(lp13731
sg22
(lp13732
sg25
I0
sba(iArchitecture
Entity
p13733
(dp13734
g11
(lp13735
sg14
S'com.google.common.collect.testing.google.SortedMultisetTestSuiteBuilder'
p13736
sg16
(lp13737
sg19
(lp13738
sg22
(lp13739
sg25
I0
sba(iArchitecture
Entity
p13740
(dp13741
g11
(lp13742
sg14
S'com.google.common.collect.testing.google.SortedSetMultimapAsMapTester'
p13743
sg16
(lp13744
sg19
(lp13745
sg22
(lp13746
sg25
I0
sba(iArchitecture
Entity
p13747
(dp13748
g11
(lp13749
sg14
S'com.google.common.collect.testing.google.SortedSetMultimapTestSuiteBuilder'
p13750
sg16
(lp13751
sg19
(lp13752
sg22
(lp13753
sg25
I0
sba(iArchitecture
Entity
p13754
(dp13755
g11
(lp13756
sg14
S'com.google.common.collect.testing.google.TestBiMapGenerator'
p13757
sg16
(lp13758
sg19
(lp13759
sg22
(lp13760
sg25
I0
sba(iArchitecture
Entity
p13761
(dp13762
g11
(lp13763
sg14
S'com.google.common.collect.testing.google.TestMultimapGenerator'
p13764
sg16
(lp13765
sg19
(lp13766
sg22
(lp13767
sg25
I0
sba(iArchitecture
Entity
p13768
(dp13769
g11
(lp13770
sg14
S'com.google.common.collect.testing.google.UnmodifiableCollectionTests'
p13771
sg16
(lp13772
sg19
(lp13773
sg22
(lp13774
sg25
I0
sba(iArchitecture
Entity
p13775
(dp13776
g11
(lp13777
sg14
S'com.google.common.collect.testing.testers.AbstractSetTester'
p13778
sg16
(lp13779
sg19
(lp13780
sg22
(lp13781
sg25
I0
sba(iArchitecture
Entity
p13782
(dp13783
g11
(lp13784
sg14
S'com.google.common.collect.testing.testers.CollectionClearTester'
p13785
sg16
(lp13786
sg19
(lp13787
sg22
(lp13788
sg25
I0
sba(iArchitecture
Entity
p13789
(dp13790
g11
(lp13791
sg14
S'com.google.common.collect.testing.testers.CollectionCreationTester'
p13792
sg16
(lp13793
sg19
(lp13794
sg22
(lp13795
sg25
I0
sba(iArchitecture
Entity
p13796
(dp13797
g11
(lp13798
sg14
S'com.google.common.collect.testing.testers.CollectionIteratorTester'
p13799
sg16
(lp13800
sg19
(lp13801
sg22
(lp13802
sg25
I0
sba(iArchitecture
Entity
p13803
(dp13804
g11
(lp13805
sg14
S'com.google.common.collect.testing.testers.CollectionSerializationEqualTester'
p13806
sg16
(lp13807
sg19
(lp13808
sg22
(lp13809
sg25
I0
sba(iArchitecture
Entity
p13810
(dp13811
g11
(lp13812
sg14
S'com.google.common.collect.testing.testers.CollectionToStringTester'
p13813
sg16
(lp13814
sg19
(lp13815
sg22
(lp13816
sg25
I0
sba(iArchitecture
Entity
p13817
(dp13818
g11
(lp13819
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapRemoveTester'
p13820
sg16
(lp13821
sg19
(lp13822
sg22
(lp13823
sg25
I0
sba(iArchitecture
Entity
p13824
(dp13825
g11
(lp13826
sg14
S'com.google.common.collect.testing.testers.ConcurrentMapReplaceTester'
p13827
sg16
(lp13828
sg19
(lp13829
sg22
(lp13830
sg25
I0
sba(iArchitecture
Entity
p13831
(dp13832
g11
(lp13833
sg14
S'com.google.common.collect.testing.testers.ListAddTester'
p13834
sg16
(lp13835
sg19
(lp13836
sg22
(lp13837
sg25
I0
sba(iArchitecture
Entity
p13838
(dp13839
g11
(lp13840
sg14
S'com.google.common.collect.testing.testers.ListCreationTester'
p13841
sg16
(lp13842
sg19
(lp13843
sg22
(lp13844
sg25
I0
sba(iArchitecture
Entity
p13845
(dp13846
g11
(lp13847
sg14
S'com.google.common.collect.testing.testers.ListHashCodeTester'
p13848
sg16
(lp13849
sg19
(lp13850
sg22
(lp13851
sg25
I0
sba(iArchitecture
Entity
p13852
(dp13853
g11
(lp13854
sg14
S'com.google.common.collect.testing.testers.ListIndexOfTester'
p13855
sg16
(lp13856
sg19
(lp13857
sg22
(lp13858
sg25
I0
sba(iArchitecture
Entity
p13859
(dp13860
g11
(lp13861
sg14
S'com.google.common.collect.testing.testers.ListLastIndexOfTester'
p13862
sg16
(lp13863
sg19
(lp13864
sg22
(lp13865
sg25
I0
sba(iArchitecture
Entity
p13866
(dp13867
g11
(lp13868
sg14
S'com.google.common.collect.testing.testers.ListListIteratorTester'
p13869
sg16
(lp13870
sg19
(lp13871
sg22
(lp13872
sg25
I0
sba(iArchitecture
Entity
p13873
(dp13874
g11
(lp13875
sg14
S'com.google.common.collect.testing.testers.ListRemoveAllTester'
p13876
sg16
(lp13877
sg19
(lp13878
sg22
(lp13879
sg25
I0
sba(iArchitecture
Entity
p13880
(dp13881
g11
(lp13882
sg14
S'com.google.common.collect.testing.testers.ListRemoveAtIndexTester'
p13883
sg16
(lp13884
sg19
(lp13885
sg22
(lp13886
sg25
I0
sba(iArchitecture
Entity
p13887
(dp13888
g11
(lp13889
sg14
S'com.google.common.collect.testing.testers.ListRetainAllTester'
p13890
sg16
(lp13891
sg19
(lp13892
sg22
(lp13893
sg25
I0
sba(iArchitecture
Entity
p13894
(dp13895
g11
(lp13896
sg14
S'com.google.common.collect.testing.testers.MapClearTester'
p13897
sg16
(lp13898
sg19
(lp13899
sg22
(lp13900
sg25
I0
sba(iArchitecture
Entity
p13901
(dp13902
g11
(lp13903
sg14
S'com.google.common.collect.testing.testers.MapCreationTester'
p13904
sg16
(lp13905
sg19
(lp13906
sg22
(lp13907
sg25
I0
sba(iArchitecture
Entity
p13908
(dp13909
g11
(lp13910
sg14
S'com.google.common.collect.testing.testers.MapEntrySetTester'
p13911
sg16
(lp13912
sg19
(lp13913
sg22
(lp13914
sg25
I0
sba(iArchitecture
Entity
p13915
(dp13916
g11
(lp13917
sg14
S'com.google.common.collect.testing.testers.MapEqualsTester'
p13918
sg16
(lp13919
sg19
(lp13920
sg22
(lp13921
sg25
I0
sba(iArchitecture
Entity
p13922
(dp13923
g11
(lp13924
sg14
S'com.google.common.collect.testing.testers.MapHashCodeTester'
p13925
sg16
(lp13926
sg19
(lp13927
sg22
(lp13928
sg25
I0
sba(iArchitecture
Entity
p13929
(dp13930
g11
(lp13931
sg14
S'com.google.common.collect.testing.testers.MapPutAllTester'
p13932
sg16
(lp13933
sg19
(lp13934
sg22
(lp13935
sg25
I0
sba(iArchitecture
Entity
p13936
(dp13937
g11
(lp13938
g13662
asg14
S'com.google.common.collect.testing.testers.MapToStringTester'
p13939
sg16
(lp13940
VSee a unit test demonstrating the issue here: https://github.com/gpanther/fastutil-guava-tests/blob/master/src/test/java/net/greypanther/guava/tests/tests/CustomToStringTest.java\u000a\u000aIt shows a HashMap subclass which overrides toString and as a result fails tests, even if CollectionFeature.NON_STANDARD_TOSTRING passed to MapTestSuiteBuilder.\u000a\u000aI believe that methods like https://github.com/google/guava/blob/2cd4d629a2b6f1a462643b248e0972f44c5133b7/guava-testlib/src/com/google/common/collect/testing/testers/MapToStringTester.java#L45 should be marked with `@CollectionFeature.Require(absent = NON_STANDARD_TOSTRING)`.\u000a
p13941
asg19
(lp13942
g13667
asg22
(lp13943
g13669
asg25
I0
sba(iArchitecture
Entity
p13944
(dp13945
g11
(lp13946
sg14
S'com.google.common.collect.testing.testers.QueueElementTester'
p13947
sg16
(lp13948
sg19
(lp13949
sg22
(lp13950
sg25
I0
sba(iArchitecture
Entity
p13951
(dp13952
g11
(lp13953
sg14
S'com.google.common.collect.testing.testers.QueuePeekTester'
p13954
sg16
(lp13955
sg19
(lp13956
sg22
(lp13957
sg25
I0
sba(iArchitecture
Entity
p13958
(dp13959
g11
(lp13960
sg14
S'com.google.common.collect.testing.testers.QueuePollTester'
p13961
sg16
(lp13962
sg19
(lp13963
sg22
(lp13964
sg25
I0
sba(iArchitecture
Entity
p13965
(dp13966
g11
(lp13967
sg14
S'com.google.common.collect.testing.testers.QueueRemoveTester'
p13968
sg16
(lp13969
sg19
(lp13970
sg22
(lp13971
sg25
I0
sba(iArchitecture
Entity
p13972
(dp13973
g11
(lp13974
sg14
S'com.google.common.collect.testing.testers.SetAddTester'
p13975
sg16
(lp13976
sg19
(lp13977
sg22
(lp13978
sg25
I0
sba(iArchitecture
Entity
p13979
(dp13980
g11
(lp13981
sg14
S'com.google.common.collect.testing.testers.SetCreationTester'
p13982
sg16
(lp13983
sg19
(lp13984
sg22
(lp13985
sg25
I0
sba(iArchitecture
Entity
p13986
(dp13987
g11
(lp13988
sg14
S'com.google.common.collect.testing.testers.SetHashCodeTester'
p13989
sg16
(lp13990
sg19
(lp13991
sg22
(lp13992
sg25
I0
sba(iArchitecture
Entity
p13993
(dp13994
g11
(lp13995
sg14
S'com.google.common.collect.testing.testers.SortedSetNavigationTester'
p13996
sg16
(lp13997
sg19
(lp13998
sg22
(lp13999
sg25
I0
sba(iArchitecture
Entity
p14000
(dp14001
g11
(lp14002
sg14
S'com.google.common.eventbus.AllowConcurrentEvents'
p14003
sg16
(lp14004
sg19
(lp14005
sg22
(lp14006
sg25
I0
sba(iArchitecture
Entity
p14007
(dp14008
g11
(lp14009
sg14
S'com.google.common.eventbus.PackageSanityTests'
p14010
sg16
(lp14011
sg19
(lp14012
sg22
(lp14013
sg25
I0
sba(iArchitecture
Entity
p14014
(dp14015
g11
(lp14016
sg14
S'com.google.common.eventbus.Subscribe'
p14017
sg16
(lp14018
sg19
(lp14019
sg22
(lp14020
sg25
I0
sba(iArchitecture
Entity
p14021
(dp14022
g11
(lp14023
sg14
S'com.google.common.eventbus.SubscriberExceptionContext'
p14024
sg16
(lp14025
sg19
(lp14026
sg22
(lp14027
sg25
I0
sba(iArchitecture
Entity
p14028
(dp14029
g11
(lp14030
sg14
S'com.google.common.eventbus.SubscriberRegistry'
p14031
sg16
(lp14032
sg19
(lp14033
sg22
(lp14034
sg25
I0
sba(iArchitecture
Entity
p14035
(dp14036
g11
(lp14037
sg14
S'com.google.common.eventbus.package-info'
p14038
sg16
(lp14039
sg19
(lp14040
sg22
(lp14041
sg25
I0
sba(iArchitecture
Entity
p14042
(dp14043
g11
(lp14044
sg14
S'com.google.common.hash.SuppressUnderAndroid'
p14045
sg16
(lp14046
sg19
(lp14047
sg22
(lp14048
sg25
I0
sba(iArchitecture
Entity
p14049
(dp14050
g11
(lp14051
sg14
S'com.google.common.hash.package-info'
p14052
sg16
(lp14053
sg19
(lp14054
sg22
(lp14055
sg25
I0
sba(iArchitecture
Entity
p14056
(dp14057
g11
(lp14058
sg14
S'com.google.common.html.package-info'
p14059
sg16
(lp14060
sg19
(lp14061
sg22
(lp14062
sg25
I0
sba(iArchitecture
Entity
p14063
(dp14064
g11
(lp14065
sg14
S'com.google.common.io.Closer'
p14066
sg16
(lp14067
sg19
(lp14068
sg22
(lp14069
sg25
I0
sba(iArchitecture
Entity
p14070
(dp14071
g11
(lp14072
sg14
S'com.google.common.io.SuppressUnderAndroid'
p14073
sg16
(lp14074
sg19
(lp14075
sg22
(lp14076
sg25
I0
sba(iArchitecture
Entity
p14077
(dp14078
g11
(lp14079
sg14
S'com.google.common.math.DoubleMath'
p14080
sg16
(lp14081
sg19
(lp14082
sg22
(lp14083
sg25
I0
sba(iArchitecture
Entity
p14084
(dp14085
g11
(lp14086
sg14
S'com.google.common.math.StatsBenchmark'
p14087
sg16
(lp14088
sg19
(lp14089
sg22
(lp14090
sg25
I0
sba(iArchitecture
Entity
p14091
(dp14092
g11
(lp14093
sg14
S'com.google.common.math.SuppressUnderAndroid'
p14094
sg16
(lp14095
sg19
(lp14096
sg22
(lp14097
sg25
I0
sba(iArchitecture
Entity
p14098
(dp14099
g11
(lp14100
sg14
S'com.google.common.math.package-info'
p14101
sg16
(lp14102
sg19
(lp14103
sg22
(lp14104
sg25
I0
sba(iArchitecture
Entity
p14105
(dp14106
g11
(lp14107
V2132
p14108
asg14
S'com.google.common.net.MediaType'
p14109
sg16
(lp14110
VMissed several video MimeTypes in MediaType class:\u000a\u000a```\u000avideo/x-flv\u000avideo/3gpp\u000avideo/3gpp2\u000a```\u000a\u000aand some audio types:\u000a\u000a```\u000aaudio/basic\u000aaudio/L24\u000aaudio/aac\u000aaudio/vorbis\u000aaudio/x-ms-wma\u000aaudio/x-ms-wax\u000aaudio/vnd.rn-realaudio\u000aaudio/vnd.wave\u000a```\u000a
p14111
asg19
(lp14112
(lp14113
I5
aasg22
(lp14114
VAdd video MediaTypes
p14115
asg25
I0
sba(iArchitecture
Entity
p14116
(dp14117
g11
(lp14118
sg14
S'com.google.common.primitives.Primitives'
p14119
sg16
(lp14120
sg19
(lp14121
sg22
(lp14122
sg25
I0
sba(iArchitecture
Entity
p14123
(dp14124
g11
(lp14125
sg14
S'com.google.common.primitives.UnsignedLong_CustomFieldSerializer'
p14126
sg16
(lp14127
sg19
(lp14128
sg22
(lp14129
sg25
I0
sba(iArchitecture
Entity
p14130
(dp14131
g11
(lp14132
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMap'
p14133
sg16
(lp14134
sg19
(lp14135
sg22
(lp14136
sg25
I0
sba(iArchitecture
Entity
p14137
(dp14138
g11
(lp14139
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMapTest'
p14140
sg16
(lp14141
sg19
(lp14142
sg22
(lp14143
sg25
I0
sba(iArchitecture
Entity
p14144
(dp14145
g11
(lp14146
sg14
S'com.google.common.reflect.MutableTypeToInstanceMap'
p14147
sg16
(lp14148
sg19
(lp14149
sg22
(lp14150
sg25
I0
sba(iArchitecture
Entity
p14151
(dp14152
g11
(lp14153
sg14
S'com.google.common.reflect.MutableTypeToInstanceMapTest'
p14154
sg16
(lp14155
sg19
(lp14156
sg22
(lp14157
sg25
I0
sba(iArchitecture
Entity
p14158
(dp14159
g11
(lp14160
sg14
S'com.google.common.reflect.ReflectionTest'
p14161
sg16
(lp14162
sg19
(lp14163
sg22
(lp14164
sg25
I0
sba(iArchitecture
Entity
p14165
(dp14166
g11
(lp14167
sg14
S'com.google.common.reflect.SuppressUnderAndroid'
p14168
sg16
(lp14169
sg19
(lp14170
sg22
(lp14171
sg25
I0
sba(iArchitecture
Entity
p14172
(dp14173
g11
(lp14174
sg14
S'com.google.common.reflect.TypeParameter'
p14175
sg16
(lp14176
sg19
(lp14177
sg22
(lp14178
sg25
I0
sba(iArchitecture
Entity
p14179
(dp14180
g11
(lp14181
sg14
S'com.google.common.reflect.TypeResolver'
p14182
sg16
(lp14183
sg19
(lp14184
sg22
(lp14185
sg25
I0
sba(iArchitecture
Entity
p14186
(dp14187
g11
(lp14188
sg14
S'com.google.common.reflect.TypeToInstanceMap'
p14189
sg16
(lp14190
sg19
(lp14191
sg22
(lp14192
sg25
I0
sba(iArchitecture
Entity
p14193
(dp14194
g11
(lp14195
sg14
S'com.google.common.reflect.TypeToken'
p14196
sg16
(lp14197
sg19
(lp14198
sg22
(lp14199
sg25
I0
sba(iArchitecture
Entity
p14200
(dp14201
g11
(lp14202
sg14
S'com.google.common.reflect.TypeVisitor'
p14203
sg16
(lp14204
sg19
(lp14205
sg22
(lp14206
sg25
I0
sba(iArchitecture
Entity
p14207
(dp14208
g11
(lp14209
sg14
S'com.google.common.reflect.TypeVisitorTest'
p14210
sg16
(lp14211
sg19
(lp14212
sg22
(lp14213
sg25
I0
sba(iArchitecture
Entity
p14214
(dp14215
g11
(lp14216
sg14
S'com.google.common.reflect.Types'
p14217
sg16
(lp14218
sg19
(lp14219
sg22
(lp14220
sg25
I0
sba(iArchitecture
Entity
p14221
(dp14222
g11
(lp14223
sg14
S'com.google.common.reflect.TypesTest'
p14224
sg16
(lp14225
sg19
(lp14226
sg22
(lp14227
sg25
I0
sba(iArchitecture
Entity
p14228
(dp14229
g11
(lp14230
sg14
S'com.google.common.reflect.package-info'
p14231
sg16
(lp14232
sg19
(lp14233
sg22
(lp14234
sg25
I0
sba(iArchitecture
Entity
p14235
(dp14236
g11
(lp14237
sg14
S'com.google.common.testing.ArbitraryInstances'
p14238
sg16
(lp14239
sg19
(lp14240
sg22
(lp14241
sg25
I0
sba(iArchitecture
Entity
p14242
(dp14243
g11
(lp14244
sg14
S'com.google.common.testing.DummyProxy'
p14245
sg16
(lp14246
sg19
(lp14247
sg22
(lp14248
sg25
I0
sba(iArchitecture
Entity
p14249
(dp14250
g11
(lp14251
sg14
S'com.google.common.testing.EqualsTester'
p14252
sg16
(lp14253
sg19
(lp14254
sg22
(lp14255
sg25
I0
sba(iArchitecture
Entity
p14256
(dp14257
g11
(lp14258
sg14
S'com.google.common.testing.ForwardingWrapperTester'
p14259
sg16
(lp14260
sg19
(lp14261
sg22
(lp14262
sg25
I0
sba(iArchitecture
Entity
p14263
(dp14264
g11
(lp14265
sg14
S'com.google.common.testing.FreshValueGenerator'
p14266
sg16
(lp14267
sg19
(lp14268
sg22
(lp14269
sg25
I0
sba(iArchitecture
Entity
p14270
(dp14271
g11
(lp14272
g6858
ag6858
asg14
S'com.google.common.testing.NullPointerTester'
p14273
sg16
(lp14274
V_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1819) created by **ogregoire** on 2014-07-29 at 03:35 PM_\u000a\u000a---\u000a\u000aWhen I call the following, the test case fails (see full test case in attachment).\u000a\u000a&nbsp;&nbsp;new ClassSanityTester().testNulls(MyObject.class);\u000a\u000aI get the following error: No exception thrown for parameter at index 0 from MyObjectTest$MyObject.public boolean MyObjectTest$MyObject.equals(java.lang.Object)[null] for class MyObjectTest$MyObject\u000a\u000aClearly, this indicates that it expects a call to "equals(Object)" to throw a NullPointerException. That method should never throw an exception but rather return true or false. The test seems to skip this assertion and I'm surprised this hasn't been reported earlier. \u000a\u000aPlease make it so ClassSanityTester#testNulls(Class) doesn't fail when equals is behaving correctly (see the test case where testEquals(MyObject.class succeeds).\u000a\u000aOn a side note, the text returned should be adapted as it mentions three times MyObjectTest$MyObject. That's 2 too many, and it renders the whole error message nearly not understandable.\u000a
p14275
aV_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1819) created by **ogregoire** on 2014-07-29 at 03:35 PM_\u000a\u000a---\u000a\u000aWhen I call the following, the test case fails (see full test case in attachment).\u000a\u000a&nbsp;&nbsp;new ClassSanityTester().testNulls(MyObject.class);\u000a\u000aI get the following error: No exception thrown for parameter at index 0 from MyObjectTest$MyObject.public boolean MyObjectTest$MyObject.equals(java.lang.Object)[null] for class MyObjectTest$MyObject\u000a\u000aClearly, this indicates that it expects a call to "equals(Object)" to throw a NullPointerException. That method should never throw an exception but rather return true or false. The test seems to skip this assertion and I'm surprised this hasn't been reported earlier. \u000a\u000aPlease make it so ClassSanityTester#testNulls(Class) doesn't fail when equals is behaving correctly (see the test case where testEquals(MyObject.class succeeds).\u000a\u000aOn a side note, the text returned should be adapted as it mentions three times MyObjectTest$MyObject. That's 2 too many, and it renders the whole error message nearly not understandable.\u000a
p14276
asg19
(lp14277
g6863
ag6863
asg22
(lp14278
g6865
ag6865
asg25
I0
sba(iArchitecture
Entity
p14279
(dp14280
g11
(lp14281
sg14
S'com.google.common.testing.Platform'
p14282
sg16
(lp14283
sg19
(lp14284
sg22
(lp14285
sg25
I0
sba(iArchitecture
Entity
p14286
(dp14287
g11
(lp14288
sg14
S'com.google.common.testing.TearDownStack'
p14289
sg16
(lp14290
sg19
(lp14291
sg22
(lp14292
sg25
I0
sba(iArchitecture
Entity
p14293
(dp14294
g11
(lp14295
sg14
S'com.google.common.testing.package-info'
p14296
sg16
(lp14297
sg19
(lp14298
sg22
(lp14299
sg25
I0
sba(iArchitecture
Entity
p14300
(dp14301
g11
(lp14302
sg14
S'com.google.common.util.concurrent.AbstractFutureFallbackAtomicHelperTest'
p14303
sg16
(lp14304
sg19
(lp14305
sg22
(lp14306
sg25
I0
sba(iArchitecture
Entity
p14307
(dp14308
g11
(lp14309
g6929
ag6929
asg14
S'com.google.common.util.concurrent.AggregateFutureState'
p14310
sg16
(lp14311
VWe already do in `AbstractFuture`.\u000a
p14312
aVWe already do in `AbstractFuture`.\u000a
p14313
asg19
(lp14314
g6935
ag6935
asg22
(lp14315
g6937
ag6937
asg25
I0
sba(iArchitecture
Entity
p14316
(dp14317
g11
(lp14318
sg14
S'com.google.common.util.concurrent.AsyncFunction'
p14319
sg16
(lp14320
sg19
(lp14321
sg22
(lp14322
sg25
I0
sba(iArchitecture
Entity
p14323
(dp14324
g11
(lp14325
sg14
S'com.google.common.util.concurrent.AtomicLongMap'
p14326
sg16
(lp14327
sg19
(lp14328
sg22
(lp14329
sg25
I0
sba(iArchitecture
Entity
p14330
(dp14331
g11
(lp14332
sg14
S'com.google.common.util.concurrent.AtomicLongMapTest'
p14333
sg16
(lp14334
sg19
(lp14335
sg22
(lp14336
sg25
I0
sba(iArchitecture
Entity
p14337
(dp14338
g11
(lp14339
sg14
S'com.google.common.util.concurrent.AtomicLongMapTest_gwt'
p14340
sg16
(lp14341
sg19
(lp14342
sg22
(lp14343
sg25
I0
sba(iArchitecture
Entity
p14344
(dp14345
g11
(lp14346
sg14
S'com.google.common.util.concurrent.Atomics'
p14347
sg16
(lp14348
sg19
(lp14349
sg22
(lp14350
sg25
I0
sba(iArchitecture
Entity
p14351
(dp14352
g11
(lp14353
sg14
S'com.google.common.util.concurrent.Callables'
p14354
sg16
(lp14355
sg19
(lp14356
sg22
(lp14357
sg25
I0
sba(iArchitecture
Entity
p14358
(dp14359
g11
(lp14360
sg14
S'com.google.common.util.concurrent.CallablesTest'
p14361
sg16
(lp14362
sg19
(lp14363
sg22
(lp14364
sg25
I0
sba(iArchitecture
Entity
p14365
(dp14366
g11
(lp14367
sg14
S'com.google.common.util.concurrent.CheckedFuture'
p14368
sg16
(lp14369
sg19
(lp14370
sg22
(lp14371
sg25
I0
sba(iArchitecture
Entity
p14372
(dp14373
g11
(lp14374
sg14
S'com.google.common.util.concurrent.CollectionFuture'
p14375
sg16
(lp14376
sg19
(lp14377
sg22
(lp14378
sg25
I0
sba(iArchitecture
Entity
p14379
(dp14380
g11
(lp14381
sg14
S'com.google.common.util.concurrent.ExecutionList'
p14382
sg16
(lp14383
sg19
(lp14384
sg22
(lp14385
sg25
I0
sba(iArchitecture
Entity
p14386
(dp14387
g11
(lp14388
sg14
S'com.google.common.util.concurrent.FakeTimeLimiter'
p14389
sg16
(lp14390
sg19
(lp14391
sg22
(lp14392
sg25
I0
sba(iArchitecture
Entity
p14393
(dp14394
g11
(lp14395
sg14
S'com.google.common.util.concurrent.ForwardingObjectTester'
p14396
sg16
(lp14397
sg19
(lp14398
sg22
(lp14399
sg25
I0
sba(iArchitecture
Entity
p14400
(dp14401
g11
(lp14402
sg14
S'com.google.common.util.concurrent.FutureCallback'
p14403
sg16
(lp14404
sg19
(lp14405
sg22
(lp14406
sg25
I0
sba(iArchitecture
Entity
p14407
(dp14408
g11
(lp14409
sg14
S'com.google.common.util.concurrent.FutureFallback'
p14410
sg16
(lp14411
sg19
(lp14412
sg22
(lp14413
sg25
I0
sba(iArchitecture
Entity
p14414
(dp14415
g11
(lp14416
sg14
S'com.google.common.util.concurrent.FuturesGetChecked'
p14417
sg16
(lp14418
sg19
(lp14419
sg22
(lp14420
sg25
I0
sba(iArchitecture
Entity
p14421
(dp14422
g11
(lp14423
sg14
S'com.google.common.util.concurrent.FuturesGetCheckedBenchmark'
p14424
sg16
(lp14425
sg19
(lp14426
sg22
(lp14427
sg25
I0
sba(iArchitecture
Entity
p14428
(dp14429
g11
(lp14430
sg14
S'com.google.common.util.concurrent.FuturesGetUncheckedTest'
p14431
sg16
(lp14432
sg19
(lp14433
sg22
(lp14434
sg25
I0
sba(iArchitecture
Entity
p14435
(dp14436
g11
(lp14437
sg14
S'com.google.common.util.concurrent.ListenableFutureTask'
p14438
sg16
(lp14439
sg19
(lp14440
sg22
(lp14441
sg25
I0
sba(iArchitecture
Entity
p14442
(dp14443
g11
(lp14444
sg14
S'com.google.common.util.concurrent.ListenableFutureTester'
p14445
sg16
(lp14446
sg19
(lp14447
sg22
(lp14448
sg25
I0
sba(iArchitecture
Entity
p14449
(dp14450
g11
(lp14451
sg14
S'com.google.common.util.concurrent.ListenableScheduledFuture'
p14452
sg16
(lp14453
sg19
(lp14454
sg22
(lp14455
sg25
I0
sba(iArchitecture
Entity
p14456
(dp14457
g11
(lp14458
sg14
S'com.google.common.util.concurrent.ListeningScheduledExecutorService'
p14459
sg16
(lp14460
sg19
(lp14461
sg22
(lp14462
sg25
I0
sba(iArchitecture
Entity
p14463
(dp14464
g11
(lp14465
sg14
S'com.google.common.util.concurrent.MoreExecutorsDirectExecutorBenchmark'
p14466
sg16
(lp14467
sg19
(lp14468
sg22
(lp14469
sg25
I0
sba(iArchitecture
Entity
p14470
(dp14471
g11
(lp14472
sg14
S'com.google.common.util.concurrent.Platform'
p14473
sg16
(lp14474
sg19
(lp14475
sg22
(lp14476
sg25
I0
sba(iArchitecture
Entity
p14477
(dp14478
g11
(lp14479
sg14
S'com.google.common.util.concurrent.ServiceManagerTest'
p14480
sg16
(lp14481
sg19
(lp14482
sg22
(lp14483
sg25
I0
sba(iArchitecture
Entity
p14484
(dp14485
g11
(lp14486
sg14
S'com.google.common.util.concurrent.ServiceTest'
p14487
sg16
(lp14488
sg19
(lp14489
sg22
(lp14490
sg25
I0
sba(iArchitecture
Entity
p14491
(dp14492
g11
(lp14493
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiter'
p14494
sg16
(lp14495
sg19
(lp14496
sg22
(lp14497
sg25
I0
sba(iArchitecture
Entity
p14498
(dp14499
g11
(lp14500
sg14
S'com.google.common.util.concurrent.SuppressUnderAndroid'
p14501
sg16
(lp14502
sg19
(lp14503
sg22
(lp14504
sg25
I0
sba(iArchitecture
Entity
p14505
(dp14506
g11
(lp14507
sg14
S'com.google.common.util.concurrent.TestModuleEntryPoint'
p14508
sg16
(lp14509
sg19
(lp14510
sg22
(lp14511
sg25
I0
sba(iArchitecture
Entity
p14512
(dp14513
g11
(lp14514
sg14
S'com.google.common.util.concurrent.TestPlatform'
p14515
sg16
(lp14516
sg19
(lp14517
sg22
(lp14518
sg25
I0
sba(iArchitecture
Entity
p14519
(dp14520
g11
(lp14521
sg14
S'com.google.common.util.concurrent.TimeLimiter'
p14522
sg16
(lp14523
sg19
(lp14524
sg22
(lp14525
sg25
I0
sba(iArchitecture
Entity
p14526
(dp14527
g11
(lp14528
sg14
S'com.google.common.util.concurrent.TrustedInputFutureTest_gwt'
p14529
sg16
(lp14530
sg19
(lp14531
sg22
(lp14532
sg25
I0
sba(iArchitecture
Entity
p14533
(dp14534
g11
(lp14535
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTask'
p14536
sg16
(lp14537
sg19
(lp14538
sg22
(lp14539
sg25
I0
sba(iArchitecture
Entity
p14540
(dp14541
g11
(lp14542
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTaskTest'
p14543
sg16
(lp14544
sg19
(lp14545
sg22
(lp14546
sg25
I0
sba(iArchitecture
Entity
p14547
(dp14548
g11
(lp14549
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p14550
sg16
(lp14551
sg19
(lp14552
sg22
(lp14553
sg25
I0
sba(iArchitecture
Entity
p14554
(dp14555
g11
(lp14556
sg14
S'com.google.common.util.concurrent.UntrustedInputFutureTest_gwt'
p14557
sg16
(lp14558
sg19
(lp14559
sg22
(lp14560
sg25
I0
sba(iArchitecture
Entity
p14561
(dp14562
g11
(lp14563
sg14
S'com.google.common.util.concurrent.package-info'
p14564
sg16
(lp14565
sg19
(lp14566
sg22
(lp14567
sg25
I0
sba(iArchitecture
Entity
p14568
(dp14569
g11
(lp14570
sg14
S'com.google.common.util.concurrent.testing.MockFutureListener'
p14571
sg16
(lp14572
sg19
(lp14573
sg22
(lp14574
sg25
I0
sba(iArchitecture
Entity
p14575
(dp14576
g11
(lp14577
sg14
S'com.google.common.util.concurrent.testing.TestingExecutors'
p14578
sg16
(lp14579
sg19
(lp14580
sg22
(lp14581
sg25
I0
sba(iArchitecture
Entity
p14582
(dp14583
g11
(lp14584
sg14
S'com.google.common.xml.TestModuleEntryPoint'
p14585
sg16
(lp14586
sg19
(lp14587
sg22
(lp14588
sg25
I0
sba(iArchitecture
Entity
p14589
(dp14590
g11
(lp14591
sg14
S'com.google.common.xml.XmlEscapersTest_gwt'
p14592
sg16
(lp14593
sg19
(lp14594
sg22
(lp14595
sg25
I0
sba(iArchitecture
Entity
p14596
(dp14597
g11
(lp14598
sg14
S'com.google.common.xml.package-info'
p14599
sg16
(lp14600
sg19
(lp14601
sg22
(lp14602
sg25
I0
sba(iArchitecture
Entity
p14603
(dp14604
g11
(lp14605
sg14
S'java.util.concurrent.Callable'
p14606
sg16
(lp14607
sg19
(lp14608
sg22
(lp14609
sg25
I0
sba(iArchitecture
Entity
p14610
(dp14611
g11
(lp14612
sg14
S'java.util.concurrent.ConcurrentMap'
p14613
sg16
(lp14614
sg19
(lp14615
sg22
(lp14616
sg25
I0
sba(iArchitecture
Entity
p14617
(dp14618
g11
(lp14619
sg14
S'java.util.concurrent.Executor'
p14620
sg16
(lp14621
sg19
(lp14622
sg22
(lp14623
sg25
I0
sba(iArchitecture
Entity
p14624
(dp14625
g11
(lp14626
sg14
S'java.util.concurrent.RunnableFuture'
p14627
sg16
(lp14628
sg19
(lp14629
sg22
(lp14630
sg25
I0
sba(iArchitecture
Entity
p14631
(dp14632
g11
(lp14633
sg14
S'java.util.concurrent.ScheduledFuture'
p14634
sg16
(lp14635
sg19
(lp14636
sg22
(lp14637
sg25
I0
sbasg1017
(lp14638
g12091
ag12098
ag12105
ag12112
ag12119
ag12126
ag12133
ag12140
ag12147
ag12154
ag12161
ag12168
ag12177
ag12186
ag12193
ag12200
ag12207
ag12217
ag12224
ag12231
ag12238
ag12245
ag12252
ag12259
ag12266
ag12273
ag12280
ag12287
ag12294
ag12301
ag12308
ag12315
ag12322
ag12329
ag12336
ag12343
ag12350
ag12357
ag12364
ag12371
ag12378
ag12385
ag12392
ag12399
ag12406
ag12413
ag12420
ag12427
ag12434
ag12441
ag12448
ag12455
ag12462
ag12469
ag12476
ag12483
ag12490
ag12497
ag12504
ag12511
ag12518
ag12525
ag12532
ag12539
ag12546
ag12553
ag12560
ag12567
ag12574
ag12581
ag12588
ag12595
ag12602
ag12609
ag12616
ag12623
ag12630
ag12637
ag12644
ag12651
ag12658
ag12665
ag12672
ag12679
ag12686
ag12693
ag12700
ag12707
ag12714
ag12721
ag12728
ag12735
ag12742
ag12749
ag12756
ag12763
ag12770
ag12777
ag12784
ag12791
ag12798
ag12805
ag12812
ag12819
ag12826
ag12833
ag12840
ag12847
ag12854
ag12861
ag12868
ag12875
ag12882
ag12889
ag12896
ag12903
ag12911
ag12921
ag12928
ag12935
ag12942
ag12950
ag12958
ag12965
ag12972
ag12979
ag12986
ag12993
ag13000
ag13007
ag13014
ag13021
ag13028
ag13035
ag13042
ag13049
ag13056
ag13063
ag13070
ag13077
ag13084
ag13091
ag13098
ag13105
ag13112
ag13119
ag13126
ag13133
ag13140
ag13147
ag13154
ag13161
ag13168
ag13175
ag13182
ag13189
ag13196
ag13203
ag13210
ag13217
ag13224
ag13231
ag13238
ag13245
ag13252
ag13259
ag13266
ag13273
ag13280
ag13287
ag13294
ag13301
ag13308
ag13315
ag13322
ag13329
ag13336
ag13343
ag13350
ag13357
ag13364
ag13371
ag13379
ag13389
ag13396
ag13403
ag13410
ag13417
ag13424
ag13431
ag13438
ag13445
ag13452
ag13459
ag13466
ag13473
ag13480
ag13487
ag13494
ag13501
ag13508
ag13515
ag13522
ag13529
ag13536
ag13543
ag13550
ag13557
ag13564
ag13571
ag13578
ag13585
ag13592
ag13599
ag13606
ag13613
ag13620
ag13627
ag13634
ag13641
ag13648
ag13655
ag13663
ag13673
ag13680
ag13687
ag13694
ag13701
ag13708
ag13715
ag13722
ag13729
ag13736
ag13743
ag13750
ag13757
ag13764
ag13771
ag13778
ag13785
ag13792
ag13799
ag13806
ag13813
ag13820
ag13827
ag13834
ag13841
ag13848
ag13855
ag13862
ag13869
ag13876
ag13883
ag13890
ag13897
ag13904
ag13911
ag13918
ag13925
ag13932
ag13939
ag13947
ag13954
ag13961
ag13968
ag13975
ag13982
ag13989
ag13996
ag14003
ag14010
ag14017
ag14024
ag14031
ag14038
ag14045
ag14052
ag14059
ag14066
ag14073
ag14080
ag14087
ag14094
ag14101
ag14109
ag14119
ag14126
ag14133
ag14140
ag14147
ag14154
ag14161
ag14168
ag14175
ag14182
ag14189
ag14196
ag14203
ag14210
ag14217
ag14224
ag14231
ag14238
ag14245
ag14252
ag14259
ag14266
ag14273
ag14282
ag14289
ag14296
ag14303
ag14310
ag14319
ag14326
ag14333
ag14340
ag14347
ag14354
ag14361
ag14368
ag14375
ag14382
ag14389
ag14396
ag14403
ag14410
ag14417
ag14424
ag14431
ag14438
ag14445
ag14452
ag14459
ag14466
ag14473
ag14480
ag14487
ag14494
ag14501
ag14508
ag14515
ag14522
ag14529
ag14536
ag14543
ag14550
ag14557
ag14564
ag14571
ag14578
ag14585
ag14592
ag14599
ag14606
ag14613
ag14620
ag14627
ag14634
asg25
I0
sg1019
S'sql'
p14639
sbasg1019
S'v19.0'
p14640
sba(iArchitecture
Architecture
p14641
(dp14642
g3
(lp14643
(iArchitecture
Cluster
p14644
(dp14645
g7
(lp14646
(iArchitecture
Entity
p14647
(dp14648
g11
(lp14649
sg14
S'com.google.common.base.CharMatcher'
p14650
sg16
(lp14651
sg19
(lp14652
sg22
(lp14653
sg25
I0
sba(iArchitecture
Entity
p14654
(dp14655
g11
(lp14656
sg14
S'com.google.common.base.Equivalence'
p14657
sg16
(lp14658
sg19
(lp14659
sg22
(lp14660
sg25
I0
sba(iArchitecture
Entity
p14661
(dp14662
g11
(lp14663
sg14
S'com.google.common.base.Functions'
p14664
sg16
(lp14665
sg19
(lp14666
sg22
(lp14667
sg25
I0
sba(iArchitecture
Entity
p14668
(dp14669
g11
(lp14670
sg14
S'com.google.common.base.JdkPattern'
p14671
sg16
(lp14672
sg19
(lp14673
sg22
(lp14674
sg25
I0
sba(iArchitecture
Entity
p14675
(dp14676
g11
(lp14677
sg14
S'com.google.common.base.PairwiseEquivalence'
p14678
sg16
(lp14679
sg19
(lp14680
sg22
(lp14681
sg25
I0
sba(iArchitecture
Entity
p14682
(dp14683
g11
(lp14684
sg14
S'com.google.common.base.Preconditions'
p14685
sg16
(lp14686
sg19
(lp14687
sg22
(lp14688
sg25
I0
sba(iArchitecture
Entity
p14689
(dp14690
g11
(lp14691
sg14
S'com.google.common.base.Predicates'
p14692
sg16
(lp14693
sg19
(lp14694
sg22
(lp14695
sg25
I0
sba(iArchitecture
Entity
p14696
(dp14697
g11
(lp14698
sg14
S'com.google.common.base.SmallCharMatcher'
p14699
sg16
(lp14700
sg19
(lp14701
sg22
(lp14702
sg25
I0
sba(iArchitecture
Entity
p14703
(dp14704
g11
(lp14705
sg14
S'com.google.common.base.Splitter'
p14706
sg16
(lp14707
sg19
(lp14708
sg22
(lp14709
sg25
I0
sba(iArchitecture
Entity
p14710
(dp14711
g11
(lp14712
sg14
S'com.google.common.base.Strings'
p14713
sg16
(lp14714
sg19
(lp14715
sg22
(lp14716
sg25
I0
sba(iArchitecture
Entity
p14717
(dp14718
g11
(lp14719
sg14
S'com.google.common.cache.CacheBuilderSpec'
p14720
sg16
(lp14721
sg19
(lp14722
sg22
(lp14723
sg25
I0
sba(iArchitecture
Entity
p14724
(dp14725
g11
(lp14726
sg14
S'com.google.common.cache.LocalCache'
p14727
sg16
(lp14728
sg19
(lp14729
sg22
(lp14730
sg25
I0
sba(iArchitecture
Entity
p14731
(dp14732
g11
(lp14733
sg14
S'com.google.common.cache.LongAdder'
p14734
sg16
(lp14735
sg19
(lp14736
sg22
(lp14737
sg25
I0
sba(iArchitecture
Entity
p14738
(dp14739
g11
(lp14740
sg14
S'com.google.common.collect.AbstractIndexedListIterator'
p14741
sg16
(lp14742
sg19
(lp14743
sg22
(lp14744
sg25
I0
sba(iArchitecture
Entity
p14745
(dp14746
g11
(lp14747
sg14
S'com.google.common.collect.AbstractMapBasedMultimap'
p14748
sg16
(lp14749
sg19
(lp14750
sg22
(lp14751
sg25
I0
sba(iArchitecture
Entity
p14752
(dp14753
g11
(lp14754
sg14
S'com.google.common.collect.AbstractMapBasedMultiset'
p14755
sg16
(lp14756
sg19
(lp14757
sg22
(lp14758
sg25
I0
sba(iArchitecture
Entity
p14759
(dp14760
g11
(lp14761
sg14
S'com.google.common.collect.AbstractMultimap'
p14762
sg16
(lp14763
sg19
(lp14764
sg22
(lp14765
sg25
I0
sba(iArchitecture
Entity
p14766
(dp14767
g11
(lp14768
sg14
S'com.google.common.collect.AbstractMultiset'
p14769
sg16
(lp14770
sg19
(lp14771
sg22
(lp14772
sg25
I0
sba(iArchitecture
Entity
p14773
(dp14774
g11
(lp14775
sg14
S'com.google.common.collect.AbstractNavigableMap'
p14776
sg16
(lp14777
sg19
(lp14778
sg22
(lp14779
sg25
I0
sba(iArchitecture
Entity
p14780
(dp14781
g11
(lp14782
sg14
S'com.google.common.collect.AbstractRangeSet'
p14783
sg16
(lp14784
sg19
(lp14785
sg22
(lp14786
sg25
I0
sba(iArchitecture
Entity
p14787
(dp14788
g11
(lp14789
sg14
S'com.google.common.collect.AbstractTable'
p14790
sg16
(lp14791
sg19
(lp14792
sg22
(lp14793
sg25
I0
sba(iArchitecture
Entity
p14794
(dp14795
g11
(lp14796
sg14
S'com.google.common.collect.CartesianList'
p14797
sg16
(lp14798
sg19
(lp14799
sg22
(lp14800
sg25
I0
sba(iArchitecture
Entity
p14801
(dp14802
g11
(lp14803
sg14
S'com.google.common.collect.Collections2'
p14804
sg16
(lp14805
sg19
(lp14806
sg22
(lp14807
sg25
I0
sba(iArchitecture
Entity
p14808
(dp14809
g11
(lp14810
sg14
S'com.google.common.collect.ComparisonChain'
p14811
sg16
(lp14812
sg19
(lp14813
sg22
(lp14814
sg25
I0
sba(iArchitecture
Entity
p14815
(dp14816
g11
(lp14817
sg14
S'com.google.common.collect.CompoundOrdering'
p14818
sg16
(lp14819
sg19
(lp14820
sg22
(lp14821
sg25
I0
sba(iArchitecture
Entity
p14822
(dp14823
g11
(lp14824
sg14
S'com.google.common.collect.ConcurrentHashMultiset'
p14825
sg16
(lp14826
sg19
(lp14827
sg22
(lp14828
sg25
I0
sba(iArchitecture
Entity
p14829
(dp14830
g11
(lp14831
sg14
S'com.google.common.collect.ContiguousSet'
p14832
sg16
(lp14833
sg19
(lp14834
sg22
(lp14835
sg25
I0
sba(iArchitecture
Entity
p14836
(dp14837
g11
(lp14838
sg14
S'com.google.common.collect.Count'
p14839
sg16
(lp14840
sg19
(lp14841
sg22
(lp14842
sg25
I0
sba(iArchitecture
Entity
p14843
(dp14844
g11
(lp14845
sg14
S'com.google.common.collect.DenseImmutableTable'
p14846
sg16
(lp14847
sg19
(lp14848
sg22
(lp14849
sg25
I0
sba(iArchitecture
Entity
p14850
(dp14851
g11
(lp14852
sg14
S'com.google.common.collect.DescendingImmutableSortedMultiset'
p14853
sg16
(lp14854
sg19
(lp14855
sg22
(lp14856
sg25
I0
sba(iArchitecture
Entity
p14857
(dp14858
g11
(lp14859
sg14
S'com.google.common.collect.DescendingImmutableSortedSet'
p14860
sg16
(lp14861
sg19
(lp14862
sg22
(lp14863
sg25
I0
sba(iArchitecture
Entity
p14864
(dp14865
g11
(lp14866
sg14
S'com.google.common.collect.DescendingMultiset'
p14867
sg16
(lp14868
sg19
(lp14869
sg22
(lp14870
sg25
I0
sba(iArchitecture
Entity
p14871
(dp14872
g11
(lp14873
sg14
S'com.google.common.collect.EmptyContiguousSet'
p14874
sg16
(lp14875
sg19
(lp14876
sg22
(lp14877
sg25
I0
sba(iArchitecture
Entity
p14878
(dp14879
g11
(lp14880
sg14
S'com.google.common.collect.EvictingQueue'
p14881
sg16
(lp14882
sg19
(lp14883
sg22
(lp14884
sg25
I0
sba(iArchitecture
Entity
p14885
(dp14886
g11
(lp14887
sg14
S'com.google.common.collect.ExplicitOrdering'
p14888
sg16
(lp14889
sg19
(lp14890
sg22
(lp14891
sg25
I0
sba(iArchitecture
Entity
p14892
(dp14893
g11
(lp14894
sg14
S'com.google.common.collect.FilteredEntryMultimap'
p14895
sg16
(lp14896
sg19
(lp14897
sg22
(lp14898
sg25
I0
sba(iArchitecture
Entity
p14899
(dp14900
g11
(lp14901
sg14
S'com.google.common.collect.ForwardingMultimap'
p14902
sg16
(lp14903
sg19
(lp14904
sg22
(lp14905
sg25
I0
sba(iArchitecture
Entity
p14906
(dp14907
g11
(lp14908
sg14
S'com.google.common.collect.ForwardingTable'
p14909
sg16
(lp14910
sg19
(lp14911
sg22
(lp14912
sg25
I0
sba(iArchitecture
Entity
p14913
(dp14914
g11
(lp14915
sg14
S'com.google.common.collect.GeneralRange'
p14916
sg16
(lp14917
sg19
(lp14918
sg22
(lp14919
sg25
I0
sba(iArchitecture
Entity
p14920
(dp14921
g11
(lp14922
sg14
S'com.google.common.collect.HashBiMap'
p14923
sg16
(lp14924
sg19
(lp14925
sg22
(lp14926
sg25
I0
sba(iArchitecture
Entity
p14927
(dp14928
g11
(lp14929
sg14
S'com.google.common.collect.Hashing'
p14930
sg16
(lp14931
sg19
(lp14932
sg22
(lp14933
sg25
I0
sba(iArchitecture
Entity
p14934
(dp14935
g11
(lp14936
sg14
S'com.google.common.collect.ImmutableList'
p14937
sg16
(lp14938
sg19
(lp14939
sg22
(lp14940
sg25
I0
sba(iArchitecture
Entity
p14941
(dp14942
g11
(lp14943
sg14
S'com.google.common.collect.ImmutableMap'
p14944
sg16
(lp14945
sg19
(lp14946
sg22
(lp14947
sg25
I0
sba(iArchitecture
Entity
p14948
(dp14949
g11
(lp14950
sg14
S'com.google.common.collect.ImmutableMultiset'
p14951
sg16
(lp14952
sg19
(lp14953
sg22
(lp14954
sg25
I0
sba(iArchitecture
Entity
p14955
(dp14956
g11
(lp14957
sg14
S'com.google.common.collect.ImmutableRangeMap'
p14958
sg16
(lp14959
sg19
(lp14960
sg22
(lp14961
sg25
I0
sba(iArchitecture
Entity
p14962
(dp14963
g11
(lp14964
sg14
S'com.google.common.collect.ImmutableRangeSet'
p14965
sg16
(lp14966
sg19
(lp14967
sg22
(lp14968
sg25
I0
sba(iArchitecture
Entity
p14969
(dp14970
g11
(lp14971
sg14
S'com.google.common.collect.ImmutableSet'
p14972
sg16
(lp14973
sg19
(lp14974
sg22
(lp14975
sg25
I0
sba(iArchitecture
Entity
p14976
(dp14977
g11
(lp14978
sg14
S'com.google.common.collect.ImmutableSortedMultiset'
p14979
sg16
(lp14980
sg19
(lp14981
sg22
(lp14982
sg25
I0
sba(iArchitecture
Entity
p14983
(dp14984
g11
(lp14985
sg14
S'com.google.common.collect.ImmutableSortedSet'
p14986
sg16
(lp14987
sg19
(lp14988
sg22
(lp14989
sg25
I0
sba(iArchitecture
Entity
p14990
(dp14991
g11
(lp14992
sg14
S'com.google.common.collect.Iterables'
p14993
sg16
(lp14994
sg19
(lp14995
sg22
(lp14996
sg25
I0
sba(iArchitecture
Entity
p14997
(dp14998
g11
(lp14999
sg14
S'com.google.common.collect.Iterators'
p15000
sg16
(lp15001
sg19
(lp15002
sg22
(lp15003
sg25
I0
sba(iArchitecture
Entity
p15004
(dp15005
g11
(lp15006
sg14
S'com.google.common.collect.LexicographicalOrdering'
p15007
sg16
(lp15008
sg19
(lp15009
sg22
(lp15010
sg25
I0
sba(iArchitecture
Entity
p15011
(dp15012
g11
(lp15013
sg14
S'com.google.common.collect.LinkedListMultimap'
p15014
sg16
(lp15015
sg19
(lp15016
sg22
(lp15017
sg25
I0
sba(iArchitecture
Entity
p15018
(dp15019
g11
(lp15020
sg14
S'com.google.common.collect.Lists'
p15021
sg16
(lp15022
sg19
(lp15023
sg22
(lp15024
sg25
I0
sba(iArchitecture
Entity
p15025
(dp15026
g11
(lp15027
sg14
S'com.google.common.collect.MapMakerInternalMap'
p15028
sg16
(lp15029
sg19
(lp15030
sg22
(lp15031
sg25
I0
sba(iArchitecture
Entity
p15032
(dp15033
g11
(lp15034
V2658
p15035
ag15035
ag15035
asg14
S'com.google.common.collect.MinMaxPriorityQueue'
p15036
sg16
(lp15037
VA MinMaxPriorityQueue fails at removing the correct object after a series of operations. See output and code below.\u000a\u000a> [5.6, 6.0, 5.7, 5.9]\u000aTry to remove 5.7 :\u000a[5.6, 6.0, 5.7]\u000a\u000aObtained from :\u000a\u000a> MinMaxPriorityQueue<Double> values = MinMaxPriorityQueue.create();\u000a			values.add(6.2);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.1);\u000a			values.pollLast();\u000a			values.add(5.7);\u000a			values.pollFirst();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.0);\u000a			values.remove(6.2);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.add(5.7);\u000a			values.pollLast();\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.remove(6.3);\u000a			values.add(5.8);\u000a			values.remove(5.8);\u000a			values.add(6.4);\u000a			values.remove(6.0);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(6.3);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.pollLast();\u000a			values.add(5.4);\u000a			values.remove(5.4);\u000a			values.add(5.7);\u000a			values.remove(6.1);\u000a			values.add(5.6);\u000a			values.add(5.4);\u000a			values.pollLast();\u000a			values.remove(5.5);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.6);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.remove(5.8);\u000a			values.add(5.6);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(5.7);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.remove(5.7);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.9);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.remove(6.1);\u000a			values.add(6.0);\u000a			values.add(6.0);\u000a			values.pollLast();\u000a			values.remove(6.0);\u000a			values.add(5.9);\u000a			values.remove(6.0);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			System.out.println(values);\u000a			System.out.println("Try to remove 5.7 :");\u000a			values.remove(5.7);\u000a			System.out.println(values);
p15038
aVA MinMaxPriorityQueue fails at removing the correct object after a series of operations. See output and code below.\u000a\u000a> [5.6, 6.0, 5.7, 5.9]\u000aTry to remove 5.7 :\u000a[5.6, 6.0, 5.7]\u000a\u000aObtained from :\u000a\u000a> MinMaxPriorityQueue<Double> values = MinMaxPriorityQueue.create();\u000a			values.add(6.2);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.1);\u000a			values.pollLast();\u000a			values.add(5.7);\u000a			values.pollFirst();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.0);\u000a			values.remove(6.2);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.add(5.7);\u000a			values.pollLast();\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.remove(6.3);\u000a			values.add(5.8);\u000a			values.remove(5.8);\u000a			values.add(6.4);\u000a			values.remove(6.0);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(6.3);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.pollLast();\u000a			values.add(5.4);\u000a			values.remove(5.4);\u000a			values.add(5.7);\u000a			values.remove(6.1);\u000a			values.add(5.6);\u000a			values.add(5.4);\u000a			values.pollLast();\u000a			values.remove(5.5);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.6);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.remove(5.8);\u000a			values.add(5.6);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(5.7);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.remove(5.7);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.9);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.remove(6.1);\u000a			values.add(6.0);\u000a			values.add(6.0);\u000a			values.pollLast();\u000a			values.remove(6.0);\u000a			values.add(5.9);\u000a			values.remove(6.0);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			System.out.println(values);\u000a			System.out.println("Try to remove 5.7 :");\u000a			values.remove(5.7);\u000a			System.out.println(values);
p15039
aVA MinMaxPriorityQueue fails at removing the correct object after a series of operations. See output and code below.\u000a\u000a> [5.6, 6.0, 5.7, 5.9]\u000aTry to remove 5.7 :\u000a[5.6, 6.0, 5.7]\u000a\u000aObtained from :\u000a\u000a> MinMaxPriorityQueue<Double> values = MinMaxPriorityQueue.create();\u000a			values.add(6.2);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.1);\u000a			values.pollLast();\u000a			values.add(5.7);\u000a			values.pollFirst();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollFirst();\u000a			values.add(6.2);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.0);\u000a			values.remove(6.2);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.add(5.7);\u000a			values.pollLast();\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(6.4);\u000a			values.pollFirst();\u000a			values.remove(6.3);\u000a			values.add(5.8);\u000a			values.remove(5.8);\u000a			values.add(6.4);\u000a			values.remove(6.0);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(6.3);\u000a			values.pollLast();\u000a			values.add(6.3);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.5);\u000a			values.pollLast();\u000a			values.pollLast();\u000a			values.add(5.4);\u000a			values.remove(5.4);\u000a			values.add(5.7);\u000a			values.remove(6.1);\u000a			values.add(5.6);\u000a			values.add(5.4);\u000a			values.pollLast();\u000a			values.remove(5.5);\u000a			values.add(5.8);\u000a			values.pollLast();\u000a			values.add(5.6);\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(5.8);\u000a			values.pollFirst();\u000a			values.remove(5.8);\u000a			values.add(5.6);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.pollFirst();\u000a			values.add(5.7);\u000a			values.add(6.0);\u000a			values.pollFirst();\u000a			values.remove(5.7);\u000a			values.add(6.1);\u000a			values.pollLast();\u000a			values.add(5.9);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(6.1);\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.remove(6.1);\u000a			values.add(6.0);\u000a			values.add(6.0);\u000a			values.pollLast();\u000a			values.remove(6.0);\u000a			values.add(5.9);\u000a			values.remove(6.0);\u000a			values.add(5.7);\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			values.add(6.1);\u000a			values.pollFirst();\u000a			values.add(5.6);\u000a			values.pollLast();\u000a			System.out.println(values);\u000a			System.out.println("Try to remove 5.7 :");\u000a			values.remove(5.7);\u000a			System.out.println(values);
p15040
asg19
(lp15041
(lp15042
I1
aag15042
ag15042
asg22
(lp15043
Vremove() in MinMaxPriorityQueue<Double> not removing the correct object
p15044
ag15044
ag15044
asg25
I0
sba(iArchitecture
Entity
p15045
(dp15046
g11
(lp15047
sg14
S'com.google.common.collect.Multisets'
p15048
sg16
(lp15049
sg19
(lp15050
sg22
(lp15051
sg25
I0
sba(iArchitecture
Entity
p15052
(dp15053
g11
(lp15054
sg14
S'com.google.common.collect.MultitransformedIterator'
p15055
sg16
(lp15056
sg19
(lp15057
sg22
(lp15058
sg25
I0
sba(iArchitecture
Entity
p15059
(dp15060
g11
(lp15061
sg14
S'com.google.common.collect.NullsFirstOrdering'
p15062
sg16
(lp15063
sg19
(lp15064
sg22
(lp15065
sg25
I0
sba(iArchitecture
Entity
p15066
(dp15067
g11
(lp15068
sg14
S'com.google.common.collect.NullsLastOrdering'
p15069
sg16
(lp15070
sg19
(lp15071
sg22
(lp15072
sg25
I0
sba(iArchitecture
Entity
p15073
(dp15074
g11
(lp15075
sg14
S'com.google.common.collect.ObjectArrays'
p15076
sg16
(lp15077
sg19
(lp15078
sg22
(lp15079
sg25
I0
sba(iArchitecture
Entity
p15080
(dp15081
g11
(lp15082
sg14
S'com.google.common.collect.Range'
p15083
sg16
(lp15084
sg19
(lp15085
sg22
(lp15086
sg25
I0
sba(iArchitecture
Entity
p15087
(dp15088
g11
(lp15089
sg14
S'com.google.common.collect.RegularContiguousSet'
p15090
sg16
(lp15091
sg19
(lp15092
sg22
(lp15093
sg25
I0
sba(iArchitecture
Entity
p15094
(dp15095
g11
(lp15096
sg14
S'com.google.common.collect.RegularImmutableBiMap'
p15097
sg16
(lp15098
sg19
(lp15099
sg22
(lp15100
sg25
I0
sba(iArchitecture
Entity
p15101
(dp15102
g11
(lp15103
sg14
S'com.google.common.collect.RegularImmutableList'
p15104
sg16
(lp15105
sg19
(lp15106
sg22
(lp15107
sg25
I0
sba(iArchitecture
Entity
p15108
(dp15109
g11
(lp15110
sg14
S'com.google.common.collect.RegularImmutableMultiset'
p15111
sg16
(lp15112
sg19
(lp15113
sg22
(lp15114
sg25
I0
sba(iArchitecture
Entity
p15115
(dp15116
g11
(lp15117
sg14
S'com.google.common.collect.RegularImmutableSet'
p15118
sg16
(lp15119
sg19
(lp15120
sg22
(lp15121
sg25
I0
sba(iArchitecture
Entity
p15122
(dp15123
g11
(lp15124
sg14
S'com.google.common.collect.RegularImmutableSortedMultiset'
p15125
sg16
(lp15126
sg19
(lp15127
sg22
(lp15128
sg25
I0
sba(iArchitecture
Entity
p15129
(dp15130
g11
(lp15131
sg14
S'com.google.common.collect.RegularImmutableSortedSet'
p15132
sg16
(lp15133
sg19
(lp15134
sg22
(lp15135
sg25
I0
sba(iArchitecture
Entity
p15136
(dp15137
g11
(lp15138
sg14
S'com.google.common.collect.RegularImmutableTable'
p15139
sg16
(lp15140
sg19
(lp15141
sg22
(lp15142
sg25
I0
sba(iArchitecture
Entity
p15143
(dp15144
g11
(lp15145
sg14
S'com.google.common.collect.ReverseOrdering'
p15146
sg16
(lp15147
sg19
(lp15148
sg22
(lp15149
sg25
I0
sba(iArchitecture
Entity
p15150
(dp15151
g11
(lp15152
sg14
S'com.google.common.collect.Sets'
p15153
sg16
(lp15154
sg19
(lp15155
sg22
(lp15156
sg25
I0
sba(iArchitecture
Entity
p15157
(dp15158
g11
(lp15159
sg14
S'com.google.common.collect.SingletonImmutableBiMap'
p15160
sg16
(lp15161
sg19
(lp15162
sg22
(lp15163
sg25
I0
sba(iArchitecture
Entity
p15164
(dp15165
g11
(lp15166
sg14
S'com.google.common.collect.SingletonImmutableList'
p15167
sg16
(lp15168
sg19
(lp15169
sg22
(lp15170
sg25
I0
sba(iArchitecture
Entity
p15171
(dp15172
g11
(lp15173
sg14
S'com.google.common.collect.SingletonImmutableSet'
p15174
sg16
(lp15175
sg19
(lp15176
sg22
(lp15177
sg25
I0
sba(iArchitecture
Entity
p15178
(dp15179
g11
(lp15180
sg14
S'com.google.common.collect.StandardTable'
p15181
sg16
(lp15182
sg19
(lp15183
sg22
(lp15184
sg25
I0
sba(iArchitecture
Entity
p15185
(dp15186
g11
(lp15187
sg14
S'com.google.common.collect.Synchronized'
p15188
sg16
(lp15189
sg19
(lp15190
sg22
(lp15191
sg25
I0
sba(iArchitecture
Entity
p15192
(dp15193
g11
(lp15194
sg14
S'com.google.common.collect.TopKSelector'
p15195
sg16
(lp15196
sg19
(lp15197
sg22
(lp15198
sg25
I0
sba(iArchitecture
Entity
p15199
(dp15200
g11
(lp15201
sg14
S'com.google.common.collect.TransformedListIterator'
p15202
sg16
(lp15203
sg19
(lp15204
sg22
(lp15205
sg25
I0
sba(iArchitecture
Entity
p15206
(dp15207
g11
(lp15208
sg14
S'com.google.common.collect.TreeMultiset'
p15209
sg16
(lp15210
sg19
(lp15211
sg22
(lp15212
sg25
I0
sba(iArchitecture
Entity
p15213
(dp15214
g11
(lp15215
sg14
S'com.google.common.collect.TreeRangeMap'
p15216
sg16
(lp15217
sg19
(lp15218
sg22
(lp15219
sg25
I0
sba(iArchitecture
Entity
p15220
(dp15221
g11
(lp15222
sg14
S'com.google.common.collect.TreeRangeSet'
p15223
sg16
(lp15224
sg19
(lp15225
sg22
(lp15226
sg25
I0
sba(iArchitecture
Entity
p15227
(dp15228
g11
(lp15229
sg14
S'com.google.common.escape.CharEscaper'
p15230
sg16
(lp15231
sg19
(lp15232
sg22
(lp15233
sg25
I0
sba(iArchitecture
Entity
p15234
(dp15235
g11
(lp15236
sg14
S'com.google.common.escape.CharEscaperBuilder'
p15237
sg16
(lp15238
sg19
(lp15239
sg22
(lp15240
sg25
I0
sba(iArchitecture
Entity
p15241
(dp15242
g11
(lp15243
sg14
S'com.google.common.escape.UnicodeEscaper'
p15244
sg16
(lp15245
sg19
(lp15246
sg22
(lp15247
sg25
I0
sba(iArchitecture
Entity
p15248
(dp15249
g11
(lp15250
sg14
S'com.google.common.eventbus.Subscriber'
p15251
sg16
(lp15252
sg19
(lp15253
sg22
(lp15254
sg25
I0
sba(iArchitecture
Entity
p15255
(dp15256
g11
(lp15257
sg14
S'com.google.common.graph.AbstractDirectedNetworkConnections'
p15258
sg16
(lp15259
sg19
(lp15260
sg22
(lp15261
sg25
I0
sba(iArchitecture
Entity
p15262
(dp15263
g11
(lp15264
sg14
S'com.google.common.graph.AbstractGraph'
p15265
sg16
(lp15266
sg19
(lp15267
sg22
(lp15268
sg25
I0
sba(iArchitecture
Entity
p15269
(dp15270
g11
(lp15271
sg14
S'com.google.common.graph.AbstractNetwork'
p15272
sg16
(lp15273
sg19
(lp15274
sg22
(lp15275
sg25
I0
sba(iArchitecture
Entity
p15276
(dp15277
g11
(lp15278
sg14
S'com.google.common.graph.AbstractUndirectedNetworkConnections'
p15279
sg16
(lp15280
sg19
(lp15281
sg22
(lp15282
sg25
I0
sba(iArchitecture
Entity
p15283
(dp15284
g11
(lp15285
sg14
S'com.google.common.graph.DirectedGraphConnections'
p15286
sg16
(lp15287
sg19
(lp15288
sg22
(lp15289
sg25
I0
sba(iArchitecture
Entity
p15290
(dp15291
g11
(lp15292
sg14
S'com.google.common.graph.EndpointPair'
p15293
sg16
(lp15294
sg19
(lp15295
sg22
(lp15296
sg25
I0
sba(iArchitecture
Entity
p15297
(dp15298
g11
(lp15299
sg14
S'com.google.common.graph.ForwardingGraph'
p15300
sg16
(lp15301
sg19
(lp15302
sg22
(lp15303
sg25
I0
sba(iArchitecture
Entity
p15304
(dp15305
g11
(lp15306
sg14
S'com.google.common.hash.AbstractCompositeHashFunction'
p15307
sg16
(lp15308
sg19
(lp15309
sg22
(lp15310
sg25
I0
sba(iArchitecture
Entity
p15311
(dp15312
g11
(lp15313
sg14
S'com.google.common.hash.BloomFilterStrategies'
p15314
sg16
(lp15315
sg19
(lp15316
sg22
(lp15317
sg25
I0
sba(iArchitecture
Entity
p15318
(dp15319
g11
(lp15320
sg14
S'com.google.common.hash.ChecksumHashFunction'
p15321
sg16
(lp15322
sg19
(lp15323
sg22
(lp15324
sg25
I0
sba(iArchitecture
Entity
p15325
(dp15326
g11
(lp15327
sg14
S'com.google.common.hash.Crc32cHashFunction'
p15328
sg16
(lp15329
sg19
(lp15330
sg22
(lp15331
sg25
I0
sba(iArchitecture
Entity
p15332
(dp15333
g11
(lp15334
sg14
S'com.google.common.hash.FarmHashFingerprint64'
p15335
sg16
(lp15336
sg19
(lp15337
sg22
(lp15338
sg25
I0
sba(iArchitecture
Entity
p15339
(dp15340
g11
(lp15341
sg14
S'com.google.common.hash.HashCode'
p15342
sg16
(lp15343
sg19
(lp15344
sg22
(lp15345
sg25
I0
sba(iArchitecture
Entity
p15346
(dp15347
g11
(lp15348
sg14
S'com.google.common.hash.LittleEndianByteArray'
p15349
sg16
(lp15350
sg19
(lp15351
sg22
(lp15352
sg25
I0
sba(iArchitecture
Entity
p15353
(dp15354
g11
(lp15355
sg14
S'com.google.common.hash.MacHashFunction'
p15356
sg16
(lp15357
sg19
(lp15358
sg22
(lp15359
sg25
I0
sba(iArchitecture
Entity
p15360
(dp15361
g11
(lp15362
sg14
S'com.google.common.hash.Murmur3_128HashFunction'
p15363
sg16
(lp15364
sg19
(lp15365
sg22
(lp15366
sg25
I0
sba(iArchitecture
Entity
p15367
(dp15368
g11
(lp15369
sg14
S'com.google.common.hash.Murmur3_32HashFunction'
p15370
sg16
(lp15371
sg19
(lp15372
sg22
(lp15373
sg25
I0
sba(iArchitecture
Entity
p15374
(dp15375
g11
(lp15376
sg14
S'com.google.common.hash.SipHashFunction'
p15377
sg16
(lp15378
sg19
(lp15379
sg22
(lp15380
sg25
I0
sba(iArchitecture
Entity
p15381
(dp15382
g11
(lp15383
sg14
S'com.google.common.io.BaseEncoding'
p15384
sg16
(lp15385
sg19
(lp15386
sg22
(lp15387
sg25
I0
sba(iArchitecture
Entity
p15388
(dp15389
g11
(lp15390
sg14
S'com.google.common.io.ByteArrayDataOutput'
p15391
sg16
(lp15392
sg19
(lp15393
sg22
(lp15394
sg25
I0
sba(iArchitecture
Entity
p15395
(dp15396
g11
(lp15397
sg14
S'com.google.common.io.CharSequenceReader'
p15398
sg16
(lp15399
sg19
(lp15400
sg22
(lp15401
sg25
I0
sba(iArchitecture
Entity
p15402
(dp15403
g11
(lp15404
sg14
S'com.google.common.io.MultiReader'
p15405
sg16
(lp15406
sg19
(lp15407
sg22
(lp15408
sg25
I0
sba(iArchitecture
Entity
p15409
(dp15410
g11
(lp15411
sg14
S'com.google.common.math.BigIntegerMath'
p15412
sg16
(lp15413
sg19
(lp15414
sg22
(lp15415
sg25
I0
sba(iArchitecture
Entity
p15416
(dp15417
g11
(lp15418
sg14
S'com.google.common.math.IntMath'
p15419
sg16
(lp15420
sg19
(lp15421
sg22
(lp15422
sg25
I0
sba(iArchitecture
Entity
p15423
(dp15424
g11
(lp15425
sg14
S'com.google.common.math.LinearTransformation'
p15426
sg16
(lp15427
sg19
(lp15428
sg22
(lp15429
sg25
I0
sba(iArchitecture
Entity
p15430
(dp15431
g11
(lp15432
sg14
S'com.google.common.math.LongMath'
p15433
sg16
(lp15434
sg19
(lp15435
sg22
(lp15436
sg25
I0
sba(iArchitecture
Entity
p15437
(dp15438
g11
(lp15439
sg14
S'com.google.common.math.Quantiles'
p15440
sg16
(lp15441
sg19
(lp15442
sg22
(lp15443
sg25
I0
sba(iArchitecture
Entity
p15444
(dp15445
g11
(lp15446
sg14
S'com.google.common.net.PercentEscaper'
p15447
sg16
(lp15448
sg19
(lp15449
sg22
(lp15450
sg25
I0
sba(iArchitecture
Entity
p15451
(dp15452
g11
(lp15453
sg14
S'com.google.common.primitives.Booleans'
p15454
sg16
(lp15455
sg19
(lp15456
sg22
(lp15457
sg25
I0
sba(iArchitecture
Entity
p15458
(dp15459
g11
(lp15460
sg14
S'com.google.common.primitives.Bytes'
p15461
sg16
(lp15462
sg19
(lp15463
sg22
(lp15464
sg25
I0
sba(iArchitecture
Entity
p15465
(dp15466
g11
(lp15467
sg14
S'com.google.common.primitives.Chars'
p15468
sg16
(lp15469
sg19
(lp15470
sg22
(lp15471
sg25
I0
sba(iArchitecture
Entity
p15472
(dp15473
g11
(lp15474
sg14
S'com.google.common.primitives.Doubles'
p15475
sg16
(lp15476
sg19
(lp15477
sg22
(lp15478
sg25
I0
sba(iArchitecture
Entity
p15479
(dp15480
g11
(lp15481
sg14
S'com.google.common.primitives.Floats'
p15482
sg16
(lp15483
sg19
(lp15484
sg22
(lp15485
sg25
I0
sba(iArchitecture
Entity
p15486
(dp15487
g11
(lp15488
sg14
S'com.google.common.primitives.Ints'
p15489
sg16
(lp15490
sg19
(lp15491
sg22
(lp15492
sg25
I0
sba(iArchitecture
Entity
p15493
(dp15494
g11
(lp15495
sg14
S'com.google.common.primitives.Longs'
p15496
sg16
(lp15497
sg19
(lp15498
sg22
(lp15499
sg25
I0
sba(iArchitecture
Entity
p15500
(dp15501
g11
(lp15502
sg14
S'com.google.common.primitives.Shorts'
p15503
sg16
(lp15504
sg19
(lp15505
sg22
(lp15506
sg25
I0
sba(iArchitecture
Entity
p15507
(dp15508
g11
(lp15509
sg14
S'com.google.common.primitives.SignedBytes'
p15510
sg16
(lp15511
sg19
(lp15512
sg22
(lp15513
sg25
I0
sba(iArchitecture
Entity
p15514
(dp15515
g11
(lp15516
sg14
S'com.google.common.primitives.UnsignedBytes'
p15517
sg16
(lp15518
sg19
(lp15519
sg22
(lp15520
sg25
I0
sba(iArchitecture
Entity
p15521
(dp15522
g11
(lp15523
sg14
S'com.google.common.primitives.UnsignedInteger'
p15524
sg16
(lp15525
sg19
(lp15526
sg22
(lp15527
sg25
I0
sba(iArchitecture
Entity
p15528
(dp15529
g11
(lp15530
sg14
S'com.google.common.primitives.UnsignedInts'
p15531
sg16
(lp15532
sg19
(lp15533
sg22
(lp15534
sg25
I0
sba(iArchitecture
Entity
p15535
(dp15536
g11
(lp15537
sg14
S'com.google.common.primitives.UnsignedLong'
p15538
sg16
(lp15539
sg19
(lp15540
sg22
(lp15541
sg25
I0
sba(iArchitecture
Entity
p15542
(dp15543
g11
(lp15544
sg14
S'com.google.common.primitives.UnsignedLongs'
p15545
sg16
(lp15546
sg19
(lp15547
sg22
(lp15548
sg25
I0
sba(iArchitecture
Entity
p15549
(dp15550
g11
(lp15551
sg14
S'com.google.common.reflect.Element'
p15552
sg16
(lp15553
sg19
(lp15554
sg22
(lp15555
sg25
I0
sba(iArchitecture
Entity
p15556
(dp15557
g11
(lp15558
sg14
S'com.google.common.reflect.Invokable'
p15559
sg16
(lp15560
sg19
(lp15561
sg22
(lp15562
sg25
I0
sba(iArchitecture
Entity
p15563
(dp15564
g11
(lp15565
sg14
S'com.google.common.reflect.Parameter'
p15566
sg16
(lp15567
sg19
(lp15568
sg22
(lp15569
sg25
I0
sba(iArchitecture
Entity
p15570
(dp15571
g11
(lp15572
sg14
S'com.google.common.util.concurrent.AbstractIdleService'
p15573
sg16
(lp15574
sg19
(lp15575
sg22
(lp15576
sg25
I0
sba(iArchitecture
Entity
p15577
(dp15578
g11
(lp15579
sg14
S'com.google.common.util.concurrent.AtomicDouble'
p15580
sg16
(lp15581
sg19
(lp15582
sg22
(lp15583
sg25
I0
sba(iArchitecture
Entity
p15584
(dp15585
g11
(lp15586
sg14
S'com.google.common.util.concurrent.AtomicDoubleArray'
p15587
sg16
(lp15588
sg19
(lp15589
sg22
(lp15590
sg25
I0
sba(iArchitecture
Entity
p15591
(dp15592
g11
(lp15593
sg14
S'com.google.common.util.concurrent.CombinedFuture'
p15594
sg16
(lp15595
sg19
(lp15596
sg22
(lp15597
sg25
I0
sba(iArchitecture
Entity
p15598
(dp15599
g11
(lp15600
sg14
S'com.google.common.util.concurrent.Monitor'
p15601
sg16
(lp15602
sg19
(lp15603
sg22
(lp15604
sg25
I0
sba(iArchitecture
Entity
p15605
(dp15606
g11
(lp15607
sg14
S'com.google.common.util.concurrent.Striped'
p15608
sg16
(lp15609
sg19
(lp15610
sg22
(lp15611
sg25
I0
sbasg1017
(lp15612
g14650
ag14657
ag14664
ag14671
ag14678
ag14685
ag14692
ag14699
ag14706
ag14713
ag14720
ag14727
ag14734
ag14741
ag14748
ag14755
ag14762
ag14769
ag14776
ag14783
ag14790
ag14797
ag14804
ag14811
ag14818
ag14825
ag14832
ag14839
ag14846
ag14853
ag14860
ag14867
ag14874
ag14881
ag14888
ag14895
ag14902
ag14909
ag14916
ag14923
ag14930
ag14937
ag14944
ag14951
ag14958
ag14965
ag14972
ag14979
ag14986
ag14993
ag15000
ag15007
ag15014
ag15021
ag15028
ag15036
ag15048
ag15055
ag15062
ag15069
ag15076
ag15083
ag15090
ag15097
ag15104
ag15111
ag15118
ag15125
ag15132
ag15139
ag15146
ag15153
ag15160
ag15167
ag15174
ag15181
ag15188
ag15195
ag15202
ag15209
ag15216
ag15223
ag15230
ag15237
ag15244
ag15251
ag15258
ag15265
ag15272
ag15279
ag15286
ag15293
ag15300
ag15307
ag15314
ag15321
ag15328
ag15335
ag15342
ag15349
ag15356
ag15363
ag15370
ag15377
ag15384
ag15391
ag15398
ag15405
ag15412
ag15419
ag15426
ag15433
ag15440
ag15447
ag15454
ag15461
ag15468
ag15475
ag15482
ag15489
ag15496
ag15503
ag15510
ag15517
ag15524
ag15531
ag15538
ag15545
ag15552
ag15559
ag15566
ag15573
ag15580
ag15587
ag15594
ag15601
ag15608
asg25
I0
sg1019
S'graphics'
p15613
sba(iArchitecture
Cluster
p15614
(dp15615
g7
(lp15616
(iArchitecture
Entity
p15617
(dp15618
g11
(lp15619
sg14
S'com.google.common.base.Ascii'
p15620
sg16
(lp15621
sg19
(lp15622
sg22
(lp15623
sg25
I0
sba(iArchitecture
Entity
p15624
(dp15625
g11
(lp15626
sg14
S'com.google.common.base.CaseFormat'
p15627
sg16
(lp15628
sg19
(lp15629
sg22
(lp15630
sg25
I0
sba(iArchitecture
Entity
p15631
(dp15632
g11
(lp15633
sg14
S'com.google.common.base.Charsets'
p15634
sg16
(lp15635
sg19
(lp15636
sg22
(lp15637
sg25
I0
sba(iArchitecture
Entity
p15638
(dp15639
g11
(lp15640
sg14
S'com.google.common.base.FunctionalEquivalence'
p15641
sg16
(lp15642
sg19
(lp15643
sg22
(lp15644
sg25
I0
sba(iArchitecture
Entity
p15645
(dp15646
g11
(lp15647
sg14
S'com.google.common.base.MoreObjects'
p15648
sg16
(lp15649
sg19
(lp15650
sg22
(lp15651
sg25
I0
sba(iArchitecture
Entity
p15652
(dp15653
g11
(lp15654
sg14
S'com.google.common.base.Objects'
p15655
sg16
(lp15656
sg19
(lp15657
sg22
(lp15658
sg25
I0
sba(iArchitecture
Entity
p15659
(dp15660
g11
(lp15661
sg14
S'com.google.common.base.Utf8'
p15662
sg16
(lp15663
sg19
(lp15664
sg22
(lp15665
sg25
I0
sba(iArchitecture
Entity
p15666
(dp15667
g11
(lp15668
sg14
S'com.google.common.collect.AllEqualOrdering'
p15669
sg16
(lp15670
sg19
(lp15671
sg22
(lp15672
sg25
I0
sba(iArchitecture
Entity
p15673
(dp15674
g11
(lp15675
sg14
S'com.google.common.collect.ByFunctionOrdering'
p15676
sg16
(lp15677
sg19
(lp15678
sg22
(lp15679
sg25
I0
sba(iArchitecture
Entity
p15680
(dp15681
g11
(lp15682
sg14
S'com.google.common.collect.ComparatorOrdering'
p15683
sg16
(lp15684
sg19
(lp15685
sg22
(lp15686
sg25
I0
sba(iArchitecture
Entity
p15687
(dp15688
g11
(lp15689
sg14
S'com.google.common.collect.FluentIterable'
p15690
sg16
(lp15691
sg19
(lp15692
sg22
(lp15693
sg25
I0
sba(iArchitecture
Entity
p15694
(dp15695
g11
(lp15696
sg14
S'com.google.common.collect.HashMultimap'
p15697
sg16
(lp15698
sg19
(lp15699
sg22
(lp15700
sg25
I0
sba(iArchitecture
Entity
p15701
(dp15702
g11
(lp15703
sg14
S'com.google.common.collect.HashMultiset'
p15704
sg16
(lp15705
sg19
(lp15706
sg22
(lp15707
sg25
I0
sba(iArchitecture
Entity
p15708
(dp15709
g11
(lp15710
sg14
S'com.google.common.collect.ImmutableAsList'
p15711
sg16
(lp15712
sg19
(lp15713
sg22
(lp15714
sg25
I0
sba(iArchitecture
Entity
p15715
(dp15716
g11
(lp15717
sg14
S'com.google.common.collect.ImmutableEntry'
p15718
sg16
(lp15719
sg19
(lp15720
sg22
(lp15721
sg25
I0
sba(iArchitecture
Entity
p15722
(dp15723
g11
(lp15724
sg14
S'com.google.common.collect.ImmutableListMultimap'
p15725
sg16
(lp15726
sg19
(lp15727
sg22
(lp15728
sg25
I0
sba(iArchitecture
Entity
p15729
(dp15730
g11
(lp15731
sg14
S'com.google.common.collect.LinkedHashMultiset'
p15732
sg16
(lp15733
sg19
(lp15734
sg22
(lp15735
sg25
I0
sba(iArchitecture
Entity
p15736
(dp15737
g11
(lp15738
sg14
S'com.google.common.collect.NaturalOrdering'
p15739
sg16
(lp15740
sg19
(lp15741
sg22
(lp15742
sg25
I0
sba(iArchitecture
Entity
p15743
(dp15744
g11
(lp15745
sg14
S'com.google.common.collect.ReverseNaturalOrdering'
p15746
sg16
(lp15747
sg19
(lp15748
sg22
(lp15749
sg25
I0
sba(iArchitecture
Entity
p15750
(dp15751
g11
(lp15752
sg14
S'com.google.common.collect.Serialization'
p15753
sg16
(lp15754
sg19
(lp15755
sg22
(lp15756
sg25
I0
sba(iArchitecture
Entity
p15757
(dp15758
g11
(lp15759
sg14
S'com.google.common.collect.TransformedIterator'
p15760
sg16
(lp15761
sg19
(lp15762
sg22
(lp15763
sg25
I0
sba(iArchitecture
Entity
p15764
(dp15765
g11
(lp15766
sg14
S'com.google.common.collect.UsingToStringOrdering'
p15767
sg16
(lp15768
sg19
(lp15769
sg22
(lp15770
sg25
I0
sba(iArchitecture
Entity
p15771
(dp15772
g11
(lp15773
sg14
S'com.google.common.escape.ArrayBasedCharEscaper'
p15774
sg16
(lp15775
sg19
(lp15776
sg22
(lp15777
sg25
I0
sba(iArchitecture
Entity
p15778
(dp15779
g11
(lp15780
sg14
S'com.google.common.escape.ArrayBasedEscaperMap'
p15781
sg16
(lp15782
sg19
(lp15783
sg22
(lp15784
sg25
I0
sba(iArchitecture
Entity
p15785
(dp15786
g11
(lp15787
sg14
S'com.google.common.escape.ArrayBasedUnicodeEscaper'
p15788
sg16
(lp15789
sg19
(lp15790
sg22
(lp15791
sg25
I0
sba(iArchitecture
Entity
p15792
(dp15793
g11
(lp15794
sg14
S'com.google.common.escape.Escaper'
p15795
sg16
(lp15796
sg19
(lp15797
sg22
(lp15798
sg25
I0
sba(iArchitecture
Entity
p15799
(dp15800
g11
(lp15801
sg14
S'com.google.common.escape.Escapers'
p15802
sg16
(lp15803
sg19
(lp15804
sg22
(lp15805
sg25
I0
sba(iArchitecture
Entity
p15806
(dp15807
g11
(lp15808
sg14
S'com.google.common.escape.Platform'
p15809
sg16
(lp15810
sg19
(lp15811
sg22
(lp15812
sg25
I0
sba(iArchitecture
Entity
p15813
(dp15814
g11
(lp15815
sg14
S'com.google.common.eventbus.DeadEvent'
p15816
sg16
(lp15817
sg19
(lp15818
sg22
(lp15819
sg25
I0
sba(iArchitecture
Entity
p15820
(dp15821
g11
(lp15822
sg14
S'com.google.common.graph.GraphConstants'
p15823
sg16
(lp15824
sg19
(lp15825
sg22
(lp15826
sg25
I0
sba(iArchitecture
Entity
p15827
(dp15828
g11
(lp15829
sg14
S'com.google.common.graph.ImmutableGraph'
p15830
sg16
(lp15831
sg19
(lp15832
sg22
(lp15833
sg25
I0
sba(iArchitecture
Entity
p15834
(dp15835
g11
(lp15836
sg14
S'com.google.common.graph.ImmutableValueGraph'
p15837
sg16
(lp15838
sg19
(lp15839
sg22
(lp15840
sg25
I0
sba(iArchitecture
Entity
p15841
(dp15842
g11
(lp15843
sg14
S'com.google.common.hash.AbstractByteHasher'
p15844
sg16
(lp15845
sg19
(lp15846
sg22
(lp15847
sg25
I0
sba(iArchitecture
Entity
p15848
(dp15849
g11
(lp15850
sg14
S'com.google.common.hash.AbstractHasher'
p15851
sg16
(lp15852
sg19
(lp15853
sg22
(lp15854
sg25
I0
sba(iArchitecture
Entity
p15855
(dp15856
g11
(lp15857
sg14
S'com.google.common.hash.AbstractNonStreamingHashFunction'
p15858
sg16
(lp15859
sg19
(lp15860
sg22
(lp15861
sg25
I0
sba(iArchitecture
Entity
p15862
(dp15863
g11
(lp15864
sg14
S'com.google.common.hash.AbstractStreamingHashFunction'
p15865
sg16
(lp15866
sg19
(lp15867
sg22
(lp15868
sg25
I0
sba(iArchitecture
Entity
p15869
(dp15870
g11
(lp15871
sg14
S'com.google.common.hash.BloomFilter'
p15872
sg16
(lp15873
sg19
(lp15874
sg22
(lp15875
sg25
I0
sba(iArchitecture
Entity
p15876
(dp15877
g11
(lp15878
sg14
S'com.google.common.hash.Funnels'
p15879
sg16
(lp15880
sg19
(lp15881
sg22
(lp15882
sg25
I0
sba(iArchitecture
Entity
p15883
(dp15884
g11
(lp15885
sg14
S'com.google.common.hash.HashFunction'
p15886
sg16
(lp15887
sg19
(lp15888
sg22
(lp15889
sg25
I0
sba(iArchitecture
Entity
p15890
(dp15891
g11
(lp15892
sg14
S'com.google.common.hash.Hasher'
p15893
sg16
(lp15894
sg19
(lp15895
sg22
(lp15896
sg25
I0
sba(iArchitecture
Entity
p15897
(dp15898
g11
(lp15899
sg14
S'com.google.common.hash.HashingInputStream'
p15900
sg16
(lp15901
sg19
(lp15902
sg22
(lp15903
sg25
I0
sba(iArchitecture
Entity
p15904
(dp15905
g11
(lp15906
sg14
S'com.google.common.hash.HashingOutputStream'
p15907
sg16
(lp15908
sg19
(lp15909
sg22
(lp15910
sg25
I0
sba(iArchitecture
Entity
p15911
(dp15912
g11
(lp15913
sg14
S'com.google.common.hash.MessageDigestHashFunction'
p15914
sg16
(lp15915
sg19
(lp15916
sg22
(lp15917
sg25
I0
sba(iArchitecture
Entity
p15918
(dp15919
g11
(lp15920
sg14
S'com.google.common.hash.PrimitiveSink'
p15921
sg16
(lp15922
sg19
(lp15923
sg22
(lp15924
sg25
I0
sba(iArchitecture
Entity
p15925
(dp15926
g11
(lp15927
sg14
S'com.google.common.io.AppendableWriter'
p15928
sg16
(lp15929
sg19
(lp15930
sg22
(lp15931
sg25
I0
sba(iArchitecture
Entity
p15932
(dp15933
g11
(lp15934
sg14
S'com.google.common.io.ByteArrayDataInput'
p15935
sg16
(lp15936
sg19
(lp15937
sg22
(lp15938
sg25
I0
sba(iArchitecture
Entity
p15939
(dp15940
g11
(lp15941
sg14
S'com.google.common.io.ByteProcessor'
p15942
sg16
(lp15943
sg19
(lp15944
sg22
(lp15945
sg25
I0
sba(iArchitecture
Entity
p15946
(dp15947
g11
(lp15948
V2693
p15949
asg14
S'com.google.common.io.ByteSink'
p15950
sg16
(lp15951
VJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15952
asg19
(lp15953
(lp15954
I5
aasg22
(lp15955
VAdd Stream<String> lines() to CharSource
p15956
asg25
I0
sba(iArchitecture
Entity
p15957
(dp15958
g11
(lp15959
V2843
p15960
ag15960
ag15949
asg14
S'com.google.common.io.ByteSource'
p15961
sg16
(lp15962
VThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15963
aVThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15964
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15965
asg19
(lp15966
(lp15967
I0
aag15967
ag15954
asg22
(lp15968
VOptimize {Byte,Char}Source.isEmpty() for known-non-empty sources
p15969
ag15969
ag15956
asg25
I0
sba(iArchitecture
Entity
p15970
(dp15971
g11
(lp15972
sg14
S'com.google.common.io.ByteStreams'
p15973
sg16
(lp15974
sg19
(lp15975
sg22
(lp15976
sg25
I0
sba(iArchitecture
Entity
p15977
(dp15978
g11
(lp15979
g15949
asg14
S'com.google.common.io.CharSink'
p15980
sg16
(lp15981
VJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15982
asg19
(lp15983
g15954
asg22
(lp15984
g15956
asg25
I0
sba(iArchitecture
Entity
p15985
(dp15986
g11
(lp15987
g15960
ag15960
ag15949
ag15949
ag15949
asg14
S'com.google.common.io.CharSource'
p15988
sg16
(lp15989
VThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15990
aVThe default implementations of `{Byte,Char}Source.isEmpty()` seem to do unnecessary work when the size is known to be non-zero.\u000a\u000aHere is what `ByteSource` does now:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent() && sizeIfKnown.get() == 0L) {\u000a    return true;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aI feel like it should do this instead:\u000a\u000a```java\u000apublic boolean isEmpty() throws IOException {\u000a  Optional<Long> sizeIfKnown = sizeIfKnown();\u000a  if (sizeIfKnown.isPresent()) {\u000a    return sizeIfKnown.get() == 0L;\u000a  }\u000a  // Fall back to reading a byte from the input stream...\u000a```\u000a\u000aThat way it avoids reading the input stream when the size is known to be non-zero.\u000a\u000aI see warnings in the javadocs that some sources report inaccurate sizes, but the example given is non-empty files that report a size of zero.  Are there empty files that falsely report a non-zero size?  If not, I think this change is safe.
p15991
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15992
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15993
aVJust like `java.nio.file.Files.lines()` and `java.io.BufferedReader.lines()`, for CharSource to have a `lines()` method returning a `Stream<String>` of lines.\u000a\u000aOf course this can be trivially accomplished by the caller with `charSource.openBufferedStream().lines()` and indeed a default implementation could trivially just be `return openBufferedStream().lines();`, it being the caller's responsibility to ensure the `Stream`, and thus the `Reader`, are closed; and that would be job-done for concrete implementations based on streaming sources like files, resources, URLs etc.\u000a\u000aBut a concrete `CharSource` implementation is best-placed to know if it could better override that with something more efficient than a `BufferedReader` wrapping whatever `Reader` is actually used to access the characters. For a case in point the `CharSource.CharSequenceCharSource` implementation already has a `private Iterable<String> lines()` method (which would need to be renamed, because the proposed new public method really ought to have that name, for consistency with other APIs, especially in JDK, but such a rename shouldn't have too great an impact being of a private method), which would easily be the basis of a `Stream<String> lines()` method. Say the existing private `lines()` method became `getLines()`, the implementation here would literally just be `return Streams.stream(getLines());`.\u000a\u000aFor reference my private library code that I'm hoping to replace chunks of with Guava, has a `StringLinesSpliterator` and a `CharSequenceLinesSpliterator` for these purposes, in order to get a `Stream<String>` and `Stream<CharSequence>` from such sources. The latter meaning that the subsequences aren't potentially wastefully converted to Strings; the caller can always do that themselves with `.map(String::valueOf)`. (There's also a `CharBuffer` based one, that advances the position as it goes, but honestly it doesn't get used!)\u000a\u000aAt the moment, the code that wants to get a stream of lines from the `CharSource` would have to know more than it should about the circumstances of that `CharSource`'s creation, to know if it would be least wasteful in terms of copying of character sequences of arbitrary length, or Readers wrapping Readers, to access it via `read()`, `readLines()` or `openBufferedStream()`. Instead they ought to be able to trust that the implementation of `CharSource` will do it the best way.\u000a\u000aPossibly the first in a series of missing `Stream` based conveniences, as Java8-only features are a relatively new thing in Guava. ;-)
p15994
asg19
(lp15995
g15967
ag15967
ag15954
ag15954
ag15954
asg22
(lp15996
g15969
ag15969
ag15956
ag15956
ag15956
asg25
I0
sba(iArchitecture
Entity
p15997
(dp15998
g11
(lp15999
sg14
S'com.google.common.io.CharStreams'
p16000
sg16
(lp16001
sg19
(lp16002
sg22
(lp16003
sg25
I0
sba(iArchitecture
Entity
p16004
(dp16005
g11
(lp16006
sg14
S'com.google.common.io.Closeables'
p16007
sg16
(lp16008
sg19
(lp16009
sg22
(lp16010
sg25
I0
sba(iArchitecture
Entity
p16011
(dp16012
g11
(lp16013
sg14
S'com.google.common.io.CountingInputStream'
p16014
sg16
(lp16015
sg19
(lp16016
sg22
(lp16017
sg25
I0
sba(iArchitecture
Entity
p16018
(dp16019
g11
(lp16020
sg14
S'com.google.common.io.CountingOutputStream'
p16021
sg16
(lp16022
sg19
(lp16023
sg22
(lp16024
sg25
I0
sba(iArchitecture
Entity
p16025
(dp16026
g11
(lp16027
sg14
S'com.google.common.io.FileBackedOutputStream'
p16028
sg16
(lp16029
sg19
(lp16030
sg22
(lp16031
sg25
I0
sba(iArchitecture
Entity
p16032
(dp16033
g11
(lp16034
sg14
S'com.google.common.io.FileWriteMode'
p16035
sg16
(lp16036
sg19
(lp16037
sg22
(lp16038
sg25
I0
sba(iArchitecture
Entity
p16039
(dp16040
g11
(lp16041
sg14
S'com.google.common.io.Files'
p16042
sg16
(lp16043
sg19
(lp16044
sg22
(lp16045
sg25
I0
sba(iArchitecture
Entity
p16046
(dp16047
g11
(lp16048
sg14
S'com.google.common.io.Flushables'
p16049
sg16
(lp16050
sg19
(lp16051
sg22
(lp16052
sg25
I0
sba(iArchitecture
Entity
p16053
(dp16054
g11
(lp16055
sg14
S'com.google.common.io.LineBuffer'
p16056
sg16
(lp16057
sg19
(lp16058
sg22
(lp16059
sg25
I0
sba(iArchitecture
Entity
p16060
(dp16061
g11
(lp16062
sg14
S'com.google.common.io.LineProcessor'
p16063
sg16
(lp16064
sg19
(lp16065
sg22
(lp16066
sg25
I0
sba(iArchitecture
Entity
p16067
(dp16068
g11
(lp16069
sg14
S'com.google.common.io.LineReader'
p16070
sg16
(lp16071
sg19
(lp16072
sg22
(lp16073
sg25
I0
sba(iArchitecture
Entity
p16074
(dp16075
g11
(lp16076
sg14
S'com.google.common.io.LittleEndianDataInputStream'
p16077
sg16
(lp16078
sg19
(lp16079
sg22
(lp16080
sg25
I0
sba(iArchitecture
Entity
p16081
(dp16082
g11
(lp16083
sg14
S'com.google.common.io.LittleEndianDataOutputStream'
p16084
sg16
(lp16085
sg19
(lp16086
sg22
(lp16087
sg25
I0
sba(iArchitecture
Entity
p16088
(dp16089
g11
(lp16090
V2996
p16091
ag16091
ag16091
ag16091
asg14
S'com.google.common.io.MultiInputStream'
p16092
sg16
(lp16093
VUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16094
aVUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16095
aVUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16096
aVUsing `guava-23.0` (and earlier versions), `com.google.common.io.MultiInputStream` produces a stack overflow when it is given sufficiently many empty `ByteSource` instances.\u000a\u000aTest cases that reproduce the behavior:\u000a\u000a```java\u000aimport java.io.InputStream;\u000aimport java.util.List;\u000a\u000aimport org.junit.Before;\u000aimport org.junit.Test;\u000a\u000aimport com.google.common.collect.Lists;\u000aimport com.google.common.io.ByteSource;\u000a\u000apublic class MultiInputStreamTest {\u000a\u000a  /** Adjust this according to the thread stack size. */\u000a  private static final int LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE = 1000000;\u000a\u000a  private ByteSource       concatenated;\u000a\u000a  public @Before void setup() throws Exception {\u000a    final List<ByteSource> emptySources = Lists.newArrayList();\u000a    for (int i = 0; i < LARGE_ENOUGH_FOR_CURRENT_STACK_SIZE; i++) {\u000a      emptySources.add(ByteSource.empty());\u000a    }\u000a    // produce a ConcatenatedByteSource which in turn produces\u000a    // a MultiInputStream\u000a    concatenated = ByteSource.concat(emptySources);\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources1() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read();\u000a    }\u000a  }\u000a\u000a  public @Test void stackOverflowErrorOnEmptySources2() throws Exception {\u000a    try (InputStream in = concatenated.openStream()) {\u000a      in.read(new byte[1], 0, 1);\u000a    }\u000a  }\u000a\u000a}\u000a```\u000a\u000aThe condensed exception stack traces produced by the respective test case (which appear to be truncated):\u000a\u000a```\u000a$ uniq -c stack1\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.ByteSource$ByteArrayByteSource.openStream(ByteSource.java:574)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:65)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:89)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:90)\u000a```\u000a\u000a```\u000a$ uniq -c stack2\u000a   1 java.lang.StackOverflowError\u000a   1 	at com.google.common.io.MultiInputStream.close(MultiInputStream.java:52)\u000a   1 	at com.google.common.io.MultiInputStream.advance(MultiInputStream.java:63)\u000a   1 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:102)\u000a1021 	at com.google.common.io.MultiInputStream.read(MultiInputStream.java:103)\u000a```
p16097
asg19
(lp16098
(lp16099
I7
aag16099
ag16099
ag16099
asg22
(lp16100
VMultiInputStream produces stack overflow
p16101
ag16101
ag16101
ag16101
asg25
I0
sba(iArchitecture
Entity
p16102
(dp16103
g11
(lp16104
sg14
S'com.google.common.io.PatternFilenameFilter'
p16105
sg16
(lp16106
sg19
(lp16107
sg22
(lp16108
sg25
I0
sba(iArchitecture
Entity
p16109
(dp16110
g11
(lp16111
sg14
S'com.google.common.io.ReaderInputStream'
p16112
sg16
(lp16113
sg19
(lp16114
sg22
(lp16115
sg25
I0
sba(iArchitecture
Entity
p16116
(dp16117
g11
(lp16118
sg14
S'com.google.common.io.package-info'
p16119
sg16
(lp16120
sg19
(lp16121
sg22
(lp16122
sg25
I0
sba(iArchitecture
Entity
p16123
(dp16124
g11
(lp16125
sg14
S'com.google.common.math.PairedStats'
p16126
sg16
(lp16127
sg19
(lp16128
sg22
(lp16129
sg25
I0
sba(iArchitecture
Entity
p16130
(dp16131
g11
(lp16132
sg14
S'com.google.common.util.concurrent.AbstractCatchingFuture'
p16133
sg16
(lp16134
sg19
(lp16135
sg22
(lp16136
sg25
I0
sba(iArchitecture
Entity
p16137
(dp16138
g11
(lp16139
sg14
S'com.google.common.util.concurrent.AbstractTransformFuture'
p16140
sg16
(lp16141
sg19
(lp16142
sg22
(lp16143
sg25
I0
sba(iArchitecture
Entity
p16144
(dp16145
g11
(lp16146
sg14
S'com.google.common.util.concurrent.Futures'
p16147
sg16
(lp16148
sg19
(lp16149
sg22
(lp16150
sg25
I0
sba(iArchitecture
Entity
p16151
(dp16152
g11
(lp16153
sg14
S'com.google.common.util.concurrent.UncaughtExceptionHandlers'
p16154
sg16
(lp16155
sg19
(lp16156
sg22
(lp16157
sg25
I0
sba(iArchitecture
Entity
p16158
(dp16159
g11
(lp16160
sg14
S'com.google.common.xml.XmlEscapers'
p16161
sg16
(lp16162
sg19
(lp16163
sg22
(lp16164
sg25
I0
sbasg1017
(lp16165
g15620
ag15627
ag15634
ag15641
ag15648
ag15655
ag15662
ag15669
ag15676
ag15683
ag15690
ag15697
ag15704
ag15711
ag15718
ag15725
ag15732
ag15739
ag15746
ag15753
ag15760
ag15767
ag15774
ag15781
ag15788
ag15795
ag15802
ag15809
ag15816
ag15823
ag15830
ag15837
ag15844
ag15851
ag15858
ag15865
ag15872
ag15879
ag15886
ag15893
ag15900
ag15907
ag15914
ag15921
ag15928
ag15935
ag15942
ag15950
ag15961
ag15973
ag15980
ag15988
ag16000
ag16007
ag16014
ag16021
ag16028
ag16035
ag16042
ag16049
ag16056
ag16063
ag16070
ag16077
ag16084
ag16092
ag16105
ag16112
ag16119
ag16126
ag16133
ag16140
ag16147
ag16154
ag16161
asg25
I0
sg1019
S'io'
p16166
sba(iArchitecture
Cluster
p16167
(dp16168
g7
(lp16169
(iArchitecture
Entity
p16170
(dp16171
g11
(lp16172
sg14
S'com.google.common.base.AbstractIterator'
p16173
sg16
(lp16174
sg19
(lp16175
sg22
(lp16176
sg25
I0
sba(iArchitecture
Entity
p16177
(dp16178
g11
(lp16179
sg14
S'com.google.common.base.CommonPattern'
p16180
sg16
(lp16181
sg19
(lp16182
sg22
(lp16183
sg25
I0
sba(iArchitecture
Entity
p16184
(dp16185
g11
(lp16186
sg14
S'com.google.common.base.Converter'
p16187
sg16
(lp16188
sg19
(lp16189
sg22
(lp16190
sg25
I0
sba(iArchitecture
Entity
p16191
(dp16192
g11
(lp16193
sg14
S'com.google.common.base.ExtraObjectsMethodsForWeb'
p16194
sg16
(lp16195
sg19
(lp16196
sg22
(lp16197
sg25
I0
sba(iArchitecture
Entity
p16198
(dp16199
g11
(lp16200
sg14
S'com.google.common.base.FinalizablePhantomReference'
p16201
sg16
(lp16202
sg19
(lp16203
sg22
(lp16204
sg25
I0
sba(iArchitecture
Entity
p16205
(dp16206
g11
(lp16207
sg14
S'com.google.common.base.FinalizableReferenceQueue'
p16208
sg16
(lp16209
sg19
(lp16210
sg22
(lp16211
sg25
I0
sba(iArchitecture
Entity
p16212
(dp16213
g11
(lp16214
sg14
S'com.google.common.base.FinalizableSoftReference'
p16215
sg16
(lp16216
sg19
(lp16217
sg22
(lp16218
sg25
I0
sba(iArchitecture
Entity
p16219
(dp16220
g11
(lp16221
sg14
S'com.google.common.base.FinalizableWeakReference'
p16222
sg16
(lp16223
sg19
(lp16224
sg22
(lp16225
sg25
I0
sba(iArchitecture
Entity
p16226
(dp16227
g11
(lp16228
sg14
S'com.google.common.base.Joiner'
p16229
sg16
(lp16230
sg19
(lp16231
sg22
(lp16232
sg25
I0
sba(iArchitecture
Entity
p16233
(dp16234
g11
(lp16235
sg14
S'com.google.common.base.PatternCompiler'
p16236
sg16
(lp16237
sg19
(lp16238
sg22
(lp16239
sg25
I0
sba(iArchitecture
Entity
p16240
(dp16241
g11
(lp16242
V2866
p16243
ag16243
ag16243
ag16243
ag16243
asg14
S'com.google.common.base.Throwables'
p16244
sg16
(lp16245
VException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16246
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16247
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16248
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16249
aVException cause can be set by initCause method which can lead to a circular reference:\u000a```java\u000aException cause = new Exception();\u000aException exception = new Exception(cause);\u000acause.initCause(exception);\u000a```\u000aCalling `Throwables.getCausalChain( exception )` or `Throwables.getRootCause( exception )` could lead to an infinitive loop.\u000a\u000aIt is good idea to use a `Set` to add cause exceptions to avoid iterating over a circular reference when `Set.add` method returns `false`. 
p16250
asg19
(lp16251
(lp16252
I0
aag16252
ag16252
ag16252
ag16252
asg22
(lp16253
VMake Throwables.getCausalChain and Throwables.getRootCause cyclic reference safe
p16254
ag16254
ag16254
ag16254
ag16254
asg25
I0
sba(iArchitecture
Entity
p16255
(dp16256
g11
(lp16257
sg14
S'com.google.common.base.Ticker'
p16258
sg16
(lp16259
sg19
(lp16260
sg22
(lp16261
sg25
I0
sba(iArchitecture
Entity
p16262
(dp16263
g11
(lp16264
sg14
S'com.google.common.base.Verify'
p16265
sg16
(lp16266
sg19
(lp16267
sg22
(lp16268
sg25
I0
sba(iArchitecture
Entity
p16269
(dp16270
g11
(lp16271
sg14
S'com.google.common.base.VerifyException'
p16272
sg16
(lp16273
sg19
(lp16274
sg22
(lp16275
sg25
I0
sba(iArchitecture
Entity
p16276
(dp16277
g11
(lp16278
sg14
S'com.google.common.base.package-info'
p16279
sg16
(lp16280
sg19
(lp16281
sg22
(lp16282
sg25
I0
sba(iArchitecture
Entity
p16283
(dp16284
g11
(lp16285
sg14
S'com.google.common.cache.AbstractCache'
p16286
sg16
(lp16287
sg19
(lp16288
sg22
(lp16289
sg25
I0
sba(iArchitecture
Entity
p16290
(dp16291
g11
(lp16292
sg14
S'com.google.common.cache.AbstractLoadingCache'
p16293
sg16
(lp16294
sg19
(lp16295
sg22
(lp16296
sg25
I0
sba(iArchitecture
Entity
p16297
(dp16298
g11
(lp16299
sg14
S'com.google.common.cache.CacheBuilder'
p16300
sg16
(lp16301
sg19
(lp16302
sg22
(lp16303
sg25
I0
sba(iArchitecture
Entity
p16304
(dp16305
g11
(lp16306
sg14
S'com.google.common.cache.CacheLoader'
p16307
sg16
(lp16308
sg19
(lp16309
sg22
(lp16310
sg25
I0
sba(iArchitecture
Entity
p16311
(dp16312
g11
(lp16313
sg14
S'com.google.common.cache.CacheStats'
p16314
sg16
(lp16315
sg19
(lp16316
sg22
(lp16317
sg25
I0
sba(iArchitecture
Entity
p16318
(dp16319
g11
(lp16320
sg14
S'com.google.common.cache.ForwardingCache'
p16321
sg16
(lp16322
sg19
(lp16323
sg22
(lp16324
sg25
I0
sba(iArchitecture
Entity
p16325
(dp16326
g11
(lp16327
sg14
S'com.google.common.cache.ForwardingLoadingCache'
p16328
sg16
(lp16329
sg19
(lp16330
sg22
(lp16331
sg25
I0
sba(iArchitecture
Entity
p16332
(dp16333
g11
(lp16334
sg14
S'com.google.common.cache.LoadingCache'
p16335
sg16
(lp16336
sg19
(lp16337
sg22
(lp16338
sg25
I0
sba(iArchitecture
Entity
p16339
(dp16340
g11
(lp16341
sg14
S'com.google.common.cache.LongAddables'
p16342
sg16
(lp16343
sg19
(lp16344
sg22
(lp16345
sg25
I0
sba(iArchitecture
Entity
p16346
(dp16347
g11
(lp16348
sg14
S'com.google.common.cache.RemovalCause'
p16349
sg16
(lp16350
sg19
(lp16351
sg22
(lp16352
sg25
I0
sba(iArchitecture
Entity
p16353
(dp16354
g11
(lp16355
sg14
S'com.google.common.cache.RemovalListeners'
p16356
sg16
(lp16357
sg19
(lp16358
sg22
(lp16359
sg25
I0
sba(iArchitecture
Entity
p16360
(dp16361
g11
(lp16362
sg14
S'com.google.common.cache.Striped64'
p16363
sg16
(lp16364
sg19
(lp16365
sg22
(lp16366
sg25
I0
sba(iArchitecture
Entity
p16367
(dp16368
g11
(lp16369
sg14
S'com.google.common.cache.Weigher'
p16370
sg16
(lp16371
sg19
(lp16372
sg22
(lp16373
sg25
I0
sba(iArchitecture
Entity
p16374
(dp16375
g11
(lp16376
sg14
S'com.google.common.cache.package-info'
p16377
sg16
(lp16378
sg19
(lp16379
sg22
(lp16380
sg25
I0
sba(iArchitecture
Entity
p16381
(dp16382
g11
(lp16383
sg14
S'com.google.common.collect.AbstractIterator'
p16384
sg16
(lp16385
sg19
(lp16386
sg22
(lp16387
sg25
I0
sba(iArchitecture
Entity
p16388
(dp16389
g11
(lp16390
sg14
S'com.google.common.collect.AbstractMapEntry'
p16391
sg16
(lp16392
sg19
(lp16393
sg22
(lp16394
sg25
I0
sba(iArchitecture
Entity
p16395
(dp16396
g11
(lp16397
sg14
S'com.google.common.collect.AbstractSortedMultiset'
p16398
sg16
(lp16399
sg19
(lp16400
sg22
(lp16401
sg25
I0
sba(iArchitecture
Entity
p16402
(dp16403
g11
(lp16404
sg14
S'com.google.common.collect.BinaryTreeTraverser'
p16405
sg16
(lp16406
sg19
(lp16407
sg22
(lp16408
sg25
I0
sba(iArchitecture
Entity
p16409
(dp16410
g11
(lp16411
sg14
S'com.google.common.collect.CollectPreconditions'
p16412
sg16
(lp16413
sg19
(lp16414
sg22
(lp16415
sg25
I0
sba(iArchitecture
Entity
p16416
(dp16417
g11
(lp16418
sg14
S'com.google.common.collect.Constraint'
p16419
sg16
(lp16420
sg19
(lp16421
sg22
(lp16422
sg25
I0
sba(iArchitecture
Entity
p16423
(dp16424
g11
(lp16425
sg14
S'com.google.common.collect.Constraints'
p16426
sg16
(lp16427
sg19
(lp16428
sg22
(lp16429
sg25
I0
sba(iArchitecture
Entity
p16430
(dp16431
g11
(lp16432
sg14
S'com.google.common.collect.Cut'
p16433
sg16
(lp16434
sg19
(lp16435
sg22
(lp16436
sg25
I0
sba(iArchitecture
Entity
p16437
(dp16438
g11
(lp16439
sg14
S'com.google.common.collect.DiscreteDomain'
p16440
sg16
(lp16441
sg19
(lp16442
sg22
(lp16443
sg25
I0
sba(iArchitecture
Entity
p16444
(dp16445
g11
(lp16446
sg14
S'com.google.common.collect.FilteredKeyListMultimap'
p16447
sg16
(lp16448
sg19
(lp16449
sg22
(lp16450
sg25
I0
sba(iArchitecture
Entity
p16451
(dp16452
g11
(lp16453
sg14
S'com.google.common.collect.FilteredSetMultimap'
p16454
sg16
(lp16455
sg19
(lp16456
sg22
(lp16457
sg25
I0
sba(iArchitecture
Entity
p16458
(dp16459
g11
(lp16460
sg14
S'com.google.common.collect.ForwardingBlockingDeque'
p16461
sg16
(lp16462
sg19
(lp16463
sg22
(lp16464
sg25
I0
sba(iArchitecture
Entity
p16465
(dp16466
g11
(lp16467
sg14
S'com.google.common.collect.ForwardingCollection'
p16468
sg16
(lp16469
sg19
(lp16470
sg22
(lp16471
sg25
I0
sba(iArchitecture
Entity
p16472
(dp16473
g11
(lp16474
sg14
S'com.google.common.collect.ForwardingConcurrentMap'
p16475
sg16
(lp16476
sg19
(lp16477
sg22
(lp16478
sg25
I0
sba(iArchitecture
Entity
p16479
(dp16480
g11
(lp16481
sg14
S'com.google.common.collect.ForwardingDeque'
p16482
sg16
(lp16483
sg19
(lp16484
sg22
(lp16485
sg25
I0
sba(iArchitecture
Entity
p16486
(dp16487
g11
(lp16488
sg14
S'com.google.common.collect.ForwardingImmutableList'
p16489
sg16
(lp16490
sg19
(lp16491
sg22
(lp16492
sg25
I0
sba(iArchitecture
Entity
p16493
(dp16494
g11
(lp16495
sg14
S'com.google.common.collect.ForwardingImmutableMap'
p16496
sg16
(lp16497
sg19
(lp16498
sg22
(lp16499
sg25
I0
sba(iArchitecture
Entity
p16500
(dp16501
g11
(lp16502
sg14
S'com.google.common.collect.ForwardingImmutableSet'
p16503
sg16
(lp16504
sg19
(lp16505
sg22
(lp16506
sg25
I0
sba(iArchitecture
Entity
p16507
(dp16508
g11
(lp16509
sg14
S'com.google.common.collect.ForwardingIterator'
p16510
sg16
(lp16511
sg19
(lp16512
sg22
(lp16513
sg25
I0
sba(iArchitecture
Entity
p16514
(dp16515
g11
(lp16516
sg14
S'com.google.common.collect.ForwardingListIterator'
p16517
sg16
(lp16518
sg19
(lp16519
sg22
(lp16520
sg25
I0
sba(iArchitecture
Entity
p16521
(dp16522
g11
(lp16523
sg14
S'com.google.common.collect.ForwardingListMultimap'
p16524
sg16
(lp16525
sg19
(lp16526
sg22
(lp16527
sg25
I0
sba(iArchitecture
Entity
p16528
(dp16529
g11
(lp16530
sg14
S'com.google.common.collect.ForwardingMap'
p16531
sg16
(lp16532
sg19
(lp16533
sg22
(lp16534
sg25
I0
sba(iArchitecture
Entity
p16535
(dp16536
g11
(lp16537
sg14
S'com.google.common.collect.ForwardingMapEntry'
p16538
sg16
(lp16539
sg19
(lp16540
sg22
(lp16541
sg25
I0
sba(iArchitecture
Entity
p16542
(dp16543
g11
(lp16544
sg14
S'com.google.common.collect.ForwardingMultiset'
p16545
sg16
(lp16546
sg19
(lp16547
sg22
(lp16548
sg25
I0
sba(iArchitecture
Entity
p16549
(dp16550
g11
(lp16551
sg14
S'com.google.common.collect.ForwardingNavigableMap'
p16552
sg16
(lp16553
sg19
(lp16554
sg22
(lp16555
sg25
I0
sba(iArchitecture
Entity
p16556
(dp16557
g11
(lp16558
sg14
S'com.google.common.collect.ForwardingNavigableSet'
p16559
sg16
(lp16560
sg19
(lp16561
sg22
(lp16562
sg25
I0
sba(iArchitecture
Entity
p16563
(dp16564
g11
(lp16565
sg14
S'com.google.common.collect.ForwardingObject'
p16566
sg16
(lp16567
sg19
(lp16568
sg22
(lp16569
sg25
I0
sba(iArchitecture
Entity
p16570
(dp16571
g11
(lp16572
sg14
S'com.google.common.collect.ForwardingQueue'
p16573
sg16
(lp16574
sg19
(lp16575
sg22
(lp16576
sg25
I0
sba(iArchitecture
Entity
p16577
(dp16578
g11
(lp16579
sg14
S'com.google.common.collect.ForwardingSet'
p16580
sg16
(lp16581
sg19
(lp16582
sg22
(lp16583
sg25
I0
sba(iArchitecture
Entity
p16584
(dp16585
g11
(lp16586
sg14
S'com.google.common.collect.ForwardingSortedMap'
p16587
sg16
(lp16588
sg19
(lp16589
sg22
(lp16590
sg25
I0
sba(iArchitecture
Entity
p16591
(dp16592
g11
(lp16593
sg14
S'com.google.common.collect.ForwardingSortedMultiset'
p16594
sg16
(lp16595
sg19
(lp16596
sg22
(lp16597
sg25
I0
sba(iArchitecture
Entity
p16598
(dp16599
g11
(lp16600
sg14
S'com.google.common.collect.ForwardingSortedSet'
p16601
sg16
(lp16602
sg19
(lp16603
sg22
(lp16604
sg25
I0
sba(iArchitecture
Entity
p16605
(dp16606
g11
(lp16607
sg14
S'com.google.common.collect.GwtTransient'
p16608
sg16
(lp16609
sg19
(lp16610
sg22
(lp16611
sg25
I0
sba(iArchitecture
Entity
p16612
(dp16613
g11
(lp16614
sg14
S'com.google.common.collect.ImmutableCollection'
p16615
sg16
(lp16616
sg19
(lp16617
sg22
(lp16618
sg25
I0
sba(iArchitecture
Entity
p16619
(dp16620
g11
(lp16621
sg14
S'com.google.common.collect.ImmutableEnumMap'
p16622
sg16
(lp16623
sg19
(lp16624
sg22
(lp16625
sg25
I0
sba(iArchitecture
Entity
p16626
(dp16627
g11
(lp16628
sg14
S'com.google.common.collect.ImmutableEnumSet'
p16629
sg16
(lp16630
sg19
(lp16631
sg22
(lp16632
sg25
I0
sba(iArchitecture
Entity
p16633
(dp16634
g11
(lp16635
sg14
S'com.google.common.collect.ImmutableMapEntry'
p16636
sg16
(lp16637
sg19
(lp16638
sg22
(lp16639
sg25
I0
sba(iArchitecture
Entity
p16640
(dp16641
g11
(lp16642
sg14
S'com.google.common.collect.ImmutableMapEntrySet'
p16643
sg16
(lp16644
sg19
(lp16645
sg22
(lp16646
sg25
I0
sba(iArchitecture
Entity
p16647
(dp16648
g11
(lp16649
sg14
S'com.google.common.collect.ImmutableSortedAsList'
p16650
sg16
(lp16651
sg19
(lp16652
sg22
(lp16653
sg25
I0
sba(iArchitecture
Entity
p16654
(dp16655
g11
(lp16656
sg14
S'com.google.common.collect.Interners'
p16657
sg16
(lp16658
sg19
(lp16659
sg22
(lp16660
sg25
I0
sba(iArchitecture
Entity
p16661
(dp16662
g11
(lp16663
sg14
S'com.google.common.collect.MapConstraint'
p16664
sg16
(lp16665
sg19
(lp16666
sg22
(lp16667
sg25
I0
sba(iArchitecture
Entity
p16668
(dp16669
g11
(lp16670
sg14
S'com.google.common.collect.MapMaker'
p16671
sg16
(lp16672
sg19
(lp16673
sg22
(lp16674
sg25
I0
sba(iArchitecture
Entity
p16675
(dp16676
g11
(lp16677
sg14
S'com.google.common.collect.MultimapBuilder'
p16678
sg16
(lp16679
sg19
(lp16680
sg22
(lp16681
sg25
I0
sba(iArchitecture
Entity
p16682
(dp16683
g11
(lp16684
sg14
S'com.google.common.collect.Multiset'
p16685
sg16
(lp16686
sg19
(lp16687
sg22
(lp16688
sg25
I0
sba(iArchitecture
Entity
p16689
(dp16690
g11
(lp16691
sg14
S'com.google.common.collect.PeekingIterator'
p16692
sg16
(lp16693
sg19
(lp16694
sg22
(lp16695
sg25
I0
sba(iArchitecture
Entity
p16696
(dp16697
g11
(lp16698
sg14
S'com.google.common.collect.RegularImmutableAsList'
p16699
sg16
(lp16700
sg19
(lp16701
sg22
(lp16702
sg25
I0
sba(iArchitecture
Entity
p16703
(dp16704
g11
(lp16705
sg14
S'com.google.common.collect.SingletonImmutableTable'
p16706
sg16
(lp16707
sg19
(lp16708
sg22
(lp16709
sg25
I0
sba(iArchitecture
Entity
p16710
(dp16711
g11
(lp16712
sg14
S'com.google.common.collect.SortedLists'
p16713
sg16
(lp16714
sg19
(lp16715
sg22
(lp16716
sg25
I0
sba(iArchitecture
Entity
p16717
(dp16718
g11
(lp16719
sg14
S'com.google.common.collect.SortedMultiset'
p16720
sg16
(lp16721
sg19
(lp16722
sg22
(lp16723
sg25
I0
sba(iArchitecture
Entity
p16724
(dp16725
g11
(lp16726
sg14
S'com.google.common.collect.StandardRowSortedTable'
p16727
sg16
(lp16728
sg19
(lp16729
sg22
(lp16730
sg25
I0
sba(iArchitecture
Entity
p16731
(dp16732
g11
(lp16733
sg14
S'com.google.common.collect.TreeTraverser'
p16734
sg16
(lp16735
sg19
(lp16736
sg22
(lp16737
sg25
I0
sba(iArchitecture
Entity
p16738
(dp16739
g11
(lp16740
sg14
S'com.google.common.collect.UnmodifiableIterator'
p16741
sg16
(lp16742
sg19
(lp16743
sg22
(lp16744
sg25
I0
sba(iArchitecture
Entity
p16745
(dp16746
g11
(lp16747
sg14
S'com.google.common.collect.UnmodifiableListIterator'
p16748
sg16
(lp16749
sg19
(lp16750
sg22
(lp16751
sg25
I0
sba(iArchitecture
Entity
p16752
(dp16753
g11
(lp16754
sg14
S'com.google.common.collect.UnmodifiableSortedMultiset'
p16755
sg16
(lp16756
sg19
(lp16757
sg22
(lp16758
sg25
I0
sba(iArchitecture
Entity
p16759
(dp16760
g11
(lp16761
sg14
S'com.google.common.collect.package-info'
p16762
sg16
(lp16763
sg19
(lp16764
sg22
(lp16765
sg25
I0
sba(iArchitecture
Entity
p16766
(dp16767
g11
(lp16768
sg14
S'com.google.common.escape.package-info'
p16769
sg16
(lp16770
sg19
(lp16771
sg22
(lp16772
sg25
I0
sba(iArchitecture
Entity
p16773
(dp16774
g11
(lp16775
sg14
S'com.google.common.eventbus.AsyncEventBus'
p16776
sg16
(lp16777
sg19
(lp16778
sg22
(lp16779
sg25
I0
sba(iArchitecture
Entity
p16780
(dp16781
g11
(lp16782
sg14
S'com.google.common.eventbus.EventBus'
p16783
sg16
(lp16784
sg19
(lp16785
sg22
(lp16786
sg25
I0
sba(iArchitecture
Entity
p16787
(dp16788
g11
(lp16789
sg14
S'com.google.common.graph.AbstractValueGraph'
p16790
sg16
(lp16791
sg19
(lp16792
sg22
(lp16793
sg25
I0
sba(iArchitecture
Entity
p16794
(dp16795
g11
(lp16796
sg14
S'com.google.common.graph.ConfigurableMutableGraph'
p16797
sg16
(lp16798
sg19
(lp16799
sg22
(lp16800
sg25
I0
sba(iArchitecture
Entity
p16801
(dp16802
g11
(lp16803
sg14
S'com.google.common.graph.ConfigurableMutableNetwork'
p16804
sg16
(lp16805
sg19
(lp16806
sg22
(lp16807
sg25
I0
sba(iArchitecture
Entity
p16808
(dp16809
g11
(lp16810
sg14
S'com.google.common.graph.ConfigurableMutableValueGraph'
p16811
sg16
(lp16812
sg19
(lp16813
sg22
(lp16814
sg25
I0
sba(iArchitecture
Entity
p16815
(dp16816
g11
(lp16817
sg14
S'com.google.common.graph.ConfigurableNetwork'
p16818
sg16
(lp16819
sg19
(lp16820
sg22
(lp16821
sg25
I0
sba(iArchitecture
Entity
p16822
(dp16823
g11
(lp16824
sg14
S'com.google.common.graph.EdgesConnecting'
p16825
sg16
(lp16826
sg19
(lp16827
sg22
(lp16828
sg25
I0
sba(iArchitecture
Entity
p16829
(dp16830
g11
(lp16831
sg14
S'com.google.common.graph.Graph'
p16832
sg16
(lp16833
sg19
(lp16834
sg22
(lp16835
sg25
I0
sba(iArchitecture
Entity
p16836
(dp16837
g11
(lp16838
sg14
S'com.google.common.graph.GraphBuilder'
p16839
sg16
(lp16840
sg19
(lp16841
sg22
(lp16842
sg25
I0
sba(iArchitecture
Entity
p16843
(dp16844
g11
(lp16845
sg14
S'com.google.common.graph.Graphs'
p16846
sg16
(lp16847
sg19
(lp16848
sg22
(lp16849
sg25
I0
sba(iArchitecture
Entity
p16850
(dp16851
g11
(lp16852
sg14
S'com.google.common.graph.ImmutableNetwork'
p16853
sg16
(lp16854
sg19
(lp16855
sg22
(lp16856
sg25
I0
sba(iArchitecture
Entity
p16857
(dp16858
g11
(lp16859
sg14
S'com.google.common.graph.MultiEdgesConnecting'
p16860
sg16
(lp16861
sg19
(lp16862
sg22
(lp16863
sg25
I0
sba(iArchitecture
Entity
p16864
(dp16865
g11
(lp16866
sg14
S'com.google.common.graph.MutableGraph'
p16867
sg16
(lp16868
sg19
(lp16869
sg22
(lp16870
sg25
I0
sba(iArchitecture
Entity
p16871
(dp16872
g11
(lp16873
sg14
S'com.google.common.graph.MutableNetwork'
p16874
sg16
(lp16875
sg19
(lp16876
sg22
(lp16877
sg25
I0
sba(iArchitecture
Entity
p16878
(dp16879
g11
(lp16880
sg14
S'com.google.common.graph.MutableValueGraph'
p16881
sg16
(lp16882
sg19
(lp16883
sg22
(lp16884
sg25
I0
sba(iArchitecture
Entity
p16885
(dp16886
g11
(lp16887
sg14
S'com.google.common.graph.Network'
p16888
sg16
(lp16889
sg19
(lp16890
sg22
(lp16891
sg25
I0
sba(iArchitecture
Entity
p16892
(dp16893
g11
(lp16894
sg14
S'com.google.common.graph.NetworkBuilder'
p16895
sg16
(lp16896
sg19
(lp16897
sg22
(lp16898
sg25
I0
sba(iArchitecture
Entity
p16899
(dp16900
g11
(lp16901
sg14
S'com.google.common.graph.ValueGraph'
p16902
sg16
(lp16903
sg19
(lp16904
sg22
(lp16905
sg25
I0
sba(iArchitecture
Entity
p16906
(dp16907
g11
(lp16908
sg14
S'com.google.common.graph.ValueGraphBuilder'
p16909
sg16
(lp16910
sg19
(lp16911
sg22
(lp16912
sg25
I0
sba(iArchitecture
Entity
p16913
(dp16914
g11
(lp16915
sg14
S'com.google.common.hash.Hashing'
p16916
sg16
(lp16917
sg19
(lp16918
sg22
(lp16919
sg25
I0
sba(iArchitecture
Entity
p16920
(dp16921
g11
(lp16922
sg14
S'com.google.common.html.HtmlEscapers'
p16923
sg16
(lp16924
sg19
(lp16925
sg22
(lp16926
sg25
I0
sba(iArchitecture
Entity
p16927
(dp16928
g11
(lp16929
sg14
S'com.google.common.io.Resources'
p16930
sg16
(lp16931
sg19
(lp16932
sg22
(lp16933
sg25
I0
sba(iArchitecture
Entity
p16934
(dp16935
g11
(lp16936
sg14
S'com.google.common.math.DoubleUtils'
p16937
sg16
(lp16938
sg19
(lp16939
sg22
(lp16940
sg25
I0
sba(iArchitecture
Entity
p16941
(dp16942
g11
(lp16943
sg14
S'com.google.common.math.MathPreconditions'
p16944
sg16
(lp16945
sg19
(lp16946
sg22
(lp16947
sg25
I0
sba(iArchitecture
Entity
p16948
(dp16949
g11
(lp16950
sg14
S'com.google.common.net.HostAndPort'
p16951
sg16
(lp16952
sg19
(lp16953
sg22
(lp16954
sg25
I0
sba(iArchitecture
Entity
p16955
(dp16956
g11
(lp16957
sg14
S'com.google.common.net.HostSpecifier'
p16958
sg16
(lp16959
sg19
(lp16960
sg22
(lp16961
sg25
I0
sba(iArchitecture
Entity
p16962
(dp16963
g11
(lp16964
sg14
S'com.google.common.net.HttpHeaders'
p16965
sg16
(lp16966
sg19
(lp16967
sg22
(lp16968
sg25
I0
sba(iArchitecture
Entity
p16969
(dp16970
g11
(lp16971
sg14
S'com.google.common.net.InetAddresses'
p16972
sg16
(lp16973
sg19
(lp16974
sg22
(lp16975
sg25
I0
sba(iArchitecture
Entity
p16976
(dp16977
g11
(lp16978
sg14
S'com.google.common.net.InternetDomainName'
p16979
sg16
(lp16980
sg19
(lp16981
sg22
(lp16982
sg25
I0
sba(iArchitecture
Entity
p16983
(dp16984
g11
(lp16985
sg14
S'com.google.common.net.UrlEscapers'
p16986
sg16
(lp16987
sg19
(lp16988
sg22
(lp16989
sg25
I0
sba(iArchitecture
Entity
p16990
(dp16991
g11
(lp16992
sg14
S'com.google.common.net.package-info'
p16993
sg16
(lp16994
sg19
(lp16995
sg22
(lp16996
sg25
I0
sba(iArchitecture
Entity
p16997
(dp16998
g11
(lp16999
sg14
S'com.google.common.primitives.ParseRequest'
p17000
sg16
(lp17001
sg19
(lp17002
sg22
(lp17003
sg25
I0
sba(iArchitecture
Entity
p17004
(dp17005
g11
(lp17006
sg14
S'com.google.common.primitives.package-info'
p17007
sg16
(lp17008
sg19
(lp17009
sg22
(lp17010
sg25
I0
sba(iArchitecture
Entity
p17011
(dp17012
g11
(lp17013
sg14
S'com.google.common.reflect.AbstractInvocationHandler'
p17014
sg16
(lp17015
sg19
(lp17016
sg22
(lp17017
sg25
I0
sba(iArchitecture
Entity
p17018
(dp17019
g11
(lp17020
sg14
S'com.google.common.reflect.ClassPath'
p17021
sg16
(lp17022
sg19
(lp17023
sg22
(lp17024
sg25
I0
sba(iArchitecture
Entity
p17025
(dp17026
g11
(lp17027
sg14
S'com.google.common.reflect.Reflection'
p17028
sg16
(lp17029
sg19
(lp17030
sg22
(lp17031
sg25
I0
sba(iArchitecture
Entity
p17032
(dp17033
g11
(lp17034
sg14
S'com.google.common.reflect.TypeCapture'
p17035
sg16
(lp17036
sg19
(lp17037
sg22
(lp17038
sg25
I0
sba(iArchitecture
Entity
p17039
(dp17040
g11
(lp17041
sg14
S'com.google.common.util.concurrent.AbstractCheckedFuture'
p17042
sg16
(lp17043
sg19
(lp17044
sg22
(lp17045
sg25
I0
sba(iArchitecture
Entity
p17046
(dp17047
g11
(lp17048
sg14
S'com.google.common.util.concurrent.AbstractExecutionThreadService'
p17049
sg16
(lp17050
sg19
(lp17051
sg22
(lp17052
sg25
I0
sba(iArchitecture
Entity
p17053
(dp17054
g11
(lp17055
sg14
S'com.google.common.util.concurrent.AbstractFuture'
p17056
sg16
(lp17057
sg19
(lp17058
sg22
(lp17059
sg25
I0
sba(iArchitecture
Entity
p17060
(dp17061
g11
(lp17062
sg14
S'com.google.common.util.concurrent.AbstractListeningExecutorService'
p17063
sg16
(lp17064
sg19
(lp17065
sg22
(lp17066
sg25
I0
sba(iArchitecture
Entity
p17067
(dp17068
g11
(lp17069
sg14
S'com.google.common.util.concurrent.AbstractScheduledService'
p17070
sg16
(lp17071
sg19
(lp17072
sg22
(lp17073
sg25
I0
sba(iArchitecture
Entity
p17074
(dp17075
g11
(lp17076
sg14
S'com.google.common.util.concurrent.AbstractService'
p17077
sg16
(lp17078
sg19
(lp17079
sg22
(lp17080
sg25
I0
sba(iArchitecture
Entity
p17081
(dp17082
g11
(lp17083
sg14
S'com.google.common.util.concurrent.AggregateFuture'
p17084
sg16
(lp17085
sg19
(lp17086
sg22
(lp17087
sg25
I0
sba(iArchitecture
Entity
p17088
(dp17089
g11
(lp17090
sg14
S'com.google.common.util.concurrent.AggregateFutureState'
p17091
sg16
(lp17092
sg19
(lp17093
sg22
(lp17094
sg25
I0
sba(iArchitecture
Entity
p17095
(dp17096
g11
(lp17097
sg14
S'com.google.common.util.concurrent.Callables'
p17098
sg16
(lp17099
sg19
(lp17100
sg22
(lp17101
sg25
I0
sba(iArchitecture
Entity
p17102
(dp17103
g11
(lp17104
sg14
S'com.google.common.util.concurrent.CycleDetectingLockFactory'
p17105
sg16
(lp17106
sg19
(lp17107
sg22
(lp17108
sg25
I0
sba(iArchitecture
Entity
p17109
(dp17110
g11
(lp17111
sg14
S'com.google.common.util.concurrent.ExecutionError'
p17112
sg16
(lp17113
sg19
(lp17114
sg22
(lp17115
sg25
I0
sba(iArchitecture
Entity
p17116
(dp17117
g11
(lp17118
sg14
S'com.google.common.util.concurrent.ForwardingBlockingQueue'
p17119
sg16
(lp17120
sg19
(lp17121
sg22
(lp17122
sg25
I0
sba(iArchitecture
Entity
p17123
(dp17124
g11
(lp17125
sg14
S'com.google.common.util.concurrent.ForwardingCheckedFuture'
p17126
sg16
(lp17127
sg19
(lp17128
sg22
(lp17129
sg25
I0
sba(iArchitecture
Entity
p17130
(dp17131
g11
(lp17132
sg14
S'com.google.common.util.concurrent.ForwardingExecutorService'
p17133
sg16
(lp17134
sg19
(lp17135
sg22
(lp17136
sg25
I0
sba(iArchitecture
Entity
p17137
(dp17138
g11
(lp17139
sg14
S'com.google.common.util.concurrent.ForwardingFuture'
p17140
sg16
(lp17141
sg19
(lp17142
sg22
(lp17143
sg25
I0
sba(iArchitecture
Entity
p17144
(dp17145
g11
(lp17146
sg14
S'com.google.common.util.concurrent.ForwardingListenableFuture'
p17147
sg16
(lp17148
sg19
(lp17149
sg22
(lp17150
sg25
I0
sba(iArchitecture
Entity
p17151
(dp17152
g11
(lp17153
sg14
S'com.google.common.util.concurrent.ForwardingListeningExecutorService'
p17154
sg16
(lp17155
sg19
(lp17156
sg22
(lp17157
sg25
I0
sba(iArchitecture
Entity
p17158
(dp17159
g11
(lp17160
sg14
S'com.google.common.util.concurrent.GwtFuturesCatchingSpecialization'
p17161
sg16
(lp17162
sg19
(lp17163
sg22
(lp17164
sg25
I0
sba(iArchitecture
Entity
p17165
(dp17166
g11
(lp17167
sg14
S'com.google.common.util.concurrent.InterruptibleTask'
p17168
sg16
(lp17169
sg19
(lp17170
sg22
(lp17171
sg25
I0
sba(iArchitecture
Entity
p17172
(dp17173
g11
(lp17174
sg14
S'com.google.common.util.concurrent.JdkFutureAdapters'
p17175
sg16
(lp17176
sg19
(lp17177
sg22
(lp17178
sg25
I0
sba(iArchitecture
Entity
p17179
(dp17180
g11
(lp17181
sg14
S'com.google.common.util.concurrent.ListenableFuture'
p17182
sg16
(lp17183
sg19
(lp17184
sg22
(lp17185
sg25
I0
sba(iArchitecture
Entity
p17186
(dp17187
g11
(lp17188
sg14
S'com.google.common.util.concurrent.ListenerCallQueue'
p17189
sg16
(lp17190
sg19
(lp17191
sg22
(lp17192
sg25
I0
sba(iArchitecture
Entity
p17193
(dp17194
g11
(lp17195
sg14
S'com.google.common.util.concurrent.ListeningExecutorService'
p17196
sg16
(lp17197
sg19
(lp17198
sg22
(lp17199
sg25
I0
sba(iArchitecture
Entity
p17200
(dp17201
g11
(lp17202
sg14
S'com.google.common.util.concurrent.MoreExecutors'
p17203
sg16
(lp17204
sg19
(lp17205
sg22
(lp17206
sg25
I0
sba(iArchitecture
Entity
p17207
(dp17208
g11
(lp17209
sg14
S'com.google.common.util.concurrent.RateLimiter'
p17210
sg16
(lp17211
sg19
(lp17212
sg22
(lp17213
sg25
I0
sba(iArchitecture
Entity
p17214
(dp17215
g11
(lp17216
sg14
S'com.google.common.util.concurrent.Runnables'
p17217
sg16
(lp17218
sg19
(lp17219
sg22
(lp17220
sg25
I0
sba(iArchitecture
Entity
p17221
(dp17222
g11
(lp17223
sg14
S'com.google.common.util.concurrent.SerializingExecutor'
p17224
sg16
(lp17225
sg19
(lp17226
sg22
(lp17227
sg25
I0
sba(iArchitecture
Entity
p17228
(dp17229
g11
(lp17230
sg14
S'com.google.common.util.concurrent.Service'
p17231
sg16
(lp17232
sg19
(lp17233
sg22
(lp17234
sg25
I0
sba(iArchitecture
Entity
p17235
(dp17236
g11
(lp17237
sg14
S'com.google.common.util.concurrent.ServiceManager'
p17238
sg16
(lp17239
sg19
(lp17240
sg22
(lp17241
sg25
I0
sba(iArchitecture
Entity
p17242
(dp17243
g11
(lp17244
sg14
S'com.google.common.util.concurrent.SmoothRateLimiter'
p17245
sg16
(lp17246
sg19
(lp17247
sg22
(lp17248
sg25
I0
sba(iArchitecture
Entity
p17249
(dp17250
g11
(lp17251
sg14
S'com.google.common.util.concurrent.ThreadFactoryBuilder'
p17252
sg16
(lp17253
sg19
(lp17254
sg22
(lp17255
sg25
I0
sba(iArchitecture
Entity
p17256
(dp17257
g11
(lp17258
sg14
S'com.google.common.util.concurrent.UncheckedExecutionException'
p17259
sg16
(lp17260
sg19
(lp17261
sg22
(lp17262
sg25
I0
sba(iArchitecture
Entity
p17263
(dp17264
g11
(lp17265
sg14
S'com.google.common.util.concurrent.UncheckedTimeoutException'
p17266
sg16
(lp17267
sg19
(lp17268
sg22
(lp17269
sg25
I0
sba(iArchitecture
Entity
p17270
(dp17271
g11
(lp17272
sg14
S'com.google.common.util.concurrent.Uninterruptibles'
p17273
sg16
(lp17274
sg19
(lp17275
sg22
(lp17276
sg25
I0
sba(iArchitecture
Entity
p17277
(dp17278
g11
(lp17279
sg14
S'com.google.common.util.concurrent.WrappingExecutorService'
p17280
sg16
(lp17281
sg19
(lp17282
sg22
(lp17283
sg25
I0
sba(iArchitecture
Entity
p17284
(dp17285
g11
(lp17286
sg14
S'com.google.common.util.concurrent.WrappingScheduledExecutorService'
p17287
sg16
(lp17288
sg19
(lp17289
sg22
(lp17290
sg25
I0
sba(iArchitecture
Entity
p17291
(dp17292
g11
(lp17293
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixPatterns'
p17294
sg16
(lp17295
sg19
(lp17296
sg22
(lp17297
sg25
I0
sba(iArchitecture
Entity
p17298
(dp17299
g11
(lp17300
sg14
S'com.google.thirdparty.publicsuffix.PublicSuffixType'
p17301
sg16
(lp17302
sg19
(lp17303
sg22
(lp17304
sg25
I0
sba(iArchitecture
Entity
p17305
(dp17306
g11
(lp17307
sg14
S'com.google.thirdparty.publicsuffix.TrieParser'
p17308
sg16
(lp17309
sg19
(lp17310
sg22
(lp17311
sg25
I0
sbasg1017
(lp17312
g16173
ag16180
ag16187
ag16194
ag16201
ag16208
ag16215
ag16222
ag16229
ag16236
ag16244
ag16258
ag16265
ag16272
ag16279
ag16286
ag16293
ag16300
ag16307
ag16314
ag16321
ag16328
ag16335
ag16342
ag16349
ag16356
ag16363
ag16370
ag16377
ag16384
ag16391
ag16398
ag16405
ag16412
ag16419
ag16426
ag16433
ag16440
ag16447
ag16454
ag16461
ag16468
ag16475
ag16482
ag16489
ag16496
ag16503
ag16510
ag16517
ag16524
ag16531
ag16538
ag16545
ag16552
ag16559
ag16566
ag16573
ag16580
ag16587
ag16594
ag16601
ag16608
ag16615
ag16622
ag16629
ag16636
ag16643
ag16650
ag16657
ag16664
ag16671
ag16678
ag16685
ag16692
ag16699
ag16706
ag16713
ag16720
ag16727
ag16734
ag16741
ag16748
ag16755
ag16762
ag16769
ag16776
ag16783
ag16790
ag16797
ag16804
ag16811
ag16818
ag16825
ag16832
ag16839
ag16846
ag16853
ag16860
ag16867
ag16874
ag16881
ag16888
ag16895
ag16902
ag16909
ag16916
ag16923
ag16930
ag16937
ag16944
ag16951
ag16958
ag16965
ag16972
ag16979
ag16986
ag16993
ag17000
ag17007
ag17014
ag17021
ag17028
ag17035
ag17042
ag17049
ag17056
ag17063
ag17070
ag17077
ag17084
ag17091
ag17098
ag17105
ag17112
ag17119
ag17126
ag17133
ag17140
ag17147
ag17154
ag17161
ag17168
ag17175
ag17182
ag17189
ag17196
ag17203
ag17210
ag17217
ag17224
ag17231
ag17238
ag17245
ag17252
ag17259
ag17266
ag17273
ag17280
ag17287
ag17294
ag17301
ag17308
asg25
I0
sg1019
S'networking'
p17313
sba(iArchitecture
Cluster
p17314
(dp17315
g7
(lp17316
(iArchitecture
Entity
p17317
(dp17318
g11
(lp17319
sg14
S'com.google.common.annotations.VisibleForTesting'
p17320
sg16
(lp17321
sg19
(lp17322
sg22
(lp17323
sg25
I0
sba(iArchitecture
Entity
p17324
(dp17325
g11
(lp17326
sg14
S'com.google.common.base.CommonMatcher'
p17327
sg16
(lp17328
sg19
(lp17329
sg22
(lp17330
sg25
I0
sba(iArchitecture
Entity
p17331
(dp17332
g11
(lp17333
sg14
S'com.google.common.base.FinalizableReference'
p17334
sg16
(lp17335
sg19
(lp17336
sg22
(lp17337
sg25
I0
sba(iArchitecture
Entity
p17338
(dp17339
g11
(lp17340
sg14
S'com.google.common.cache.LongAddable'
p17341
sg16
(lp17342
sg19
(lp17343
sg22
(lp17344
sg25
I0
sba(iArchitecture
Entity
p17345
(dp17346
g11
(lp17347
sg14
S'com.google.common.collect.ArrayListMultimap'
p17348
sg16
(lp17349
sg19
(lp17350
sg22
(lp17351
sg25
I0
sba(iArchitecture
Entity
p17352
(dp17353
g11
(lp17354
sg14
S'com.google.common.collect.ComputationException'
p17355
sg16
(lp17356
sg19
(lp17357
sg22
(lp17358
sg25
I0
sba(iArchitecture
Entity
p17359
(dp17360
g11
(lp17361
sg14
S'com.google.common.collect.FilteredMultimapValues'
p17362
sg16
(lp17363
sg19
(lp17364
sg22
(lp17365
sg25
I0
sba(iArchitecture
Entity
p17366
(dp17367
g11
(lp17368
sg14
S'com.google.common.collect.ForwardingImmutableCollection'
p17369
sg16
(lp17370
sg19
(lp17371
sg22
(lp17372
sg25
I0
sba(iArchitecture
Entity
p17373
(dp17374
g11
(lp17375
sg14
S'com.google.common.collect.ForwardingList'
p17376
sg16
(lp17377
sg19
(lp17378
sg22
(lp17379
sg25
I0
sba(iArchitecture
Entity
p17380
(dp17381
g11
(lp17382
sg14
S'com.google.common.eventbus.Dispatcher'
p17383
sg16
(lp17384
sg19
(lp17385
sg22
(lp17386
sg25
I0
sba(iArchitecture
Entity
p17387
(dp17388
g11
(lp17389
sg14
S'com.google.common.eventbus.SubscriberExceptionHandler'
p17390
sg16
(lp17391
sg19
(lp17392
sg22
(lp17393
sg25
I0
sba(iArchitecture
Entity
p17394
(dp17395
g11
(lp17396
sg14
S'com.google.common.graph.EndpointPairIterator'
p17397
sg16
(lp17398
sg19
(lp17399
sg22
(lp17400
sg25
I0
sba(iArchitecture
Entity
p17401
(dp17402
g11
(lp17403
sg14
S'com.google.common.hash.Funnel'
p17404
sg16
(lp17405
sg19
(lp17406
sg22
(lp17407
sg25
I0
sba(iArchitecture
Entity
p17408
(dp17409
g11
(lp17410
sg14
S'com.google.common.util.concurrent.SettableFuture'
p17411
sg16
(lp17412
sg19
(lp17413
sg22
(lp17414
sg25
I0
sbasg1017
(lp17415
g17320
ag17327
ag17334
ag17341
ag17348
ag17355
ag17362
ag17369
ag17376
ag17383
ag17390
ag17397
ag17404
ag17411
asg25
I0
sg1019
S'no_match'
p17416
sba(iArchitecture
Cluster
p17417
(dp17418
g7
(lp17419
(iArchitecture
Entity
p17420
(dp17421
g11
(lp17422
sg14
S'com.google.common.annotations.Beta'
p17423
sg16
(lp17424
sg19
(lp17425
sg22
(lp17426
sg25
I0
sba(iArchitecture
Entity
p17427
(dp17428
g11
(lp17429
sg14
S'com.google.common.annotations.GwtCompatible'
p17430
sg16
(lp17431
sg19
(lp17432
sg22
(lp17433
sg25
I0
sba(iArchitecture
Entity
p17434
(dp17435
g11
(lp17436
sg14
S'com.google.common.annotations.GwtIncompatible'
p17437
sg16
(lp17438
sg19
(lp17439
sg22
(lp17440
sg25
I0
sba(iArchitecture
Entity
p17441
(dp17442
g11
(lp17443
sg14
S'com.google.common.annotations.package-info'
p17444
sg16
(lp17445
sg19
(lp17446
sg22
(lp17447
sg25
I0
sba(iArchitecture
Entity
p17448
(dp17449
g11
(lp17450
sg14
S'com.google.common.base.Absent'
p17451
sg16
(lp17452
sg19
(lp17453
sg22
(lp17454
sg25
I0
sba(iArchitecture
Entity
p17455
(dp17456
g11
(lp17457
sg14
S'com.google.common.base.Defaults'
p17458
sg16
(lp17459
sg19
(lp17460
sg22
(lp17461
sg25
I0
sba(iArchitecture
Entity
p17462
(dp17463
g11
(lp17464
sg14
S'com.google.common.base.Enums'
p17465
sg16
(lp17466
sg19
(lp17467
sg22
(lp17468
sg25
I0
sba(iArchitecture
Entity
p17469
(dp17470
g11
(lp17471
sg14
S'com.google.common.base.Function'
p17472
sg16
(lp17473
sg19
(lp17474
sg22
(lp17475
sg25
I0
sba(iArchitecture
Entity
p17476
(dp17477
g11
(lp17478
sg14
S'com.google.common.base.Optional'
p17479
sg16
(lp17480
sg19
(lp17481
sg22
(lp17482
sg25
I0
sba(iArchitecture
Entity
p17483
(dp17484
g11
(lp17485
sg14
S'com.google.common.base.Platform'
p17486
sg16
(lp17487
sg19
(lp17488
sg22
(lp17489
sg25
I0
sba(iArchitecture
Entity
p17490
(dp17491
g11
(lp17492
sg14
S'com.google.common.base.Predicate'
p17493
sg16
(lp17494
sg19
(lp17495
sg22
(lp17496
sg25
I0
sba(iArchitecture
Entity
p17497
(dp17498
g11
(lp17499
sg14
S'com.google.common.base.Present'
p17500
sg16
(lp17501
sg19
(lp17502
sg22
(lp17503
sg25
I0
sba(iArchitecture
Entity
p17504
(dp17505
g11
(lp17506
sg14
S'com.google.common.base.StandardSystemProperty'
p17507
sg16
(lp17508
sg19
(lp17509
sg22
(lp17510
sg25
I0
sba(iArchitecture
Entity
p17511
(dp17512
g11
(lp17513
sg14
S'com.google.common.base.Stopwatch'
p17514
sg16
(lp17515
sg19
(lp17516
sg22
(lp17517
sg25
I0
sba(iArchitecture
Entity
p17518
(dp17519
g11
(lp17520
sg14
S'com.google.common.base.Supplier'
p17521
sg16
(lp17522
sg19
(lp17523
sg22
(lp17524
sg25
I0
sba(iArchitecture
Entity
p17525
(dp17526
g11
(lp17527
sg14
S'com.google.common.base.Suppliers'
p17528
sg16
(lp17529
sg19
(lp17530
sg22
(lp17531
sg25
I0
sba(iArchitecture
Entity
p17532
(dp17533
g11
(lp17534
sg14
S'com.google.common.base.internal.Finalizer'
p17535
sg16
(lp17536
sg19
(lp17537
sg22
(lp17538
sg25
I0
sba(iArchitecture
Entity
p17539
(dp17540
g11
(lp17541
sg14
S'com.google.common.cache.Cache'
p17542
sg16
(lp17543
sg19
(lp17544
sg22
(lp17545
sg25
I0
sba(iArchitecture
Entity
p17546
(dp17547
g11
(lp17548
sg14
S'com.google.common.cache.RemovalListener'
p17549
sg16
(lp17550
sg19
(lp17551
sg22
(lp17552
sg25
I0
sba(iArchitecture
Entity
p17553
(dp17554
g11
(lp17555
sg14
S'com.google.common.cache.RemovalNotification'
p17556
sg16
(lp17557
sg19
(lp17558
sg22
(lp17559
sg25
I0
sba(iArchitecture
Entity
p17560
(dp17561
g11
(lp17562
sg14
S'com.google.common.collect.AbstractBiMap'
p17563
sg16
(lp17564
sg19
(lp17565
sg22
(lp17566
sg25
I0
sba(iArchitecture
Entity
p17567
(dp17568
g11
(lp17569
sg14
S'com.google.common.collect.AbstractListMultimap'
p17570
sg16
(lp17571
sg19
(lp17572
sg22
(lp17573
sg25
I0
sba(iArchitecture
Entity
p17574
(dp17575
g11
(lp17576
sg14
S'com.google.common.collect.AbstractSequentialIterator'
p17577
sg16
(lp17578
sg19
(lp17579
sg22
(lp17580
sg25
I0
sba(iArchitecture
Entity
p17581
(dp17582
g11
(lp17583
sg14
S'com.google.common.collect.AbstractSetMultimap'
p17584
sg16
(lp17585
sg19
(lp17586
sg22
(lp17587
sg25
I0
sba(iArchitecture
Entity
p17588
(dp17589
g11
(lp17590
sg14
S'com.google.common.collect.AbstractSortedKeySortedSetMultimap'
p17591
sg16
(lp17592
sg19
(lp17593
sg22
(lp17594
sg25
I0
sba(iArchitecture
Entity
p17595
(dp17596
g11
(lp17597
sg14
S'com.google.common.collect.AbstractSortedSetMultimap'
p17598
sg16
(lp17599
sg19
(lp17600
sg22
(lp17601
sg25
I0
sba(iArchitecture
Entity
p17602
(dp17603
g11
(lp17604
sg14
S'com.google.common.collect.ArrayTable'
p17605
sg16
(lp17606
sg19
(lp17607
sg22
(lp17608
sg25
I0
sba(iArchitecture
Entity
p17609
(dp17610
g11
(lp17611
sg14
S'com.google.common.collect.BiMap'
p17612
sg16
(lp17613
sg19
(lp17614
sg22
(lp17615
sg25
I0
sba(iArchitecture
Entity
p17616
(dp17617
g11
(lp17618
sg14
S'com.google.common.collect.BoundType'
p17619
sg16
(lp17620
sg19
(lp17621
sg22
(lp17622
sg25
I0
sba(iArchitecture
Entity
p17623
(dp17624
g11
(lp17625
sg14
S'com.google.common.collect.ClassToInstanceMap'
p17626
sg16
(lp17627
sg19
(lp17628
sg22
(lp17629
sg25
I0
sba(iArchitecture
Entity
p17630
(dp17631
g11
(lp17632
sg14
S'com.google.common.collect.ConsumingQueueIterator'
p17633
sg16
(lp17634
sg19
(lp17635
sg22
(lp17636
sg25
I0
sba(iArchitecture
Entity
p17637
(dp17638
g11
(lp17639
sg14
S'com.google.common.collect.EmptyImmutableListMultimap'
p17640
sg16
(lp17641
sg19
(lp17642
sg22
(lp17643
sg25
I0
sba(iArchitecture
Entity
p17644
(dp17645
g11
(lp17646
sg14
S'com.google.common.collect.EmptyImmutableSetMultimap'
p17647
sg16
(lp17648
sg19
(lp17649
sg22
(lp17650
sg25
I0
sba(iArchitecture
Entity
p17651
(dp17652
g11
(lp17653
sg14
S'com.google.common.collect.EnumBiMap'
p17654
sg16
(lp17655
sg19
(lp17656
sg22
(lp17657
sg25
I0
sba(iArchitecture
Entity
p17658
(dp17659
g11
(lp17660
sg14
S'com.google.common.collect.EnumHashBiMap'
p17661
sg16
(lp17662
sg19
(lp17663
sg22
(lp17664
sg25
I0
sba(iArchitecture
Entity
p17665
(dp17666
g11
(lp17667
sg14
S'com.google.common.collect.EnumMultiset'
p17668
sg16
(lp17669
sg19
(lp17670
sg22
(lp17671
sg25
I0
sba(iArchitecture
Entity
p17672
(dp17673
g11
(lp17674
sg14
S'com.google.common.collect.FilteredEntrySetMultimap'
p17675
sg16
(lp17676
sg19
(lp17677
sg22
(lp17678
sg25
I0
sba(iArchitecture
Entity
p17679
(dp17680
g11
(lp17681
sg14
S'com.google.common.collect.FilteredKeyMultimap'
p17682
sg16
(lp17683
sg19
(lp17684
sg22
(lp17685
sg25
I0
sba(iArchitecture
Entity
p17686
(dp17687
g11
(lp17688
sg14
S'com.google.common.collect.FilteredKeySetMultimap'
p17689
sg16
(lp17690
sg19
(lp17691
sg22
(lp17692
sg25
I0
sba(iArchitecture
Entity
p17693
(dp17694
g11
(lp17695
sg14
S'com.google.common.collect.FilteredMultimap'
p17696
sg16
(lp17697
sg19
(lp17698
sg22
(lp17699
sg25
I0
sba(iArchitecture
Entity
p17700
(dp17701
g11
(lp17702
sg14
S'com.google.common.collect.ForwardingSetMultimap'
p17703
sg16
(lp17704
sg19
(lp17705
sg22
(lp17706
sg25
I0
sba(iArchitecture
Entity
p17707
(dp17708
g11
(lp17709
sg14
S'com.google.common.collect.ForwardingSortedSetMultimap'
p17710
sg16
(lp17711
sg19
(lp17712
sg22
(lp17713
sg25
I0
sba(iArchitecture
Entity
p17714
(dp17715
g11
(lp17716
sg14
S'com.google.common.collect.HashBasedTable'
p17717
sg16
(lp17718
sg19
(lp17719
sg22
(lp17720
sg25
I0
sba(iArchitecture
Entity
p17721
(dp17722
g11
(lp17723
sg14
S'com.google.common.collect.ImmutableBiMap'
p17724
sg16
(lp17725
sg19
(lp17726
sg22
(lp17727
sg25
I0
sba(iArchitecture
Entity
p17728
(dp17729
g11
(lp17730
sg14
S'com.google.common.collect.ImmutableClassToInstanceMap'
p17731
sg16
(lp17732
sg19
(lp17733
sg22
(lp17734
sg25
I0
sba(iArchitecture
Entity
p17735
(dp17736
g11
(lp17737
sg14
S'com.google.common.collect.ImmutableMapKeySet'
p17738
sg16
(lp17739
sg19
(lp17740
sg22
(lp17741
sg25
I0
sba(iArchitecture
Entity
p17742
(dp17743
g11
(lp17744
sg14
S'com.google.common.collect.ImmutableMapValues'
p17745
sg16
(lp17746
sg19
(lp17747
sg22
(lp17748
sg25
I0
sba(iArchitecture
Entity
p17749
(dp17750
g11
(lp17751
sg14
S'com.google.common.collect.ImmutableMultimap'
p17752
sg16
(lp17753
sg19
(lp17754
sg22
(lp17755
sg25
I0
sba(iArchitecture
Entity
p17756
(dp17757
g11
(lp17758
sg14
S'com.google.common.collect.ImmutableSetMultimap'
p17759
sg16
(lp17760
sg19
(lp17761
sg22
(lp17762
sg25
I0
sba(iArchitecture
Entity
p17763
(dp17764
g11
(lp17765
sg14
S'com.google.common.collect.ImmutableSortedMap'
p17766
sg16
(lp17767
sg19
(lp17768
sg22
(lp17769
sg25
I0
sba(iArchitecture
Entity
p17770
(dp17771
g11
(lp17772
sg14
S'com.google.common.collect.ImmutableSortedMapFauxverideShim'
p17773
sg16
(lp17774
sg19
(lp17775
sg22
(lp17776
sg25
I0
sba(iArchitecture
Entity
p17777
(dp17778
g11
(lp17779
sg14
S'com.google.common.collect.ImmutableSortedMultisetFauxverideShim'
p17780
sg16
(lp17781
sg19
(lp17782
sg22
(lp17783
sg25
I0
sba(iArchitecture
Entity
p17784
(dp17785
g11
(lp17786
sg14
S'com.google.common.collect.ImmutableSortedSetFauxverideShim'
p17787
sg16
(lp17788
sg19
(lp17789
sg22
(lp17790
sg25
I0
sba(iArchitecture
Entity
p17791
(dp17792
g11
(lp17793
sg14
S'com.google.common.collect.ImmutableTable'
p17794
sg16
(lp17795
sg19
(lp17796
sg22
(lp17797
sg25
I0
sba(iArchitecture
Entity
p17798
(dp17799
g11
(lp17800
sg14
S'com.google.common.collect.Interner'
p17801
sg16
(lp17802
sg19
(lp17803
sg22
(lp17804
sg25
I0
sba(iArchitecture
Entity
p17805
(dp17806
g11
(lp17807
sg14
S'com.google.common.collect.LinkedHashMultimap'
p17808
sg16
(lp17809
sg19
(lp17810
sg22
(lp17811
sg25
I0
sba(iArchitecture
Entity
p17812
(dp17813
g11
(lp17814
sg14
S'com.google.common.collect.ListMultimap'
p17815
sg16
(lp17816
sg19
(lp17817
sg22
(lp17818
sg25
I0
sba(iArchitecture
Entity
p17819
(dp17820
g11
(lp17821
sg14
S'com.google.common.collect.MapConstraints'
p17822
sg16
(lp17823
sg19
(lp17824
sg22
(lp17825
sg25
I0
sba(iArchitecture
Entity
p17826
(dp17827
g11
(lp17828
sg14
S'com.google.common.collect.MapDifference'
p17829
sg16
(lp17830
sg19
(lp17831
sg22
(lp17832
sg25
I0
sba(iArchitecture
Entity
p17833
(dp17834
g11
(lp17835
sg14
S'com.google.common.collect.Maps'
p17836
sg16
(lp17837
sg19
(lp17838
sg22
(lp17839
sg25
I0
sba(iArchitecture
Entity
p17840
(dp17841
g11
(lp17842
sg14
S'com.google.common.collect.Multimap'
p17843
sg16
(lp17844
sg19
(lp17845
sg22
(lp17846
sg25
I0
sba(iArchitecture
Entity
p17847
(dp17848
g11
(lp17849
sg14
S'com.google.common.collect.Multimaps'
p17850
sg16
(lp17851
sg19
(lp17852
sg22
(lp17853
sg25
I0
sba(iArchitecture
Entity
p17854
(dp17855
g11
(lp17856
sg14
S'com.google.common.collect.MutableClassToInstanceMap'
p17857
sg16
(lp17858
sg19
(lp17859
sg22
(lp17860
sg25
I0
sba(iArchitecture
Entity
p17861
(dp17862
g11
(lp17863
sg14
S'com.google.common.collect.Ordering'
p17864
sg16
(lp17865
sg19
(lp17866
sg22
(lp17867
sg25
I0
sba(iArchitecture
Entity
p17868
(dp17869
g11
(lp17870
sg14
S'com.google.common.collect.Platform'
p17871
sg16
(lp17872
sg19
(lp17873
sg22
(lp17874
sg25
I0
sba(iArchitecture
Entity
p17875
(dp17876
g11
(lp17877
sg14
S'com.google.common.collect.Queues'
p17878
sg16
(lp17879
sg19
(lp17880
sg22
(lp17881
sg25
I0
sba(iArchitecture
Entity
p17882
(dp17883
g11
(lp17884
sg14
S'com.google.common.collect.RangeMap'
p17885
sg16
(lp17886
sg19
(lp17887
sg22
(lp17888
sg25
I0
sba(iArchitecture
Entity
p17889
(dp17890
g11
(lp17891
sg14
S'com.google.common.collect.RangeSet'
p17892
sg16
(lp17893
sg19
(lp17894
sg22
(lp17895
sg25
I0
sba(iArchitecture
Entity
p17896
(dp17897
g11
(lp17898
sg14
S'com.google.common.collect.RegularImmutableMap'
p17899
sg16
(lp17900
sg19
(lp17901
sg22
(lp17902
sg25
I0
sba(iArchitecture
Entity
p17903
(dp17904
g11
(lp17905
sg14
S'com.google.common.collect.RowSortedTable'
p17906
sg16
(lp17907
sg19
(lp17908
sg22
(lp17909
sg25
I0
sba(iArchitecture
Entity
p17910
(dp17911
g11
(lp17912
sg14
S'com.google.common.collect.SetMultimap'
p17913
sg16
(lp17914
sg19
(lp17915
sg22
(lp17916
sg25
I0
sba(iArchitecture
Entity
p17917
(dp17918
g11
(lp17919
sg14
S'com.google.common.collect.SortedIterable'
p17920
sg16
(lp17921
sg19
(lp17922
sg22
(lp17923
sg25
I0
sba(iArchitecture
Entity
p17924
(dp17925
g11
(lp17926
sg14
S'com.google.common.collect.SortedIterables'
p17927
sg16
(lp17928
sg19
(lp17929
sg22
(lp17930
sg25
I0
sba(iArchitecture
Entity
p17931
(dp17932
g11
(lp17933
sg14
S'com.google.common.collect.SortedMapDifference'
p17934
sg16
(lp17935
sg19
(lp17936
sg22
(lp17937
sg25
I0
sba(iArchitecture
Entity
p17938
(dp17939
g11
(lp17940
sg14
S'com.google.common.collect.SortedMultisetBridge'
p17941
sg16
(lp17942
sg19
(lp17943
sg22
(lp17944
sg25
I0
sba(iArchitecture
Entity
p17945
(dp17946
g11
(lp17947
sg14
S'com.google.common.collect.SortedMultisets'
p17948
sg16
(lp17949
sg19
(lp17950
sg22
(lp17951
sg25
I0
sba(iArchitecture
Entity
p17952
(dp17953
g11
(lp17954
sg14
S'com.google.common.collect.SortedSetMultimap'
p17955
sg16
(lp17956
sg19
(lp17957
sg22
(lp17958
sg25
I0
sba(iArchitecture
Entity
p17959
(dp17960
g11
(lp17961
sg14
S'com.google.common.collect.SparseImmutableTable'
p17962
sg16
(lp17963
sg19
(lp17964
sg22
(lp17965
sg25
I0
sba(iArchitecture
Entity
p17966
(dp17967
g11
(lp17968
sg14
S'com.google.common.collect.Table'
p17969
sg16
(lp17970
sg19
(lp17971
sg22
(lp17972
sg25
I0
sba(iArchitecture
Entity
p17973
(dp17974
g11
(lp17975
sg14
S'com.google.common.collect.Tables'
p17976
sg16
(lp17977
sg19
(lp17978
sg22
(lp17979
sg25
I0
sba(iArchitecture
Entity
p17980
(dp17981
g11
(lp17982
sg14
S'com.google.common.collect.TreeBasedTable'
p17983
sg16
(lp17984
sg19
(lp17985
sg22
(lp17986
sg25
I0
sba(iArchitecture
Entity
p17987
(dp17988
g11
(lp17989
sg14
S'com.google.common.collect.TreeMultimap'
p17990
sg16
(lp17991
sg19
(lp17992
sg22
(lp17993
sg25
I0
sba(iArchitecture
Entity
p17994
(dp17995
g11
(lp17996
sg14
S'com.google.common.collect.WellBehavedMap'
p17997
sg16
(lp17998
sg19
(lp17999
sg22
(lp18000
sg25
I0
sba(iArchitecture
Entity
p18001
(dp18002
g11
(lp18003
sg14
S'com.google.common.eventbus.AllowConcurrentEvents'
p18004
sg16
(lp18005
sg19
(lp18006
sg22
(lp18007
sg25
I0
sba(iArchitecture
Entity
p18008
(dp18009
g11
(lp18010
sg14
S'com.google.common.eventbus.Subscribe'
p18011
sg16
(lp18012
sg19
(lp18013
sg22
(lp18014
sg25
I0
sba(iArchitecture
Entity
p18015
(dp18016
g11
(lp18017
sg14
S'com.google.common.eventbus.SubscriberExceptionContext'
p18018
sg16
(lp18019
sg19
(lp18020
sg22
(lp18021
sg25
I0
sba(iArchitecture
Entity
p18022
(dp18023
g11
(lp18024
sg14
S'com.google.common.eventbus.SubscriberRegistry'
p18025
sg16
(lp18026
sg19
(lp18027
sg22
(lp18028
sg25
I0
sba(iArchitecture
Entity
p18029
(dp18030
g11
(lp18031
sg14
S'com.google.common.eventbus.package-info'
p18032
sg16
(lp18033
sg19
(lp18034
sg22
(lp18035
sg25
I0
sba(iArchitecture
Entity
p18036
(dp18037
g11
(lp18038
sg14
S'com.google.common.graph.AbstractGraphBuilder'
p18039
sg16
(lp18040
sg19
(lp18041
sg22
(lp18042
sg25
I0
sba(iArchitecture
Entity
p18043
(dp18044
g11
(lp18045
sg14
S'com.google.common.graph.ConfigurableValueGraph'
p18046
sg16
(lp18047
sg19
(lp18048
sg22
(lp18049
sg25
I0
sba(iArchitecture
Entity
p18050
(dp18051
g11
(lp18052
sg14
S'com.google.common.graph.DirectedMultiNetworkConnections'
p18053
sg16
(lp18054
sg19
(lp18055
sg22
(lp18056
sg25
I0
sba(iArchitecture
Entity
p18057
(dp18058
g11
(lp18059
sg14
S'com.google.common.graph.DirectedNetworkConnections'
p18060
sg16
(lp18061
sg19
(lp18062
sg22
(lp18063
sg25
I0
sba(iArchitecture
Entity
p18064
(dp18065
g11
(lp18066
sg14
S'com.google.common.graph.ElementOrder'
p18067
sg16
(lp18068
sg19
(lp18069
sg22
(lp18070
sg25
I0
sba(iArchitecture
Entity
p18071
(dp18072
g11
(lp18073
sg14
S'com.google.common.graph.GraphConnections'
p18074
sg16
(lp18075
sg19
(lp18076
sg22
(lp18077
sg25
I0
sba(iArchitecture
Entity
p18078
(dp18079
g11
(lp18080
sg14
S'com.google.common.graph.MapIteratorCache'
p18081
sg16
(lp18082
sg19
(lp18083
sg22
(lp18084
sg25
I0
sba(iArchitecture
Entity
p18085
(dp18086
g11
(lp18087
sg14
S'com.google.common.graph.MapRetrievalCache'
p18088
sg16
(lp18089
sg19
(lp18090
sg22
(lp18091
sg25
I0
sba(iArchitecture
Entity
p18092
(dp18093
g11
(lp18094
sg14
S'com.google.common.graph.NetworkConnections'
p18095
sg16
(lp18096
sg19
(lp18097
sg22
(lp18098
sg25
I0
sba(iArchitecture
Entity
p18099
(dp18100
g11
(lp18101
sg14
S'com.google.common.graph.UndirectedGraphConnections'
p18102
sg16
(lp18103
sg19
(lp18104
sg22
(lp18105
sg25
I0
sba(iArchitecture
Entity
p18106
(dp18107
g11
(lp18108
sg14
S'com.google.common.graph.UndirectedMultiNetworkConnections'
p18109
sg16
(lp18110
sg19
(lp18111
sg22
(lp18112
sg25
I0
sba(iArchitecture
Entity
p18113
(dp18114
g11
(lp18115
sg14
S'com.google.common.graph.UndirectedNetworkConnections'
p18116
sg16
(lp18117
sg19
(lp18118
sg22
(lp18119
sg25
I0
sba(iArchitecture
Entity
p18120
(dp18121
g11
(lp18122
sg14
S'com.google.common.graph.package-info'
p18123
sg16
(lp18124
sg19
(lp18125
sg22
(lp18126
sg25
I0
sba(iArchitecture
Entity
p18127
(dp18128
g11
(lp18129
sg14
S'com.google.common.hash.package-info'
p18130
sg16
(lp18131
sg19
(lp18132
sg22
(lp18133
sg25
I0
sba(iArchitecture
Entity
p18134
(dp18135
g11
(lp18136
sg14
S'com.google.common.html.package-info'
p18137
sg16
(lp18138
sg19
(lp18139
sg22
(lp18140
sg25
I0
sba(iArchitecture
Entity
p18141
(dp18142
g11
(lp18143
sg14
S'com.google.common.io.Closer'
p18144
sg16
(lp18145
sg19
(lp18146
sg22
(lp18147
sg25
I0
sba(iArchitecture
Entity
p18148
(dp18149
g11
(lp18150
sg14
S'com.google.common.math.DoubleMath'
p18151
sg16
(lp18152
sg19
(lp18153
sg22
(lp18154
sg25
I0
sba(iArchitecture
Entity
p18155
(dp18156
g11
(lp18157
sg14
S'com.google.common.math.PairedStatsAccumulator'
p18158
sg16
(lp18159
sg19
(lp18160
sg22
(lp18161
sg25
I0
sba(iArchitecture
Entity
p18162
(dp18163
g11
(lp18164
sg14
S'com.google.common.math.Stats'
p18165
sg16
(lp18166
sg19
(lp18167
sg22
(lp18168
sg25
I0
sba(iArchitecture
Entity
p18169
(dp18170
g11
(lp18171
sg14
S'com.google.common.math.StatsAccumulator'
p18172
sg16
(lp18173
sg19
(lp18174
sg22
(lp18175
sg25
I0
sba(iArchitecture
Entity
p18176
(dp18177
g11
(lp18178
sg14
S'com.google.common.math.package-info'
p18179
sg16
(lp18180
sg19
(lp18181
sg22
(lp18182
sg25
I0
sba(iArchitecture
Entity
p18183
(dp18184
g11
(lp18185
sg14
S'com.google.common.net.MediaType'
p18186
sg16
(lp18187
sg19
(lp18188
sg22
(lp18189
sg25
I0
sba(iArchitecture
Entity
p18190
(dp18191
g11
(lp18192
sg14
S'com.google.common.primitives.Primitives'
p18193
sg16
(lp18194
sg19
(lp18195
sg22
(lp18196
sg25
I0
sba(iArchitecture
Entity
p18197
(dp18198
g11
(lp18199
sg14
S'com.google.common.reflect.ImmutableTypeToInstanceMap'
p18200
sg16
(lp18201
sg19
(lp18202
sg22
(lp18203
sg25
I0
sba(iArchitecture
Entity
p18204
(dp18205
g11
(lp18206
sg14
S'com.google.common.reflect.MutableTypeToInstanceMap'
p18207
sg16
(lp18208
sg19
(lp18209
sg22
(lp18210
sg25
I0
sba(iArchitecture
Entity
p18211
(dp18212
g11
(lp18213
sg14
S'com.google.common.reflect.TypeParameter'
p18214
sg16
(lp18215
sg19
(lp18216
sg22
(lp18217
sg25
I0
sba(iArchitecture
Entity
p18218
(dp18219
g11
(lp18220
sg14
S'com.google.common.reflect.TypeResolver'
p18221
sg16
(lp18222
sg19
(lp18223
sg22
(lp18224
sg25
I0
sba(iArchitecture
Entity
p18225
(dp18226
g11
(lp18227
sg14
S'com.google.common.reflect.TypeToInstanceMap'
p18228
sg16
(lp18229
sg19
(lp18230
sg22
(lp18231
sg25
I0
sba(iArchitecture
Entity
p18232
(dp18233
g11
(lp18234
sg14
S'com.google.common.reflect.TypeToken'
p18235
sg16
(lp18236
sg19
(lp18237
sg22
(lp18238
sg25
I0
sba(iArchitecture
Entity
p18239
(dp18240
g11
(lp18241
sg14
S'com.google.common.reflect.TypeVisitor'
p18242
sg16
(lp18243
sg19
(lp18244
sg22
(lp18245
sg25
I0
sba(iArchitecture
Entity
p18246
(dp18247
g11
(lp18248
sg14
S'com.google.common.reflect.Types'
p18249
sg16
(lp18250
sg19
(lp18251
sg22
(lp18252
sg25
I0
sba(iArchitecture
Entity
p18253
(dp18254
g11
(lp18255
sg14
S'com.google.common.reflect.package-info'
p18256
sg16
(lp18257
sg19
(lp18258
sg22
(lp18259
sg25
I0
sba(iArchitecture
Entity
p18260
(dp18261
g11
(lp18262
sg14
S'com.google.common.util.concurrent.AsyncCallable'
p18263
sg16
(lp18264
sg19
(lp18265
sg22
(lp18266
sg25
I0
sba(iArchitecture
Entity
p18267
(dp18268
g11
(lp18269
sg14
S'com.google.common.util.concurrent.AsyncFunction'
p18270
sg16
(lp18271
sg19
(lp18272
sg22
(lp18273
sg25
I0
sba(iArchitecture
Entity
p18274
(dp18275
g11
(lp18276
sg14
S'com.google.common.util.concurrent.AtomicLongMap'
p18277
sg16
(lp18278
sg19
(lp18279
sg22
(lp18280
sg25
I0
sba(iArchitecture
Entity
p18281
(dp18282
g11
(lp18283
sg14
S'com.google.common.util.concurrent.Atomics'
p18284
sg16
(lp18285
sg19
(lp18286
sg22
(lp18287
sg25
I0
sba(iArchitecture
Entity
p18288
(dp18289
g11
(lp18290
sg14
S'com.google.common.util.concurrent.CheckedFuture'
p18291
sg16
(lp18292
sg19
(lp18293
sg22
(lp18294
sg25
I0
sba(iArchitecture
Entity
p18295
(dp18296
g11
(lp18297
sg14
S'com.google.common.util.concurrent.CollectionFuture'
p18298
sg16
(lp18299
sg19
(lp18300
sg22
(lp18301
sg25
I0
sba(iArchitecture
Entity
p18302
(dp18303
g11
(lp18304
sg14
S'com.google.common.util.concurrent.ExecutionList'
p18305
sg16
(lp18306
sg19
(lp18307
sg22
(lp18308
sg25
I0
sba(iArchitecture
Entity
p18309
(dp18310
g11
(lp18311
sg14
S'com.google.common.util.concurrent.FakeTimeLimiter'
p18312
sg16
(lp18313
sg19
(lp18314
sg22
(lp18315
sg25
I0
sba(iArchitecture
Entity
p18316
(dp18317
g11
(lp18318
sg14
S'com.google.common.util.concurrent.FutureCallback'
p18319
sg16
(lp18320
sg19
(lp18321
sg22
(lp18322
sg25
I0
sba(iArchitecture
Entity
p18323
(dp18324
g11
(lp18325
sg14
S'com.google.common.util.concurrent.FuturesGetChecked'
p18326
sg16
(lp18327
sg19
(lp18328
sg22
(lp18329
sg25
I0
sba(iArchitecture
Entity
p18330
(dp18331
g11
(lp18332
sg14
S'com.google.common.util.concurrent.ImmediateFuture'
p18333
sg16
(lp18334
sg19
(lp18335
sg22
(lp18336
sg25
I0
sba(iArchitecture
Entity
p18337
(dp18338
g11
(lp18339
sg14
S'com.google.common.util.concurrent.ListenableFutureTask'
p18340
sg16
(lp18341
sg19
(lp18342
sg22
(lp18343
sg25
I0
sba(iArchitecture
Entity
p18344
(dp18345
g11
(lp18346
sg14
S'com.google.common.util.concurrent.ListenableScheduledFuture'
p18347
sg16
(lp18348
sg19
(lp18349
sg22
(lp18350
sg25
I0
sba(iArchitecture
Entity
p18351
(dp18352
g11
(lp18353
sg14
S'com.google.common.util.concurrent.ListeningScheduledExecutorService'
p18354
sg16
(lp18355
sg19
(lp18356
sg22
(lp18357
sg25
I0
sba(iArchitecture
Entity
p18358
(dp18359
g11
(lp18360
sg14
S'com.google.common.util.concurrent.Partially'
p18361
sg16
(lp18362
sg19
(lp18363
sg22
(lp18364
sg25
I0
sba(iArchitecture
Entity
p18365
(dp18366
g11
(lp18367
sg14
S'com.google.common.util.concurrent.Platform'
p18368
sg16
(lp18369
sg19
(lp18370
sg22
(lp18371
sg25
I0
sba(iArchitecture
Entity
p18372
(dp18373
g11
(lp18374
sg14
S'com.google.common.util.concurrent.SimpleTimeLimiter'
p18375
sg16
(lp18376
sg19
(lp18377
sg22
(lp18378
sg25
I0
sba(iArchitecture
Entity
p18379
(dp18380
g11
(lp18381
sg14
S'com.google.common.util.concurrent.TimeLimiter'
p18382
sg16
(lp18383
sg19
(lp18384
sg22
(lp18385
sg25
I0
sba(iArchitecture
Entity
p18386
(dp18387
g11
(lp18388
sg14
S'com.google.common.util.concurrent.TimeoutFuture'
p18389
sg16
(lp18390
sg19
(lp18391
sg22
(lp18392
sg25
I0
sba(iArchitecture
Entity
p18393
(dp18394
g11
(lp18395
sg14
S'com.google.common.util.concurrent.TrustedListenableFutureTask'
p18396
sg16
(lp18397
sg19
(lp18398
sg22
(lp18399
sg25
I0
sba(iArchitecture
Entity
p18400
(dp18401
g11
(lp18402
sg14
S'com.google.common.util.concurrent.package-info'
p18403
sg16
(lp18404
sg19
(lp18405
sg22
(lp18406
sg25
I0
sba(iArchitecture
Entity
p18407
(dp18408
g11
(lp18409
sg14
S'com.google.common.xml.package-info'
p18410
sg16
(lp18411
sg19
(lp18412
sg22
(lp18413
sg25
I0
sbasg1017
(lp18414
g17423
ag17430
ag17437
ag17444
ag17451
ag17458
ag17465
ag17472
ag17479
ag17486
ag17493
ag17500
ag17507
ag17514
ag17521
ag17528
ag17535
ag17542
ag17549
ag17556
ag17563
ag17570
ag17577
ag17584
ag17591
ag17598
ag17605
ag17612
ag17619
ag17626
ag17633
ag17640
ag17647
ag17654
ag17661
ag17668
ag17675
ag17682
ag17689
ag17696
ag17703
ag17710
ag17717
ag17724
ag17731
ag17738
ag17745
ag17752
ag17759
ag17766
ag17773
ag17780
ag17787
ag17794
ag17801
ag17808
ag17815
ag17822
ag17829
ag17836
ag17843
ag17850
ag17857
ag17864
ag17871
ag17878
ag17885
ag17892
ag17899
ag17906
ag17913
ag17920
ag17927
ag17934
ag17941
ag17948
ag17955
ag17962
ag17969
ag17976
ag17983
ag17990
ag17997
ag18004
ag18011
ag18018
ag18025
ag18032
ag18039
ag18046
ag18053
ag18060
ag18067
ag18074
ag18081
ag18088
ag18095
ag18102
ag18109
ag18116
ag18123
ag18130
ag18137
ag18144
ag18151
ag18158
ag18165
ag18172
ag18179
ag18186
ag18193
ag18200
ag18207
ag18214
ag18221
ag18228
ag18235
ag18242
ag18249
ag18256
ag18263
ag18270
ag18277
ag18284
ag18291
ag18298
ag18305
ag18312
ag18319
ag18326
ag18333
ag18340
ag18347
ag18354
ag18361
ag18368
ag18375
ag18382
ag18389
ag18396
ag18403
ag18410
asg25
I0
sg1019
S'sql'
p18415
sbasg1019
S'20.0'
p18416
sba.